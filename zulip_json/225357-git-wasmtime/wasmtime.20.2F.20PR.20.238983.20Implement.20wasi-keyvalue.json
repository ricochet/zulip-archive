[
    {
        "content": "<p>iawia002 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983\">PR #8983</a> from <code>iawia002:wasi-keyvalue</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>The <a href=\"https://github.com/WebAssembly/wasi-keyvalue\">wasi-keyvalue</a> API has entered Phase 2. This patch implements the API, giving wasm components access to key-value storages.</p>\n<p>Currently, only the Redis storage backend has been implemented, and support for more kv storage (e.g. etcd, etc.) will be added in the future.</p>\n<p>cc @alexcrichton </p>\n</blockquote>",
        "id": 453100725,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721632883
    },
    {
        "content": "<p><strong>iawia002</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983\">PR #8983</a>.</p>",
        "id": 453100727,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721632883
    },
    {
        "content": "<p><strong>iawia002</strong> requested <a href=\"https://github.com/pchickey\">pchickey</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983\">PR #8983</a>.</p>",
        "id": 453100728,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721632883
    },
    {
        "content": "<p><strong>iawia002</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983\">PR #8983</a>.</p>",
        "id": 453100729,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721632883
    },
    {
        "content": "<p>iawia002 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983\">PR #8983</a>.</p>",
        "id": 453102913,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721633566
    },
    {
        "content": "<p>iawia002 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983\">PR #8983</a>.</p>",
        "id": 453104987,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721634239
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983#issuecomment-2242359871\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983\">PR #8983</a>:</p>\n<blockquote>\n<p>Would it make sense to have a local storage method too? That would allow quick tests without requiring the setup of an entire database.</p>\n</blockquote>",
        "id": 453111613,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721636166
    },
    {
        "content": "<p>iawia002 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983#issuecomment-2242460485\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983\">PR #8983</a>:</p>\n<blockquote>\n<blockquote>\n<p>Would it make sense to have a local storage method too? That would allow quick tests without requiring the setup of an entire database.</p>\n</blockquote>\n<p>Sure, I'll implement an in-memory backend and make the other database backends optional.</p>\n</blockquote>",
        "id": 453122453,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721639218
    },
    {
        "content": "<p>iawia002 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983\">PR #8983</a>.</p>",
        "id": 453131857,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721641974
    },
    {
        "content": "<p>iawia002 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983#issuecomment-2242604361\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983\">PR #8983</a>:</p>\n<blockquote>\n<p>I will fix the dead-code warning, but I have no idea why the <a href=\"https://github.com/bytecodealliance/wasmtime/actions/runs/10038599012/job/27740867443?pr=8983\">runtime_config_get test failed</a>:</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">----</span><span class=\"w\"> </span><span class=\"n\">runtime_config_get</span><span class=\"w\"> </span><span class=\"n\">stdout</span><span class=\"w\"> </span><span class=\"o\">----</span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">runtime_config_get</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">crates</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">vm</span><span class=\"o\">/</span><span class=\"n\">libcalls</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">147</span><span class=\"p\">:</span><span class=\"mi\">5</span><span class=\"p\">:</span>\n<span class=\"nc\">internal</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">entered</span><span class=\"w\"> </span><span class=\"n\">unreachable</span><span class=\"w\"> </span><span class=\"n\">code</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 453137352,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721643483
    },
    {
        "content": "<p>iawia002 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983\">PR #8983</a>.</p>",
        "id": 453361705,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721724782
    },
    {
        "content": "<p>iawia002 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983#issuecomment-2244675280\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983\">PR #8983</a>:</p>\n<blockquote>\n<blockquote>\n<p>I will fix the dead-code warning, but I have no idea why the <a href=\"https://github.com/bytecodealliance/wasmtime/actions/runs/10038599012/job/27740867443?pr=8983\">runtime_config_get test failed</a>:</p>\n<p><code>\n---- runtime_config_get stdout ----\nthread 'runtime_config_get' panicked at crates/wasmtime/src/runtime/vm/libcalls.rs:147:5:\ninternal error: entered unreachable code\n</code></p>\n</blockquote>\n<p>I have figured it out (#8997) and made a temporary solution by adding the <code>wasmtime/wmemcheck</code> feature to <code>wasi-runtime-config</code>:</p>\n<p><div class=\"codehilite\" data-code-language=\"YAML\"><pre><span></span><code><span class=\"p p-Indicator\">[</span><span class=\"nv\">features</span><span class=\"p p-Indicator\">]</span>\n<span class=\"c1\"># Do not use, this is only used for testing in CI,</span>\n<span class=\"c1\"># see https://github.com/bytecodealliance/wasmtime/issues/8997</span>\n<span class=\"l l-Scalar l-Scalar-Plain\">test = [\"wasmtime/wmemcheck\"]</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 453365137,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721725884
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983#pullrequestreview-2197338534\">PR review</a>:</p>\n<blockquote>\n<p>This is looking quite good to me, thanks for the PR and the work here! The biggest question below I have is about how buckets are opened.</p>\n</blockquote>",
        "id": 453757939,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721842436
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983#pullrequestreview-2197338534\">PR review</a>:</p>\n<blockquote>\n<p>This is looking quite good to me, thanks for the PR and the work here! The biggest question below I have is about how buckets are opened.</p>\n</blockquote>",
        "id": 453757940,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721842436
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983#discussion_r1690183208\">PR review comment</a>:</p>\n<blockquote>\n<p>Since <code>::default()</code> is used here it looks like there's no way to configure this in-memory configuration?</p>\n</blockquote>",
        "id": 453757941,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721842436
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983#discussion_r1690173279\">PR review comment</a>:</p>\n<blockquote>\n<p>Is there perhaps a more \"official\" action to use here to setup redis? We in theory try to avoid third-party dependencies on actions because of security concerns, but if it's a complicated and/or widely-enough-used action we can make an exception.</p>\n</blockquote>",
        "id": 453757942,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721842436
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983#discussion_r1690186602\">PR review comment</a>:</p>\n<blockquote>\n<p>This exposes the ability for wasm to make a connection to any redis server it wants without the host being able to intervene. In general we try to model the implementations of WASI proposals to deny access to things by default with explicit opt-ins to provide access. </p>\n<p>Perhaps as an alternative design, could the configuration for <code>WasiKeyValueCtx</code> look along the lines of one of:</p>\n<ul>\n<li>Provides are added ahead-of-time to <code>WasiKeyValueCtx</code> which means the host has an allow-listed set of provides each component gets access to.</li>\n<li>The host has a callback or trait which receives the <code>open</code> call here and returns a <code>Box&lt;dyn Host&gt;</code>? That would enable the host to customize whether it wants the logic this method has implemneted or something more custom.</li>\n</ul>\n</blockquote>",
        "id": 453757943,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721842436
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983#discussion_r1690187817\">PR review comment</a>:</p>\n<blockquote>\n<p>It loosk like this is silently ignoring non-integer previous values and converting them to 0?</p>\n</blockquote>",
        "id": 453757945,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721842437
    },
    {
        "content": "<p>iawia002 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983#pullrequestreview-2198507033\">PR review</a>.</p>",
        "id": 453872608,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721891789
    },
    {
        "content": "<p>iawia002 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983#discussion_r1690939154\">PR review comment</a>:</p>\n<blockquote>\n<p>Yes, the in-memory implementation is very simple. Currently, it doesn't have any configurable features, so configuration is not supported here.</p>\n</blockquote>",
        "id": 453872610,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721891789
    },
    {
        "content": "<p>iawia002 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983#pullrequestreview-2198508994\">PR review</a>.</p>",
        "id": 453872780,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721891847
    },
    {
        "content": "<p>iawia002 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983#discussion_r1690941051\">PR review comment</a>:</p>\n<blockquote>\n<p>Fixed, now, non-integer data conversion errors will be returned directly.</p>\n</blockquote>",
        "id": 453872781,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721891847
    },
    {
        "content": "<p>iawia002 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983\">PR #8983</a>.</p>",
        "id": 453873313,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721891983
    },
    {
        "content": "<p>iawia002 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983#pullrequestreview-2198529007\">PR review</a>.</p>",
        "id": 453874665,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721892325
    },
    {
        "content": "<p>iawia002 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983#discussion_r1690958136\">PR review comment</a>:</p>\n<blockquote>\n<p>I am now using GitHub's <a href=\"https://docs.github.com/en/actions/using-containerized-services/creating-redis-service-containers\">Redis service containers</a> to start a Redis service, but the drawback is that it can only run on Linux. Therefore, the previous macOS testing has been removed, but I think this is an acceptable compromise.</p>\n</blockquote>",
        "id": 453874666,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721892325
    },
    {
        "content": "<p>iawia002 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983#pullrequestreview-2198542675\">PR review</a>.</p>",
        "id": 453875708,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721892723
    },
    {
        "content": "<p>iawia002 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983#discussion_r1690973432\">PR review comment</a>:</p>\n<blockquote>\n<p>I chose the whitelist strategy and added a general configuration method that applies to all providers. By default, servers at all addresses are blocked from connecting. Which addresses the components can connect to depends on the runtime configuration.</p>\n</blockquote>",
        "id": 453875709,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721892724
    },
    {
        "content": "<p>iawia002 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983#issuecomment-2249652097\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983\">PR #8983</a>:</p>\n<blockquote>\n<p>All comments addressed ec3373a, PTAL</p>\n</blockquote>",
        "id": 453875847,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721892777
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983#pullrequestreview-2199557943\">PR review</a>.</p>",
        "id": 453970116,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721919231
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983#discussion_r1691602235\">PR review comment</a>:</p>\n<blockquote>\n<p>Yeah that sounds reasonable to me too, thanks!</p>\n</blockquote>",
        "id": 453970117,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721919231
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983#pullrequestreview-2199563824\">PR review</a>.</p>",
        "id": 453970686,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721919369
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983#discussion_r1691606835\">PR review comment</a>:</p>\n<blockquote>\n<p>Could this be renamed to <code>allow_redis_hosts</code>?</p>\n</blockquote>",
        "id": 453970687,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721919369
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983#discussion_r1691606325\">PR review comment</a>:</p>\n<blockquote>\n<p>I'm at least personally a bit hesitant to include this when it doesn't have any support/tests/etc. Would it be possible to hook this up to the configuration of <code>WasiKeyValueCtx</code>? Or somehow expose the ability to configure this? Otherwise I think it'd be better to remove the internals of <code>InMemory</code> and make it an empty struct which is a noop implementation of the trait.</p>\n</blockquote>",
        "id": 453970689,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721919370
    },
    {
        "content": "<p>iawia002 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983\">PR #8983</a>.</p>",
        "id": 454155294,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721963927
    },
    {
        "content": "<p>iawia002 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983#pullrequestreview-2200843384\">PR review</a>.</p>",
        "id": 454156537,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721964557
    },
    {
        "content": "<p>iawia002 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983#discussion_r1692442893\">PR review comment</a>:</p>\n<blockquote>\n<p>I added a configuration option to the In-Memory provider that allows presetting some data. I believe this provider is valuable, especially in testing scenarios, where users can use this provider to mock some data without relying on a real database. PTAL if this is reasonable.</p>\n</blockquote>",
        "id": 454156539,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721964557
    },
    {
        "content": "<p>iawia002 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983\">PR #8983</a>.</p>",
        "id": 454163153,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721967578
    },
    {
        "content": "<p>iawia002 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983#issuecomment-2251960858\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983\">PR #8983</a>:</p>\n<blockquote>\n<p>All comments addressed b9d2bd2, PTAL.</p>\n<p>The CI failed due to the feature combinations issue we encountered before. Since the changes are not related to this PR, I have submitted a separate PR #9016 to address that issue. Once that PR is merged, I will rebase this PR, and the CI should be happy then.</p>\n</blockquote>",
        "id": 454165671,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721968719
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983#pullrequestreview-2202084190\">PR review</a>:</p>\n<blockquote>\n<p>Looks good to me, thanks! I'll queue for merge after a rebase makes CI happy</p>\n<p>(thanks for helping to debug CI and fix the issue!)</p>\n</blockquote>",
        "id": 454317227,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722005960
    },
    {
        "content": "<p>iawia002 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983\">PR #8983</a>.</p>",
        "id": 454346662,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722016263
    },
    {
        "content": "<p>iawia002 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983#issuecomment-2253250430\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983\">PR #8983</a>:</p>\n<blockquote>\n<p>Hi @alexcrichton, CI is happy now except <code>cargo vet</code>, I believe that should be handled by you.</p>\n</blockquote>",
        "id": 454350232,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722017678
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983\">PR #8983</a>.</p>",
        "id": 454371516,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722027007
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983\">PR #8983</a>.</p>",
        "id": 454372236,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722027386
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983\">PR #8983</a>.</p>",
        "id": 454374633,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722028543
    },
    {
        "content": "<p>thomastaylor312 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983#issuecomment-2261639047\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983\">PR #8983</a>:</p>\n<blockquote>\n<p>Hey there! wasi-keyvalue champion here. So I don't think any of the champions knew this was landing. I'm super excited someone implemented it here (thanks @iawia002)! However, we are in the process of incorporating a last round of feedback now that we've had people implementing against it: <a href=\"https://github.com/WebAssembly/wasi-keyvalue/pull/46\">https://github.com/WebAssembly/wasi-keyvalue/pull/46</a>. We might want to hold off on releasing this until we can make those changes and go to a full 0.2.0 release of wasi-keyvalue</p>\n</blockquote>",
        "id": 455502998,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722467462
    },
    {
        "content": "<p>thomastaylor312 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983#issuecomment-2261639047\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983\">PR #8983</a>:</p>\n<blockquote>\n<p>Hey there! wasi-keyvalue champion here. So I don't think any of the champions knew this was landing. I'm super excited someone implemented it here (thanks @iawia002)! However, we are in the process of incorporating a last round of feedback now that we've had people implementing against it: <a href=\"https://github.com/WebAssembly/wasi-keyvalue/pull/46\">https://github.com/WebAssembly/wasi-keyvalue/pull/46</a>. We might want to hold off on releasing this until we can make those changes and go to a full 0.2.0 release of wasi-keyvalue.</p>\n<p>Also, and in memory KV store makes sense to me, but I don't think we want to take hard deps on other KV stores in something like wasmtime. This was something that we had loosely talked about as being \"host plugins\" using something like wRPC</p>\n</blockquote>",
        "id": 455503284,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722467606
    },
    {
        "content": "<p>thomastaylor312 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983#issuecomment-2261639047\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983\">PR #8983</a>:</p>\n<blockquote>\n<p>Hey there! wasi-keyvalue champion here. So I don't think any of the champions knew this was landing. I'm super excited someone implemented it here (thanks @iawia002)! However, we are in the process of incorporating a last round of feedback now that we've had people implementing against it: <a href=\"https://github.com/WebAssembly/wasi-keyvalue/pull/46\">https://github.com/WebAssembly/wasi-keyvalue/pull/46</a>. We might want to hold off on releasing this until we can make those changes and go to a full 0.2.0 release of wasi-keyvalue.</p>\n<p>Also, an in memory KV store makes sense to me, but I don't think we want to take hard deps on other KV stores in something like wasmtime. This was something that we had loosely talked about as being \"host plugins\" using something like wRPC</p>\n</blockquote>",
        "id": 455503656,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722467766
    },
    {
        "content": "<p>iawia002 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983#issuecomment-2261820697\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983\">PR #8983</a>:</p>\n<blockquote>\n<p>Hi @thomastaylor312, basically, when a proposal enters Phase 2, we can start implementing it. If we wait for it to be completely ready before we begin, the timeline would become excessively long. Therefore, we also have corresponding implementations for draft versions of proposals, allowing users to start experimenting with the API.</p>\n<p>For the <code>wasi-keyvalue</code>, the implementation targets a specific tag <a href=\"https://github.com/WebAssembly/wasi-keyvalue/commit/219ea3612a53f1bf5b2d137551b22d0268fd3c58\">219ea36</a>. I will continue to track the latest changes in this proposal to keep the implementation up to date.</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/ba864e987ef1ab87c439ca6b396264547d2425e1/ci/vendor-wit.sh#L61\">https://github.com/bytecodealliance/wasmtime/blob/ba864e987ef1ab87c439ca6b396264547d2425e1/ci/vendor-wit.sh#L61</a></p>\n<p>Regarding the release issue, strictly speaking, this has not yet been landed. According to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/docs/contributing-release-process.md#releasing-a-major-version\">wasmtime release schedule</a>, the code will be frozen on the 5th and will not be released until the 20th of this month. So we still have time to follow up on the latest changes in the <code>wasi-keyvalue</code> proposal.</p>\n<p>Overall, I think we can go ahead and release this, allowing users of wasmtime v24 to try out the <code>wasi-keyvalue@0.2.0-draft</code> API.</p>\n<blockquote>\n<p>but I don't think we want to take hard deps on other KV stores in something like wasmtime. This was something that we had loosely talked about as being \"host plugins\" using something like wRPC</p>\n</blockquote>\n<p>I agree with this, there are too many KV storage solutions. But I'm not sure if we should move all KV storage implementations out of wasmtime, because depending on Redis/etcd/Memcached, etc., does not affect <code>wasmtime</code> itself. It only affects the standalone crate <code>wasmtime-wasi-keyvalue</code> and the <code>wasmtime-cli</code>. I hope to implement some very popular providers in wasmtime and turn the others into \"host plugins\".</p>\n</blockquote>",
        "id": 455526297,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722478731
    },
    {
        "content": "<p>thomastaylor312 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983#issuecomment-2264487392\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983\">PR #8983</a>:</p>\n<blockquote>\n<p>Yeah we chatted about this today in the wasmtime meeting. So I think we are ok with the current pinned tag, especially since things are behind a feature flag.</p>\n<p>However, I still think keeping Redis in tree is a bad idea. The reason why even the super popular ones should be a plugin type model is that now any time the redis client has a bug, you have to update the keyvalue crate and the CLI just to get the bug fix. I know this could happen with any crate, but with client APIs, these kinds of fixes happen quite often. If it happens to be security sensitive, it would necessitate a release of the crate and CLI for anyone depending on it. This wouldn't happen if this was done by loading a plugin separately</p>\n</blockquote>",
        "id": 455819194,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722571410
    },
    {
        "content": "<p>iawia002 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983#issuecomment-2264525668\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983\">PR #8983</a>:</p>\n<blockquote>\n<p>I understand your concerns. I am not sure what the \"host plugins\" will look like exactly. Since you mentioned wrpc, I assume it will involve a server and a client? If we turn all in-tree providers into plugins, would the user have to go through the following additional steps to access Redis?</p>\n<ol>\n<li>Deploy the plugin server</li>\n<li>Import the plugin</li>\n</ol>\n<p>Compared to releasing patch versions for <code>wasmtime-wasi-keyvalue</code> and <code>wasmtime-cli</code>, I am more worried about the impact on usability. Will this be too difficult for users, especially the step of deploying a separate plugin server?</p>\n<p>Anyway, before the 0.2 release of <code>wasi-keyvalue</code>, I don't plan to add more providers. I originally intended to consider these after the official release, but now it seems this will be on hold until we decide how to handle these providers.</p>\n</blockquote>",
        "id": 455825218,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722573030
    },
    {
        "content": "<p>iawia002 deleted a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983#issuecomment-2264525668\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983\">PR #8983</a>:</p>\n<blockquote>\n<p>I understand your concerns. I am not sure what the \"host plugins\" will look like exactly. Since you mentioned wrpc, I assume it will involve a server and a client? If we turn all in-tree providers into plugins, would the user have to go through the following additional steps to access Redis?</p>\n<ol>\n<li>Deploy the plugin server</li>\n<li>Import the plugin</li>\n</ol>\n<p>Compared to releasing patch versions for <code>wasmtime-wasi-keyvalue</code> and <code>wasmtime-cli</code>, I am more worried about the impact on usability. Will this be too difficult for users, especially the step of deploying a separate plugin server?</p>\n<p>Anyway, before the 0.2 release of <code>wasi-keyvalue</code>, I don't plan to add more providers. I originally intended to consider these after the official release, but now it seems this will be on hold until we decide how to handle these providers.</p>\n</blockquote>",
        "id": 455862464,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722585323
    },
    {
        "content": "<p>iawia002 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983#issuecomment-2264813319\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983\">PR #8983</a>:</p>\n<blockquote>\n<p>I have now seen the <a href=\"https://github.com/bytecodealliance/meetings/blob/main/wasmtime/2024/wasmtime-08-01.md\">meeting notes</a>. I apologize for any inconvenience caused by not notifying you during the implementation. I will submit a PR to revert the introduction of Redis.</p>\n</blockquote>",
        "id": 455865618,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722585980
    },
    {
        "content": "<p>thomastaylor312 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983#issuecomment-2269615084\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8983\">PR #8983</a>:</p>\n<blockquote>\n<p>No problem! I just wanted to make sure we had our ducks in a row here as we move forward adding new interfaces</p>\n</blockquote>",
        "id": 456666923,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722880963
    }
]