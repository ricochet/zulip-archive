[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4487\">issue #4487</a>:</p>\n<blockquote>\n<p>With the merge of <a href=\"https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-7f6x-jwh5-m9r4\">https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-7f6x-jwh5-m9r4</a> and <a href=\"https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-5fhj-g3p3-pq9g\">https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-5fhj-g3p3-pq9g</a> to the <code>main</code> branch (and the <code>release-0.{38,39.0}</code> branches) CI now appears to be failing across the board. Failure logs include:</p>\n<ul>\n<li>[ ] <a href=\"https://github.com/bytecodealliance/wasmtime/runs/7434115528?check_suite_focus=true\">s390x-related <code>all</code> test failures</a></li>\n<li>[ ] <a href=\"https://github.com/bytecodealliance/wasmtime/runs/7434296777?check_suite_focus=true\">aarch64-related SIGKILL failures</a></li>\n<li>[ ] <a href=\"https://github.com/bytecodealliance/wasmtime/runs/7434479395?check_suite_focus=true\">s390x <code>filetest</code> failures</a></li>\n</ul>\n<p>I think <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4486\">https://github.com/bytecodealliance/wasmtime/pull/4486</a> will fix the SIGKILL issues. </p>\n<p>I have attempted to reproduce the <code>filetest</code> failures locally and cannot (where I think I'm using the same version of QEMU). @uweigand are you perhaps around to help debug the <code>filetest</code> issue?</p>\n<p>I have not investigate the s390x <code>all</code> failures yet.</p>\n</blockquote>",
        "id": 290282108,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658343550
    },
    {
        "content": "<p>uweigand <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4487#issuecomment-1190667305\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4487\">issue #4487</a>:</p>\n<blockquote>\n<p>I've had a quick look, and the filetest failures are due to a newly added test (udiv_i16_const).  However, this test passes natively for me.  Not sure if this is a qemu issues ... I'll have a look.</p>\n<p>As to the <code>all</code> tests, those are failed assertions:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">multiple</span><span class=\"w\"> </span><span class=\"n\">uses</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">vreg</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">Stack</span><span class=\"w\"> </span><span class=\"n\">constraint</span><span class=\"w\"> </span><span class=\"n\">are</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">supported</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Not sure what exactly this means, but I can reproduce natively.<br>\n</p>\n</blockquote>",
        "id": 290285968,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658345142
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4487#issuecomment-1190671319\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4487\">issue #4487</a>:</p>\n<blockquote>\n<p>Ok in that case I think I'm realizing that the ISLE transition for s390x may have fixed the <code>filetest</code> issue. Investigating...</p>\n</blockquote>",
        "id": 290286644,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658345413
    },
    {
        "content": "<p>alexcrichton edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4487\">issue #4487</a>:</p>\n<blockquote>\n<p>With the merge of <a href=\"https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-7f6x-jwh5-m9r4\">https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-7f6x-jwh5-m9r4</a> and <a href=\"https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-5fhj-g3p3-pq9g\">https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-5fhj-g3p3-pq9g</a> to the <code>main</code> branch (and the <code>release-0.{38,39.0}</code> branches) CI now appears to be failing across the board. Failure logs include:</p>\n<ul>\n<li>[ ] <a href=\"https://github.com/bytecodealliance/wasmtime/runs/7434115528?check_suite_focus=true\">s390x-related <code>all</code> test failures</a></li>\n<li>[ ] <a href=\"https://github.com/bytecodealliance/wasmtime/runs/7434296777?check_suite_focus=true\">aarch64-related SIGKILL failures</a></li>\n<li>[x] <a href=\"https://github.com/bytecodealliance/wasmtime/runs/7434479395?check_suite_focus=true\">s390x <code>filetest</code> failures</a></li>\n</ul>\n<p>I think <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4486\">https://github.com/bytecodealliance/wasmtime/pull/4486</a> will fix the SIGKILL issues. </p>\n<p>I have attempted to reproduce the <code>filetest</code> failures locally and cannot (where I think I'm using the same version of QEMU). @uweigand are you perhaps around to help debug the <code>filetest</code> issue?</p>\n<p>I have not investigate the s390x <code>all</code> failures yet.</p>\n</blockquote>",
        "id": 290288268,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658346096
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4487#issuecomment-1190683058\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4487\">issue #4487</a>:</p>\n<blockquote>\n<p>Ok the <code>filetest</code> failures I can confirm were fixed in #4427. The test fails on the <code>release-0.38.0</code> and <code>release-0.39.0</code> branches. The tests pass, however, on the #4427 commit (and therefore <code>main</code>).</p>\n<p>When the other s390x issue is sorted I think we can backport temporary disabling of s390x running the test on the <code>release-0.{38,39}.0</code> branches and leave <code>main</code> as-is. Now it's just the <code>all</code> test failures you mentioned.</p>\n</blockquote>",
        "id": 290288422,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658346170
    },
    {
        "content": "<p>alexcrichton edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4487\">issue #4487</a>:</p>\n<blockquote>\n<p>With the merge of <a href=\"https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-7f6x-jwh5-m9r4\">https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-7f6x-jwh5-m9r4</a> and <a href=\"https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-5fhj-g3p3-pq9g\">https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-5fhj-g3p3-pq9g</a> to the <code>main</code> branch (and the <code>release-0.{38,39.0}</code> branches) CI now appears to be failing across the board. Failure logs include:</p>\n<ul>\n<li>[ ] <a href=\"https://github.com/bytecodealliance/wasmtime/runs/7434115528?check_suite_focus=true\">s390x-related <code>all</code> test failures</a></li>\n<li>[ ] <a href=\"https://github.com/bytecodealliance/wasmtime/runs/7434296777?check_suite_focus=true\">aarch64-related SIGKILL failures</a></li>\n<li>[x] <a href=\"https://github.com/bytecodealliance/wasmtime/runs/7434479395?check_suite_focus=true\">s390x <code>filetest</code> failures</a> -- only happens on <code>release-0.{38,39}.0</code>, fixed on <code>main</code> by #4427</li>\n</ul>\n<p>I think <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4486\">https://github.com/bytecodealliance/wasmtime/pull/4486</a> will fix the SIGKILL issues. </p>\n<p>I have attempted to reproduce the <code>filetest</code> failures locally and cannot (where I think I'm using the same version of QEMU). @uweigand are you perhaps around to help debug the <code>filetest</code> issue?</p>\n<p>I have not investigate the s390x <code>all</code> failures yet.</p>\n</blockquote>",
        "id": 290288649,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658346290
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4487#issuecomment-1190694825\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4487\">issue #4487</a>:</p>\n<blockquote>\n<p>Initial reduction of the other issue from one failing wasm test case is:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">u0</span>:<span class=\"mi\">0</span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">vmctx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">fast</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"n\">gv0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vmctx</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"n\">gv1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">notrap</span><span class=\"w\"> </span><span class=\"n\">aligned</span><span class=\"w\"> </span><span class=\"n\">readonly</span><span class=\"w\"> </span><span class=\"n\">gv0</span><span class=\"o\">+</span><span class=\"mi\">8</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"n\">gv2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">notrap</span><span class=\"w\"> </span><span class=\"n\">aligned</span><span class=\"w\"> </span><span class=\"n\">gv1</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"n\">gv3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vmctx</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"n\">sig0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">vmctx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"n\">uext</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">r64</span><span class=\"w\"> </span><span class=\"n\">wasmtime_system_v</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"n\">sig1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">vmctx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"n\">uext</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">r64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">wasmtime_system_v</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"n\">stack_limit</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">gv2</span><span class=\"w\"></span>\n\n<span class=\"w\">       </span><span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"kt\">i64</span><span class=\"p\">)</span>:\n           <span class=\"nc\">v3</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">v0</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"n\">v8</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">v0</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"n\">v12</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">v0</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"n\">v17</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">v0</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">null</span><span class=\"p\">.</span><span class=\"n\">r64</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"n\">v16</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">v2</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"n\">v4</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">notrap</span><span class=\"w\"> </span><span class=\"n\">aligned</span><span class=\"w\"> </span><span class=\"n\">readonly</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"o\">+</span><span class=\"mi\">48</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"n\">v9</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">v4</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"n\">v13</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">v4</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"n\">v18</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">v4</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"n\">v5</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">notrap</span><span class=\"w\"> </span><span class=\"n\">aligned</span><span class=\"w\"> </span><span class=\"n\">readonly</span><span class=\"w\"> </span><span class=\"n\">v4</span><span class=\"o\">+</span><span class=\"mi\">128</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"n\">v6</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"n\">v11</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">v6</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"n\">v15</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">v6</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"n\">v20</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">v6</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"n\">v7</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">call_indirect</span><span class=\"w\"> </span><span class=\"n\">sig0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v5</span><span class=\"p\">(</span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v6</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"n\">v10</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">notrap</span><span class=\"w\"> </span><span class=\"n\">aligned</span><span class=\"w\"> </span><span class=\"n\">readonly</span><span class=\"w\"> </span><span class=\"n\">v4</span><span class=\"o\">+</span><span class=\"mi\">136</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"n\">v14</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">v10</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"n\">v19</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">v10</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"n\">call_indirect</span><span class=\"w\"> </span><span class=\"n\">sig1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v10</span><span class=\"p\">(</span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v6</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v7</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"n\">call_indirect</span><span class=\"w\"> </span><span class=\"n\">sig1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v10</span><span class=\"p\">(</span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v6</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v7</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"n\">call_indirect</span><span class=\"w\"> </span><span class=\"n\">sig1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v10</span><span class=\"p\">(</span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v6</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"n\">jump</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"w\"></span>\n\n<span class=\"w\">       </span><span class=\"n\">block1</span>:\n           <span class=\"nc\">return</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>which yields:</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">-</span><span class=\"n\">tools</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"n\">compile</span><span class=\"w\"> </span><span class=\"n\">out</span><span class=\"p\">.</span><span class=\"n\">clif</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">s390x</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Finished</span><span class=\"w\"> </span><span class=\"n\">dev</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">unoptimized</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">debuginfo</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mf\">0.08</span><span class=\"n\">s</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"n\">Running</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">clif</span><span class=\"o\">-</span><span class=\"n\">util</span><span class=\"w\"> </span><span class=\"n\">compile</span><span class=\"w\"> </span><span class=\"n\">out</span><span class=\"p\">.</span><span class=\"n\">clif</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">s390x</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">multiple</span><span class=\"w\"> </span><span class=\"n\">uses</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">vreg</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">Stack</span><span class=\"w\"> </span><span class=\"n\">constraint</span><span class=\"w\"> </span><span class=\"n\">are</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">supported</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">alex</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"o\">/</span><span class=\"n\">registry</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"n\">ecc6299db9ec823</span><span class=\"o\">/</span><span class=\"n\">regalloc2</span><span class=\"o\">-</span><span class=\"mf\">0.3.0</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">ion</span><span class=\"o\">/</span><span class=\"n\">liveranges</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">1339</span>:<span class=\"mi\">57</span><span class=\"w\"></span>\n<span class=\"n\">note</span>: <span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 290289976,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658346935
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4487#issuecomment-1190701041\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4487\">issue #4487</a>:</p>\n<blockquote>\n<p>Reduced a bit further:</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">u0</span>:<span class=\"mi\">0</span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">fast</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">sig0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">r64</span><span class=\"w\"> </span><span class=\"n\">wasmtime_system_v</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">sig1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">r64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">wasmtime_system_v</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i64</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">call_indirect</span><span class=\"w\"> </span><span class=\"n\">sig0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">call_indirect</span><span class=\"w\"> </span><span class=\"n\">sig1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">(</span><span class=\"n\">v1</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">call_indirect</span><span class=\"w\"> </span><span class=\"n\">sig1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">(</span><span class=\"n\">v1</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 290290813,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658347324
    },
    {
        "content": "<p>uweigand <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4487#issuecomment-1190704102\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4487\">issue #4487</a>:</p>\n<blockquote>\n<p>Right, from what I can see it seems the problem is related to the fact that <code>v1</code> is used twice, but also the value is forced to the stack (maybe because it's a reference value live across a call?).</p>\n<p>Not sure what this has to do with s390x, though.</p>\n</blockquote>",
        "id": 290291278,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658347538
    },
    {
        "content": "<p>uweigand <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4487#issuecomment-1190707048\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4487\">issue #4487</a>:</p>\n<blockquote>\n<blockquote>\n<p>Ok the <code>filetest</code> failures I can confirm were fixed in #4427. The test fails on the <code>release-0.38.0</code> and <code>release-0.39.0</code> branches. The tests pass, however, on the #4427 commit (and therefore <code>main</code>).</p>\n</blockquote>\n<p>Ah, that makes sense.  As part of #4427 I fixed the following bug found by fuzzing:</p>\n<blockquote>\n<p>a problem with random high bits in sub-word immediates that were not properly zero-extended</p>\n</blockquote>\n<p>This is exactly the problem here (when using the full-word divide instruction to perform a sub-word operation, the inputs must be properly extended or we get wrong results).</p>\n<p>The attached minimal backport of just this fix resolves the problem on the release-0.39.0 branch:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/files/9154158/diff-s390x-zeroext-fix.txt\">diff-s390x-zeroext-fix.txt</a><br>\n</p>\n</blockquote>",
        "id": 290291725,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658347752
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4487#issuecomment-1190715985\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4487\">issue #4487</a>:</p>\n<blockquote>\n<p>@cfallin has found the issue and this fixes the panic:</p>\n<p><div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"gh\">diff --git a/cranelift/codegen/src/machinst/vcode.rs b/cranelift/codegen/src/machinst/vcode.rs</span><span class=\"w\"></span>\n<span class=\"gh\">index f9ef6670f..79959dfa3 100644</span><span class=\"w\"></span>\n<span class=\"gd\">--- a/cranelift/codegen/src/machinst/vcode.rs</span><span class=\"w\"></span>\n<span class=\"gi\">+++ b/cranelift/codegen/src/machinst/vcode.rs</span><span class=\"w\"></span>\n<span class=\"gu\">@@ -606,6 +606,8 @@ impl&lt;I: VCodeInst&gt; VCodeBuilder&lt;I&gt; {</span><span class=\"w\"></span>\n<span class=\"w\"> </span>        for reg in self.vcode.reftyped_vregs.iter_mut() {<span class=\"w\"></span>\n<span class=\"w\"> </span>            *reg = Self::resolve_vreg_alias_impl(&amp;self.vcode.vreg_aliases, *reg);<span class=\"w\"></span>\n<span class=\"w\"> </span>        }<span class=\"w\"></span>\n<span class=\"gi\">+        self.vcode.reftyped_vregs.sort();</span><span class=\"w\"></span>\n<span class=\"gi\">+        self.vcode.reftyped_vregs.dedup();</span><span class=\"w\"></span>\n\n<span class=\"w\"> </span>        self.compute_preds_from_succs();<span class=\"w\"></span>\n<span class=\"w\"> </span>        self.vcode.debug_value_labels.sort_unstable();<span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 290292816,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658348339
    },
    {
        "content": "<p>uweigand <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4487#issuecomment-1190716272\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4487\">issue #4487</a>:</p>\n<blockquote>\n<p>As to the regalloc2 assertion, I see the following code just before the failure:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">built</span><span class=\"w\"> </span><span class=\"n\">vcode</span>: <span class=\"nc\">VCode</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Entry</span><span class=\"w\"> </span><span class=\"n\">block</span>: <span class=\"mi\">0</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">v129</span><span class=\"w\"> </span>:<span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">v130</span><span class=\"w\"></span>\n<span class=\"n\">Block</span><span class=\"w\"> </span><span class=\"mi\">0</span>:\n    <span class=\"p\">(</span><span class=\"n\">original</span><span class=\"w\"> </span><span class=\"n\">IR</span><span class=\"w\"> </span><span class=\"n\">block</span>: <span class=\"nc\">block0</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"n\">instruction</span><span class=\"w\"> </span><span class=\"n\">range</span>: <span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">0</span>: <span class=\"nc\">lgr</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v128</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r2</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">1</span>: <span class=\"nc\">basr</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r14</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v128</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">2</span>: <span class=\"nc\">lgr</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v130</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r2</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">3</span>: <span class=\"nc\">lgr</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v129</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">4</span>: <span class=\"nc\">basr</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r14</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v128</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">5</span>: <span class=\"nc\">lgr</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v129</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">6</span>: <span class=\"nc\">basr</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r14</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v128</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">7</span>: <span class=\"nc\">br</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r14</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>which looks very similar to the code I get on x86_64:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">built</span><span class=\"w\"> </span><span class=\"n\">vcode</span>: <span class=\"nc\">VCode</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Entry</span><span class=\"w\"> </span><span class=\"n\">block</span>: <span class=\"mi\">0</span><span class=\"w\"></span>\n<span class=\"n\">Block</span><span class=\"w\"> </span><span class=\"mi\">0</span>:\n    <span class=\"p\">(</span><span class=\"n\">original</span><span class=\"w\"> </span><span class=\"n\">IR</span><span class=\"w\"> </span><span class=\"n\">block</span>: <span class=\"nc\">block0</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"n\">instruction</span><span class=\"w\"> </span><span class=\"n\">range</span>: <span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">0</span>: <span class=\"nc\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v128</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">1</span>: <span class=\"nc\">call</span><span class=\"w\">    </span><span class=\"o\">*%</span><span class=\"n\">v128</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">2</span>: <span class=\"nc\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v129</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">3</span>: <span class=\"nc\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">v129</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">4</span>: <span class=\"nc\">call</span><span class=\"w\">    </span><span class=\"o\">*%</span><span class=\"n\">v128</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">5</span>: <span class=\"nc\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">v129</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">6</span>: <span class=\"nc\">call</span><span class=\"w\">    </span><span class=\"o\">*%</span><span class=\"n\">v128</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">7</span>: <span class=\"nc\">ret</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>The only difference I can see is that on s390x, we have two vregs that are aliased (v129, v130), while on x86_64 we only have one (v129).  This is pretty sure because s390x now lowers calls via ISLE, where we get the extra aliased copy.</p>\n<p>But that shouldn't change the behavior of regalloc2 otherwise.  @cfallin maybe you can help here?<br>\n</p>\n</blockquote>",
        "id": 290292850,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658348358
    },
    {
        "content": "<p>uweigand <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4487#issuecomment-1190716578\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4487\">issue #4487</a>:</p>\n<blockquote>\n<p>Ah, nevermind ...  already fixed.</p>\n</blockquote>",
        "id": 290292885,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658348379
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4487#issuecomment-1190725047\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4487\">issue #4487</a>:</p>\n<blockquote>\n<p>Ok fixes are applied in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4486\">https://github.com/bytecodealliance/wasmtime/pull/4486</a> and I will work on backporting this to the release-0.3{8,9}.0 branches for new point releases as well. Thanks for your help @uweigand!</p>\n</blockquote>",
        "id": 290294023,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658348923
    },
    {
        "content": "<p>uweigand <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4487#issuecomment-1190727248\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4487\">issue #4487</a>:</p>\n<blockquote>\n<blockquote>\n<p>Ok fixes are applied in #4486 and I will work on backporting this to the release-0.3{8,9}.0 branches for new point releases as well. Thanks for your help @uweigand!</p>\n</blockquote>\n<p>Thanks!  For the release branches, maybe you can also add the patch from <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4487#issuecomment-1190707048\">https://github.com/bytecodealliance/wasmtime/issues/4487#issuecomment-1190707048</a> to fix the s390x filetest regression as well.</p>\n</blockquote>",
        "id": 290294299,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658349073
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4487\">issue #4487</a>:</p>\n<blockquote>\n<p>With the merge of <a href=\"https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-7f6x-jwh5-m9r4\">https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-7f6x-jwh5-m9r4</a> and <a href=\"https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-5fhj-g3p3-pq9g\">https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-5fhj-g3p3-pq9g</a> to the <code>main</code> branch (and the <code>release-0.{38,39.0}</code> branches) CI now appears to be failing across the board. Failure logs include:</p>\n<ul>\n<li>[ ] <a href=\"https://github.com/bytecodealliance/wasmtime/runs/7434115528?check_suite_focus=true\">s390x-related <code>all</code> test failures</a></li>\n<li>[ ] <a href=\"https://github.com/bytecodealliance/wasmtime/runs/7434296777?check_suite_focus=true\">aarch64-related SIGKILL failures</a></li>\n<li>[x] <a href=\"https://github.com/bytecodealliance/wasmtime/runs/7434479395?check_suite_focus=true\">s390x <code>filetest</code> failures</a> -- only happens on <code>release-0.{38,39}.0</code>, fixed on <code>main</code> by #4427</li>\n</ul>\n<p>I think <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4486\">https://github.com/bytecodealliance/wasmtime/pull/4486</a> will fix the SIGKILL issues. </p>\n<p>I have attempted to reproduce the <code>filetest</code> failures locally and cannot (where I think I'm using the same version of QEMU). @uweigand are you perhaps around to help debug the <code>filetest</code> issue?</p>\n<p>I have not investigate the s390x <code>all</code> failures yet.</p>\n</blockquote>",
        "id": 290336106,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658382506
    }
]