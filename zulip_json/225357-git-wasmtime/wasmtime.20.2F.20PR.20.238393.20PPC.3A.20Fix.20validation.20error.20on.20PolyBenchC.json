[
    {
        "content": "<p><strong>feilongjiang</strong> requested <a href=\"https://github.com/elliottt\">elliottt</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8393\">PR #8393</a>.</p>",
        "id": 433744108,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713357002
    },
    {
        "content": "<p>feilongjiang opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8393\">PR #8393</a> from <code>feilongjiang:fix_pcc</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>Hi team, please consider.<br>\nAs described in #8380, when running PCC validation on workloads like PolyBenchC, it will report an <code>UnsupportedFact</code> error.<br>\nBased on the analysis of trace logs, I think <code>attach_constant_fact</code> introduced by #8173 should also consider the type of constant when adding facts for iconsts. After #8173, we may generate the following facts for i32 constants:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">block9</span>:\n  <span class=\"nc\">v4339</span><span class=\"w\"> </span><span class=\"o\">!</span><span class=\"w\"> </span><span class=\"n\">range</span><span class=\"p\">(</span><span class=\"mi\">64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0xea28</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0xea28</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"mh\">0xea28</span>\n<span class=\"w\">  </span><span class=\"n\">v2858</span><span class=\"w\"> </span><span class=\"o\">!</span><span class=\"w\"> </span><span class=\"n\">range</span><span class=\"p\">(</span><span class=\"mi\">64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x8</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"mi\">8</span>\n<span class=\"w\">  </span><span class=\"n\">v4406</span><span class=\"w\"> </span><span class=\"o\">!</span><span class=\"w\"> </span><span class=\"n\">range</span><span class=\"p\">(</span><span class=\"mi\">64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x115a0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x115a0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"mh\">0x0001_15a0</span>\n<span class=\"w\">  </span><span class=\"n\">v4407</span><span class=\"w\"> </span><span class=\"o\">!</span><span class=\"w\"> </span><span class=\"n\">range</span><span class=\"p\">(</span><span class=\"mi\">64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x115a8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x115a8</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iadd</span><span class=\"w\"> </span><span class=\"n\">v4406</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2858</span><span class=\"w\">  </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">v4406</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mh\">0x0001_15a0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2858</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">8</span>\n</code></pre></div>\n<p>These i32 constants have their <code>bit_width</code> set to 64, causing the error.</p>\n<p>#8173 also exposes another issue on AArch64 when generating facts for <code>MovK</code>, we should calculate the running value for <code>MovK</code> with the field mask.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 433744111,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713357002
    },
    {
        "content": "<p><strong>feilongjiang</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8393\">PR #8393</a>.</p>",
        "id": 433744115,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713357002
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8393#issuecomment-2061183452\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8393\">PR #8393</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @cfallin, @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\", \"cranelift:area:aarch64\", \"isle\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>cfallin: isle</li>\n<li>fitzgen: isle</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 433747965,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713358123
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8393#pullrequestreview-2007998966\">PR review</a>:</p>\n<blockquote>\n<p>Thank you! This looks good to me, though I'd like @cfallin to take a look before merging it, and he may not be able to get to it until next week.</p>\n</blockquote>",
        "id": 433959860,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713423410
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8393#pullrequestreview-2007998966\">PR review</a>:</p>\n<blockquote>\n<p>Thank you! This looks good to me, though I'd like @cfallin to take a look before merging it, and he may not be able to get to it until next week.</p>\n</blockquote>",
        "id": 433959864,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713423410
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8393#discussion_r1570099367\">PR review comment</a>:</p>\n<blockquote>\n<p>I'd prefer parentheses here even if they're not strictly required:</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>                let constant = (input_constant &amp; !mask) | constant;\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 433959865,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713423410
    },
    {
        "content": "<p>feilongjiang updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8393\">PR #8393</a>.</p>",
        "id": 434051225,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713448056
    },
    {
        "content": "<p>feilongjiang <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8393#issuecomment-2063919240\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8393\">PR #8393</a>:</p>\n<blockquote>\n<p>@jameysharp Thanks for the review!</p>\n<blockquote>\n<p>and he may not be able to get to it until next week.</p>\n</blockquote>\n<p>Thatâ€™s okay, we can wait until @cfallin comes back!</p>\n</blockquote>",
        "id": 434052020,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713448293
    },
    {
        "content": "<p>feilongjiang updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8393\">PR #8393</a>.</p>",
        "id": 434052709,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713448479
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8393#pullrequestreview-2009684631\">PR review</a>:</p>\n<blockquote>\n<p>LGTM, thanks!</p>\n</blockquote>",
        "id": 434223019,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713467550
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8393\">PR #8393</a>.</p>",
        "id": 434228126,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713469822
    }
]