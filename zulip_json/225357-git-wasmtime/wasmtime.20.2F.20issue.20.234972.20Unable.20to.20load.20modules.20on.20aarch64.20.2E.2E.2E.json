[
    {
        "content": "<p>rbackhouse opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972\">issue #4972</a>:</p>\n<blockquote>\n<p>Thanks for filing a bug report! Please fill out the TODOs below.</p>\n<h3>Steps to Reproduce</h3>\n<ul>\n<li>The app uses the following to load the module</li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"n\">Config</span>::<span class=\"n\">new</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"n\">Engine</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">config</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"n\">Module</span>::<span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"./test.wasm\"</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>The module should load </p>\n<h3>Actual Results</h3>\n<p>Load fails with </p>\n<p>thread 'main' panicked at 'called <code>Result::unwrap()</code> on an <code>Err</code> value: Os { code: 22, kind: InvalidInput, message: \"Invalid argument\" }', /home/rbackhouse/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-jit-1.0.0/src/code_memory.rs:63:14</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 1.0.0</p>\n<p>Operating system: Ubuntu 18.04</p>\n<p>Architecture: aarch64</p>\n<h3>Extra Info</h3>\n<p>The CPU being used is a Quad-core ARM Cortex-A57 MPCore processor.</p>\n<p>Looking at <a href=\"http://code_memory.rs\">code_memory.rs</a> line 60 it seems the call </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">rustix</span>::<span class=\"n\">process</span>::<span class=\"n\">membarrier</span><span class=\"p\">(</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"n\">rustix</span>::<span class=\"n\">process</span>::<span class=\"n\">MembarrierCommand</span>::<span class=\"n\">RegisterPrivateExpeditedSyncCore</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">unwrap</span><span class=\"p\">();</span><span class=\"w\"></span>\n</code></pre></div>\n<p>is failing</p>\n<p>If I comment out this call and the one at line 168 then everything works fine.</p>\n</blockquote>",
        "id": 301217427,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664367794
    },
    {
        "content": "<p>rbackhouse labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972\">issue #4972</a>:</p>\n<blockquote>\n<p>Thanks for filing a bug report! Please fill out the TODOs below.</p>\n<h3>Steps to Reproduce</h3>\n<ul>\n<li>The app uses the following to load the module</li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"n\">Config</span>::<span class=\"n\">new</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"n\">Engine</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">config</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"n\">Module</span>::<span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"./test.wasm\"</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>The module should load </p>\n<h3>Actual Results</h3>\n<p>Load fails with </p>\n<p>thread 'main' panicked at 'called <code>Result::unwrap()</code> on an <code>Err</code> value: Os { code: 22, kind: InvalidInput, message: \"Invalid argument\" }', /home/rbackhouse/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-jit-1.0.0/src/code_memory.rs:63:14</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 1.0.0</p>\n<p>Operating system: Ubuntu 18.04</p>\n<p>Architecture: aarch64</p>\n<h3>Extra Info</h3>\n<p>The CPU being used is a Quad-core ARM Cortex-A57 MPCore processor.</p>\n<p>Looking at <a href=\"http://code_memory.rs\">code_memory.rs</a> line 60 it seems the call </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">rustix</span>::<span class=\"n\">process</span>::<span class=\"n\">membarrier</span><span class=\"p\">(</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"n\">rustix</span>::<span class=\"n\">process</span>::<span class=\"n\">MembarrierCommand</span>::<span class=\"n\">RegisterPrivateExpeditedSyncCore</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">unwrap</span><span class=\"p\">();</span><span class=\"w\"></span>\n</code></pre></div>\n<p>is failing</p>\n<p>If I comment out this call and the one at line 168 then everything works fine.</p>\n</blockquote>",
        "id": 301217428,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664367794
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972#issuecomment-1261044207\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972\">issue #4972</a>:</p>\n<blockquote>\n<p>cc @akirilov-arm </p>\n</blockquote>",
        "id": 301255527,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664377190
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972#issuecomment-1261088325\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972\">issue #4972</a>:</p>\n<blockquote>\n<p>Which kernel version are you using? And which glibc version?</p>\n</blockquote>",
        "id": 301262997,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664379115
    },
    {
        "content": "<p>rbackhouse <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972#issuecomment-1261092739\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972\">issue #4972</a>:</p>\n<blockquote>\n<p>Kernel version is 4.9.253-tegra<br>\nglibc version is (Ubuntu GLIBC 2.27-3ubuntu1.4) 2.27<br>\n</p>\n</blockquote>",
        "id": 301264055,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664379330
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972#issuecomment-1261098762\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972\">issue #4972</a>:</p>\n<blockquote>\n<p>MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED_SYNC_CORE has been introduced in linux 4.16. Maybe wasmtime will have to fall back to MEMBARRIER_CMD_SHARED when MEMBARRIER_CMD_PRIVATE_EXPEDITED_SYNC_CORE is not available?</p>\n</blockquote>",
        "id": 301265107,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664379629
    },
    {
        "content": "<p>akirilov-arm <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972#issuecomment-1261279781\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972\">issue #4972</a>:</p>\n<blockquote>\n<p>I am not sure if <code>MEMBARRIER_CMD_SHARED</code> would provide the same guarantee as <code>MEMBARRIER_CMD_PRIVATE_EXPEDITED_SYNC_CORE</code>, while it definitely seems more heavyweight, since it affects all threads in the system (not just the ones in the current process). IMHO the first decision to make is how old of a kernel version should Wasmtime support.</p>\n</blockquote>",
        "id": 301294356,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664387958
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972#issuecomment-1261301742\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972\">issue #4972</a>:</p>\n<blockquote>\n<p>It looks like Linux 4.9.253 was released on <a href=\"https://lwn.net/Articles/843690/\">Jan 23, 2021</a>. It is a maintenance release of an older series (4.9), but 5.0 was released in Mar 2019 and is not <em>that</em> old. IMHO we should keep support for kernels older than that if we can (though I'm not sure where to draw the line). Especially for aarch64, kernel forks for SoCs are sometimes a bit more out of date.</p>\n</blockquote>",
        "id": 301298473,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664389170
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972#issuecomment-1261306835\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972\">issue #4972</a>:</p>\n<blockquote>\n<p>(Err, I noted 5.0 above but (i) 4.9 was followed by 4.10, not 5.0 and (ii) the feature in question was in 4.16 as @bjorn3 notes; so the relevant date is <a href=\"https://lwn.net/Articles/750692/\">Apr 1, 2018</a> which, also, is not that old...)</p>\n<p>Can we cascade into the fallback command (<code>MEMBARRIER_CMD_SHARED</code>) if the current, more up-to-date choice gives us <code>EINVAL</code>?</p>\n</blockquote>",
        "id": 301299494,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664389488
    },
    {
        "content": "<p>akirilov-arm <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972#issuecomment-1262555709\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972\">issue #4972</a>:</p>\n<blockquote>\n<p>OK, I got confirmation that <code>MEMBARRIER_CMD_SHARED</code> was an acceptable substitute, keeping in mind the following:</p>\n<ul>\n<li>It is a much more expensive operation because it is affected by all threads in all processes in the system, instead of only the threads in the current process that have registered explicitly for the notification</li>\n<li>It could still fail if the <code>nohz_full</code> parameter is passed to the kernel</li>\n</ul>\n</blockquote>",
        "id": 301487035,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664470881
    },
    {
        "content": "<p>akirilov-arm edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972#issuecomment-1262555709\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972\">issue #4972</a>:</p>\n<blockquote>\n<p>OK, I got confirmation that <code>MEMBARRIER_CMD_SHARED</code> was an acceptable substitute, keeping in mind the following:</p>\n<ul>\n<li>It is a much more expensive operation because it is affected by all threads in all processes in the system, instead of only the threads in the current process</li>\n<li>It could still fail if the <code>nohz_full</code> parameter is passed to the kernel</li>\n</ul>\n</blockquote>",
        "id": 301492620,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664472365
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972#issuecomment-1263776083\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972\">issue #4972</a>:</p>\n<blockquote>\n<p>It looks like <code>rustix</code> doesn't currently have a binding for <code>MEMBARRIER_CMD_SHARED</code> <a href=\"https://docs.rs/rustix/0.36.0-rc2/rustix/process/enum.MembarrierCommand.html\">here</a>; once it does, I'm happy to do a PR to add the fallback behavior here. @sunfishcode , would you be willing to update rustix to add that option?</p>\n</blockquote>",
        "id": 301686239,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664555085
    },
    {
        "content": "<p>akirilov-arm <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972#issuecomment-1263818400\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972\">issue #4972</a>:</p>\n<blockquote>\n<p><code>MEMBARRIER_CMD_SHARED</code> is <a href=\"https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/tree/include/uapi/linux/membarrier.h?h=v5.19.12#n158\">an alias</a> of <code>MEMBARRIER_CMD_GLOBAL</code> for the sake of backward compatibility.</p>\n</blockquote>",
        "id": 301695478,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664557908
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972#issuecomment-1263823486\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972\">issue #4972</a>:</p>\n<blockquote>\n<p>Ah! In that case, let's see if #4987 works (@rbackhouse would you be able to test this patch?).</p>\n</blockquote>",
        "id": 301696585,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664558238
    },
    {
        "content": "<p>rbackhouse <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972#issuecomment-1263825656\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972\">issue #4972</a>:</p>\n<blockquote>\n<p>@cfallin yes I can try it</p>\n</blockquote>",
        "id": 301696978,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664558382
    },
    {
        "content": "<p>rbackhouse <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972#issuecomment-1263831916\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972\">issue #4972</a>:</p>\n<blockquote>\n<p>@cfallin <br>\ncrates/jit/src/code_memory.rs line 168 also has a call to rustix::process::membarrier.</p>\n<p>Should this have the same </p>\n<p>.or_else(|_| rustix::process::membarrier(rustix::process::MembarrierCommand::Global))</p>\n<p>added too ?</p>\n</blockquote>",
        "id": 301698350,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664558831
    },
    {
        "content": "<p>akirilov-arm <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972#issuecomment-1263848741\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972\">issue #4972</a>:</p>\n<blockquote>\n<p>@cfallin Note that the <code>cranelift-jit</code> crate has <a href=\"https://github.com/bytecodealliance/wasmtime/blob/c1d6ca48a74ab6f356d08baa533b90b17ccb834a/cranelift/jit/src/backend.rs#L466\">similar code paths</a>, though currently they appear to fail silently.</p>\n</blockquote>",
        "id": 301701813,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664559961
    },
    {
        "content": "<p>bxq2011hust <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972#issuecomment-1274272590\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972\">issue #4972</a>:</p>\n<blockquote>\n<p>I have met the same issue. </p>\n</blockquote>",
        "id": 303378327,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665475723
    },
    {
        "content": "<p>bxq2011hust edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972#issuecomment-1274272590\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972\">issue #4972</a>:</p>\n<blockquote>\n<p>I have met the same issue. <br>\nWasmtime version or commit: 0.35.3</p>\n<p>Operating system: CentOS Linux release 7.9.2009 (AltArch)</p>\n<p>Architecture: aarch64</p>\n<p>kernel: Linux 7867c1d5ae55 4.18.0-348.20.1.el7.aarch64 #1 SMP Wed Apr 13 20:57:50 UTC 2022 aarch64 aarch64 aarch64 GNU/Linux</p>\n<p><div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>Running <span class=\"m\">1</span> <span class=\"nb\">test</span> <span class=\"k\">case</span>...\nthread <span class=\"s1\">'&lt;unnamed&gt;'</span> panicked at <span class=\"s1\">'called `Result::unwrap()` on an `Err` value: Os { code: 1, kind: PermissionDenied, message: \"Operation not permitted\" }'</span>, /root/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-jit-0.35.3/src/code_memory.rs:63:14\nstack backtrace:\n   <span class=\"m\">0</span>:           0xb058d8 - std::backtrace_rs::backtrace::libunwind::trace::h8a5e4a04f7e58fc7\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n   <span class=\"m\">1</span>:           0xb058d8 - std::backtrace_rs::backtrace::trace_unsynchronized::hc9931ed5b94829c1\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n   <span class=\"m\">2</span>:           0xb058d8 - std::sys_common::backtrace::_print_fmt::h93cac7fc90870819\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/sys_common/backtrace.rs:66:5\n   <span class=\"m\">3</span>:           0xb058d8 - &lt;std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display&gt;::fmt::hb80d1ce809872875\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/sys_common/backtrace.rs:45:22\n   <span class=\"m\">4</span>:           0xb571d8 - core::fmt::write::h178b28c8855699fc\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/core/src/fmt/mod.rs:1198:17\n   <span class=\"m\">5</span>:           0xaf7c4c - std::io::Write::write_fmt::h9bb27fefa849e7e9\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/io/mod.rs:1672:15\n   <span class=\"m\">6</span>:           0xb08218 - std::sys_common::backtrace::_print::h39936b176af986e7\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/sys_common/backtrace.rs:48:5\n   <span class=\"m\">7</span>:           0xb08218 - std::sys_common::backtrace::print::h326caf59757e2648\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/sys_common/backtrace.rs:35:9\n   <span class=\"m\">8</span>:           0xb08218 - std::panicking::default_hook::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::hf783bfb93990b280\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/panicking.rs:295:22\n   <span class=\"m\">9</span>:           0xb07f2c - std::panicking::default_hook::hba8a0c46968da93d\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/panicking.rs:314:9\n  <span class=\"m\">10</span>:           0xb08948 - std::panicking::rust_panic_with_hook::h7a13c9edc6d8d37a\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/panicking.rs:698:17\n  <span class=\"m\">11</span>:           0xb08830 - std::panicking::begin_panic_handler::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::h488b160e52dfebaf\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/panicking.rs:588:13\n  <span class=\"m\">12</span>:           0xb05de8 - std::sys_common::backtrace::__rust_end_short_backtrace::h9348312e0595d087\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/sys_common/backtrace.rs:138:18\n  <span class=\"m\">13</span>:           0xb0857c - rust_begin_unwind\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/panicking.rs:584:5\n  <span class=\"m\">14</span>:           0x404108 - core::panicking::panic_fmt::h8466cbb0f1c51a1e\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/core/src/panicking.rs:142:14\n  <span class=\"m\">15</span>:           0x4041f4 - core::result::unwrap_failed::he9d64115a287a1c2\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/core/src/result.rs:1814:5\n  <span class=\"m\">16</span>:           0xfdc284 - wasmtime_jit::instantiate::CompiledModule::from_artifacts::h983421f6fde1119e\n  <span class=\"m\">17</span>:           0xc97b40 - &lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::hb87417df58489414\n  <span class=\"m\">18</span>:           0xcb578c - rayon::iter::plumbing::Producer::fold_with::h4fc4a166544a14c4\n  <span class=\"m\">19</span>:           0xd03744 - rayon::iter::plumbing::bridge_producer_consumer::helper::h7d219b477f38f004\n  <span class=\"m\">20</span>:           0xcb7520 - &lt;rayon::vec::IntoIter&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer::h4be24b5438d94693\n  <span class=\"m\">21</span>:           0xcb6a5c - &lt;rayon::iter::map::Map&lt;I,F&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed::haf000ffd9729773f\n  <span class=\"m\">22</span>:           0xd1f048 - rayon::iter::collect::&lt;impl rayon::iter::ParallelExtend&lt;T&gt; <span class=\"k\">for</span> alloc::vec::Vec&lt;T&gt;&gt;::par_extend::hd53d53241b744d71\n  <span class=\"m\">23</span>:           0xd27a94 - rayon::result::&lt;impl rayon::iter::FromParallelIterator&lt;core::result::Result&lt;T,E&gt;&gt; <span class=\"k\">for</span> core::result::Result&lt;C,E&gt;&gt;::from_par_iter::he901005655a8d72d\n  <span class=\"m\">24</span>:           0xcccaf0 - wasmtime::module::Module::from_binary::h5c02d969de2d9338\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 303378577,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665475823
    },
    {
        "content": "<p>bxq2011hust edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972#issuecomment-1274272590\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972\">issue #4972</a>:</p>\n<blockquote>\n<p>I have met the same issue. The error message is <code>PermissionDenied</code>, but the test is running in docker by root.</p>\n<p>Wasmtime version or commit: 0.35.3</p>\n<p>Operating system: CentOS Linux release 7.9.2009 (AltArch)</p>\n<p>Architecture: aarch64</p>\n<p>kernel: Linux 7867c1d5ae55 4.18.0-348.20.1.el7.aarch64 #1 SMP Wed Apr 13 20:57:50 UTC 2022 aarch64 aarch64 aarch64 GNU/Linux</p>\n<p><div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>Running <span class=\"m\">1</span> <span class=\"nb\">test</span> <span class=\"k\">case</span>...\nthread <span class=\"s1\">'&lt;unnamed&gt;'</span> panicked at <span class=\"s1\">'called `Result::unwrap()` on an `Err` value: Os { code: 1, kind: PermissionDenied, message: \"Operation not permitted\" }'</span>, /root/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-jit-0.35.3/src/code_memory.rs:63:14\nstack backtrace:\n   <span class=\"m\">0</span>:           0xb058d8 - std::backtrace_rs::backtrace::libunwind::trace::h8a5e4a04f7e58fc7\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n   <span class=\"m\">1</span>:           0xb058d8 - std::backtrace_rs::backtrace::trace_unsynchronized::hc9931ed5b94829c1\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n   <span class=\"m\">2</span>:           0xb058d8 - std::sys_common::backtrace::_print_fmt::h93cac7fc90870819\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/sys_common/backtrace.rs:66:5\n   <span class=\"m\">3</span>:           0xb058d8 - &lt;std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display&gt;::fmt::hb80d1ce809872875\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/sys_common/backtrace.rs:45:22\n   <span class=\"m\">4</span>:           0xb571d8 - core::fmt::write::h178b28c8855699fc\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/core/src/fmt/mod.rs:1198:17\n   <span class=\"m\">5</span>:           0xaf7c4c - std::io::Write::write_fmt::h9bb27fefa849e7e9\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/io/mod.rs:1672:15\n   <span class=\"m\">6</span>:           0xb08218 - std::sys_common::backtrace::_print::h39936b176af986e7\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/sys_common/backtrace.rs:48:5\n   <span class=\"m\">7</span>:           0xb08218 - std::sys_common::backtrace::print::h326caf59757e2648\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/sys_common/backtrace.rs:35:9\n   <span class=\"m\">8</span>:           0xb08218 - std::panicking::default_hook::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::hf783bfb93990b280\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/panicking.rs:295:22\n   <span class=\"m\">9</span>:           0xb07f2c - std::panicking::default_hook::hba8a0c46968da93d\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/panicking.rs:314:9\n  <span class=\"m\">10</span>:           0xb08948 - std::panicking::rust_panic_with_hook::h7a13c9edc6d8d37a\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/panicking.rs:698:17\n  <span class=\"m\">11</span>:           0xb08830 - std::panicking::begin_panic_handler::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::h488b160e52dfebaf\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/panicking.rs:588:13\n  <span class=\"m\">12</span>:           0xb05de8 - std::sys_common::backtrace::__rust_end_short_backtrace::h9348312e0595d087\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/sys_common/backtrace.rs:138:18\n  <span class=\"m\">13</span>:           0xb0857c - rust_begin_unwind\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/panicking.rs:584:5\n  <span class=\"m\">14</span>:           0x404108 - core::panicking::panic_fmt::h8466cbb0f1c51a1e\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/core/src/panicking.rs:142:14\n  <span class=\"m\">15</span>:           0x4041f4 - core::result::unwrap_failed::he9d64115a287a1c2\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/core/src/result.rs:1814:5\n  <span class=\"m\">16</span>:           0xfdc284 - wasmtime_jit::instantiate::CompiledModule::from_artifacts::h983421f6fde1119e\n  <span class=\"m\">17</span>:           0xc97b40 - &lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::hb87417df58489414\n  <span class=\"m\">18</span>:           0xcb578c - rayon::iter::plumbing::Producer::fold_with::h4fc4a166544a14c4\n  <span class=\"m\">19</span>:           0xd03744 - rayon::iter::plumbing::bridge_producer_consumer::helper::h7d219b477f38f004\n  <span class=\"m\">20</span>:           0xcb7520 - &lt;rayon::vec::IntoIter&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer::h4be24b5438d94693\n  <span class=\"m\">21</span>:           0xcb6a5c - &lt;rayon::iter::map::Map&lt;I,F&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed::haf000ffd9729773f\n  <span class=\"m\">22</span>:           0xd1f048 - rayon::iter::collect::&lt;impl rayon::iter::ParallelExtend&lt;T&gt; <span class=\"k\">for</span> alloc::vec::Vec&lt;T&gt;&gt;::par_extend::hd53d53241b744d71\n  <span class=\"m\">23</span>:           0xd27a94 - rayon::result::&lt;impl rayon::iter::FromParallelIterator&lt;core::result::Result&lt;T,E&gt;&gt; <span class=\"k\">for</span> core::result::Result&lt;C,E&gt;&gt;::from_par_iter::he901005655a8d72d\n  <span class=\"m\">24</span>:           0xcccaf0 - wasmtime::module::Module::from_binary::h5c02d969de2d9338\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 303378951,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665475981
    },
    {
        "content": "<p>bxq2011hust edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972#issuecomment-1274272590\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972\">issue #4972</a>:</p>\n<blockquote>\n<p>I guess I have met the same issue. The error message is <code>PermissionDenied</code>, but the test is running in docker by root.</p>\n<p>Wasmtime version or commit: 0.35.3</p>\n<p>Operating system: CentOS Linux release 7.9.2009 (AltArch)</p>\n<p>Architecture: aarch64</p>\n<p>kernel: Linux 7867c1d5ae55 4.18.0-348.20.1.el7.aarch64 #1 SMP Wed Apr 13 20:57:50 UTC 2022 aarch64 aarch64 aarch64 GNU/Linux</p>\n<p><div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>Running <span class=\"m\">1</span> <span class=\"nb\">test</span> <span class=\"k\">case</span>...\nthread <span class=\"s1\">'&lt;unnamed&gt;'</span> panicked at <span class=\"s1\">'called `Result::unwrap()` on an `Err` value: Os { code: 1, kind: PermissionDenied, message: \"Operation not permitted\" }'</span>, /root/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-jit-0.35.3/src/code_memory.rs:63:14\nstack backtrace:\n   <span class=\"m\">0</span>:           0xb058d8 - std::backtrace_rs::backtrace::libunwind::trace::h8a5e4a04f7e58fc7\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n   <span class=\"m\">1</span>:           0xb058d8 - std::backtrace_rs::backtrace::trace_unsynchronized::hc9931ed5b94829c1\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n   <span class=\"m\">2</span>:           0xb058d8 - std::sys_common::backtrace::_print_fmt::h93cac7fc90870819\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/sys_common/backtrace.rs:66:5\n   <span class=\"m\">3</span>:           0xb058d8 - &lt;std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display&gt;::fmt::hb80d1ce809872875\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/sys_common/backtrace.rs:45:22\n   <span class=\"m\">4</span>:           0xb571d8 - core::fmt::write::h178b28c8855699fc\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/core/src/fmt/mod.rs:1198:17\n   <span class=\"m\">5</span>:           0xaf7c4c - std::io::Write::write_fmt::h9bb27fefa849e7e9\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/io/mod.rs:1672:15\n   <span class=\"m\">6</span>:           0xb08218 - std::sys_common::backtrace::_print::h39936b176af986e7\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/sys_common/backtrace.rs:48:5\n   <span class=\"m\">7</span>:           0xb08218 - std::sys_common::backtrace::print::h326caf59757e2648\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/sys_common/backtrace.rs:35:9\n   <span class=\"m\">8</span>:           0xb08218 - std::panicking::default_hook::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::hf783bfb93990b280\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/panicking.rs:295:22\n   <span class=\"m\">9</span>:           0xb07f2c - std::panicking::default_hook::hba8a0c46968da93d\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/panicking.rs:314:9\n  <span class=\"m\">10</span>:           0xb08948 - std::panicking::rust_panic_with_hook::h7a13c9edc6d8d37a\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/panicking.rs:698:17\n  <span class=\"m\">11</span>:           0xb08830 - std::panicking::begin_panic_handler::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::h488b160e52dfebaf\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/panicking.rs:588:13\n  <span class=\"m\">12</span>:           0xb05de8 - std::sys_common::backtrace::__rust_end_short_backtrace::h9348312e0595d087\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/sys_common/backtrace.rs:138:18\n  <span class=\"m\">13</span>:           0xb0857c - rust_begin_unwind\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/panicking.rs:584:5\n  <span class=\"m\">14</span>:           0x404108 - core::panicking::panic_fmt::h8466cbb0f1c51a1e\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/core/src/panicking.rs:142:14\n  <span class=\"m\">15</span>:           0x4041f4 - core::result::unwrap_failed::he9d64115a287a1c2\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/core/src/result.rs:1814:5\n  <span class=\"m\">16</span>:           0xfdc284 - wasmtime_jit::instantiate::CompiledModule::from_artifacts::h983421f6fde1119e\n  <span class=\"m\">17</span>:           0xc97b40 - &lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::hb87417df58489414\n  <span class=\"m\">18</span>:           0xcb578c - rayon::iter::plumbing::Producer::fold_with::h4fc4a166544a14c4\n  <span class=\"m\">19</span>:           0xd03744 - rayon::iter::plumbing::bridge_producer_consumer::helper::h7d219b477f38f004\n  <span class=\"m\">20</span>:           0xcb7520 - &lt;rayon::vec::IntoIter&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer::h4be24b5438d94693\n  <span class=\"m\">21</span>:           0xcb6a5c - &lt;rayon::iter::map::Map&lt;I,F&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed::haf000ffd9729773f\n  <span class=\"m\">22</span>:           0xd1f048 - rayon::iter::collect::&lt;impl rayon::iter::ParallelExtend&lt;T&gt; <span class=\"k\">for</span> alloc::vec::Vec&lt;T&gt;&gt;::par_extend::hd53d53241b744d71\n  <span class=\"m\">23</span>:           0xd27a94 - rayon::result::&lt;impl rayon::iter::FromParallelIterator&lt;core::result::Result&lt;T,E&gt;&gt; <span class=\"k\">for</span> core::result::Result&lt;C,E&gt;&gt;::from_par_iter::he901005655a8d72d\n  <span class=\"m\">24</span>:           0xcccaf0 - wasmtime::module::Module::from_binary::h5c02d969de2d9338\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 303379072,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665476034
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972#issuecomment-1274599817\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972\">issue #4972</a>:</p>\n<blockquote>\n<p>I'm not sure that is the same issue, you have kernel 4.18 which should support this! Or fail with code <code>22</code> if it isn't implemented on AArch64.</p>\n<p>However I did a quick google search and it might be that <a href=\"https://stackoverflow.com/a/60495279/2065450\">the <code>membarrier</code> syscall isn't whitelisted on docker</a>, can you check if that's whats happening?</p>\n</blockquote>",
        "id": 303426057,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665490937
    },
    {
        "content": "<p>afonso360 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972#issuecomment-1274599817\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972\">issue #4972</a>:</p>\n<blockquote>\n<p>I'm not sure that is the same issue, you have kernel 4.18 which should support this! Or fail with code <code>22</code> if it isn't implemented on AArch64.</p>\n<p>However I did a quick google search and it might be that <a href=\"https://stackoverflow.com/a/60495279/2065450\">the <code>membarrier</code> syscall isn't whitelisted on docker</a>, can you check if that's whats happening?</p>\n<p>Edit: And this <a href=\"https://github.com/jlesage/docker-firefox#allowing-the-membarrier-system-call\">link</a> mentions that it was only added to the default list in docker 20.10.</p>\n</blockquote>",
        "id": 303426460,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665491075
    },
    {
        "content": "<p>bxq2011hust <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972#issuecomment-1275667142\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972\">issue #4972</a>:</p>\n<blockquote>\n<p>@afonso360  Yes, you are right, I found the docker engine version is 1.13. Upgrade docker to 20.10 and the test is fine. Thank you very much!<br>\n</p>\n</blockquote>",
        "id": 303567461,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665556795
    },
    {
        "content": "<p>bxq2011hust edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972#issuecomment-1275667142\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4972\">issue #4972</a>:</p>\n<blockquote>\n<p>@afonso360  You are right, I found the docker engine version is 1.13. Upgrade docker to 20.10 and the test is fine. Thank you very much!<br>\n</p>\n</blockquote>",
        "id": 303569594,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665557967
    }
]