[
    {
        "content": "<p>ifsheldon opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9823\">issue #9823</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>Remove the use of <code>async_trait</code> in <code>bindgen!</code> as per <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9776#issuecomment-2539971806\">https://github.com/bytecodealliance/wasmtime/issues/9776#issuecomment-2539971806</a>. Use async fn in traits, RPITIT and <code>trait_variant</code> instead.</p>\n<h4>Benefit</h4>\n<p>Removing <code>async_trait</code> simplifies the generated code by <code>bindgen!</code> a lot. This can also drastically improve IDE experience as IDEs have better support for async fn in traits and RPITIT. Coding experience should be much better as well, as programmers can just use <code>async fn</code> when implementing autogenerated traits by <code>bindgen</code> in async mode.</p>\n<h4>Implementation</h4>\n<p>Note: I don't have time to dig into details now, so this issue is primary for tracking. Probably someone can tag this as \"good first issue\" :)</p>\n<p>Just search for <code>::async_trait</code> in the source code of <code>wit-bindgen</code> crate:</p>\n<p><a href=\"https://github.com/search?q=repo%3Abytecodealliance%2Fwasmtime+path%3A%2F%5Ecrates%5C%2Fwit-bindgen%5C%2F%2F+%3A%3Aasync_trait&amp;type=code\">https://github.com/search?q=repo%3Abytecodealliance%2Fwasmtime+path%3A%2F%5Ecrates%5C%2Fwit-bindgen%5C%2F%2F+%3A%3Aasync_trait&amp;type=code</a></p>\n<p>There are not many occurrences to my surprise.</p>\n<p>&lt;img width=\"620\" alt=\"image\" src=\"<a href=\"https://github.com/user-attachments/assets/f940bf0b-3100-4069-9234-2f619394413a\">https://github.com/user-attachments/assets/f940bf0b-3100-4069-9234-2f619394413a</a>\" /&gt;</p>\n<p>In theory, we need to generate something like:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[trait_variant::make(HostX: Send)]</span>\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">LocalHostX</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"c1\">//...</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>instead of </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[async_trait]</span>\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">HostX</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"c1\">//...</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>cc @alexcrichton <br>\n</p>\n</blockquote>",
        "id": 489004180,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734190809
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9823\">issue #9823</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>Remove the use of <code>async_trait</code> in <code>bindgen!</code> as per <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9776#issuecomment-2539971806\">https://github.com/bytecodealliance/wasmtime/issues/9776#issuecomment-2539971806</a>. Use async fn in traits, RPITIT and <code>trait_variant</code> instead.</p>\n<h4>Benefit</h4>\n<p>Removing <code>async_trait</code> simplifies the generated code by <code>bindgen!</code> a lot. This can also drastically improve IDE experience as IDEs have better support for async fn in traits and RPITIT. Coding experience should be much better as well, as programmers can just use <code>async fn</code> when implementing autogenerated traits by <code>bindgen</code> in async mode.</p>\n<h4>Implementation</h4>\n<p>Note: I don't have time to dig into details now, so this issue is primary for tracking. Probably someone can tag this as \"good first issue\" :)</p>\n<p>Just search for <code>::async_trait</code> in the source code of <code>wit-bindgen</code> crate:</p>\n<p><a href=\"https://github.com/search?q=repo%3Abytecodealliance%2Fwasmtime+path%3A%2F%5Ecrates%5C%2Fwit-bindgen%5C%2F%2F+%3A%3Aasync_trait&amp;type=code\">https://github.com/search?q=repo%3Abytecodealliance%2Fwasmtime+path%3A%2F%5Ecrates%5C%2Fwit-bindgen%5C%2F%2F+%3A%3Aasync_trait&amp;type=code</a></p>\n<p>There are not many occurrences to my surprise.</p>\n<p>&lt;img width=\"620\" alt=\"image\" src=\"<a href=\"https://github.com/user-attachments/assets/f940bf0b-3100-4069-9234-2f619394413a\">https://github.com/user-attachments/assets/f940bf0b-3100-4069-9234-2f619394413a</a>\" /&gt;</p>\n<p>In theory, we need to generate something like:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[trait_variant::make(HostX: Send)]</span>\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">LocalHostX</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"c1\">//...</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>instead of </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[async_trait]</span>\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">HostX</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"c1\">//...</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>cc @alexcrichton <br>\n</p>\n</blockquote>",
        "id": 490200985,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734714770
    }
]