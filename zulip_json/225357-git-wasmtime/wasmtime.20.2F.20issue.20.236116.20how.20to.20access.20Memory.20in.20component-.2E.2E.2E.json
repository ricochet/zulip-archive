[
    {
        "content": "<p>Sherlock-Holo opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6116\">issue #6116</a>:</p>\n<blockquote>\n<p>I'm using <code>component-model</code> feature to write a host function, however I can't get the <code>Caller</code> or <code>Store</code> to access the wasm memory through <a href=\"https://docs.rs/wasmtime/latest/wasmtime/struct.Memory.html#method.data_mut\">https://docs.rs/wasmtime/latest/wasmtime/struct.Memory.html#method.data_mut</a></p>\n</blockquote>",
        "id": 345313108,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1680074253
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6116#issuecomment-1488812454\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6116\">issue #6116</a>:</p>\n<blockquote>\n<p>At the component model layer of abstraction embedders don't have access to core wasm primitives such as <code>Memory</code> or <code>Func</code>. That means that the answer to your question is that the <code>Memory</code> cannot be accessed.</p>\n<p>Could you perhaps elaborate though the intention for accessing memory? We can try to help out with the problem at hand via an alternative means.</p>\n</blockquote>",
        "id": 345433810,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1680102512
    },
    {
        "content": "<p>Sherlock-Holo <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6116#issuecomment-1491211409\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6116\">issue #6116</a>:</p>\n<blockquote>\n<p>I'm writing my udp/tcp helper, allow wasm codes can read write tcp/udp<br>\nI want to let wasm codes pass the buffer offset and length to the host function, then rust codes can write data into the wasm linear memory directly or read from linear memory directly<br>\nbut with <code>component-model</code> feature, rust codes can't access the linear memory through <code>Caller</code> for now</p>\n</blockquote>",
        "id": 345824302,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1680230255
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6116#issuecomment-1497637420\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6116\">issue #6116</a>:</p>\n<blockquote>\n<p>Ah ok, thanks for the info! For that you'll probably want to take a look at the <a href=\"https://github.com/bytecodealliance/preview2-prototyping/blob/main/wit/deps/io/streams.wit\"><code>stream</code> type that WASI is working on</a>. Otherwise with the component model you need to model operations with <code>list&lt;u8&gt;</code> for now. Eventually the component model will have a native stream type for these sorts of operations, but that's not available and/or designed yet.</p>\n<p>Given though that the lack of access to linear memory is an intentional design decision I'm going to close this issue. If you're having trouble with streams from WASI it might be best to wait for some of the WASI bits to settle to have more examples to draw from. Otherwise though feel free to open an issue.</p>\n</blockquote>",
        "id": 347174251,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1680706773
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6116\">issue #6116</a>:</p>\n<blockquote>\n<p>I'm using <code>component-model</code> feature to write a host function, however I can't get the <code>Caller</code> or <code>Store</code> to access the wasm memory through <a href=\"https://docs.rs/wasmtime/latest/wasmtime/struct.Memory.html#method.data_mut\">https://docs.rs/wasmtime/latest/wasmtime/struct.Memory.html#method.data_mut</a></p>\n</blockquote>",
        "id": 347174253,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1680706774
    },
    {
        "content": "<p>BrytonLee <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6116#issuecomment-1963401861\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6116\">issue #6116</a>:</p>\n<blockquote>\n<p>@alexcrichton , I have some huge data structs want to be send from host side to wasm module, can I intercept wasi file operation and encapsulate data that can be passed via file descriptor?  Do you think that WASI <code>stream</code> type would help? </p>\n<p>Thank you for your guidance. </p>\n</blockquote>",
        "id": 423330269,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708928665
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6116#issuecomment-1964451273\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6116\">issue #6116</a>:</p>\n<blockquote>\n<p>@BrytonLee that cannot be easily done today as far as I'm aware. Nowadays we'd recommend using a <code>resource</code> to model your large structure. That way the guest can have a handle on it and only request the parts it needs.</p>\n</blockquote>",
        "id": 423423833,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708962110
    },
    {
        "content": "<p>BrytonLee <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6116#issuecomment-1965650449\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6116\">issue #6116</a>:</p>\n<blockquote>\n<p>Thank you very much, @alexcrichton .  </p>\n<p>I think most developer care about accessing memory is due to performance concerns.  Is there any other suggestion for reducing memory copy cost? </p>\n<p>From my best knowledge, 1). wasmtime component module doesn't allow to upper code access wasm module memory (return area and linear memory). 2). <code>stream</code> type implementation in wasmtime doesn't directly access linear memory neither, so it also need to copy data in/out from wasm modue.  3). <code>resource</code> is more suitable for wasm module when it only consumes part of whole data.  Are they true? </p>\n<p>I saw that wasmedge rust-sdk async-wasi support VFS, it seems that async-wasi allows developer to build a virtual memory file for WASI file I/O, does wasmtime have simillar ones?  Also would wasm module develop to use something like <code>mmap</code> to share memory with wasmtime? </p>\n<p>Thanks,<br>\nBryton</p>\n</blockquote>",
        "id": 423517481,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708998943
    },
    {
        "content": "<p>BrytonLee edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6116#issuecomment-1965650449\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6116\">issue #6116</a>:</p>\n<blockquote>\n<p>Thank you very much, @alexcrichton .  </p>\n<p>I think most developer care about accessing memory is due to performance concerns.  Is there any other suggestion for reducing memory copy cost? </p>\n<p>From my best knowledge, 1). wasmtime component module doesn't allow to upper code access wasm module memory (return area and linear memory). 2). <code>stream</code> type implementation in wasmtime doesn't directly access linear memory neither, so it also need to copy data in/out from wasm modue.  3). <code>resource</code> is more suitable for wasm module when it only consumes part of whole data.  Are they true? </p>\n<p>I saw that wasmedge rust-sdk async-wasi support VFS, it seems that async-wasi allows developer to build a virtual memory file for WASI file I/O, does wasmtime have simillar ones?  Also would wasm module developer can use something like <code>mmap</code> to share memory with wasmtime? </p>\n<p>Thanks,<br>\nBryton</p>\n</blockquote>",
        "id": 423517630,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708999049
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6116#issuecomment-1969347332\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6116\">issue #6116</a>:</p>\n<blockquote>\n<p>Ah I see that this discussion has been <a href=\"#narrow/stream/206238-general/topic/How.20many.20memory.20copy.20happens.20when.20a.20struct.20passing.20to.20guest.3F/near/423738896\">taken to zulip</a>, so dropping a link here for context.</p>\n</blockquote>",
        "id": 423854674,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709137218
    }
]