[
    {
        "content": "<p>marmistrz opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1420\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1420\">Issue #1420</a>:</p>\n<blockquote>\n<p>After updating wasmtime to latest master, I'm no longer getting the errno trace level messages.<br>\nI'm running the following code compiled to wasm32-wasi using Rust 1.42.0:</p>\n<div class=\"codehilite\"><pre><span></span>use rustyline::error::ReadlineError;\nuse rustyline::Editor;\n\nfn main() {\n    // `()` can be used when no completer is required\n    let mut rl = Editor::&lt;()&gt;::new();\n    loop {\n        let readline = rl.readline(&quot;&gt;&gt; &quot;);\n        match readline {\n            Ok(line) =&gt; {\n                rl.add_history_entry(line.as_str());\n                println!(&quot;Line: {}&quot;, line);\n            },\n            Err(ReadlineError::Interrupted) =&gt; {\n                println!(&quot;CTRL-C&quot;);\n                break\n            },\n            Err(ReadlineError::Eof) =&gt; {\n                println!(&quot;CTRL-D&quot;);\n                break\n            },\n            Err(err) =&gt; {\n                println!(&quot;Error: {:?}&quot;, err);\n                break\n            }\n        }\n    }\n}\n</pre></div>\n\n\n<p>My command line is: </p>\n<div class=\"codehilite\"><pre><span></span>RUST_LOG=wasi_common=trace cargo run --release -- run --env RUST_LOG=trace /path/to/rl.wasm\n</pre></div>\n\n\n<p>On 32595faba59360c400a517df2003e0a4eebabfdb:</p>\n<div class=\"codehilite\"><pre><span></span> DEBUG wasi_common::ctx &gt; WasiCtx inserting entry PendingEntry::Thunk(0x7ffeb84de258)\n DEBUG wasi_common::sys::unix::entry &gt; Host fd 0 is a char device\n DEBUG wasi_common::ctx              &gt; WasiCtx inserted at Fd(0)\n DEBUG wasi_common::ctx              &gt; WasiCtx inserting entry PendingEntry::Thunk(0x7ffeb84de258)\n DEBUG wasi_common::sys::unix::entry &gt; Host fd 1 is a char device\n DEBUG wasi_common::ctx              &gt; WasiCtx inserted at Fd(1)\n DEBUG wasi_common::ctx              &gt; WasiCtx inserting entry PendingEntry::Thunk(0x7ffeb84de258)\n DEBUG wasi_common::sys::unix::entry &gt; Host fd 2 is a char device\n DEBUG wasi_common::ctx              &gt; WasiCtx inserted at Fd(2)\n DEBUG wasi_common::old::snapshot_0::ctx &gt; WasiCtx inserting (0, Some(PendingEntry::Thunk(0x7ffeb84de780)))\n DEBUG wasi_common::old::snapshot_0::sys::unix::entry_impl &gt; Host fd 0 is a char device\n DEBUG wasi_common::old::snapshot_0::ctx                   &gt; WasiCtx inserting (1, Some(PendingEntry::Thunk(0x7ffeb84de790)))\n DEBUG wasi_common::old::snapshot_0::sys::unix::entry_impl &gt; Host fd 1 is a char device\n DEBUG wasi_common::old::snapshot_0::ctx                   &gt; WasiCtx inserting (2, Some(PendingEntry::Thunk(0x7ffeb84de7a0)))\n DEBUG wasi_common::old::snapshot_0::sys::unix::entry_impl &gt; Host fd 2 is a char device\n TRACE wasi_common::snapshots::wasi_snapshot_preview1      &gt; environ_sizes_get\n TRACE wasi_common::snapshots::wasi_snapshot_preview1      &gt;      | *environ_count_ptr=1\n TRACE wasi_common::snapshots::wasi_snapshot_preview1      &gt;      | *environ_size_ptr=15\n TRACE wasi_common::snapshots::wasi_snapshot_preview1      &gt; environ_get(environ=*guest 0x120030, environ_buf=*guest 0x120010)\n TRACE wasi_common::snapshots::wasi_snapshot_preview1      &gt; fd_prestat_get(fd=Fd(3))\n TRACE wasi_common::snapshots::wasi_snapshot_preview1      &gt; random_get(buf=*guest 0xffe48, buf_len=16)\n TRACE wasi_common::snapshots::wasi_snapshot_preview1      &gt; fd_write(fd=Fd(1), ciovs=*guest 0xffe08/1)\n\n TRACE wasi_common::snapshots::wasi_snapshot_preview1      &gt;      | *nwritten=1\n TRACE wasi_common::snapshots::wasi_snapshot_preview1      &gt; fd_write(fd=Fd(1), ciovs=*guest 0xffe08/1)\nCTRL-D\n TRACE wasi_common::snapshots::wasi_snapshot_preview1      &gt;      | *nwritten=7\n</pre></div>\n\n\n<p>On f700efeb03748baacf571050610949d09303d89b:</p>\n<div class=\"codehilite\"><pre><span></span> DEBUG wasi_common::ctx &gt; WasiCtx inserting (2, PendingFdEntry::Thunk(0x7ffd3f66bab8))\n DEBUG wasi_common::sys::unix::fdentry_impl &gt; Host fd 2 is a char device\n DEBUG wasi_common::ctx                     &gt; WasiCtx inserting (1, PendingFdEntry::Thunk(0x7ffd3f66bab8))\n DEBUG wasi_common::sys::unix::fdentry_impl &gt; Host fd 1 is a char device\n DEBUG wasi_common::ctx                     &gt; WasiCtx inserting (0, PendingFdEntry::Thunk(0x7ffd3f66bab8))\n DEBUG wasi_common::sys::unix::fdentry_impl &gt; Host fd 0 is a char device\n DEBUG wasi_common::old::snapshot_0::ctx    &gt; WasiCtx inserting (2, PendingFdEntry::Thunk(0x7ffd3f66bac8))\n DEBUG wasi_common::old::snapshot_0::sys::unix::fdentry_impl &gt; Host fd 2 is a char device\n DEBUG wasi_common::old::snapshot_0::ctx                     &gt; WasiCtx inserting (1, PendingFdEntry::Thunk(0x7ffd3f66bac8))\n DEBUG wasi_common::old::snapshot_0::sys::unix::fdentry_impl &gt; Host fd 1 is a char device\n DEBUG wasi_common::old::snapshot_0::ctx                     &gt; WasiCtx inserting (0, PendingFdEntry::Thunk(0x7ffd3f66bac8))\n DEBUG wasi_common::old::snapshot_0::sys::unix::fdentry_impl &gt; Host fd 0 is a char device\n TRACE wasi_common::hostcalls_impl::misc                     &gt; environ_sizes_get(environ_count_ptr=0xffffc, environ_size_ptr=0xffff8)\n TRACE wasi_common::hostcalls_impl::misc                     &gt;      | *environ_count_ptr=1\n TRACE wasi_common::hostcalls_impl::misc                     &gt;      | *environ_size_ptr=15\n TRACE wasi_common::hostcalls                                &gt;      | errno=ESUCCESS (No error occurred. System call completed successfully.)\n TRACE wasi_common::hostcalls_impl::misc                     &gt; environ_get(environ_ptr=0x120030, environ_buf=0x120010)\n TRACE wasi_common::hostcalls                                &gt;      | errno=ESUCCESS (No error occurred. System call completed successfully.)\n TRACE wasi_common::hostcalls_impl::fs                       &gt; fd_prestat_get(fd=3, prestat_ptr=0xffff8)\n TRACE wasi_common::hostcalls                                &gt;      | errno=EBADF (Bad file descriptor.)\n TRACE wasi_common::hostcalls_impl::misc                     &gt; random_get(buf_ptr=0xffe48, buf_len=16)\n TRACE wasi_common::hostcalls                                &gt;      | errno=ESUCCESS (No error occurred. System call completed successfully.)\n TRACE wasi_common::hostcalls_impl::fs                       &gt; fd_write(fd=1, iovs_ptr=0xffe08, iovs_len=1, nwritten=0xffdfc)\n\n TRACE wasi_common::hostcalls_impl::fs                       &gt;      | *nwritten=1\n TRACE wasi_common::hostcalls                                &gt;      | errno=ESUCCESS (No error occurred. System call completed successfully.)\n TRACE wasi_common::hostcalls_impl::fs                       &gt; fd_write(fd=1, iovs_ptr=0xffe08, iovs_len=1, nwritten=0xffdfc)\nCTRL-D\n TRACE wasi_common::hostcalls_impl::fs                       &gt;      | *nwritten=7\n TRACE wasi_common::hostcalls                                &gt;      | errno=ESUCCESS (No error occurred. System call completed successfully.)\n</pre></div>\n\n\n<p>In other words, it's a regression introduced in #1202. cc @kubkon</p>\n</blockquote>",
        "id": 192051713,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585329724
    },
    {
        "content": "<p>marmistrz labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1420\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1420\">Issue #1420</a>:</p>\n<blockquote>\n<p>After updating wasmtime to latest master, I'm no longer getting the errno trace level messages.<br>\nI'm running the following code compiled to wasm32-wasi using Rust 1.42.0:</p>\n<div class=\"codehilite\"><pre><span></span>use rustyline::error::ReadlineError;\nuse rustyline::Editor;\n\nfn main() {\n    // `()` can be used when no completer is required\n    let mut rl = Editor::&lt;()&gt;::new();\n    loop {\n        let readline = rl.readline(&quot;&gt;&gt; &quot;);\n        match readline {\n            Ok(line) =&gt; {\n                rl.add_history_entry(line.as_str());\n                println!(&quot;Line: {}&quot;, line);\n            },\n            Err(ReadlineError::Interrupted) =&gt; {\n                println!(&quot;CTRL-C&quot;);\n                break\n            },\n            Err(ReadlineError::Eof) =&gt; {\n                println!(&quot;CTRL-D&quot;);\n                break\n            },\n            Err(err) =&gt; {\n                println!(&quot;Error: {:?}&quot;, err);\n                break\n            }\n        }\n    }\n}\n</pre></div>\n\n\n<p>My command line is: </p>\n<div class=\"codehilite\"><pre><span></span>RUST_LOG=wasi_common=trace cargo run --release -- run --env RUST_LOG=trace /path/to/rl.wasm\n</pre></div>\n\n\n<p>On 32595faba59360c400a517df2003e0a4eebabfdb:</p>\n<div class=\"codehilite\"><pre><span></span> DEBUG wasi_common::ctx &gt; WasiCtx inserting entry PendingEntry::Thunk(0x7ffeb84de258)\n DEBUG wasi_common::sys::unix::entry &gt; Host fd 0 is a char device\n DEBUG wasi_common::ctx              &gt; WasiCtx inserted at Fd(0)\n DEBUG wasi_common::ctx              &gt; WasiCtx inserting entry PendingEntry::Thunk(0x7ffeb84de258)\n DEBUG wasi_common::sys::unix::entry &gt; Host fd 1 is a char device\n DEBUG wasi_common::ctx              &gt; WasiCtx inserted at Fd(1)\n DEBUG wasi_common::ctx              &gt; WasiCtx inserting entry PendingEntry::Thunk(0x7ffeb84de258)\n DEBUG wasi_common::sys::unix::entry &gt; Host fd 2 is a char device\n DEBUG wasi_common::ctx              &gt; WasiCtx inserted at Fd(2)\n DEBUG wasi_common::old::snapshot_0::ctx &gt; WasiCtx inserting (0, Some(PendingEntry::Thunk(0x7ffeb84de780)))\n DEBUG wasi_common::old::snapshot_0::sys::unix::entry_impl &gt; Host fd 0 is a char device\n DEBUG wasi_common::old::snapshot_0::ctx                   &gt; WasiCtx inserting (1, Some(PendingEntry::Thunk(0x7ffeb84de790)))\n DEBUG wasi_common::old::snapshot_0::sys::unix::entry_impl &gt; Host fd 1 is a char device\n DEBUG wasi_common::old::snapshot_0::ctx                   &gt; WasiCtx inserting (2, Some(PendingEntry::Thunk(0x7ffeb84de7a0)))\n DEBUG wasi_common::old::snapshot_0::sys::unix::entry_impl &gt; Host fd 2 is a char device\n TRACE wasi_common::snapshots::wasi_snapshot_preview1      &gt; environ_sizes_get\n TRACE wasi_common::snapshots::wasi_snapshot_preview1      &gt;      | *environ_count_ptr=1\n TRACE wasi_common::snapshots::wasi_snapshot_preview1      &gt;      | *environ_size_ptr=15\n TRACE wasi_common::snapshots::wasi_snapshot_preview1      &gt; environ_get(environ=*guest 0x120030, environ_buf=*guest 0x120010)\n TRACE wasi_common::snapshots::wasi_snapshot_preview1      &gt; fd_prestat_get(fd=Fd(3))\n TRACE wasi_common::snapshots::wasi_snapshot_preview1      &gt; random_get(buf=*guest 0xffe48, buf_len=16)\n TRACE wasi_common::snapshots::wasi_snapshot_preview1      &gt; fd_write(fd=Fd(1), ciovs=*guest 0xffe08/1)\n\n TRACE wasi_common::snapshots::wasi_snapshot_preview1      &gt;      | *nwritten=1\n TRACE wasi_common::snapshots::wasi_snapshot_preview1      &gt; fd_write(fd=Fd(1), ciovs=*guest 0xffe08/1)\nCTRL-D\n TRACE wasi_common::snapshots::wasi_snapshot_preview1      &gt;      | *nwritten=7\n</pre></div>\n\n\n<p>On f700efeb03748baacf571050610949d09303d89b:</p>\n<div class=\"codehilite\"><pre><span></span> DEBUG wasi_common::ctx &gt; WasiCtx inserting (2, PendingFdEntry::Thunk(0x7ffd3f66bab8))\n DEBUG wasi_common::sys::unix::fdentry_impl &gt; Host fd 2 is a char device\n DEBUG wasi_common::ctx                     &gt; WasiCtx inserting (1, PendingFdEntry::Thunk(0x7ffd3f66bab8))\n DEBUG wasi_common::sys::unix::fdentry_impl &gt; Host fd 1 is a char device\n DEBUG wasi_common::ctx                     &gt; WasiCtx inserting (0, PendingFdEntry::Thunk(0x7ffd3f66bab8))\n DEBUG wasi_common::sys::unix::fdentry_impl &gt; Host fd 0 is a char device\n DEBUG wasi_common::old::snapshot_0::ctx    &gt; WasiCtx inserting (2, PendingFdEntry::Thunk(0x7ffd3f66bac8))\n DEBUG wasi_common::old::snapshot_0::sys::unix::fdentry_impl &gt; Host fd 2 is a char device\n DEBUG wasi_common::old::snapshot_0::ctx                     &gt; WasiCtx inserting (1, PendingFdEntry::Thunk(0x7ffd3f66bac8))\n DEBUG wasi_common::old::snapshot_0::sys::unix::fdentry_impl &gt; Host fd 1 is a char device\n DEBUG wasi_common::old::snapshot_0::ctx                     &gt; WasiCtx inserting (0, PendingFdEntry::Thunk(0x7ffd3f66bac8))\n DEBUG wasi_common::old::snapshot_0::sys::unix::fdentry_impl &gt; Host fd 0 is a char device\n TRACE wasi_common::hostcalls_impl::misc                     &gt; environ_sizes_get(environ_count_ptr=0xffffc, environ_size_ptr=0xffff8)\n TRACE wasi_common::hostcalls_impl::misc                     &gt;      | *environ_count_ptr=1\n TRACE wasi_common::hostcalls_impl::misc                     &gt;      | *environ_size_ptr=15\n TRACE wasi_common::hostcalls                                &gt;      | errno=ESUCCESS (No error occurred. System call completed successfully.)\n TRACE wasi_common::hostcalls_impl::misc                     &gt; environ_get(environ_ptr=0x120030, environ_buf=0x120010)\n TRACE wasi_common::hostcalls                                &gt;      | errno=ESUCCESS (No error occurred. System call completed successfully.)\n TRACE wasi_common::hostcalls_impl::fs                       &gt; fd_prestat_get(fd=3, prestat_ptr=0xffff8)\n TRACE wasi_common::hostcalls                                &gt;      | errno=EBADF (Bad file descriptor.)\n TRACE wasi_common::hostcalls_impl::misc                     &gt; random_get(buf_ptr=0xffe48, buf_len=16)\n TRACE wasi_common::hostcalls                                &gt;      | errno=ESUCCESS (No error occurred. System call completed successfully.)\n TRACE wasi_common::hostcalls_impl::fs                       &gt; fd_write(fd=1, iovs_ptr=0xffe08, iovs_len=1, nwritten=0xffdfc)\n\n TRACE wasi_common::hostcalls_impl::fs                       &gt;      | *nwritten=1\n TRACE wasi_common::hostcalls                                &gt;      | errno=ESUCCESS (No error occurred. System call completed successfully.)\n TRACE wasi_common::hostcalls_impl::fs                       &gt; fd_write(fd=1, iovs_ptr=0xffe08, iovs_len=1, nwritten=0xffdfc)\nCTRL-D\n TRACE wasi_common::hostcalls_impl::fs                       &gt;      | *nwritten=7\n TRACE wasi_common::hostcalls                                &gt;      | errno=ESUCCESS (No error occurred. System call completed successfully.)\n</pre></div>\n\n\n<p>In other words, it's a regression introduced in #1202. cc @kubkon</p>\n</blockquote>",
        "id": 192051714,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585329724
    },
    {
        "content": "<p>marmistrz labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1420\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1420\">Issue #1420</a>:</p>\n<blockquote>\n<p>After updating wasmtime to latest master, I'm no longer getting the errno trace level messages.<br>\nI'm running the following code compiled to wasm32-wasi using Rust 1.42.0:</p>\n<div class=\"codehilite\"><pre><span></span>use rustyline::error::ReadlineError;\nuse rustyline::Editor;\n\nfn main() {\n    // `()` can be used when no completer is required\n    let mut rl = Editor::&lt;()&gt;::new();\n    loop {\n        let readline = rl.readline(&quot;&gt;&gt; &quot;);\n        match readline {\n            Ok(line) =&gt; {\n                rl.add_history_entry(line.as_str());\n                println!(&quot;Line: {}&quot;, line);\n            },\n            Err(ReadlineError::Interrupted) =&gt; {\n                println!(&quot;CTRL-C&quot;);\n                break\n            },\n            Err(ReadlineError::Eof) =&gt; {\n                println!(&quot;CTRL-D&quot;);\n                break\n            },\n            Err(err) =&gt; {\n                println!(&quot;Error: {:?}&quot;, err);\n                break\n            }\n        }\n    }\n}\n</pre></div>\n\n\n<p>My command line is: </p>\n<div class=\"codehilite\"><pre><span></span>RUST_LOG=wasi_common=trace cargo run --release -- run --env RUST_LOG=trace /path/to/rl.wasm\n</pre></div>\n\n\n<p>On 32595faba59360c400a517df2003e0a4eebabfdb:</p>\n<div class=\"codehilite\"><pre><span></span> DEBUG wasi_common::ctx &gt; WasiCtx inserting entry PendingEntry::Thunk(0x7ffeb84de258)\n DEBUG wasi_common::sys::unix::entry &gt; Host fd 0 is a char device\n DEBUG wasi_common::ctx              &gt; WasiCtx inserted at Fd(0)\n DEBUG wasi_common::ctx              &gt; WasiCtx inserting entry PendingEntry::Thunk(0x7ffeb84de258)\n DEBUG wasi_common::sys::unix::entry &gt; Host fd 1 is a char device\n DEBUG wasi_common::ctx              &gt; WasiCtx inserted at Fd(1)\n DEBUG wasi_common::ctx              &gt; WasiCtx inserting entry PendingEntry::Thunk(0x7ffeb84de258)\n DEBUG wasi_common::sys::unix::entry &gt; Host fd 2 is a char device\n DEBUG wasi_common::ctx              &gt; WasiCtx inserted at Fd(2)\n DEBUG wasi_common::old::snapshot_0::ctx &gt; WasiCtx inserting (0, Some(PendingEntry::Thunk(0x7ffeb84de780)))\n DEBUG wasi_common::old::snapshot_0::sys::unix::entry_impl &gt; Host fd 0 is a char device\n DEBUG wasi_common::old::snapshot_0::ctx                   &gt; WasiCtx inserting (1, Some(PendingEntry::Thunk(0x7ffeb84de790)))\n DEBUG wasi_common::old::snapshot_0::sys::unix::entry_impl &gt; Host fd 1 is a char device\n DEBUG wasi_common::old::snapshot_0::ctx                   &gt; WasiCtx inserting (2, Some(PendingEntry::Thunk(0x7ffeb84de7a0)))\n DEBUG wasi_common::old::snapshot_0::sys::unix::entry_impl &gt; Host fd 2 is a char device\n TRACE wasi_common::snapshots::wasi_snapshot_preview1      &gt; environ_sizes_get\n TRACE wasi_common::snapshots::wasi_snapshot_preview1      &gt;      | *environ_count_ptr=1\n TRACE wasi_common::snapshots::wasi_snapshot_preview1      &gt;      | *environ_size_ptr=15\n TRACE wasi_common::snapshots::wasi_snapshot_preview1      &gt; environ_get(environ=*guest 0x120030, environ_buf=*guest 0x120010)\n TRACE wasi_common::snapshots::wasi_snapshot_preview1      &gt; fd_prestat_get(fd=Fd(3))\n TRACE wasi_common::snapshots::wasi_snapshot_preview1      &gt; random_get(buf=*guest 0xffe48, buf_len=16)\n TRACE wasi_common::snapshots::wasi_snapshot_preview1      &gt; fd_write(fd=Fd(1), ciovs=*guest 0xffe08/1)\n\n TRACE wasi_common::snapshots::wasi_snapshot_preview1      &gt;      | *nwritten=1\n TRACE wasi_common::snapshots::wasi_snapshot_preview1      &gt; fd_write(fd=Fd(1), ciovs=*guest 0xffe08/1)\nCTRL-D\n TRACE wasi_common::snapshots::wasi_snapshot_preview1      &gt;      | *nwritten=7\n</pre></div>\n\n\n<p>On f700efeb03748baacf571050610949d09303d89b:</p>\n<div class=\"codehilite\"><pre><span></span> DEBUG wasi_common::ctx &gt; WasiCtx inserting (2, PendingFdEntry::Thunk(0x7ffd3f66bab8))\n DEBUG wasi_common::sys::unix::fdentry_impl &gt; Host fd 2 is a char device\n DEBUG wasi_common::ctx                     &gt; WasiCtx inserting (1, PendingFdEntry::Thunk(0x7ffd3f66bab8))\n DEBUG wasi_common::sys::unix::fdentry_impl &gt; Host fd 1 is a char device\n DEBUG wasi_common::ctx                     &gt; WasiCtx inserting (0, PendingFdEntry::Thunk(0x7ffd3f66bab8))\n DEBUG wasi_common::sys::unix::fdentry_impl &gt; Host fd 0 is a char device\n DEBUG wasi_common::old::snapshot_0::ctx    &gt; WasiCtx inserting (2, PendingFdEntry::Thunk(0x7ffd3f66bac8))\n DEBUG wasi_common::old::snapshot_0::sys::unix::fdentry_impl &gt; Host fd 2 is a char device\n DEBUG wasi_common::old::snapshot_0::ctx                     &gt; WasiCtx inserting (1, PendingFdEntry::Thunk(0x7ffd3f66bac8))\n DEBUG wasi_common::old::snapshot_0::sys::unix::fdentry_impl &gt; Host fd 1 is a char device\n DEBUG wasi_common::old::snapshot_0::ctx                     &gt; WasiCtx inserting (0, PendingFdEntry::Thunk(0x7ffd3f66bac8))\n DEBUG wasi_common::old::snapshot_0::sys::unix::fdentry_impl &gt; Host fd 0 is a char device\n TRACE wasi_common::hostcalls_impl::misc                     &gt; environ_sizes_get(environ_count_ptr=0xffffc, environ_size_ptr=0xffff8)\n TRACE wasi_common::hostcalls_impl::misc                     &gt;      | *environ_count_ptr=1\n TRACE wasi_common::hostcalls_impl::misc                     &gt;      | *environ_size_ptr=15\n TRACE wasi_common::hostcalls                                &gt;      | errno=ESUCCESS (No error occurred. System call completed successfully.)\n TRACE wasi_common::hostcalls_impl::misc                     &gt; environ_get(environ_ptr=0x120030, environ_buf=0x120010)\n TRACE wasi_common::hostcalls                                &gt;      | errno=ESUCCESS (No error occurred. System call completed successfully.)\n TRACE wasi_common::hostcalls_impl::fs                       &gt; fd_prestat_get(fd=3, prestat_ptr=0xffff8)\n TRACE wasi_common::hostcalls                                &gt;      | errno=EBADF (Bad file descriptor.)\n TRACE wasi_common::hostcalls_impl::misc                     &gt; random_get(buf_ptr=0xffe48, buf_len=16)\n TRACE wasi_common::hostcalls                                &gt;      | errno=ESUCCESS (No error occurred. System call completed successfully.)\n TRACE wasi_common::hostcalls_impl::fs                       &gt; fd_write(fd=1, iovs_ptr=0xffe08, iovs_len=1, nwritten=0xffdfc)\n\n TRACE wasi_common::hostcalls_impl::fs                       &gt;      | *nwritten=1\n TRACE wasi_common::hostcalls                                &gt;      | errno=ESUCCESS (No error occurred. System call completed successfully.)\n TRACE wasi_common::hostcalls_impl::fs                       &gt; fd_write(fd=1, iovs_ptr=0xffe08, iovs_len=1, nwritten=0xffdfc)\nCTRL-D\n TRACE wasi_common::hostcalls_impl::fs                       &gt;      | *nwritten=7\n TRACE wasi_common::hostcalls                                &gt;      | errno=ESUCCESS (No error occurred. System call completed successfully.)\n</pre></div>\n\n\n<p>In other words, it's a regression introduced in #1202. cc @kubkon</p>\n</blockquote>",
        "id": 192051715,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585329724
    },
    {
        "content": "<p>kubkon <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1420#issuecomment-605149996\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1420#issuecomment-605149996\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1420\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1420\">Issue #1420</a>:</p>\n<blockquote>\n<p>Yep, that's true. It's a regression introduced on purpose until we work out how to deal with logging in the <code>wiggle</code> crate. Fastly has certain strict requirements in that respect and the current idea is to have logging behind a feature flag in <code>wiggle</code> crate so that if the lib's consumer doesn't want to use/pull <code>log</code>, they won't have to.</p>\n</blockquote>",
        "id": 192054665,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585331113
    },
    {
        "content": "<p>marmistrz <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1420#issuecomment-605309385\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1420#issuecomment-605309385\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1420\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1420\">Issue #1420</a>:</p>\n<blockquote>\n<p>Why aren't the <code>log</code> calls executed if they are present in the <code>wig</code> sources?<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/9d40e1072abffd83345757729fdf99034813f1c1/crates/wasi-common/wig/src/hostcalls.rs#L96\" title=\"https://github.com/bytecodealliance/wasmtime/blob/9d40e1072abffd83345757729fdf99034813f1c1/crates/wasi-common/wig/src/hostcalls.rs#L96\">https://github.com/bytecodealliance/wasmtime/blob/9d40e1072abffd83345757729fdf99034813f1c1/crates/wasi-common/wig/src/hostcalls.rs#L96</a></p>\n</blockquote>",
        "id": 192078023,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585342254
    },
    {
        "content": "<p>kubkon <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1420#issuecomment-605314475\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1420#issuecomment-605314475\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1420\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1420\">Issue #1420</a>:</p>\n<blockquote>\n<p>That’s because wig generates the shims for the old snapshot only, whereas wiggle is used in the currently used snapshot. We still temporarily use wig for autogenerating some of the glue for wasmtime, however, it’s restricted to things like memory export and the Wasi struct.</p>\n</blockquote>",
        "id": 192080080,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585343079
    },
    {
        "content": "<p>kubkon closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1420\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1420\">Issue #1420</a>:</p>\n<blockquote>\n<p>After updating wasmtime to latest master, I'm no longer getting the errno trace level messages.<br>\nI'm running the following code compiled to wasm32-wasi using Rust 1.42.0:</p>\n<div class=\"codehilite\"><pre><span></span>use rustyline::error::ReadlineError;\nuse rustyline::Editor;\n\nfn main() {\n    // `()` can be used when no completer is required\n    let mut rl = Editor::&lt;()&gt;::new();\n    loop {\n        let readline = rl.readline(&quot;&gt;&gt; &quot;);\n        match readline {\n            Ok(line) =&gt; {\n                rl.add_history_entry(line.as_str());\n                println!(&quot;Line: {}&quot;, line);\n            },\n            Err(ReadlineError::Interrupted) =&gt; {\n                println!(&quot;CTRL-C&quot;);\n                break\n            },\n            Err(ReadlineError::Eof) =&gt; {\n                println!(&quot;CTRL-D&quot;);\n                break\n            },\n            Err(err) =&gt; {\n                println!(&quot;Error: {:?}&quot;, err);\n                break\n            }\n        }\n    }\n}\n</pre></div>\n\n\n<p>My command line is: </p>\n<div class=\"codehilite\"><pre><span></span>RUST_LOG=wasi_common=trace cargo run --release -- run --env RUST_LOG=trace /path/to/rl.wasm\n</pre></div>\n\n\n<p>On 32595faba59360c400a517df2003e0a4eebabfdb:</p>\n<div class=\"codehilite\"><pre><span></span> DEBUG wasi_common::ctx &gt; WasiCtx inserting entry PendingEntry::Thunk(0x7ffeb84de258)\n DEBUG wasi_common::sys::unix::entry &gt; Host fd 0 is a char device\n DEBUG wasi_common::ctx              &gt; WasiCtx inserted at Fd(0)\n DEBUG wasi_common::ctx              &gt; WasiCtx inserting entry PendingEntry::Thunk(0x7ffeb84de258)\n DEBUG wasi_common::sys::unix::entry &gt; Host fd 1 is a char device\n DEBUG wasi_common::ctx              &gt; WasiCtx inserted at Fd(1)\n DEBUG wasi_common::ctx              &gt; WasiCtx inserting entry PendingEntry::Thunk(0x7ffeb84de258)\n DEBUG wasi_common::sys::unix::entry &gt; Host fd 2 is a char device\n DEBUG wasi_common::ctx              &gt; WasiCtx inserted at Fd(2)\n DEBUG wasi_common::old::snapshot_0::ctx &gt; WasiCtx inserting (0, Some(PendingEntry::Thunk(0x7ffeb84de780)))\n DEBUG wasi_common::old::snapshot_0::sys::unix::entry_impl &gt; Host fd 0 is a char device\n DEBUG wasi_common::old::snapshot_0::ctx                   &gt; WasiCtx inserting (1, Some(PendingEntry::Thunk(0x7ffeb84de790)))\n DEBUG wasi_common::old::snapshot_0::sys::unix::entry_impl &gt; Host fd 1 is a char device\n DEBUG wasi_common::old::snapshot_0::ctx                   &gt; WasiCtx inserting (2, Some(PendingEntry::Thunk(0x7ffeb84de7a0)))\n DEBUG wasi_common::old::snapshot_0::sys::unix::entry_impl &gt; Host fd 2 is a char device\n TRACE wasi_common::snapshots::wasi_snapshot_preview1      &gt; environ_sizes_get\n TRACE wasi_common::snapshots::wasi_snapshot_preview1      &gt;      | *environ_count_ptr=1\n TRACE wasi_common::snapshots::wasi_snapshot_preview1      &gt;      | *environ_size_ptr=15\n TRACE wasi_common::snapshots::wasi_snapshot_preview1      &gt; environ_get(environ=*guest 0x120030, environ_buf=*guest 0x120010)\n TRACE wasi_common::snapshots::wasi_snapshot_preview1      &gt; fd_prestat_get(fd=Fd(3))\n TRACE wasi_common::snapshots::wasi_snapshot_preview1      &gt; random_get(buf=*guest 0xffe48, buf_len=16)\n TRACE wasi_common::snapshots::wasi_snapshot_preview1      &gt; fd_write(fd=Fd(1), ciovs=*guest 0xffe08/1)\n\n TRACE wasi_common::snapshots::wasi_snapshot_preview1      &gt;      | *nwritten=1\n TRACE wasi_common::snapshots::wasi_snapshot_preview1      &gt; fd_write(fd=Fd(1), ciovs=*guest 0xffe08/1)\nCTRL-D\n TRACE wasi_common::snapshots::wasi_snapshot_preview1      &gt;      | *nwritten=7\n</pre></div>\n\n\n<p>On f700efeb03748baacf571050610949d09303d89b:</p>\n<div class=\"codehilite\"><pre><span></span> DEBUG wasi_common::ctx &gt; WasiCtx inserting (2, PendingFdEntry::Thunk(0x7ffd3f66bab8))\n DEBUG wasi_common::sys::unix::fdentry_impl &gt; Host fd 2 is a char device\n DEBUG wasi_common::ctx                     &gt; WasiCtx inserting (1, PendingFdEntry::Thunk(0x7ffd3f66bab8))\n DEBUG wasi_common::sys::unix::fdentry_impl &gt; Host fd 1 is a char device\n DEBUG wasi_common::ctx                     &gt; WasiCtx inserting (0, PendingFdEntry::Thunk(0x7ffd3f66bab8))\n DEBUG wasi_common::sys::unix::fdentry_impl &gt; Host fd 0 is a char device\n DEBUG wasi_common::old::snapshot_0::ctx    &gt; WasiCtx inserting (2, PendingFdEntry::Thunk(0x7ffd3f66bac8))\n DEBUG wasi_common::old::snapshot_0::sys::unix::fdentry_impl &gt; Host fd 2 is a char device\n DEBUG wasi_common::old::snapshot_0::ctx                     &gt; WasiCtx inserting (1, PendingFdEntry::Thunk(0x7ffd3f66bac8))\n DEBUG wasi_common::old::snapshot_0::sys::unix::fdentry_impl &gt; Host fd 1 is a char device\n DEBUG wasi_common::old::snapshot_0::ctx                     &gt; WasiCtx inserting (0, PendingFdEntry::Thunk(0x7ffd3f66bac8))\n DEBUG wasi_common::old::snapshot_0::sys::unix::fdentry_impl &gt; Host fd 0 is a char device\n TRACE wasi_common::hostcalls_impl::misc                     &gt; environ_sizes_get(environ_count_ptr=0xffffc, environ_size_ptr=0xffff8)\n TRACE wasi_common::hostcalls_impl::misc                     &gt;      | *environ_count_ptr=1\n TRACE wasi_common::hostcalls_impl::misc                     &gt;      | *environ_size_ptr=15\n TRACE wasi_common::hostcalls                                &gt;      | errno=ESUCCESS (No error occurred. System call completed successfully.)\n TRACE wasi_common::hostcalls_impl::misc                     &gt; environ_get(environ_ptr=0x120030, environ_buf=0x120010)\n TRACE wasi_common::hostcalls                                &gt;      | errno=ESUCCESS (No error occurred. System call completed successfully.)\n TRACE wasi_common::hostcalls_impl::fs                       &gt; fd_prestat_get(fd=3, prestat_ptr=0xffff8)\n TRACE wasi_common::hostcalls                                &gt;      | errno=EBADF (Bad file descriptor.)\n TRACE wasi_common::hostcalls_impl::misc                     &gt; random_get(buf_ptr=0xffe48, buf_len=16)\n TRACE wasi_common::hostcalls                                &gt;      | errno=ESUCCESS (No error occurred. System call completed successfully.)\n TRACE wasi_common::hostcalls_impl::fs                       &gt; fd_write(fd=1, iovs_ptr=0xffe08, iovs_len=1, nwritten=0xffdfc)\n\n TRACE wasi_common::hostcalls_impl::fs                       &gt;      | *nwritten=1\n TRACE wasi_common::hostcalls                                &gt;      | errno=ESUCCESS (No error occurred. System call completed successfully.)\n TRACE wasi_common::hostcalls_impl::fs                       &gt; fd_write(fd=1, iovs_ptr=0xffe08, iovs_len=1, nwritten=0xffdfc)\nCTRL-D\n TRACE wasi_common::hostcalls_impl::fs                       &gt;      | *nwritten=7\n TRACE wasi_common::hostcalls                                &gt;      | errno=ESUCCESS (No error occurred. System call completed successfully.)\n</pre></div>\n\n\n<p>In other words, it's a regression introduced in #1202. cc @kubkon</p>\n</blockquote>",
        "id": 192293922,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585591098
    }
]