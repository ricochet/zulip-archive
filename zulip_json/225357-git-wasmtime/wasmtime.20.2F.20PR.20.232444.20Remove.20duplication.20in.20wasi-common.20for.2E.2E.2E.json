[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2444\">PR #2444</a> from <code>rm-wig</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit deletes the old <code>snapshot_0</code> implementation of wasi-common,<br>\nalong with the <code>wig</code> crate that was used to generate bindings for it.<br>\nThis then reimplements <code>snapshot_0</code> in terms of<br>\n<code>wasi_snapshot_preview1</code>. There were very few changes between the two<br>\nsnapshots:</p>\n<ul>\n<li>The <code>nlink</code> field of <code>FileStat</code> was increased from 32 to 64 bits.</li>\n<li>The <code>set</code> field of <code>whence</code> was reordered.</li>\n<li>Clock subscriptions in polling dropped their redundant userdata field.</li>\n</ul>\n<p>This makes all of the syscalls relatively straightforward to simply<br>\ndelegate to the next snapshot's implementation. Some trickery happens to<br>\navoid extra cost when dealing with iovecs, but since the memory layout<br>\nof iovecs remained the same this should still work.</p>\n<p>Now that <code>snapshot_0</code> is using wiggle we simply have a trait to<br>\nimplement, and that's implemented for the same <code>WasiCtx</code> that has the<br>\n<code>wasi_snapshot_preview1</code> trait implemented for it as well. While this<br>\ntheoretically means that you could share the file descriptor table<br>\nbetween the two snapshots that's not supported in the generated bindings<br>\njust yet. A separate <code>WasiCtx</code> will be created for each WASI module.<br>\n</p>\n</blockquote>",
        "id": 217656752,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606151966
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2444\">PR #2444</a> from <code>rm-wig</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit deletes the old <code>snapshot_0</code> implementation of wasi-common,<br>\nalong with the <code>wig</code> crate that was used to generate bindings for it.<br>\nThis then reimplements <code>snapshot_0</code> in terms of<br>\n<code>wasi_snapshot_preview1</code>. There were very few changes between the two<br>\nsnapshots:</p>\n<ul>\n<li>The <code>nlink</code> field of <code>FileStat</code> was increased from 32 to 64 bits.</li>\n<li>The <code>set</code> field of <code>whence</code> was reordered.</li>\n<li>Clock subscriptions in polling dropped their redundant userdata field.</li>\n</ul>\n<p>This makes all of the syscalls relatively straightforward to simply<br>\ndelegate to the next snapshot's implementation. Some trickery happens to<br>\navoid extra cost when dealing with iovecs, but since the memory layout<br>\nof iovecs remained the same this should still work.</p>\n<p>Now that <code>snapshot_0</code> is using wiggle we simply have a trait to<br>\nimplement, and that's implemented for the same <code>WasiCtx</code> that has the<br>\n<code>wasi_snapshot_preview1</code> trait implemented for it as well. While this<br>\ntheoretically means that you could share the file descriptor table<br>\nbetween the two snapshots that's not supported in the generated bindings<br>\njust yet. A separate <code>WasiCtx</code> will be created for each WASI module.<br>\n</p>\n</blockquote>",
        "id": 217658697,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606152969
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2444\">PR #2444</a> from <code>rm-wig</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit deletes the old <code>snapshot_0</code> implementation of wasi-common,<br>\nalong with the <code>wig</code> crate that was used to generate bindings for it.<br>\nThis then reimplements <code>snapshot_0</code> in terms of<br>\n<code>wasi_snapshot_preview1</code>. There were very few changes between the two<br>\nsnapshots:</p>\n<ul>\n<li>The <code>nlink</code> field of <code>FileStat</code> was increased from 32 to 64 bits.</li>\n<li>The <code>set</code> field of <code>whence</code> was reordered.</li>\n<li>Clock subscriptions in polling dropped their redundant userdata field.</li>\n</ul>\n<p>This makes all of the syscalls relatively straightforward to simply<br>\ndelegate to the next snapshot's implementation. Some trickery happens to<br>\navoid extra cost when dealing with iovecs, but since the memory layout<br>\nof iovecs remained the same this should still work.</p>\n<p>Now that <code>snapshot_0</code> is using wiggle we simply have a trait to<br>\nimplement, and that's implemented for the same <code>WasiCtx</code> that has the<br>\n<code>wasi_snapshot_preview1</code> trait implemented for it as well. While this<br>\ntheoretically means that you could share the file descriptor table<br>\nbetween the two snapshots that's not supported in the generated bindings<br>\njust yet. A separate <code>WasiCtx</code> will be created for each WASI module.<br>\n</p>\n</blockquote>",
        "id": 217658734,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606152998
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2444\">PR #2444</a> from <code>rm-wig</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit deletes the old <code>snapshot_0</code> implementation of wasi-common,<br>\nalong with the <code>wig</code> crate that was used to generate bindings for it.<br>\nThis then reimplements <code>snapshot_0</code> in terms of<br>\n<code>wasi_snapshot_preview1</code>. There were very few changes between the two<br>\nsnapshots:</p>\n<ul>\n<li>The <code>nlink</code> field of <code>FileStat</code> was increased from 32 to 64 bits.</li>\n<li>The <code>set</code> field of <code>whence</code> was reordered.</li>\n<li>Clock subscriptions in polling dropped their redundant userdata field.</li>\n</ul>\n<p>This makes all of the syscalls relatively straightforward to simply<br>\ndelegate to the next snapshot's implementation. Some trickery happens to<br>\navoid extra cost when dealing with iovecs, but since the memory layout<br>\nof iovecs remained the same this should still work.</p>\n<p>Now that <code>snapshot_0</code> is using wiggle we simply have a trait to<br>\nimplement, and that's implemented for the same <code>WasiCtx</code> that has the<br>\n<code>wasi_snapshot_preview1</code> trait implemented for it as well. While this<br>\ntheoretically means that you could share the file descriptor table<br>\nbetween the two snapshots that's not supported in the generated bindings<br>\njust yet. A separate <code>WasiCtx</code> will be created for each WASI module.<br>\n</p>\n</blockquote>",
        "id": 217662927,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606155042
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2444\">PR #2444</a> from <code>rm-wig</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit deletes the old <code>snapshot_0</code> implementation of wasi-common,<br>\nalong with the <code>wig</code> crate that was used to generate bindings for it.<br>\nThis then reimplements <code>snapshot_0</code> in terms of<br>\n<code>wasi_snapshot_preview1</code>. There were very few changes between the two<br>\nsnapshots:</p>\n<ul>\n<li>The <code>nlink</code> field of <code>FileStat</code> was increased from 32 to 64 bits.</li>\n<li>The <code>set</code> field of <code>whence</code> was reordered.</li>\n<li>Clock subscriptions in polling dropped their redundant userdata field.</li>\n</ul>\n<p>This makes all of the syscalls relatively straightforward to simply<br>\ndelegate to the next snapshot's implementation. Some trickery happens to<br>\navoid extra cost when dealing with iovecs, but since the memory layout<br>\nof iovecs remained the same this should still work.</p>\n<p>Now that <code>snapshot_0</code> is using wiggle we simply have a trait to<br>\nimplement, and that's implemented for the same <code>WasiCtx</code> that has the<br>\n<code>wasi_snapshot_preview1</code> trait implemented for it as well. While this<br>\ntheoretically means that you could share the file descriptor table<br>\nbetween the two snapshots that's not supported in the generated bindings<br>\njust yet. A separate <code>WasiCtx</code> will be created for each WASI module.<br>\n</p>\n</blockquote>",
        "id": 217807127,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606248575
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2444\">PR #2444</a> from <code>rm-wig</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit deletes the old <code>snapshot_0</code> implementation of wasi-common,<br>\nalong with the <code>wig</code> crate that was used to generate bindings for it.<br>\nThis then reimplements <code>snapshot_0</code> in terms of<br>\n<code>wasi_snapshot_preview1</code>. There were very few changes between the two<br>\nsnapshots:</p>\n<ul>\n<li>The <code>nlink</code> field of <code>FileStat</code> was increased from 32 to 64 bits.</li>\n<li>The <code>set</code> field of <code>whence</code> was reordered.</li>\n<li>Clock subscriptions in polling dropped their redundant userdata field.</li>\n</ul>\n<p>This makes all of the syscalls relatively straightforward to simply<br>\ndelegate to the next snapshot's implementation. Some trickery happens to<br>\navoid extra cost when dealing with iovecs, but since the memory layout<br>\nof iovecs remained the same this should still work.</p>\n<p>Now that <code>snapshot_0</code> is using wiggle we simply have a trait to<br>\nimplement, and that's implemented for the same <code>WasiCtx</code> that has the<br>\n<code>wasi_snapshot_preview1</code> trait implemented for it as well. While this<br>\ntheoretically means that you could share the file descriptor table<br>\nbetween the two snapshots that's not supported in the generated bindings<br>\njust yet. A separate <code>WasiCtx</code> will be created for each WASI module.<br>\n</p>\n</blockquote>",
        "id": 217912588,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606324018
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2444#pullrequestreview-541155746\">PR Review</a>.</p>",
        "id": 218321602,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606758973
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2444\">PR #2444</a>.</p>",
        "id": 218325556,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606760870
    }
]