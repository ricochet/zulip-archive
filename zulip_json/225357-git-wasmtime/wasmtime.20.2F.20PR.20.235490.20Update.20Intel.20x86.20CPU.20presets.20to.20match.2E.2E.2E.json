[
    {
        "content": "<p>MozarellaMan opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5490\">PR #5490</a> from <code>update_x86_target_intel_cpu_presets_to_match_llvm</code> to <code>main</code>:</p>\n<blockquote>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[x] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[x] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\nThis is for #5444 </p>\n<p>I decided to just start with the Intel CPUs for now just to get feedback on whether this is an alright way to sync up + update cranelift's to match LLVM's presets. I used <a href=\"https://github.com/llvm/llvm-project/blob/d4493dd1ed58ac3f1eab0c4ca6e363e2b15bfd1c/llvm/lib/Target/X86/X86.td#L1300-L1643\">this</a> (thanks @bjorn3!) as a reference for the features and presets used by LLVM.</p>\n<h2>Changes</h2>\n<ul>\n<li>added <code>Copy, Clone</code> derive to <code>PresetIndex</code> to enable composing presets multiple times</li>\n<li>added missing x86 Intel CPU presets (old and new)</li>\n<li>updated existing presets with apparently missing features (<code>cannonlake</code> and <code>icelake</code>)</li>\n</ul>\n<h2>Notes</h2>\n<ul>\n<li>What's the best way to test this? Can it be meaningfully tested?</li>\n<li>Should I include links to the exact feature lists for each preset as a comment with each preset or just one link at the top of all the presets?</li>\n<li>In some cases, LLVM has a different name for the same architecture feature e.g. LLVM has <code>FeatureDQI</code>, cranelift has <code>has_avx512dq</code> - this led to me updating the existing presets with features that those archtectures have (or at least LLVM says they have those features!)<br>\n</li>\n</ul>\n</blockquote>",
        "id": 317994974,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672081497
    },
    {
        "content": "<p>MozarellaMan updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5490\">PR #5490</a> from <code>update_x86_target_intel_cpu_presets_to_match_llvm</code> to <code>main</code>.</p>",
        "id": 318093796,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672146406
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5490#discussion_r1061124056\">PR review comment</a>:</p>\n<blockquote>\n<p>Is this duplicated from up above?</p>\n</blockquote>",
        "id": 319320988,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672805969
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5490#pullrequestreview-1235334701\">PR review</a>.</p>",
        "id": 319320989,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672805969
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5490#pullrequestreview-1235334701\">PR review</a>.</p>",
        "id": 319320990,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672805969
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5490#pullrequestreview-1236406620\">PR review</a>.</p>",
        "id": 319473027,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672866344
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5490#pullrequestreview-1236406620\">PR review</a>.</p>",
        "id": 319473028,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672866344
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5490#discussion_r1061839353\">PR review comment</a>:</p>\n<blockquote>\n<p>Looks like LLVM has an alias for <code>silvermont</code> called <code>slm</code> which I guess we should mirror here.</p>\n</blockquote>",
        "id": 319473031,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672866345
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5490#discussion_r1061835768\">PR review comment</a>:</p>\n<blockquote>\n<p>I think there's a mismatch between how we specify features and how LLVM does it.</p>\n<p>Apparently LLVM's <code>FeatureSSE41</code> implies <code>FeatureSSSE3</code> which implies <code>FeatureSSE3</code>, for example. Our boolean settings don't imply other settings. Instead, if you look at the <code>nehalem</code> preset for example, it's specified as <code>preset!(has_sse3 &amp;&amp; has_ssse3 &amp;&amp; has_sse41 &amp;&amp; ...)</code>.</p>\n<p>So these definitions for <code>core2</code> and <code>penryn</code> are both missing <code>has_sse3</code>, and <code>penryn</code> is missing <code>has_ssse3</code>. Later presets are similarly missing implied features.</p>\n<p>I'm not sure whether it's better to follow the existing pattern and duplicate these implied feature sets everywhere, or to introduce new presets for features which are related in this way:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">sse3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">settings</span><span class=\"p\">.</span><span class=\"n\">add_preset</span><span class=\"p\">(</span><span class=\"s\">\"sse3\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"SSE3 and earlier.\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">preset</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">has_sse3</span><span class=\"p\">));</span><span class=\"w\"></span>\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">ssse3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">settings</span><span class=\"p\">.</span><span class=\"n\">add_preset</span><span class=\"p\">(</span><span class=\"s\">\"ssse3\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"SSSE3 and earlier.\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">preset</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">sse3</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"n\">has_ssse3</span><span class=\"p\">));</span><span class=\"w\"></span>\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">sse41</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">settings</span><span class=\"p\">.</span><span class=\"n\">add_preset</span><span class=\"p\">(</span><span class=\"s\">\"sse41\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"SSE4.1 and earlier.\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">preset</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">ssse3</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"n\">has_sse41</span><span class=\"p\">));</span><span class=\"w\"></span>\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">sse42</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">settings</span><span class=\"p\">.</span><span class=\"n\">add_preset</span><span class=\"p\">(</span><span class=\"s\">\"sse42\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"SSE4.2 and earlier.\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">preset</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">sse41</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"n\">has_sse42</span><span class=\"p\">));</span><span class=\"w\"></span>\n<span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"n\">settings</span><span class=\"p\">.</span><span class=\"n\">add_preset</span><span class=\"p\">(</span><span class=\"s\">\"nocona\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"Nocona microarchitecture.\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">preset</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">sse3</span><span class=\"p\">));</span><span class=\"w\"></span>\n<span class=\"n\">settings</span><span class=\"p\">.</span><span class=\"n\">add_preset</span><span class=\"p\">(</span><span class=\"s\">\"core2\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"Core 2 microarchitecture.\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">preset</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">ssse3</span><span class=\"p\">));</span><span class=\"w\"></span>\n<span class=\"n\">settings</span><span class=\"p\">.</span><span class=\"n\">add_preset</span><span class=\"p\">(</span><span class=\"s\">\"penryn\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"Penryn microarchitecture.\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">preset</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">sse41</span><span class=\"p\">));</span><span class=\"w\"></span>\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">nehalem</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">settings</span><span class=\"p\">.</span><span class=\"n\">add_preset</span><span class=\"p\">(</span><span class=\"s\">\"nehalem\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"Nehalem microarchitecture.\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">preset</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">sse42</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"n\">has_popcnt</span><span class=\"p\">));</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Either way the flattened list of features is included in comments in the generated Rust in <code>target/*/build/cranelift-codegen-*/out/settings-x86.rs</code>, which is nice for double-checking the results.</p>\n<p>(@fitzgen, perhaps you have opinions on this?)</p>\n</blockquote>",
        "id": 319473032,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672866345
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5490#discussion_r1061848574\">PR review comment</a>:</p>\n<blockquote>\n<p>Let's match how LLVM defines Haswell. Apparently we were missing AVX/AVX2 and FMA.</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>        preset!(ivy_bridge &amp;&amp; has_avx2 &amp;&amp; has_bmi1 &amp;&amp; has_bmi2 &amp;&amp; has_fma &amp;&amp; has_lzcnt),\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 319473033,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672866345
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5490#discussion_r1061849454\">PR review comment</a>:</p>\n<blockquote>\n<p>Since LLVM claims Haswell included FMA, we can drop it from the preset for Broadwell.</p>\n</blockquote>",
        "id": 319473034,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672866345
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5490#discussion_r1061874212\">PR review comment</a>:</p>\n<blockquote>\n<p>I appreciate that you're keeping the preset with the <code>icelake</code> name that we used previously. But let's do something more like this to emphasize that it's a compatibility alias, not from LLVM:</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">icelake_client</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">settings</span><span class=\"p\">.</span><span class=\"n\">add_preset</span><span class=\"p\">(</span><span class=\"s\">\"icelake-client\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.,</span><span class=\"w\"> </span><span class=\"n\">preset</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">cannonlake</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"n\">has_avx512bitalg</span><span class=\"p\">));</span><span class=\"w\"></span>\n<span class=\"c1\">// LLVM doesn't use the name \"icelake\" but Cranelift did in the past; alias it</span>\n<span class=\"n\">settings</span><span class=\"p\">.</span><span class=\"n\">add_preset</span><span class=\"p\">(</span><span class=\"s\">\"icelake\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.,</span><span class=\"w\"> </span><span class=\"n\">preset</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">icelake_client</span><span class=\"p\">));</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 319473035,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672866345
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5490#discussion_r1061869690\">PR review comment</a>:</p>\n<blockquote>\n<p>Yeah, this copy of the <code>alderlake</code> definition should be deleted. But LLVM is confusing here because it defines Alder Lake between Sapphire Rapids and Raptor Lake, but uses it as a base for earlier microarchitectures. Maybe leave a comment here noting it was defined above, and a comment at the definition above noting that LLVM defines it later.</p>\n</blockquote>",
        "id": 319473036,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672866346
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5490#discussion_r1061876937\">PR review comment</a>:</p>\n<blockquote>\n<p>If I've read the LLVM tables correctly, Nocona is the first Intel 64-bit microarchitecture, so these are the 32-bit targets I'd like to remove.</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>    // Netburst\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 319473037,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672866346
    },
    {
        "content": "<p>MozarellaMan updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5490\">PR #5490</a> from <code>update_x86_target_intel_cpu_presets_to_match_llvm</code> to <code>main</code>.</p>",
        "id": 320807080,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673475039
    },
    {
        "content": "<p>MozarellaMan submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5490#pullrequestreview-1244683344\">PR review</a>.</p>",
        "id": 320807081,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673475039
    },
    {
        "content": "<p>MozarellaMan created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5490#discussion_r1067504965\">PR review comment</a>:</p>\n<blockquote>\n<p>Personally, I would prefer the features implying the others - it makes sense now that you pointed it out. The added description in the setting preset makes that more obivous.</p>\n</blockquote>",
        "id": 320807126,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673475056
    },
    {
        "content": "<p>MozarellaMan updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5490\">PR #5490</a> from <code>update_x86_target_intel_cpu_presets_to_match_llvm</code> to <code>main</code>.</p>",
        "id": 320808370,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673475624
    },
    {
        "content": "<p>MozarellaMan updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5490\">PR #5490</a> from <code>update_x86_target_intel_cpu_presets_to_match_llvm</code> to <code>main</code>.</p>",
        "id": 320809068,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673475953
    },
    {
        "content": "<p>MozarellaMan updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5490\">PR #5490</a> from <code>update_x86_target_intel_cpu_presets_to_match_llvm</code> to <code>main</code>.</p>",
        "id": 320809343,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673476064
    },
    {
        "content": "<p>MozarellaMan updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5490\">PR #5490</a> from <code>update_x86_target_intel_cpu_presets_to_match_llvm</code> to <code>main</code>.</p>",
        "id": 320811194,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673476828
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5490#pullrequestreview-1244763925\">PR review</a>.</p>",
        "id": 320817304,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673480052
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5490#pullrequestreview-1244763925\">PR review</a>.</p>",
        "id": 320817305,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673480052
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5490#discussion_r1067561031\">PR review comment</a>:</p>\n<blockquote>\n<p>If I'm reading the LLVM tables correctly, it exposes this as _both_ \"slm\" and \"silvermont\", but defines them identically. So we should do the same. I think it makes sense to use the longer name \"silvermont\" as the let-bound preset, and define the \"slm\" preset in terms of \"silvermont\".</p>\n</blockquote>",
        "id": 320817306,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673480052
    },
    {
        "content": "<p>MozarellaMan updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5490\">PR #5490</a> from <code>update_x86_target_intel_cpu_presets_to_match_llvm</code> to <code>main</code>.</p>",
        "id": 321242616,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673638783
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5490#pullrequestreview-1248436875\">PR review</a>.</p>",
        "id": 321251111,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673641793
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5490#discussion_r1069998982\">PR review comment</a>:</p>\n<blockquote>\n<p>I think the duplicate definition of <code>alderlake</code> is the last issue remaining here. Once that's fixed I think this PR is ready!</p>\n</blockquote>",
        "id": 321251112,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673641794
    },
    {
        "content": "<p>MozarellaMan updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5490\">PR #5490</a> from <code>update_x86_target_intel_cpu_presets_to_match_llvm</code> to <code>main</code>.</p>",
        "id": 321252037,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673642106
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5490#pullrequestreview-1248478050\">PR review</a>.</p>",
        "id": 321253251,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673642550
    },
    {
        "content": "<p>jameysharp has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5490\">PR #5490</a>.</p>",
        "id": 321253464,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673642617
    },
    {
        "content": "<p>jameysharp merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5490\">PR #5490</a>.</p>",
        "id": 321256674,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673643758
    }
]