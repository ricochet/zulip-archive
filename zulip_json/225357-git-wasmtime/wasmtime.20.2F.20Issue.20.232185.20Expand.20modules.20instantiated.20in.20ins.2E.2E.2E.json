[
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2185#issuecomment-686710204\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2185\">Issue #2185</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"fuzzing\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>fitzgen: fuzzing</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 209017997,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1599161294
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2185#issuecomment-689026441\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2185\">Issue #2185</a>:</p>\n<blockquote>\n<p>I thought of doing so yeah, but I figured it'd be simpler to have only one way to ensure limited execution rather than relying on a combination of <code>wasm-opt -ttf</code> implicitly doing this, <code>wasm-smith</code> valid modules implicitly doing this, and <code>wasm-smith</code> possibly invalid modules requiring a thread. The threaded case was the least common denominator in that situation and I didn't think it was all that expensive.</p>\n<p>I also wasn't really sure how this would impact oss-fuzz. It seems like it's easier if we only have one fuzz target but if it runs more in parallel then we could get more benefit from more of them. It felt a little overkill though to write more fuzz targets for tweaking what could also be a fuzz input option. I'm fine either way though! Do you prefer a separate fuzz target for this?</p>\n</blockquote>",
        "id": 209418172,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1599586060
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2185#issuecomment-689033528\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2185\">Issue #2185</a>:</p>\n<blockquote>\n<p>I think it is worth having a fuzz target that uses <code>ensure_termination</code> and not a timer thread because it is deterministic.</p>\n<p>Can we make both <code>instantiate_with_config</code> and <code>instantiate_with_timeout</code>?</p>\n</blockquote>",
        "id": 209419811,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1599586906
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2185#issuecomment-689040485\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2185\">Issue #2185</a>:</p>\n<blockquote>\n<p>Ok yeah determinism seems reasonable, I'll make that change soon</p>\n</blockquote>",
        "id": 209421623,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1599587725
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2185#issuecomment-689145619\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2185\">Issue #2185</a>:</p>\n<blockquote>\n<p>Ok, updated!</p>\n</blockquote>",
        "id": 209446691,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1599600489
    }
]