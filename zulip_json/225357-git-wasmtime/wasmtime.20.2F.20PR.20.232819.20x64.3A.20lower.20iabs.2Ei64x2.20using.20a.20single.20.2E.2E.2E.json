[
    {
        "content": "<p>abrown opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2819\">PR #2819</a> from <code>inst-format-3</code> to <code>main</code>:</p>\n<blockquote>\n<p>This introduces the mechanism for encoding EVEX instructions to the new backend (ported with slight changes from the old) and then uses it to improve the lowering of <code>iabs.i64x2</code> from 5 instructions to 1 instruction (i.e. <code>VPABSQ</code>).</p>\n</blockquote>",
        "id": 233697451,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617903913
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2819\">PR #2819</a>.</p>",
        "id": 233699797,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617904635
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> and <a href=\"https://github.com/bnjbvr\">bnjbvr</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2819\">PR #2819</a>.</p>",
        "id": 233699804,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617904636
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a>, <a href=\"https://github.com/bnjbvr\">bnjbvr</a> and <a href=\"https://github.com/jlb6740\">jlb6740</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2819\">PR #2819</a>.</p>",
        "id": 233699820,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617904642
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2819\">PR #2819</a> from <code>inst-format-3</code> to <code>main</code>.</p>",
        "id": 234378660,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618339010
    },
    {
        "content": "<p><strong>abrown</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2819\">PR #2819</a> as ready for review.</p>",
        "id": 234381938,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618340408
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2819#pullrequestreview-634933727\">PR Review</a>.</p>",
        "id": 234382722,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618340706
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2819#discussion_r612705639\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I wish there were a way to avoid this here and instead specify it up above when necessary--suggestions welcome because I can't think of a great way to do this without rewriting this entire file.</p>\n</blockquote>",
        "id": 234382724,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618340706
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2819\">PR #2819</a> from <code>inst-format-3</code> to <code>main</code>.</p>",
        "id": 234386376,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618342110
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2819#pullrequestreview-636767438\">PR Review</a>.</p>",
        "id": 234690672,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618498547
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2819#pullrequestreview-636767438\">PR Review</a>.</p>",
        "id": 234690673,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618498547
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2819#discussion_r614135868\">PR Review Comment</a>:</p>\n<blockquote>\n<p>since <code>value &lt;= mask</code> and <code>mask</code> is all ones, we don't need the <code>value &amp; mask</code> here and could just use <code>value</code></p>\n</blockquote>",
        "id": 234690675,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618498547
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2819#discussion_r614128159\">PR Review Comment</a>:</p>\n<blockquote>\n<p>nit: <code>followed</code></p>\n</blockquote>",
        "id": 234690676,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618498547
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2819#discussion_r614137148\">PR Review Comment</a>:</p>\n<blockquote>\n<p>So the way it works right now is that it goes from the <code>RealReg</code> hardware encoding into an u8 then into this <code>Register</code> structure. Could instead the methods taking <code>Register</code> take a <code>RealReg</code> instead?</p>\n</blockquote>",
        "id": 234690677,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618498547
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2819#discussion_r614139617\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Isn't there already another <code>CodeSink</code> trait somewhere in this crate too? I wonder if we could avoid this one, to reduce the number of concepts, and just read out of the <code>MachBuffer</code> internal vector, for testing purposes?</p>\n</blockquote>",
        "id": 234690679,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618498547
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2819#discussion_r614127931\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Instead of having a single array with all the testing tuples, we could have several ones, one for each Flag combination we'd like to test. Then we could refactor this function so that it takes <code>flags</code> from a parameter and an array of test tuples, or something like this?</p>\n</blockquote>",
        "id": 234690680,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618498547
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2819#discussion_r614143849\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Also, maybe not something to worry too much about, since there's no actual instruction selection test here. What was your concern?</p>\n</blockquote>",
        "id": 234690681,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618498547
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2819#pullrequestreview-636830071\">PR Review</a>.</p>",
        "id": 234698460,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618500634
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2819#discussion_r614173671\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Yes, <a href=\"https://github.com/bytecodealliance/wasmtime/blob/aa259ff92a4cb04762b88f9485f817995ecbc680/cranelift/codegen/src/binemit/mod.rs#L127-L171\">here</a> but as you can see it would force this module to implement things it has no idea about and I wasn't too sure the old backend trait would be around forever. Also, I am trying to keep this module as dependency-free as possible so that in the future it could be used elsewhere--if I want to use this in the future to just encode instructions I won't want or need the additional <code>MachBuffer</code> methods and fields.</p>\n</blockquote>",
        "id": 234698461,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618500634
    },
    {
        "content": "<p>abrown edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2819#discussion_r614173671\">PR Review Comment</a>.</p>",
        "id": 234698490,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618500645
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2819#discussion_r614176261\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I was under the impression that Rust will pare away those abstractions so I didn't worry too much about overhead. I am trying to keep this encoding code dependency-free (especially of external dependencies) so, like with <code>CodeSink</code>, I am using slightly different types/traits.</p>\n</blockquote>",
        "id": 234699281,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618500830
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2819#pullrequestreview-636833568\">PR Review</a>.</p>",
        "id": 234699282,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618500830
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2819#pullrequestreview-636836564\">PR Review</a>.</p>",
        "id": 234699889,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618500999
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2819#discussion_r614178597\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Yeah, I guess that's true. It just looked weird to lump the AVX512 flag in with the baseline flags. Maybe in a follow-on PR I will try to factor out the \"check these instructions\" code so that I can do as you suggest above.</p>\n</blockquote>",
        "id": 234699891,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618500999
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2819\">PR #2819</a> from <code>inst-format-3</code> to <code>main</code>.</p>",
        "id": 234699968,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618501029
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2819\">PR #2819</a> from <code>inst-format-3</code> to <code>main</code>.</p>",
        "id": 234700755,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618501283
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2819#pullrequestreview-636950421\">PR Review</a>.</p>",
        "id": 234719381,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618507732
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2819#discussion_r614262361\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Maybe we could name the trait something else -- <code>ByteSink</code> or something?</p>\n<p>It might even make sense to do the factoring in the other direction -- split out <code>ByteSink</code> from <code>CodeSink</code> and make the former a constraint on the latter (<code>trait CodeSink : ByteSink { ... }</code> with just the additional methods), but that's probably out-of-scope for this PR...</p>\n</blockquote>",
        "id": 234719382,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618507732
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2819\">PR #2819</a> from <code>inst-format-3</code> to <code>main</code>.</p>",
        "id": 234720633,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618508171
    },
    {
        "content": "<p>abrown merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2819\">PR #2819</a>.</p>",
        "id": 234732271,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618512839
    }
]