[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4204\">PR #4204</a> from <code>store-id</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit adds a <code>StoreId</code> type to uniquely identify a store<br>\ninternally within Wasmtime. This hasn't been created previously as it<br>\nwas never really needed but I've run across a case for its usage in the<br>\ncomponent model so I've gone ahead and split out a commit to add this type.</p>\n<p>While I was here in this file I opted to improve some other<br>\nmiscellaneous things as well:</p>\n<ul>\n<li>\n<p>Notes were added to the <code>Index</code> impls that unchecked indexing could be<br>\n  used in theory if we ever need it one day.</p>\n</li>\n<li>\n<p>The check in <code>Index</code> for the same store should now be a bit lighter on<br>\n  codegen where instead of having a <code>panic!()</code> in the codegen for each<br>\n<code>Index</code> there's now an out-of-line version which is <code>#[cold]</code>. This<br>\n  should improve codegen as calling a function with no arguments is<br>\n  slighly more efficient than calling the panic macro with one string argument.</p>\n</li>\n<li>\n<p>An <code>assert!</code> guarded with a <code>cfg(debug_assertions)</code> was changed to a<br>\n<code>debug_assert!</code>.</p>\n</li>\n<li>\n<p>Allocation of a <code>StoreId</code> was refactored to a method on the <code>StoreId</code><br>\n  itself.</p>\n</li>\n</ul>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 284653478,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654109166
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4204\">PR #4204</a>.</p>",
        "id": 284653555,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654109220
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4204#pullrequestreview-992530726\">PR review</a>.</p>",
        "id": 284654816,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654109852
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4204#pullrequestreview-992530726\">PR review</a>.</p>",
        "id": 284654817,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654109852
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4204#discussion_r887193359\">PR review comment</a>:</p>\n<blockquote>\n<p>s/stores/store/</p>\n</blockquote>",
        "id": 284654818,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654109852
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4204#discussion_r887199853\">PR review comment</a>:</p>\n<blockquote>\n<p>I think this can be a <code>Relaxed</code> fetch_add, because the sequence in which IDs are allocated doesn't matter (every ID is as good as any other and is opaque), so there's no need to synchronize this allocation step with respect to any other loads/stores. I wrote a similar justification over <a href=\"https://github.com/bytecodealliance/wasmtime/blob/2a4851ad2b5d77fce41597776157270187fae258/crates/runtime/src/module_id.rs#L28-L39\">here</a> for <code>CompiledModuleId</code>, I guess we could just point to that as justification.</p>\n</blockquote>",
        "id": 284654819,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654109852
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4204#discussion_r887196124\">PR review comment</a>:</p>\n<blockquote>\n<p>\"... inserted into a store\" --&gt; add \"and stores are never shrunk, so an index once valid is always valid\", just for extra clarity?</p>\n</blockquote>",
        "id": 284654820,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654109852
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4204\">PR #4204</a> from <code>store-id</code> to <code>main</code>.</p>",
        "id": 284655464,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654110150
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4204\">PR #4204</a> from <code>store-id</code> to <code>main</code>.</p>",
        "id": 284656675,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654110814
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4204\">PR #4204</a>.</p>",
        "id": 284660415,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654112783
    }
]