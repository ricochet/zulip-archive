[
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778\">PR #9778</a>.</p>",
        "id": 487314094,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733854535
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778\">PR #9778</a>.</p>",
        "id": 487314096,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733854535
    },
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778\">PR #9778</a> from <code>cfallin:custom-code-publisher</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>In some <code>no_std</code> environments, virtual memory usage is <em>generally</em> prohibited for performance-predictability reasons, but the MMU hardware is still in use for permissions (e.g., <code>W^X</code> write-xor-execute). Occasional changes to page mapping permissions are thus necessary when new modules are loaded dynamically, and are acceptable in that context. Wasmtime needs a way to support \"publishing\" code (making it executable) in such environments.</p>\n<p>Rather than try to segment the <code>signals-based-traps</code> divide further, and piece out the code-publishing parts from the heap parts, and backdoor a path to <code>mprotect</code> in an otherwise <code>no_std</code> build, in this PR I have opted to add a trait an impl of which the embedder can provide to the <code>Config</code> to implement custom actions for \"code publish\". This otherwise operates properly in a<br>\nno-<code>signals-based-traps</code> environment, e.g., the module backing memory itself is regularly allocated rather than mmap'd (but is now aligned to the degree requested by the trait impl).</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 487314097,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733854535
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778\">PR #9778</a>.</p>",
        "id": 487314098,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733854535
    },
    {
        "content": "<p>cfallin edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778\">PR #9778</a>:</p>\n<blockquote>\n<p>In some <code>no_std</code> environments, virtual memory usage is <em>generally</em> prohibited for performance-predictability reasons, but the MMU hardware is still in use for permissions (e.g., <code>W^X</code> write-xor-execute). Occasional changes to page mapping permissions are thus necessary when new modules are loaded dynamically, and are acceptable in that context. Wasmtime needs a way to support \"publishing\" code (making it executable) in such environments.</p>\n<p>Rather than try to segment the <code>signals-based-traps</code> divide further, and piece out the code-publishing parts from the heap parts, and backdoor a path to <code>mprotect</code> in an otherwise <code>no_std</code> build, in this PR I have opted to add a trait an impl of which the embedder can provide to the <code>Config</code> to implement custom actions for \"code publish\". This otherwise operates properly in a no-<code>signals-based-traps</code> environment, e.g., the module backing memory itself is regularly allocated rather than mmap'd (but is now aligned to the degree requested by the trait impl).</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 487314128,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733854548
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778#pullrequestreview-2493228864\">PR review</a>.</p>",
        "id": 487316222,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733855299
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778#discussion_r1878618790\">PR review comment</a>:</p>\n<blockquote>\n<p>I think it might make sense to augment the previous constructor instead of adding a new one in this case as it feels reasonable to have every caller pass in the alignment</p>\n</blockquote>",
        "id": 487316223,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733855299
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778#discussion_r1878614581\">PR review comment</a>:</p>\n<blockquote>\n<p>WDYT about removing this feature and unconditionally including the support from this PR? I don't think LLVM will propagate that the trait object is <code>None</code> all that well but the cost is a few virtual dispatches in a few places which doesn't seem too bad, so this seems reasonable to me to include by default.</p>\n<p>I ask because cargo features to me are pretty pricey in terms of maintenance due to extra CI and understanding all the <code>#[cfg]</code>, so in the abstract we would have zero Cargo features. They're basically required for extra platform requirements though which is why we have a lot, though, but this use case isn't related (in that sense) to gating wasmtime's requirement on additional platform requirements.</p>\n</blockquote>",
        "id": 487316224,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733855299
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778#discussion_r1878620619\">PR review comment</a>:</p>\n<blockquote>\n<p>I think it might be better to explicitly request aligned memory from the system allocator rather than performing manual alignment here. That means we can't use <code>Vec&lt;u8&gt;</code> because it won't deallocate properly, but I also think that's reasonable since we don't need any growth-related aspects of <code>Vec</code> here.</p>\n</blockquote>",
        "id": 487316225,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733855299
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778#pullrequestreview-2493248402\">PR review</a>.</p>",
        "id": 487317086,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733855569
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778#discussion_r1878626833\">PR review comment</a>:</p>\n<blockquote>\n<p>Unfortunately that's not an option in my embedding: memory must come from the <code>alloc</code> allocator.</p>\n</blockquote>",
        "id": 487317087,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733855569
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778#pullrequestreview-2493251468\">PR review</a>.</p>",
        "id": 487317232,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733855625
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778#discussion_r1878628647\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah, actually, do you mean the lower-level <code>alloc</code> APIs? I'll look into that.</p>\n</blockquote>",
        "id": 487317233,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733855626
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778#pullrequestreview-2493253351\">PR review</a>.</p>",
        "id": 487317457,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733855690
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778#discussion_r1878629862\">PR review comment</a>:</p>\n<blockquote>\n<p>Sure, happy to fold it in; was worried the extra checks might cause some consternation but you're right, it's probably not too bad (and loading modules is relatively not a hot path).</p>\n</blockquote>",
        "id": 487317458,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733855690
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778#pullrequestreview-2493256913\">PR review</a>.</p>",
        "id": 487317829,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733855808
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778#discussion_r1878632048\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah yes I mean <a href=\"https://doc.rust-lang.org/stable/std/alloc/fn.alloc.html\">calling <code>alloc</code> directly</a> and then having a custom collection which calls <code>Drop</code> as well (since <code>Vec&lt;u8&gt;</code> can't be used)</p>\n</blockquote>",
        "id": 487317830,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733855808
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778\">PR #9778</a>.</p>",
        "id": 487319810,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733856507
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778#pullrequestreview-2493284152\">PR review</a>.</p>",
        "id": 487319915,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733856548
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778#discussion_r1878647926\">PR review comment</a>:</p>\n<blockquote>\n<p>Done.</p>\n</blockquote>",
        "id": 487319917,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733856548
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778\">PR #9778</a>.</p>",
        "id": 487324459,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733858144
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778#pullrequestreview-2493353952\">PR review</a>.</p>",
        "id": 487324551,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733858166
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778#discussion_r1878692957\">PR review comment</a>:</p>\n<blockquote>\n<p>Done!</p>\n</blockquote>",
        "id": 487324553,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733858166
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778#pullrequestreview-2493354233\">PR review</a>.</p>",
        "id": 487324567,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733858175
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778#discussion_r1878693129\">PR review comment</a>:</p>\n<blockquote>\n<p>Done.</p>\n</blockquote>",
        "id": 487324568,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733858175
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778#issuecomment-2532660041\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778\">PR #9778</a>:</p>\n<blockquote>\n<p>Updated, thanks!</p>\n</blockquote>",
        "id": 487324582,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733858181
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778\">PR #9778</a>.</p>",
        "id": 487325596,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733858638
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778\">PR #9778</a>.</p>",
        "id": 487326899,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733859123
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778#pullrequestreview-2493420572\">PR review</a>:</p>\n<blockquote>\n<p>Would it be possible to add a test exercising this trait as well? Perhaps x86_64-linux-specific to avoid rewriting a bunch of logic to make things executable or something like that.</p>\n</blockquote>",
        "id": 487329911,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733860332
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778#discussion_r1878733121\">PR review comment</a>:</p>\n<blockquote>\n<p>This is already stored as-is in <code>Config</code> so might be able to access from there (stored above) instead of also storing here too?</p>\n</blockquote>",
        "id": 487329912,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733860332
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778#discussion_r1878737686\">PR review comment</a>:</p>\n<blockquote>\n<p>I think <code>len</code> can be dropped here in favor of <code>layout.size()</code>?</p>\n</blockquote>",
        "id": 487329913,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733860332
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778#discussion_r1878734206\">PR review comment</a>:</p>\n<blockquote>\n<p>Would it be possible to return <code>Option&lt;&amp;dyn ...&gt;</code> here to avoid forcing the clone on callers? Or perhaps <code>Option&lt;&amp;Arc&lt;dyn ...&gt;&gt;</code> if callers should optionally have the ability to create an owned copy</p>\n</blockquote>",
        "id": 487329914,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733860332
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778#discussion_r1878736519\">PR review comment</a>:</p>\n<blockquote>\n<p>Would <code>SendSyncPtr</code> suffice for this?</p>\n</blockquote>",
        "id": 487329915,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733860332
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778#discussion_r1878738998\">PR review comment</a>:</p>\n<blockquote>\n<p>I think this may not work for the use case of combining <code>CustomCodeMemory</code> and compilation at runtime, so the <code>Engine</code> and its custom alignment might need to be plumbed down here?</p>\n</blockquote>",
        "id": 487329916,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733860332
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778#issuecomment-2532962734\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778\">PR #9778</a>:</p>\n<blockquote>\n<h4>Label Messager: wasmtime:config</h4>\n<p>It looks like you are changing Wasmtime's configuration options. Make sure to<br>\ncomplete this check list:</p>\n<ul>\n<li>\n<p>[ ] If you added a new <code>Config</code> method, you wrote extensive documentation for<br>\n      it.</p>\n<p>&lt;details&gt;</p>\n<p>Our documentation should be of the following form:</p>\n<p>```text<br>\nShort, simple summary sentence.</p>\n<p>More details. These details can be multiple paragraphs. There should be<br>\ninformation about not just the method, but its parameters and results as<br>\nwell.</p>\n<p>Is this method fallible? If so, when can it return an error?</p>\n<p>Can this method panic? If so, when does it panic?</p>\n<h1>Example</h1>\n<p>Optional example here.<br>\n```</p>\n<p>&lt;/details&gt;</p>\n</li>\n<li>\n<p>[ ] If you added a new <code>Config</code> method, or modified an existing one, you<br>\n  ensured that this configuration is exercised by the fuzz targets.</p>\n<p>&lt;details&gt;</p>\n<p>For example, if you expose a new strategy for allocating the next instance<br>\nslot inside the pooling allocator, you should ensure that at least one of our<br>\nfuzz targets exercises that new strategy.</p>\n<p>Often, all that is required of you is to ensure that there is a knob for this<br>\nconfiguration option in [<code>wasmtime_fuzzing::Config</code>][fuzzing-config] (or one<br>\nof its nested <code>struct</code>s).</p>\n<p>Rarely, this may require authoring a new fuzz target to specifically test this<br>\nconfiguration. See [our docs on fuzzing][fuzzing-docs] for more details.</p>\n<p>&lt;/details&gt;</p>\n</li>\n<li>\n<p>[ ] If you are enabling a configuration option by default, make sure that it<br>\n  has been fuzzed for at least two weeks before turning it on by default.</p>\n</li>\n</ul>\n<p>[fuzzing-config]: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/ca0e8d0a1d8cefc0496dba2f77a670571d8fdcab/crates/fuzzing/src/generators.rs#L182-L194\">https://github.com/bytecodealliance/wasmtime/blob/ca0e8d0a1d8cefc0496dba2f77a670571d8fdcab/crates/fuzzing/src/generators.rs#L182-L194</a><br>\n[fuzzing-docs]: <a href=\"https://docs.wasmtime.dev/contributing-fuzzing.html\">https://docs.wasmtime.dev/contributing-fuzzing.html</a></p>\n<hr>\n<p>&lt;details&gt;</p>\n<p>To modify this label's message, edit the &lt;code&gt;.github/label-messager/wasmtime-config.md&lt;/code&gt; file.</p>\n<p>To add new label messages or remove existing label messages, edit the<br>\n&lt;code&gt;.github/label-messager.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/label-messager-action\">Learn more.</a></p>\n<p>&lt;/details&gt;</p>\n</blockquote>",
        "id": 487346414,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733867107
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778\">PR #9778</a>.</p>",
        "id": 487351347,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733869667
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778#pullrequestreview-2493814835\">PR review</a>.</p>",
        "id": 487351354,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733869671
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778#discussion_r1879002257\">PR review comment</a>:</p>\n<blockquote>\n<p>Done!</p>\n</blockquote>",
        "id": 487351355,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733869671
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778#pullrequestreview-2493814914\">PR review</a>.</p>",
        "id": 487351364,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733869674
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778#discussion_r1879002310\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah, goodness, our crate is a veritable toy-store of useful utilities. I'm not sure how I didn't notice that -- thanks, reused!</p>\n</blockquote>",
        "id": 487351365,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733869674
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778#pullrequestreview-2493814997\">PR review</a>.</p>",
        "id": 487351372,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733869678
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778#discussion_r1879002363\">PR review comment</a>:</p>\n<blockquote>\n<p>Done!</p>\n</blockquote>",
        "id": 487351373,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733869678
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778#pullrequestreview-2493815086\">PR review</a>.</p>",
        "id": 487351380,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733869682
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778#discussion_r1879002419\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah, right, good point -- updated.</p>\n</blockquote>",
        "id": 487351381,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733869682
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778\">PR #9778</a>.</p>",
        "id": 487351930,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733869982
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778\">PR #9778</a>.</p>",
        "id": 487352740,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733870383
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778\">PR #9778</a>.</p>",
        "id": 487357243,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733872905
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778\">PR #9778</a>.</p>",
        "id": 487358864,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733873875
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778#pullrequestreview-2493937908\">PR review</a>.</p>",
        "id": 487358959,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733873926
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778#discussion_r1879080392\">PR review comment</a>:</p>\n<blockquote>\n<p>Done -- this was slightly gnarly to plumb through (required an extra <code>State</code> arg on the <code>FinishedObject</code> trait in <code>environ</code> and propagated through all the delegated builder stuff and cache handling and ...) but seems to work.</p>\n</blockquote>",
        "id": 487358960,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733873926
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778#issuecomment-2533227430\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778\">PR #9778</a>:</p>\n<blockquote>\n<p>Updated, thanks for feedback! Added a test that uses <code>rustix</code> on non-Windows targets to delegate to <code>mprotect</code> (\"custom but actually the same as always\" implementation).</p>\n</blockquote>",
        "id": 487359017,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733873978
    },
    {
        "content": "<p>cfallin has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778\">PR #9778</a>.</p>",
        "id": 487359378,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733874205
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778\">PR #9778</a>.</p>",
        "id": 487359723,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733874415
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9778\">PR #9778</a>.</p>",
        "id": 487362441,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733875969
    }
]