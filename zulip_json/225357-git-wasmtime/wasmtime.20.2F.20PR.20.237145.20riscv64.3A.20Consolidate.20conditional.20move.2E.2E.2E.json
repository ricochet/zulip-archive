[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7145\">PR #7145</a> from <code>alexcrichton:rv64-refactor-select-instrs</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This commit removes the <code>IntSelect</code> and <code>SelectReg</code> pseudo-instructions<br>\nfrom the riscv64 backend and consolidates them into the <code>Select</code><br>\ninstruction. Additionally the <code>Select</code> instruction is updated to subsume<br>\nthe functionality of these two previous instructions. Namely <code>Select</code><br>\nnow operates with <code>ValueRegs</code> to handle i128 and additionally takes an<br>\n<code>IntegerCompare</code> as the condition for the conditional branch to use.</p>\n<p>This commit touches a fair bit of the backend since conditional<br>\nselection of registers was used in quite a few places. The previous<br>\n<code>gen_select_*</code> functions are replaced with new typed equivalents of<br>\n<code>gen_select_{xreg,vreg,freg,regs}</code>. Furthermore new <code>cmp_*</code> helpers were<br>\nadded to create <code>IntegerCompare</code> instructions which sort-of match<br>\nconditional branch instructions, or at least the pnemonics they use.</p>\n<p>Finally since this affected the <code>select</code> CLIF instruction itself I went<br>\nahead and did some refactoring there too. The <code>select</code> instruction<br>\ncreates an <code>IntegerCompare</code> from its argument to use to generate the<br>\nappropriate register selection instruction. This is basically the same<br>\nthing that <code>brif</code> does and now both go through a new helper,<br>\n<code>lower_int_compare</code>, which takes a <code>Value</code> and produces an<br>\n<code>IntegerCompare</code> representing if that value is either true or false.<br>\nThis enables folding an <code>icmp</code> or an <code>fcmp</code>, for example, directly into<br>\na branching instruction.</p>\n</blockquote>",
        "id": 394714810,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696369150
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/afonso360\">afonso360</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7145\">PR #7145</a>.</p>",
        "id": 394714811,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696369150
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7145\">PR #7145</a>.</p>",
        "id": 394714817,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696369151
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7145\">PR #7145</a>.</p>",
        "id": 394714818,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696369151
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7145\">PR #7145</a>.</p>",
        "id": 394736606,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696382162
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7145#pullrequestreview-1657079075\">PR review</a>:</p>\n<blockquote>\n<p>This looks great to me! Thanks! A small suggestion below.</p>\n<p>I also noticed that we are missing support for the <code>{u,s}{min,max}</code> instructions that I thought were implemented, but apparently not. I'll submit a follow up PR to this one adding them.<br>\n</p>\n</blockquote>",
        "id": 394798044,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696411857
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7145#pullrequestreview-1657079075\">PR review</a>:</p>\n<blockquote>\n<p>This looks great to me! Thanks! A small suggestion below.</p>\n<p>I also noticed that we are missing support for the <code>{u,s}{min,max}</code> instructions that I thought were implemented, but apparently not. I'll submit a follow up PR to this one adding them.<br>\n</p>\n</blockquote>",
        "id": 394798045,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696411857
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7145#discussion_r1345490239\">PR review comment</a>:</p>\n<blockquote>\n<p>Another small optimization here is that we could sign extend <code>IntCC::Equal</code> and <code>IntCC::NotEqual</code> for 32bit values. To take advantage of the same sign extend instruction as above.</p>\n</blockquote>",
        "id": 394798047,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696411857
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7145\">PR #7145</a>.</p>",
        "id": 394856365,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696430456
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7145#pullrequestreview-1657712503\">PR review</a>.</p>",
        "id": 394856412,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696430472
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7145#discussion_r1345913232\">PR review comment</a>:</p>\n<blockquote>\n<p>Excellent point!</p>\n<p>I swear I'm eventually getting back towards icmp (slowly!), and I thought this was a neat optimization in your original PR for icmp. I've added it here as well</p>\n</blockquote>",
        "id": 394856413,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696430473
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7145\">PR #7145</a>.</p>",
        "id": 394856435,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696430477
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7145#pullrequestreview-1657727994\">PR review</a>.</p>",
        "id": 394857919,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696430882
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7145#discussion_r1345923946\">PR review comment</a>:</p>\n<blockquote>\n<p>Even without <code>icmp</code> these refactors are very much appreciated!</p>\n</blockquote>",
        "id": 394857920,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696430882
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7145\">PR #7145</a>.</p>",
        "id": 394875987,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696436615
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7145\">PR #7145</a>.</p>",
        "id": 394876006,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696436621
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7145\">PR #7145</a>.</p>",
        "id": 394913811,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696452259
    }
]