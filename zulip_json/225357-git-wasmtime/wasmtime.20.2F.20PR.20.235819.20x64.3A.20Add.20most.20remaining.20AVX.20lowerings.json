[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5819\">PR #5819</a> from <code>more-avx</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit goes through <code>inst.isle</code> and adds a corresponding AVX lowering for most SSE lowerings. I opted to skip instructions where the SSE lowering didn't read/modify a register, such as <code>roundps</code>. I think that AVX will benefit these instructions when there's load-merging since AVX doesn't require alignment, but I've deferred that work to a future PR.</p>\n<p>Otherwise though in this PR I think all (or almost all) of the 3-operand forms of AVX instructions are supported with their SSE counterparts. This should ideally improve codegen slightly by removing register pressure and the need for <code>movdqa</code> between registers. I've attempted to ensure that there's at least one codegen test for all the new instructions.</p>\n<p>As a side note, the recent capstone integration into <code>precise-output</code> tests helped me catch a number of encoding bugs much earlier than otherwise, so I've found that incredibly useful in tests!</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 328521360,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676653861
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5819#pullrequestreview-1303934012\">PR review</a>.</p>",
        "id": 328533310,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676657296
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5819#pullrequestreview-1303934012\">PR review</a>.</p>",
        "id": 328533312,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676657296
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5819#discussion_r1110160028\">PR review comment</a>:</p>\n<blockquote>\n<p>I'm not wild about the argument-dependent regalloc metadata shape here, and ideally I'd prefer us to split out variants like <code>XmmRmiRVexConst</code> that are used instead whenever the intent of an instruction is to produce a constant 0/1/whatever, and that assert the correct setup for that; but that's a separate refactor you don't necessarily need to do in this PR. Just noting as I see the existing pattern expanding...</p>\n</blockquote>",
        "id": 328533313,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676657297
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5819#discussion_r1110137833\">PR review comment</a>:</p>\n<blockquote>\n<p>Given that, could we split this into two enum variants, one with <code>XmmMem</code> and one with <code>GprMem</code>, to keep the type safety?</p>\n</blockquote>",
        "id": 328533314,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676657297
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5819#pullrequestreview-1304047360\">PR review</a>.</p>",
        "id": 328541285,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676659870
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5819#discussion_r1110210841\">PR review comment</a>:</p>\n<blockquote>\n<p>Sure, I was following <a href=\"https://github.com/bytecodealliance/wasmtime/blob/4fc768df36e53d1c9f42db6b3ea52af45a3dc129/cranelift/codegen/src/isa/x64/inst.isle#L356-L358\">this precedent</a> but I can split out too.</p>\n</blockquote>",
        "id": 328541286,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676659870
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5819#pullrequestreview-1304048854\">PR review</a>.</p>",
        "id": 328541410,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676659916
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5819#discussion_r1110211613\">PR review comment</a>:</p>\n<blockquote>\n<p>Sure yeah, I was just following the preexisting pattern for the xmm instructions, but I can try to update those too in a subsequent PR.</p>\n</blockquote>",
        "id": 328541411,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676659916
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5819\">PR #5819</a> from <code>more-avx</code> to <code>main</code>.</p>",
        "id": 328569628,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676670648
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5819\">PR #5819</a> from <code>more-avx</code> to <code>main</code>.</p>",
        "id": 328571214,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676671329
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5819#pullrequestreview-1304289652\">PR review</a>.</p>",
        "id": 328577684,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676674292
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5819\">PR #5819</a> from <code>more-avx</code> to <code>main</code>.</p>",
        "id": 328581908,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676676531
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5819\">PR #5819</a>.</p>",
        "id": 329020278,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676909997
    }
]