[
    {
        "content": "<p><a href=\"https://github.com/yagehu\">yagehu</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7671\">Issue #7671</a>.</p>",
        "id": 406974788,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702158195
    },
    {
        "content": "<p>yagehu opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7671\">issue #7671</a>:</p>\n<blockquote>\n<p>Not sure this is a bug, but I can't find any previous discussion about this particular case.</p>\n<p>Calling <code>fd_filestat_set_times</code> with a directory fd, e.g. a preopened directory fd, returne <code>badf</code>.  I'm aware there is <a href=\"https://github.com/bytecodealliance/wasmtime/blob/4f2d634ca4291a09003eaba26f989cd544c1a289/crates/test-programs/src/bin/preview1_dir_fd_op_failures.rs\">a conformance test</a> that assert certain <code>fd_*</code> calls should fail with dir fds, but it's not immediately clear to me why this should be the case for <code>fd_filestat_set_times</code>.</p>\n<p>I have a simple fix ready to go if folks think it's reasonable to permit this behavior.</p>\n<h3>Test Case</h3>\n<p>Adding this snippet to <code>crates/test-programs/src/bin/preview1_fd_filestat_set.rs</code> should cause the test to fail.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"n\">wasi</span>::<span class=\"n\">fd_filestat_set_times</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"n\">dir_fd</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"n\">new_mtim</span><span class=\"p\">.</span><span class=\"n\">as_nanos</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"kt\">u64</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"n\">new_mtim</span><span class=\"p\">.</span><span class=\"n\">as_nanos</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"kt\">u64</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"n\">wasi</span>::<span class=\"n\">FSTFLAGS_MTIM</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">.</span><span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"s\">\"fd_filestat_set_times on dirfd\"</span><span class=\"p\">);</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>With the above snippet, <code>cargo test -p wasmtime-wasi</code>.</p>\n<h3>Expected Results</h3>\n<p>It should be possible to set times on a directory.</p>\n<h3>Actual Results</h3>\n<p><code>fd_filestat_set_times</code> return <code>badf</code>.</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: <code>4f2d634ca4291a09003eaba26f989cd544c1a289</code></p>\n<p>Operating system: Darwin, Fedora 39</p>\n<p>Architecture: amd64</p>\n<h3>Extra Info</h3>\n<p>Anything else you'd like to add?<br>\n</p>\n</blockquote>",
        "id": 406974791,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702158196
    },
    {
        "content": "<p>yagehu edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7671\">issue #7671</a>:</p>\n<blockquote>\n<p>Not sure this is a bug, but I can't find any previous discussion about this particular case.</p>\n<p>Calling <code>fd_filestat_set_times</code> with a preopened directory fd returns <code>badf</code>.  I'm aware there is <a href=\"https://github.com/bytecodealliance/wasmtime/blob/4f2d634ca4291a09003eaba26f989cd544c1a289/crates/test-programs/src/bin/preview1_dir_fd_op_failures.rs\">a conformance test</a> that assert certain <code>fd_*</code> calls should fail with dir fds, but it's not immediately clear to me why this should be the case for <code>fd_filestat_set_times</code> and preopened directories.</p>\n<h3>Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"C\"><pre><span></span><code><span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;dirent.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;fcntl.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;sys/stat.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;stdio.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;string.h&gt;</span>\n\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">timespec</span><span class=\"w\"> </span><span class=\"n\">times</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">];</span>\n\n<span class=\"w\">    </span><span class=\"n\">times</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">].</span><span class=\"n\">tv_nsec</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">UTIME_NOW</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">times</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">].</span><span class=\"n\">tv_nsec</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">UTIME_NOW</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">ret</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">futimens</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">times</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"futimens\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>Compile the snippet with wasi-sdk and run with Wasmtime, preopen a directory.</p>\n<h3>Expected Results</h3>\n<p>It should be possible to set times on a directory.</p>\n<h3>Actual Results</h3>\n<p><code>fd_filestat_set_times</code> return <code>badf</code>.</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: <code>4f2d634ca4291a09003eaba26f989cd544c1a289</code></p>\n<p>Operating system: Darwin, Fedora 39</p>\n<p>Architecture: amd64</p>\n<h3>Extra Info</h3>\n<p>Anything else you'd like to add?<br>\n</p>\n</blockquote>",
        "id": 407025778,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702196297
    },
    {
        "content": "<p>yagehu <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7671#issuecomment-1848895821\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7671\">issue #7671</a>:</p>\n<blockquote>\n<p>This is probably a result of including <code>O_PATH</code> when preopening directories: <a href=\"https://github.com/bytecodealliance/cap-std/blob/3663202c6de1bc440764282524a21e14b924925d/cap-primitives/src/rustix/fs/dir_utils.rs#L117\">https://github.com/bytecodealliance/cap-std/blob/3663202c6de1bc440764282524a21e14b924925d/cap-primitives/src/rustix/fs/dir_utils.rs#L117</a></p>\n</blockquote>",
        "id": 407027266,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702197382
    },
    {
        "content": "<p>yagehu edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7671#issuecomment-1848895821\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7671\">issue #7671</a>:</p>\n<blockquote>\n<p>This is probably a result of including <code>O_PATH</code> when preopening directories: <a href=\"https://github.com/bytecodealliance/cap-std/blob/3663202c6de1bc440764282524a21e14b924925d/cap-primitives/src/rustix/fs/dir_utils.rs#L117\">https://github.com/bytecodealliance/cap-std/blob/3663202c6de1bc440764282524a21e14b924925d/cap-primitives/src/rustix/fs/dir_utils.rs#L117</a></p>\n<p>EDIT: I just tested. <code>fd_filestat_set_times</code> indeed works if we omit the <code>O_PATH</code> in cap-std.</p>\n</blockquote>",
        "id": 407268426,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702309784
    }
]