[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4074\">PR #4074</a> from <code>isle-var-bind-or-match</code> to <code>main</code>:</p>\n<blockquote>\n<p>Currently, a variable can be named in two different ways in an ISLE<br>\npattern. One can write a pattern like <code>(T x y)</code> that binds the two<br>\nargs of <code>T</code> with the subpatterns <code>x</code> and <code>y</code>, each of which match<br>\nanything and capture the value as a bound variable. Or, one can write<br>\na pattern like <code>(T x =x)</code>, where the first arg pattern <code>x</code> captures<br>\nthe value in <code>x</code> and the second arg pattern <code>=x</code> matches only the same<br>\nvalue that was already captured.</p>\n<p>It turns out (thanks to @fitzgen for this insight here [1]) that this<br>\ndistinction can actually be inferred easily: if <code>x</code> isn't bound, then<br>\nmentioning it binds it; otherwise, it matches only the already-bound<br>\nvariable. There's no concern about ordering (one mention binding<br>\nvs. the other) because (i) the value is equal either way, and (ii) the<br>\ntypes at both sites must be the same.</p>\n<p>This language tweak seems like it should simplify things nicely! We<br>\ncan remove the <code>=x</code> syntax later if we want, but this PR doesn't do<br>\nso.</p>\n<p>[1] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4071#discussion_r859111513\">https://github.com/bytecodealliance/wasmtime/pull/4071#discussion_r859111513</a></p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 280285627,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1651015445
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4074\">PR #4074</a>.</p>",
        "id": 280285628,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1651015445
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4074\">PR #4074</a> from <code>isle-var-bind-or-match</code> to <code>main</code>.</p>",
        "id": 280288926,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1651018341
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4074#pullrequestreview-955483632\">PR review</a>.</p>",
        "id": 280404932,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1651090427
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4074#pullrequestreview-955483632\">PR review</a>.</p>",
        "id": 280404934,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1651090428
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4074#discussion_r860206018\">PR review comment</a>:</p>\n<blockquote>\n<p>Can we keep a set/map of already-bound variables? Doing a linear search here seems suboptimal.</p>\n</blockquote>",
        "id": 280404935,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1651090428
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4074#pullrequestreview-955488007\">PR review</a>.</p>",
        "id": 280405231,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1651090574
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4074#discussion_r860209102\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah, I think I originally wrote it this way for two reasons:</p>\n<ul>\n<li>It allows us to push/pop bindings when we enter and leave a lexical sub-scope (a <code>let</code>) -- we need to record the nesting order somehow, so a map to accelerate this would have to be maintained using that linear order on the side;</li>\n<li>It makes it easier to refactor to allow for shadowing later (which is a feature I think we might want).</li>\n</ul>\n<p>In practice with a handful of bindings it shouldn't really be a perf concern, I think...</p>\n</blockquote>",
        "id": 280405232,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1651090574
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4074#discussion_r860212048\">PR review comment</a>:</p>\n<blockquote>\n<p>(If you still want us to do something better here I'm happy to think about it more, though!)</p>\n</blockquote>",
        "id": 280405679,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1651090818
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4074#pullrequestreview-955492191\">PR review</a>.</p>",
        "id": 280405680,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1651090818
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4074#pullrequestreview-955494251\">PR review</a>.</p>",
        "id": 280405901,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1651090940
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4074#discussion_r860213432\">PR review comment</a>:</p>\n<blockquote>\n<p>Eh, if it isn't a quick fix then lets leave it and deal with it if/when it actually becomes a problem</p>\n</blockquote>",
        "id": 280405902,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1651090940
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4074\">PR #4074</a>.</p>",
        "id": 280406206,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1651091153
    }
]