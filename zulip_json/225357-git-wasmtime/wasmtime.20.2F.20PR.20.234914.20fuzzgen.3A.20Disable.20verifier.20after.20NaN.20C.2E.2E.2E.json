[
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4914\">PR #4914</a> from <code>disable-nan-verifier</code> to <code>main</code>:</p>\n<blockquote>\n<p>We are currently running the verifier twice, once after the nan canonicalization pass, and again when JIT compiling the code.</p>\n<p>The verifier first runs in the NaN Canonicalization pass. If it fails it prevents us from getting a nice <code>cargo fuzz fmt</code> test case.</p>\n<p>So disable the verifier there, but ensure its enabled when JIT compiling.</p>\n<p>@jameysharp I think this solves the issue in this comment: <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4896#pullrequestreview-1104415283\">https://github.com/bytecodealliance/wasmtime/pull/4896#pullrequestreview-1104415283</a></p>\n<p>I think it makes sense to keep NaN canonicalization in fuzzgen, otherwise the testcase reported in <code>fmt</code> is different than the one that is actually executed and that can be really confusing.<br>\n</p>\n</blockquote>",
        "id": 298983853,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663252690
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4914#pullrequestreview-1109321909\">PR review</a>.</p>",
        "id": 298983968,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663252733
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4914#discussion_r972073664\">PR review comment</a>:</p>\n<blockquote>\n<p>Instead of doing this we can also explicitly run the verifier here, I don't know which one is preferable.</p>\n</blockquote>",
        "id": 298983969,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663252733
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4914\">PR #4914</a> from <code>disable-nan-verifier</code> to <code>main</code>:</p>\n<blockquote>\n<p>We are currently running the verifier twice, once after the nan canonicalization pass, and again when JIT compiling the code.</p>\n<p>The verifier first runs in the NaN Canonicalization pass. If it fails it prevents us from getting a nice <code>cargo fuzz fmt</code> test case.</p>\n<p>So disable the verifier there, but ensure its enabled when JIT compiling.</p>\n<p>@jameysharp I think this solves the issue in this comment: <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4896#pullrequestreview-1104415283\">https://github.com/bytecodealliance/wasmtime/pull/4896#pullrequestreview-1104415283</a></p>\n<p>I also think it makes sense to keep NaN canonicalization in fuzzgen, otherwise the testcase reported in <code>fmt</code> is different than the one that is actually executed and that can be really confusing.<br>\n</p>\n</blockquote>",
        "id": 298986567,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663253485
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4914#pullrequestreview-1109508846\">PR review</a>.</p>",
        "id": 299005194,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663258810
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4914\">PR #4914</a> from <code>disable-nan-verifier</code> to <code>main</code>.</p>",
        "id": 299009869,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663260226
    },
    {
        "content": "<p>jameysharp has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4914\">PR #4914</a>.</p>",
        "id": 299010279,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663260341
    },
    {
        "content": "<p>jameysharp merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4914\">PR #4914</a>.</p>",
        "id": 299016010,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663262297
    }
]