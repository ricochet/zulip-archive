[
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/150#issuecomment-663229280\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/150\">Issue #150</a>:</p>\n<blockquote>\n<p>I've run across this issue and it's pretty old at this point and we've had a lot of changes in the meantime. I've tried reproducing this but so much has changed I'm getting lots of various kinds of errors. In any case today I can't quite see any form of corruption still around, so I'm going to close. If this crops up again we can certainly reopen though!</p>\n</blockquote>",
        "id": 204852893,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595537950
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/150\">Issue #150</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/CraneStation/wasmtime/files/3183851/rustc_binary-wasmtime-149-repro.wasm.zip\">rustc_binary-wasmtime-149-repro.wasm.zip</a> Edit: expected this issue to be number 149</p>\n<p>This needs a nightly compiler, the <code>miri</code> component installed, the <code>x86_64-unknown-linux-gnu</code> target installed and having ran <code>cargo miri setup</code>. <code>MIRI_SYSROOT</code> refers to the path <code>cargo miri setup</code> eventually emits.</p>\n<div class=\"codehilite\"><pre><span></span><code>$ echo &#39;fn main() { println!(&quot;Hello world!&quot;); }&#39; &gt; example.rs\n$ wasmtime -g --dir . --dir $MIRI_SYSROOT rustc_binary.wasm -- example.rs --sysroot $MIRI_SYSROOT -Zcodegen-backend=metadata_only --target x86_64-unknown-linux-gnu\n[...]\n[2019-05-15T17:52:51Z INFO  rustc_mir::interpret::step] // bb1\n[2019-05-15T17:52:51Z INFO  rustc_mir::interpret::step] StorageDead(_5)\n[2019-05-15T17:52:51Z INFO  rustc_mir::interpret::step] _0 = const std::vec::SpecExtend::spec_extend(move _3, move _4) -&gt; bb2\nerror while processing main module ../../target/wasm32-wasi/release/rustc_binary.wasm: Instantiation error: Trap occurred while invoking start function: wasm trap at 0x7fbd698e38df\n</code></pre></div>\n\n\n<p>When using wasmer with the <code>singlepass</code> backend it doesn't trap. (You need to build the <code>fix/wasi_path_filestat_get</code> branch of wasmer to fix a wasi compat problem)</p>\n</blockquote>",
        "id": 204852897,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595537951
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/150#issuecomment-667206533\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/150\">Issue #150</a>:</p>\n<blockquote>\n<p>I rebuilt <code>rustc_binary.wasm</code> yesterday. It worked perfectly. </p>\n</blockquote>",
        "id": 205610107,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596212115
    }
]