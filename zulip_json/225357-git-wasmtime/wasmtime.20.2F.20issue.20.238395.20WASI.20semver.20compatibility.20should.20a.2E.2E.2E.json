[
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> added the wasi label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8395\">Issue #8395</a>.</p>",
        "id": 433794582,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713365372
    },
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8395\">issue #8395</a>:</p>\n<blockquote>\n<p>In <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7994\">https://github.com/bytecodealliance/wasmtime/pull/7994</a> the <code>component::Linker</code> type in Wasmtime was made aware of semver by enabling loading a component that requires 0.2.0 of an interface with a supplied 0.2.1 of an interface. This enables us to update WASI in Wasmtime without breaking the ability to load older components.</p>\n<p>This support, however, does not work for exports. If a component exports 0.2.0 and the runtime is generating bindings for 0.2.1 then loading the export will fail currently, there's no logic anywhere to probe for older verions.</p>\n<p>This represents a snag in our story of WASI compatibility in Wasmtime and is something we should address before updating WASI to 0.2.1</p>\n</blockquote>",
        "id": 433794595,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713365374
    },
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> added the wasmtime:api label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8395\">Issue #8395</a>.</p>",
        "id": 433794633,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713365377
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8395#issuecomment-2061940158\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8395\">issue #8395</a>:</p>\n<blockquote>\n<p>Removing exports in a new interface version should be trivially fine? Adding non-optional exports shouldn't be allowed as the host may attempt to call them. Adding optional exports would be fine, but the component model doesn't have a way to represent them, right?</p>\n</blockquote>",
        "id": 433848860,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713378231
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8395#issuecomment-2062012236\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8395\">issue #8395</a>:</p>\n<blockquote>\n<p>Correct yeah, the problem here has to do with <code>bindgen!</code> and how exports are looked up. Currently they're done with exact string matches so if we were to update to WASI 0.2.1 then we'd look for a <code>wasi:cli/run@0.2.1</code> exported interface but wouldn't be able to find that on an older component where it's called <code>wasi:cli/run@0.2.0</code></p>\n</blockquote>",
        "id": 433856095,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713380648
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8395\">issue #8395</a>:</p>\n<blockquote>\n<p>In <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7994\">https://github.com/bytecodealliance/wasmtime/pull/7994</a> the <code>component::Linker</code> type in Wasmtime was made aware of semver by enabling loading a component that requires 0.2.0 of an interface with a supplied 0.2.1 of an interface. This enables us to update WASI in Wasmtime without breaking the ability to load older components.</p>\n<p>This support, however, does not work for exports. If a component exports 0.2.0 and the runtime is generating bindings for 0.2.1 then loading the export will fail currently, there's no logic anywhere to probe for older verions.</p>\n<p>This represents a snag in our story of WASI compatibility in Wasmtime and is something we should address before updating WASI to 0.2.1</p>\n</blockquote>",
        "id": 445430465,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718735004
    }
]