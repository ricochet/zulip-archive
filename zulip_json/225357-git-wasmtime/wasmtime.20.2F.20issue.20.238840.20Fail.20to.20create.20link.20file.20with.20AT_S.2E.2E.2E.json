[
    {
        "content": "<p><a href=\"https://github.com/Userzxcvbvnm\">Userzxcvbvnm</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8840\">Issue #8840</a>.</p>",
        "id": 445556420,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718792565
    },
    {
        "content": "<p>Userzxcvbvnm opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8840\">issue #8840</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p>The c test case is:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">stdio</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n<span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">fcntl</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n<span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unistd</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n<span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">stdlib</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n<span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">string</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">get_fd</span><span class=\"p\">(</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">filename</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">flags</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">flags</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Get file descriptor of file %s failed!</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">filename</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Get file descriptor of file %s succeed!</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">filename</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">void</span><span class=\"w\"> </span><span class=\"n\">closebyfd</span><span class=\"p\">(</span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">close</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Close the file %d by descriptor failed!</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n\n<span class=\"n\">void</span><span class=\"w\"> </span><span class=\"n\">path_link_00001_Nan21</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Enter function path_link_00001_Nan21</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n\n\n\n<span class=\"w\">    </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">linkat</span><span class=\"p\">(</span><span class=\"n\">AT_FDCWD</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"subdir_1/subdir_3/subfile_1\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">AT_FDCWD</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"HARDLINKFILE\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">AT_SYMLINK_FOLLOW</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"linkat failed\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Hard link creation successful</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n\n<span class=\"p\">}</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Enter function main</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"n\">path_link_00001_Nan21</span><span class=\"p\">();</span>\n\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>(1)compile to wasm:<code>./wasi-sdk-21.0/bin/clang --target=wasm32-unkown-wasi --sysroot=./wasi-sdk-21.0/share/wasi-sysroot test.c -o test.wasm</code></p>\n<p>(2)Running wasm:<br>\n(Before run the Wasm file, file subdir_1/subdir_3/subfile_1 exists.)<br>\n<code>wasmtime run --dir=. test.wasm</code></p>\n<h3>Expected Results</h3>\n<p>Successfully create the link file and print:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Enter</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">main</span>\n<span class=\"n\">Enter</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">path_link_00001_Nan21</span>\n<span class=\"n\">Hard</span><span class=\"w\"> </span><span class=\"n\">link</span><span class=\"w\"> </span><span class=\"n\">creation</span><span class=\"w\"> </span><span class=\"n\">successful</span>\n</code></pre></div>\n<p>This is what WAMR and WasmEdge do.</p>\n<h3>Actual Results</h3>\n<p>wasmtime prints:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Enter</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">main</span>\n<span class=\"n\">Enter</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">path_link_00001_Nan21</span>\n<span class=\"n\">linkat</span><span class=\"w\"> </span><span class=\"n\">failed</span>\n</code></pre></div>\n<p>However, with the parameter AT_SYMLINK_NOFOLLOW, wasmtime could cucceed, but with parameter AT_SYMLINK_FOLLOW, wasmtime fails.<br>\nThe parameter AT_SYMLINK_FOLLOW means if the file subdir_1/subdir_3/subfile_1 is a softlink file, the file HARDLINKFILE is expected to points to the source file of subdir_1/subdir_3/subfile_1. In this case, subdir_1/subdir_3/subfile_1 is a not a softlink file, but, I think, in this way,it is expected that HARDLINKFILE points to subdir_1/subdir_3/subfile_1 directly.<br>\nI'm not sure whether this is a bug.</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 19.0.2<br>\nOperating system: Ubuntu 20.04<br>\nArchitecture: x86_64<br>\n</p>\n</blockquote>",
        "id": 445556421,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718792565
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8840#issuecomment-2178381663\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8840\">issue #8840</a>:</p>\n<blockquote>\n<p>Looks like <code>AT_SYMLINK_FOLLOW</code> is explicitly denied: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/95fee6f4bd0b96460dfc5411ff678d0b2967b772/crates/wasi/src/host/filesystem.rs#L483-L485\">https://github.com/bytecodealliance/wasmtime/blob/95fee6f4bd0b96460dfc5411ff678d0b2967b772/crates/wasi/src/host/filesystem.rs#L483-L485</a> This is explicitly required  by the wasi test suite: <a href=\"https://github.com/WebAssembly/wasi-testsuite/blob/2fec29ea6de1244c124f7fe3bfe9f2946113f66e/tests/rust/src/bin/path_link.rs#L177-L189\">https://github.com/WebAssembly/wasi-testsuite/blob/2fec29ea6de1244c124f7fe3bfe9f2946113f66e/tests/rust/src/bin/path_link.rs#L177-L189</a> (seems to originate from <a href=\"https://github.com/bytecodealliance/wasmtime/commit/17f43d4cc347a54e34e7a0e65a34e5faef92919e\">https://github.com/bytecodealliance/wasmtime/commit/17f43d4cc347a54e34e7a0e65a34e5faef92919e</a>) Wasmtime has been rejecting <code>AT_SYMLINK_FOLLOW</code> on <code>path_link</code> since <a href=\"https://github.com/bytecodealliance/wasmtime/commit/fded424e689dd5f5a3f3e1539f4bc2b36a6e324e\">https://github.com/bytecodealliance/wasmtime/commit/fded424e689dd5f5a3f3e1539f4bc2b36a6e324e</a>.</p>\n</blockquote>",
        "id": 445561748,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718794577
    },
    {
        "content": "<p>Userzxcvbvnm edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8840\">issue #8840</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p>The c test case is:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">stdio</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n<span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">fcntl</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n<span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unistd</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n<span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">stdlib</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n<span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">string</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">get_fd</span><span class=\"p\">(</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">filename</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">flags</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">flags</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Get file descriptor of file %s failed!</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">filename</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Get file descriptor of file %s succeed!</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">filename</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">void</span><span class=\"w\"> </span><span class=\"n\">closebyfd</span><span class=\"p\">(</span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">close</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Close the file %d by descriptor failed!</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n\n<span class=\"n\">void</span><span class=\"w\"> </span><span class=\"n\">path_link_00001_Nan21</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Enter function path_link_00001_Nan21</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n\n\n\n<span class=\"w\">    </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">linkat</span><span class=\"p\">(</span><span class=\"n\">AT_FDCWD</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"subdir_1/subdir_3/subfile_1\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">AT_FDCWD</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"HARDLINKFILE\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">AT_SYMLINK_FOLLOW</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"linkat failed\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Hard link creation successful</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n\n<span class=\"p\">}</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Enter function main</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"n\">path_link_00001_Nan21</span><span class=\"p\">();</span>\n\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>(1)compile to wasm:<code>./wasi-sdk-21.0/bin/clang --target=wasm32-unkown-wasi --sysroot=./wasi-sdk-21.0/share/wasi-sysroot test.c -o test.wasm</code></p>\n<p>(2)Running wasm:<br>\n(Before run the Wasm file, file subdir_1/subdir_3/subfile_1 exists.)<br>\n<code>wasmtime run --dir=. test.wasm</code></p>\n<h3>Expected Results</h3>\n<p>Successfully create the link file and print:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Enter</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">main</span>\n<span class=\"n\">Enter</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">path_link_00001_Nan21</span>\n<span class=\"n\">Hard</span><span class=\"w\"> </span><span class=\"n\">link</span><span class=\"w\"> </span><span class=\"n\">creation</span><span class=\"w\"> </span><span class=\"n\">successful</span>\n</code></pre></div>\n<p>This is what WAMR and WasmEdge do.</p>\n<h3>Actual Results</h3>\n<p>wasmtime prints:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Enter</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">main</span>\n<span class=\"n\">Enter</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">path_link_00001_Nan21</span>\n<span class=\"n\">linkat</span><span class=\"w\"> </span><span class=\"n\">failed</span>\n</code></pre></div>\n<p>However, with the parameter AT_SYMLINK_NOFOLLOW, wasmtime could cucceed, but with parameter AT_SYMLINK_FOLLOW, wasmtime fails.<br>\nThe parameter AT_SYMLINK_FOLLOW means if the file subdir_1/subdir_3/subfile_1 is a softlink file, the file HARDLINKFILE is expected to points to the source file of subdir_1/subdir_3/subfile_1. In this case, subdir_1/subdir_3/subfile_1 is a not a softlink file, but, I think, in this way,it is expected that HARDLINKFILE points to subdir_1/subdir_3/subfile_1 directly.<br>\nI'm not sure whether this is a bug.</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 19.0.2 and 13.0.1<br>\nOperating system: Ubuntu 20.04<br>\nArchitecture: x86_64<br>\n</p>\n</blockquote>",
        "id": 447183417,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1719398733
    }
]