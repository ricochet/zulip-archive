[
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1561#issuecomment-616748418\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1561#issuecomment-616748418\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1561\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1561\">Issue #1561</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @kubkon</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"wasi\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>kubkon: wasi</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\" title=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 194718899,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587409343
    },
    {
        "content": "<p>kubkon <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1561#issuecomment-617639142\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1561#issuecomment-617639142\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1561\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1561\">Issue #1561</a>:</p>\n<blockquote>\n<p>Hmm, so I reckon this PR is at a stage that's ready for review so I'll mark it as such. Besides the major changes to the way we treat OS handles, there's a couple more things I'm somewhat unclear on:</p>\n<ul>\n<li>Should OS-specific <code>path</code>, <code>fd</code> accept specific types such as <code>OsFile</code>, <code>OsDir</code>, and <code>std::fs::File</code> for syscalls that are OS handle-independent (e.g., <code>fdstat_get</code>)? This approach is currently presented in this PR, and it makes our intention a bit clearer what handle is expected for this OS-specific syscall to be called on. But then again, should we ever expand on different handle types and make some syscalls that are currently _only_ used by <code>OsFile</code> say, it would be more ergnonomic for the syscalls to simply accept <code>std::fs::File</code>.</li>\n<li>On the topic of using <code>std::fs::File</code>, the reason we currently have our _own_ type that resembles that of <code>std::fs::File</code> (<code>OsHandle</code> and <code>OsDirHandle</code>) is because this way we can wrap the underlying OS handle (<code>RawFd</code> or <code>RawHandle</code>) in a <code>std::cell::Cell</code>. Interior mutability _is_ required in <code>fd_fdstat_set_flags</code> call on Windows, where adjusting the flags can only be done by reopening the said file (am I correct here @peterhuene?). We could in principle wrap <code>std::fs::File</code> in a <code>std::cell::RefCell</code> but then we are risking a panic somewhere down the line. Perhaps though this risk is worth accepting at the benefit of cleaner codebase?</li>\n</ul>\n<p>Anyhow, all thoughts, suggestions are more than welcome!</p>\n</blockquote>",
        "id": 194901955,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587544863
    },
    {
        "content": "<p>kubkon <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1561#issuecomment-617641298\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1561#issuecomment-617641298\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1561\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1561\">Issue #1561</a>:</p>\n<blockquote>\n<p>@alexcrichton even though you might not know all the internals very well, I'd appreciate your opinion on this even if high level!</p>\n</blockquote>",
        "id": 194902332,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587545098
    }
]