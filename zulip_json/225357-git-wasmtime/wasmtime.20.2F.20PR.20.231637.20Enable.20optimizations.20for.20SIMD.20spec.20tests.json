[
    {
        "content": "<p>abrown opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1637\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1637\">PR #1637</a> from <code>load-extend-complex</code> to <code>master</code>:</p>\n<blockquote>\n<p>@peterhuene discovered in #1186 that the SIMD spec tests failed when enabling Cranelift's optimizations. After looking into this, the issue was in the <code>optimize_complex_addresses</code>, an optimization function that replaces an <code>iadd + load*</code> with a single <code>load_complex</code> instruction. Since the SIMD load-extend instructions did not have complex encodings, the function would panic. This PR adds the necessary Cranelift instructions and x86 encodings to avoid this failure and re-enable optimizations for the SIMD spec tests.</p>\n<p>@julian-seward1, @bnjbvr, @jlb6740: hopefully the new backend can somehow avoid the duplication involved with the Cranelift IR: every load-extend instruction is repeated over the load size (e.g. 8, 16, ..., 8x8, 16x4, ...) and is duplicated for its complex version (e.g. load8x8 and load8x8_complex).</p>\n</blockquote>",
        "id": 195873890,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588267815
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1637\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1637\">PR #1637</a> from <code>load-extend-complex</code> to <code>master</code>:</p>\n<blockquote>\n<p>@peterhuene discovered in #1186 that the SIMD spec tests failed when enabling Cranelift's optimizations. After looking into this, the issue was in the <code>optimize_complex_addresses</code>, an optimization function that replaces an <code>iadd + load*</code> with a single <code>load_complex</code> instruction. Since the SIMD load-extend instructions did not have complex encodings, the function would panic. This PR adds the necessary Cranelift instructions and x86 encodings to avoid this failure and re-enable optimizations for the SIMD spec tests.</p>\n<p>@julian-seward1, @bnjbvr, @jlb6740: hopefully the new backend can somehow avoid the duplication involved with the Cranelift IR: every load-extend instruction is repeated over the load size (e.g. 8, 16, ..., 8x8, 16x4, ...) and is duplicated for its complex version (e.g. load8x8 and load8x8_complex).</p>\n</blockquote>",
        "id": 195874438,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588268113
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1637\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1637\">PR #1637</a> from <code>load-extend-complex</code> to <code>master</code>:</p>\n<blockquote>\n<p>@peterhuene discovered in #1186 that the SIMD spec tests failed when enabling Cranelift's optimizations. After looking into this, the issue was in the <code>optimize_complex_addresses</code>, an optimization function that replaces an <code>iadd + load*</code> with a single <code>load_complex</code> instruction. Since the SIMD load-extend instructions did not have complex encodings, the function would panic. This PR adds the necessary Cranelift instructions and x86 encodings to avoid this failure and re-enable optimizations for the SIMD spec tests.</p>\n<p>@julian-seward1, @bnjbvr, @jlb6740: hopefully the new backend can somehow avoid the duplication involved with the Cranelift IR: every load-extend instruction is repeated over the load size (e.g. 8, 16, ..., 8x8, 16x4, ...) and is duplicated for its complex version (e.g. load8x8 and load8x8_complex).</p>\n</blockquote>",
        "id": 195876834,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588269225
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1637#pullrequestreview-403754306\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1637#pullrequestreview-403754306\">PR Review</a>.</p>",
        "id": 195877847,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588269673
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1637#pullrequestreview-403759610\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1637#pullrequestreview-403759610\">PR Review</a>.</p>",
        "id": 195878800,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588270125
    },
    {
        "content": "<p>abrown merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1637\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1637\">PR #1637</a>.</p>",
        "id": 195883017,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588271884
    }
]