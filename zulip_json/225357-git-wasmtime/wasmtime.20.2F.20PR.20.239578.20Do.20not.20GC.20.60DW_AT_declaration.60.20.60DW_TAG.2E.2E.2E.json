[
    {
        "content": "<p>SingleAccretion opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9578\">PR #9578</a> from <code>SingleAccretion:DI-Decl</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>Declarations must be consistent across compilation units, therefore, they cannot be GCed away from their parent DIEs (most likely ones defining a type). This is the same situation as with, e. g. class member variables (fields).</p>\n<p>Fixes #9512.</p>\n</blockquote>",
        "id": 481008875,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1730930921
    },
    {
        "content": "<p>SingleAccretion updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9578\">PR #9578</a>.</p>",
        "id": 481010646,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1730931743
    },
    {
        "content": "<p>SingleAccretion edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9578\">PR #9578</a>:</p>\n<blockquote>\n<p>Declarations must be consistent across compilation units, therefore, they cannot be GCed away from their parent type DIEs. This is the same situation as with, e. g. class member variables (fields).</p>\n<p>Fixes #9512.</p>\n</blockquote>",
        "id": 481010739,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1730931807
    },
    {
        "content": "<p>SingleAccretion edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9578\">PR #9578</a>:</p>\n<blockquote>\n<p>Declarations must be consistent across compilation units for any given type. This is the same situation as with, e. g. class member variables (fields).</p>\n<p>Fixes #9512.</p>\n</blockquote>",
        "id": 481010771,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1730931825
    },
    {
        "content": "<p>SingleAccretion edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9578\">PR #9578</a>:</p>\n<blockquote>\n<p>Declarations must be consistent across compilation units for any given type. This is the same situation as with, e. g. class member variables (fields).</p>\n<p>Furthermore, even for ordinary C declarations, deleting them can theoretically mess up the expression evaluator (since a function that was supposed to be in scope no longer is).</p>\n<p>Fixes #9512.</p>\n</blockquote>",
        "id": 481010948,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1730931933
    },
    {
        "content": "<p>SingleAccretion edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9578\">PR #9578</a>:</p>\n<blockquote>\n<p>Declarations must be consistent across compilation units for any given type. This is the same situation as with, e. g. class member variables (fields).</p>\n<p>Furthermore, even for ordinary C declarations, deleting them can theoretically mess up the expression evaluator (since a function that was supposed to be in scope no longer is). This is mostly a theoretical concern, however, as calling functions in the context of translated DWARF is currently deeply broken anyway.</p>\n<p>Fixes #9512.</p>\n</blockquote>",
        "id": 481011053,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1730931974
    },
    {
        "content": "<p>SingleAccretion updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9578\">PR #9578</a>.</p>",
        "id": 481011837,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1730932418
    },
    {
        "content": "<p><strong>SingleAccretion</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9578\">PR #9578</a> as ready for review.</p>",
        "id": 481011845,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1730932423
    },
    {
        "content": "<p><strong>SingleAccretion</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9578\">PR #9578</a>.</p>",
        "id": 481011846,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1730932424
    },
    {
        "content": "<p><strong>SingleAccretion</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9578\">PR #9578</a>.</p>",
        "id": 481011847,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1730932424
    },
    {
        "content": "<p>SingleAccretion edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9578\">PR #9578</a>:</p>\n<blockquote>\n<p>Declarations must be consistent across compilation units for any given type. This is the same situation as with, e. g., class member variables (fields).</p>\n<p>Furthermore, even for ordinary C declarations, deleting them can theoretically mess up the expression evaluator (since a function that was supposed to be in scope no longer is). This is mostly a theoretical concern, however, as calling functions in the context of translated DWARF is currently deeply broken anyway.</p>\n<p>Fixes #9512.</p>\n</blockquote>",
        "id": 481012090,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1730932548
    },
    {
        "content": "<p>SingleAccretion updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9578\">PR #9578</a>.</p>",
        "id": 481012546,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1730932796
    },
    {
        "content": "<p>SingleAccretion edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9578\">PR #9578</a>:</p>\n<blockquote>\n<p>Declarations must be consistent across compilation units for any given type. This is the same situation as with, e. g., class member variables (fields).</p>\n<p>Furthermore, even for ordinary C declarations, deleting them can theoretically mess up the expression evaluator (since a function that was supposed to be in scope no longer is). This is mostly a theoretical concern, however, as calling functions in the context of translated DWARF is currently deeply broken anyway.</p>\n<p>Fixes #9512.</p>\n<p>I've also tweaked the dumping of DIE offsets for easier cross-referencing with llvm-dwarfump.</p>\n</blockquote>",
        "id": 481012816,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1730932929
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9578#pullrequestreview-2419588160\">PR review</a>:</p>\n<blockquote>\n<p>Thanks!</p>\n</blockquote>",
        "id": 481013427,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1730933320
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9578\">PR #9578</a>.</p>",
        "id": 481013437,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1730933325
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9578\">PR #9578</a>.</p>",
        "id": 481015960,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1730934815
    }
]