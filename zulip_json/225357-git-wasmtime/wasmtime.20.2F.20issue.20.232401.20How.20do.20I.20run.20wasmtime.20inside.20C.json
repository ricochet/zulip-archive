[
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2401#issuecomment-1118804262\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2401\">issue #2401</a>:</p>\n<blockquote>\n<p>I'm going to close this since this is a pretty old issue and I believe the problems here were build-related. If there are still issues I can try to help out here or feel free to reach out on Zulip as well.</p>\n</blockquote>",
        "id": 281325486,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1651768968
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2401\">issue #2401</a>:</p>\n<blockquote>\n<p>I followed this official wasmtime tutorial on embedding wasmtime in C. <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/examples/hello.c\">https://github.com/bytecodealliance/wasmtime/blob/main/examples/hello.c</a></p>\n<p>It provides commands to compile the C code with hello-world wasm embedded, but I don't know what do the two lines (cargo build --release -p wasmtime-c-api, target/release/libwasmtime.a) do? cargo build is for building a rust application, what has it to do with compiling C code, let alone there is no cargo.toml, so the cargo build itself would also fail. And this static library target/release/libwasmtime.a is also not in the wasmtime repo. <a href=\"https://github.com/bytecodealliance/wasmtime\">https://github.com/bytecodealliance/wasmtime</a></p>\n<p><strong>cargo build --release -p wasmtime-c-api</strong><br>\ncc examples/hello.c \\<br>\n-I crates/c-api/include \\<br>\n-I crates/c-api/wasm-c-api/include \\</p>\n<p>### target/release/libwasmtime.a \\<br>\n-lpthread -ldl -lm \\<br>\n-o hello<br>\n./hello</p>\n<p>Without question, I cannot get this hello-world wasm in C compiled and run :(</p>\n<p>Thank you so much!</p>\n</blockquote>",
        "id": 281325489,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1651768968
    }
]