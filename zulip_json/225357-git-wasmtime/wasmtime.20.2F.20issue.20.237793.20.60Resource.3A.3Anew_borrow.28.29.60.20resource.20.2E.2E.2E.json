[
    {
        "content": "<p><a href=\"https://github.com/rvolosatovs\">rvolosatovs</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7793\">Issue #7793</a>.</p>",
        "id": 416559473,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705580423
    },
    {
        "content": "<p>rvolosatovs opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7793\">issue #7793</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[test]</span>\n<span class=\"k\">fn</span> <span class=\"nf\">can_use_own_for_borrow</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">super</span>::<span class=\"n\">engine</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Component</span>::<span class=\"n\">new</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"s\">r#\"</span>\n<span class=\"s\">            (component</span>\n<span class=\"s\">                (import \"t\" (type $t (sub resource)))</span>\n\n<span class=\"s\">                (core func $drop (canon resource.drop $t))</span>\n\n<span class=\"s\">                (core module $m</span>\n<span class=\"s\">                    (import \"\" \"drop\" (func $drop (param i32)))</span>\n<span class=\"s\">                    (func (export \"f\") (param i32)</span>\n<span class=\"s\">                        (call $drop (local.get 0))</span>\n<span class=\"s\">                    )</span>\n<span class=\"s\">                )</span>\n<span class=\"s\">                (core instance $i (instantiate $m</span>\n<span class=\"s\">                    (with \"\" (instance</span>\n<span class=\"s\">                        (export \"drop\" (func $drop))</span>\n<span class=\"s\">                    ))</span>\n<span class=\"s\">                ))</span>\n\n<span class=\"s\">                (func (export \"f\") (param \"x\" (borrow $t))</span>\n<span class=\"s\">                    (canon lift (core func $i \"f\")))</span>\n<span class=\"s\">            )</span>\n<span class=\"s\">        \"#</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"k\">struct</span> <span class=\"nc\">MyType</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Store</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">());</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Linker</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">ty_idx</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">linker</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">root</span><span class=\"p\">()</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">resource</span><span class=\"p\">(</span><span class=\"s\">\"t\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ResourceType</span>::<span class=\"n\">host</span>::<span class=\"o\">&lt;</span><span class=\"n\">MyType</span><span class=\"o\">&gt;</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"nb\">Ok</span><span class=\"p\">(()))</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">i_pre</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"p\">.</span><span class=\"n\">instantiate_pre</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">c</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">Resource</span>::<span class=\"o\">&lt;</span><span class=\"n\">MyType</span><span class=\"o\">&gt;</span>::<span class=\"n\">new_borrow</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">).</span><span class=\"n\">try_into_resource_any</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">i_pre</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ty_idx</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>(see test case)</p>\n<h3>Expected Results</h3>\n<p>Success, just like with lowering of <code>Resource</code> directly</p>\n<h3>Actual Results</h3>\n<p>Panic in <a href=\"https://github.com/bytecodealliance/wasmtime/blob/f3b5478bfcb759d99b3910b121c644b4c9c572bf/crates/runtime/src/component/resources.rs#L241\">https://github.com/bytecodealliance/wasmtime/blob/f3b5478bfcb759d99b3910b121c644b4c9c572bf/crates/runtime/src/component/resources.rs#L241</a></p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: <a href=\"https://github.com/bytecodealliance/wasmtime/commit/f3b5478bfcb759d99b3910b121c644b4c9c572bf\">https://github.com/bytecodealliance/wasmtime/commit/f3b5478bfcb759d99b3910b121c644b4c9c572bf</a></p>\n<h3>Extra Info</h3>\n<p>The panic makes sense, since there is no \"owned\" version of this resource in any table, only a \"synthetic\" borrow.</p>\n<p>I believe the panic is caused by <a href=\"https://github.com/bytecodealliance/wasmtime/blob/f3b5478bfcb759d99b3910b121c644b4c9c572bf/crates/wasmtime/src/component/resources.rs#L568\">https://github.com/bytecodealliance/wasmtime/blob/f3b5478bfcb759d99b3910b121c644b4c9c572bf/crates/wasmtime/src/component/resources.rs#L568</a>, note that in case of <code>Resource</code>, the analogous operation simply returns the <code>rep</code> <a href=\"https://github.com/bytecodealliance/wasmtime/blob/f3b5478bfcb759d99b3910b121c644b4c9c572bf/crates/wasmtime/src/component/resources.rs#L334\">https://github.com/bytecodealliance/wasmtime/blob/f3b5478bfcb759d99b3910b121c644b4c9c572bf/crates/wasmtime/src/component/resources.rs#L334</a></p>\n<p>Refs #7688 #7783 </p>\n</blockquote>",
        "id": 416559479,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705580424
    },
    {
        "content": "<p>rvolosatovs edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7793\">issue #7793</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[test]</span>\n<span class=\"k\">fn</span> <span class=\"nf\">can_use_own_for_borrow</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">super</span>::<span class=\"n\">engine</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Component</span>::<span class=\"n\">new</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"s\">r#\"</span>\n<span class=\"s\">            (component</span>\n<span class=\"s\">                (import \"t\" (type $t (sub resource)))</span>\n\n<span class=\"s\">                (core func $drop (canon resource.drop $t))</span>\n\n<span class=\"s\">                (core module $m</span>\n<span class=\"s\">                    (import \"\" \"drop\" (func $drop (param i32)))</span>\n<span class=\"s\">                    (func (export \"f\") (param i32)</span>\n<span class=\"s\">                        (call $drop (local.get 0))</span>\n<span class=\"s\">                    )</span>\n<span class=\"s\">                )</span>\n<span class=\"s\">                (core instance $i (instantiate $m</span>\n<span class=\"s\">                    (with \"\" (instance</span>\n<span class=\"s\">                        (export \"drop\" (func $drop))</span>\n<span class=\"s\">                    ))</span>\n<span class=\"s\">                ))</span>\n\n<span class=\"s\">                (func (export \"f\") (param \"x\" (borrow $t))</span>\n<span class=\"s\">                    (canon lift (core func $i \"f\")))</span>\n<span class=\"s\">            )</span>\n<span class=\"s\">        \"#</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"k\">struct</span> <span class=\"nc\">MyType</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Store</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">());</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Linker</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">ty_idx</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">linker</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">root</span><span class=\"p\">()</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">resource</span><span class=\"p\">(</span><span class=\"s\">\"t\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ResourceType</span>::<span class=\"n\">host</span>::<span class=\"o\">&lt;</span><span class=\"n\">MyType</span><span class=\"o\">&gt;</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"nb\">Ok</span><span class=\"p\">(()))</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">i_pre</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"p\">.</span><span class=\"n\">instantiate_pre</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">c</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">Resource</span>::<span class=\"o\">&lt;</span><span class=\"n\">MyType</span><span class=\"o\">&gt;</span>::<span class=\"n\">new_borrow</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">).</span><span class=\"n\">try_into_resource_any</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">i_pre</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ty_idx</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>(see test case)</p>\n<h3>Expected Results</h3>\n<p>Success, just like with lowering of <code>Resource</code> directly</p>\n<h3>Actual Results</h3>\n<p>Panic in <a href=\"https://github.com/bytecodealliance/wasmtime/blob/f3b5478bfcb759d99b3910b121c644b4c9c572bf/crates/runtime/src/component/resources.rs#L241\">https://github.com/bytecodealliance/wasmtime/blob/f3b5478bfcb759d99b3910b121c644b4c9c572bf/crates/runtime/src/component/resources.rs#L241</a></p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: <a href=\"https://github.com/bytecodealliance/wasmtime/commit/f3b5478bfcb759d99b3910b121c644b4c9c572bf\">https://github.com/bytecodealliance/wasmtime/commit/f3b5478bfcb759d99b3910b121c644b4c9c572bf</a></p>\n<h3>Extra Info</h3>\n<p>The panic makes sense, since there is no \"owned\" version of this resource in any table, only a \"synthetic\" borrow.</p>\n<p>I believe the panic is caused by <a href=\"https://github.com/bytecodealliance/wasmtime/blob/f3b5478bfcb759d99b3910b121c644b4c9c572bf/crates/wasmtime/src/component/resources.rs#L568\">https://github.com/bytecodealliance/wasmtime/blob/f3b5478bfcb759d99b3910b121c644b4c9c572bf/crates/wasmtime/src/component/resources.rs#L568</a>, note that in case of <code>Resource</code>, the analogous operation simply returns the <code>rep</code> <a href=\"https://github.com/bytecodealliance/wasmtime/blob/f3b5478bfcb759d99b3910b121c644b4c9c572bf/crates/wasmtime/src/component/resources.rs#L334\">https://github.com/bytecodealliance/wasmtime/blob/f3b5478bfcb759d99b3910b121c644b4c9c572bf/crates/wasmtime/src/component/resources.rs#L334</a></p>\n<p>Refs #7688 #7783 </p>\n</blockquote>",
        "id": 416561268,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705581049
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7793#issuecomment-1898846182\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7793\">issue #7793</a>:</p>\n<blockquote>\n<p>Ah yes I see where this is coming from and it's a bit unfortunate. Borrows have metadata tracking them to ensure that they're all dropped by the time a function call exits. For example if 4 borrows are given to an exported function then all borrows must be dropped by the exported function before the function returns, otherwise the component model requires a trap.</p>\n<p>I think that the implementation here is going to have to be a bit more \"clever\" like the bits in <code>Resource&lt;T&gt;</code> where the lowering into a borrow is actually deferred until the lift/lower operation happens. Basically <code>resource_lower_borrow</code> can't be called until a function is being invoked.</p>\n</blockquote>",
        "id": 416610586,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705596415
    }
]