[
    {
        "content": "<p>akirilov-arm opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3426\">PR #3426</a> from <code>membarrier</code> to <code>main</code>:</p>\n<blockquote>\n<p>This is the first part of a fix to issue #3310. Unfortunately, there are more calls than necessary to <code>rsix::process::membarrier(rsix::process::MembarrierCommand::RegisterPrivateExpeditedSyncCore)</code> (it is sufficient to call it once per process), but both <code>cranelift_jit::JITModule</code> and <code>wasmtime_jit::CodeMemory</code> are public interfaces, so my current approach is the best I have come up with that hides this AArch64 memory model detail from any crate users; I would appreciate any suggestions for improvements.</p>\n</blockquote>",
        "id": 256726237,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1633693026
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3426#pullrequestreview-774911424\">PR review</a>.</p>",
        "id": 256727033,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1633693467
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3426#discussion_r724939541\">PR review comment</a>:</p>\n<blockquote>\n<p>Please avoid rsix in cranelift-jit: <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3395\">https://github.com/bytecodealliance/wasmtime/pull/3395</a> I think <code>libc::syscall(libc::SYS_membarrier, 32u32)</code> will work. 32 is <code>MEMBARRIER_CMD_PRIVATE_EXPEDITED_SYNC_CORE</code> on AArch64: <a href=\"https://github.com/sunfishcode/linux-raw-sys/blob/6d0a83985c28678821d2d67f3047c7fe2b90a6ae/src/v5_4/aarch64/general.rs#L3443\">https://github.com/sunfishcode/linux-raw-sys/blob/6d0a83985c28678821d2d67f3047c7fe2b90a6ae/src/v5_4/aarch64/general.rs#L3443</a></p>\n</blockquote>",
        "id": 256727034,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1633693468
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3426#discussion_r724941818\">PR review comment</a>:</p>\n<blockquote>\n<p>Is this for the new libcall PLT entries generated above? I think this will need to be called every time a new PLT entry is generated like in <code>declare_function</code>.</p>\n</blockquote>",
        "id": 256727495,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1633693699
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3426#pullrequestreview-774914517\">PR review</a>.</p>",
        "id": 256727497,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1633693699
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3426#discussion_r724942819\">PR review comment</a>:</p>\n<blockquote>\n<p>Also I think this will need to be called every time a new PLT entry is generated like in <code>declare_function</code> or <code>new</code>.</p>\n</blockquote>",
        "id": 256727722,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1633693804
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3426#pullrequestreview-774915856\">PR review</a>.</p>",
        "id": 256727723,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1633693804
    },
    {
        "content": "<p>akirilov-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3426#pullrequestreview-780095363\">PR review</a>.</p>",
        "id": 257579986,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634235077
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3426#discussion_r729227355\">PR review comment</a>:</p>\n<blockquote>\n<p>This needs to be called when we are just about to start executing from the generated code, which is usually around the time the code memory's protection is changed from readable and writable to readable and executable. As far as I can tell, generating a new PLT entry involves just writing some data (i.e. instructions) into the instruction stream, but does not create new executable memory (via changing permissions), nor does it involve memory that is simultaneously readable, writable, and executable.</p>\n</blockquote>",
        "id": 257579987,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634235077
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3426#pullrequestreview-780132890\">PR review</a>.</p>",
        "id": 257585802,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634237450
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3426#discussion_r729254462\">PR review comment</a>:</p>\n<blockquote>\n<p>New PLT entries are handled the same way as adding new functions. Both first write the code to a writeable page and then use mprotect to make it executable.</p>\n</blockquote>",
        "id": 257585803,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634237451
    },
    {
        "content": "<p>akirilov-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3426#pullrequestreview-780269283\">PR review</a>.</p>",
        "id": 257609267,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634246995
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3426#discussion_r729355731\">PR review comment</a>:</p>\n<blockquote>\n<p>Sure, but it looks like <code>new_plt_entry()</code> just does an allocation and writes the code. The only place where we make the transition from readable and writable memory to readable and executable is inside <code>finalize_definitions()</code> and there we handle both normal generated functions and PLT entries together - am I missing something?</p>\n</blockquote>",
        "id": 257609269,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634246995
    },
    {
        "content": "<p>akirilov-arm updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3426\">PR #3426</a> from <code>membarrier</code> to <code>main</code>.</p>",
        "id": 257729602,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634316869
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3426#pullrequestreview-782224731\">PR review</a>.</p>",
        "id": 258045210,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634570221
    },
    {
        "content": "<p>akirilov-arm updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3426\">PR #3426</a> from <code>membarrier</code> to <code>main</code>.</p>",
        "id": 258761868,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634931061
    },
    {
        "content": "<p>akirilov-arm merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3426\">PR #3426</a>.</p>",
        "id": 258951102,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1635164736
    }
]