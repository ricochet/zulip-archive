[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6026\">PR #6026</a> from <code>x64-sigfpe</code> to <code>main</code>:</p>\n<blockquote>\n<p>Prior to this commit Wasmtime would configure <code>avoid_div_traps=true</code> unconditionally for Cranelift. This, for the division-based instructions, would change emitted code to explicitly trap on trap conditions instead of letting the <code>div</code> x86 instruction trap.</p>\n<p>There's no specific reason for Wasmtime, however, to specifically avoid traps in the <code>div</code> instruction. This means that the extra generated branches on x86 aren't necessary since the <code>div</code> and <code>idiv</code> instructions already trap for similar conditions as wasm requires.</p>\n<p>This commit instead disables the <code>avoid_div_traps</code> setting for Wasmtime's usage of Cranelift. Subsequently the codegen rules were updated slightly:</p>\n<ul>\n<li>When <code>avoid_div_traps=true</code>, traps are no longer emitted for <code>div</code> instructions.</li>\n<li>The <code>udiv</code>/<code>urem</code> instructions now list their trap as divide-by-zero instead of integer overflow.</li>\n<li>The lowering for <code>sdiv</code> was updated to still explicitly check for zero but the integer overflow case is deferred to the instruction itself.</li>\n<li>The lowering of <code>srem</code> no longer checks for zero and the listed trap for the <code>div</code> instruction is a divide-by-zero.</li>\n</ul>\n<p>This means that the codegen for <code>udiv</code> and <code>urem</code> no longer have any branches. The codegen for <code>sdiv</code> removes one branch but keeps the zero-check to differentiate the two kinds of traps. The codegen for <code>srem</code> removes one branch but keeps the -1 check since the semantics of <code>srem</code> mismatch with the semantics of <code>idiv</code> with a -1 divisor (specifically for INT_MIN).</p>\n<p>This is unlikely to have really all that much of a speedup but was something I noticed during #6008 which seemed like it'd be good to clean up. Plus Wasmtime's signal handling was already set up to catch <code>SIGFPE</code>, it was just never firing.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 342126675,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678902264
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6026#pullrequestreview-1342172292\">PR review</a>.</p>",
        "id": 342141572,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678906334
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6026#pullrequestreview-1342172292\">PR review</a>.</p>",
        "id": 342141573,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678906334
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6026#discussion_r1137603445\">PR review comment</a>:</p>\n<blockquote>\n<p>I wonder if it would be simpler to include a <code>trap_code</code> field in the instruction, and set this when creating it in the lowering? That would avoid the implicit state flow via the flag on the <code>EmitState</code> and would also place this conditional logic closer to where the rest of the instruction sequence is specified.</p>\n</blockquote>",
        "id": 342141576,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678906335
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6026\">PR #6026</a> from <code>x64-sigfpe</code> to <code>main</code>.</p>",
        "id": 342177434,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678918575
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6026#pullrequestreview-1342513085\">PR review</a>.</p>",
        "id": 342177762,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678918713
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6026#discussion_r1137830748\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah good suggestion!</p>\n</blockquote>",
        "id": 342177763,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678918713
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6026\">PR #6026</a> from <code>x64-sigfpe</code> to <code>main</code>.</p>",
        "id": 342181040,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678920293
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6026\">PR #6026</a> from <code>x64-sigfpe</code> to <code>main</code>.</p>",
        "id": 342181687,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678920603
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6026#pullrequestreview-1342588660\">PR review</a>.</p>",
        "id": 342188104,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678923627
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6026\">PR #6026</a> from <code>x64-sigfpe</code> to <code>main</code>.</p>",
        "id": 342188584,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678923940
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6026\">PR #6026</a>.</p>",
        "id": 342189614,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678924772
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6026\">PR #6026</a>.</p>",
        "id": 342196045,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678928393
    }
]