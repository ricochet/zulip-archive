[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8668\">PR #8668</a> from <code>alexcrichton:musl-binaries</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This was requested in <a href=\"https://github.com/bytecodealliance/wasmtime-py/issues/237\">bytecodealliance/wasmtime-py#237</a> and shouldn't cost us too much in terms of CI resources and maintenance overhead.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 439705697,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716251191
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/elliottt\">elliottt</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8668\">PR #8668</a>.</p>",
        "id": 439705698,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716251191
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8668\">PR #8668</a>.</p>",
        "id": 439705699,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716251191
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8668\">PR #8668</a>.</p>",
        "id": 439705700,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716251191
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8668#pullrequestreview-2067254140\">PR review</a>.</p>",
        "id": 439706004,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716251387
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8668\">PR #8668</a>.</p>",
        "id": 439707427,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716252276
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8668\">PR #8668</a>.</p>",
        "id": 439707439,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716252283
    },
    {
        "content": "<p>whitequark <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8668#issuecomment-2121503683\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8668\">PR #8668</a>:</p>\n<blockquote>\n<p>Thanks again =^__^=</p>\n<p>This will improve the compatibility story for YoWASP and the Glasgow Interface Explorer to even more Linux distributions.</p>\n</blockquote>",
        "id": 439708812,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716253156
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8668\">PR #8668</a>.</p>",
        "id": 439710153,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716253928
    },
    {
        "content": "<p>aambrose-sonatus <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8668#issuecomment-2206929724\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8668\">PR #8668</a>:</p>\n<blockquote>\n<p>Hi @alexcrichton, I'm curious about a couple things here regarding musl support:</p>\n<ol>\n<li>What is the wasmtime dependency on libgcc? Is this something core, or just how the toolchain is structured right now?</li>\n<li>What is the limitation that is preventing wasmtime from being fully static with musl libraries? Is it the above libgcc dep?</li>\n</ol>\n<p>Thank you</p>\n</blockquote>",
        "id": 448918441,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720030350
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8668#issuecomment-2206951941\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8668\">PR #8668</a>:</p>\n<blockquote>\n<p>For usage in C we compile a <a href=\"http://wasmtime.so\">wasmtime.so</a>. Producing a dynamic library is incompatible with statically linking libc. The musl based binaries also seem to be meant for usage on musl based distros where statically linking libc only has disadvantages. (bigger binaries, not getting security updates to libc)</p>\n</blockquote>",
        "id": 448921699,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720031290
    },
    {
        "content": "<p>bjorn3 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8668#issuecomment-2206951941\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8668\">PR #8668</a>:</p>\n<blockquote>\n<p>For usage in C we compile a <a href=\"http://wasmtime.so\">wasmtime.so</a> dynamic library. Producing a dynamic library is incompatible with statically linking libc. The musl based binaries also seem to be meant for usage on musl based distros where statically linking libc only has disadvantages. (bigger binaries, not getting security updates to libc)</p>\n</blockquote>",
        "id": 448921785,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720031315
    },
    {
        "content": "<p>aambrose-sonatus <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8668#issuecomment-2207437851\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8668\">PR #8668</a>:</p>\n<blockquote>\n<p>Is there anything that precludes compiling the static library version of the embedding (IE <code>libwasmtime.a</code>) as fully static? Perhaps not as an official release artifact, but e.g. when compiling from source oneself or when using wasmtime as a crate dependency for some other binary?</p>\n</blockquote>",
        "id": 448964467,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720047222
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8668#issuecomment-2208242046\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8668\">PR #8668</a>:</p>\n<blockquote>\n<p>If you compile it yourself, I don't see why it shouldn't work.</p>\n</blockquote>",
        "id": 449014330,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720075782
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8668#issuecomment-2214093638\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8668\">PR #8668</a>:</p>\n<blockquote>\n<p>I think that the <code>libwasmtime.a</code> artifact for x86_64-musl should be usable to build a static binary, but I haven't tested that myself. Otherwise though our distribution doesn't have any static binaries for Linux mostly just because no one's asked for it and it's otherwise easier to keep everything built similarly (and all other platforms use dynamic linking)</p>\n<p>@bjorn3 is right though in that when building yourself you should have any option you need available to you for target/static linking/etc.</p>\n</blockquote>",
        "id": 449871132,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720445652
    },
    {
        "content": "<p>aambrose-sonatus <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8668#issuecomment-2215803191\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8668\">PR #8668</a>:</p>\n<blockquote>\n<p>Yeah it seemed to be working on my end; I used zig as the C toolchain so I get full static outputs by default. My questions were more regarding the statement <code>they are not suitable for \"run on any linux distribution\" style use cases</code> and whether this applied to all source builds, or only the publicly released artifacts. It sounds like it's the latter.</p>\n<p>Thank you both!</p>\n</blockquote>",
        "id": 450015515,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720485557
    }
]