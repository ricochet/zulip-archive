[
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1753#issuecomment-633690440\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1753\">Issue #1753</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @peterhuene</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"wasmtime:api\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>peterhuene: wasmtime:api</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 198695773,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590434302
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1753#issuecomment-634063463\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1753\">Issue #1753</a>:</p>\n<blockquote>\n<p>Thanks for this! I'm a little wary to do it, however, because it's a lossy conversion. The original error object contains important contextual information (like the backtrace, list of error contexts, etc), and that all gets lost on conversion into a <code>Trap</code>. One thing we could consider, however, is to refactor the internals of <code>Trap</code> to have a variant of its representation where it stores an <code>anyhow::Error</code> perhaps?</p>\n<p>One thing that'd also be great is if we could support anything that's <code>E: Error</code> or otherwise support other error types via generics rather than just <code>anyhow::Error</code></p>\n</blockquote>",
        "id": 198770340,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590503577
    },
    {
        "content": "<p>leoyvens <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1753#issuecomment-634090047\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1753\">Issue #1753</a>:</p>\n<blockquote>\n<p>Doing a better conversion is out of my depth, but I'd expect that those improvements can be made backwards compatibly. Right now this is the best that can be done with the public API, so this is just making the public API more ergonomic.</p>\n<p>I didn't make this generic over <code>E: Error</code> because I didn't want to create any backwards compatibility hazard wrt to coherence, but I can do so if that's preferred.</p>\n</blockquote>",
        "id": 198777296,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590506169
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1753#issuecomment-634755174\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1753\">Issue #1753</a>:</p>\n<blockquote>\n<p>We've already got an <code>enum TrapReason</code>, so how about doing something like this:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">impl</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"nb\">From</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">Trap</span><span class=\"w\"> </span><span class=\"k\">where</span><span class=\"w\"> </span><span class=\"n\">T</span>: <span class=\"nb\">Into</span><span class=\"o\">&lt;</span><span class=\"n\">anyhow</span>::<span class=\"n\">Error</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"c1\">// ...</span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">enum</span> <span class=\"nc\">TrapReason</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"c1\">// ...</span>\n<span class=\"w\">    </span><span class=\"n\">Error</span><span class=\"p\">(</span><span class=\"n\">anyhow</span>::<span class=\"n\">Error</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">Error</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">Trap</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">source</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"cm\">/* ... */</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n<p>We can figure out later if it's necessary to expose the underlying error's original type, but otherwise for now that will at least sidestep issues with <code>Display</code> vs <code>Debug</code> and we'll be able to get a structure stack of causal errors.</p>\n</blockquote>",
        "id": 198911833,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590594644
    },
    {
        "content": "<p>sunfishcode <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1753#issuecomment-634848421\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1753\">Issue #1753</a>:</p>\n<blockquote>\n<p>FWIW, there are a few existing places that could use that too:</p>\n<div class=\"codehilite\"><pre><span></span><code>$ rg &#39;Trap::new\\(format!\\(&quot;\\{:\\?\\}&quot;&#39;\ncrates/wasmtime/src/linker.rs\n410:                        Err(error) =&gt; Trap::new(format!(&quot;{:?}&quot;, error)),\n\ncrates/c-api/src/error.rs\n14:        Box::new(wasm_trap_t::new(Trap::new(format!(&quot;{:?}&quot;, self.error))))\n</code></pre></div>\n\n\n</blockquote>",
        "id": 198930513,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590603234
    },
    {
        "content": "<p>leoyvens <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1753#issuecomment-634973985\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1753\">Issue #1753</a>:</p>\n<blockquote>\n<p>The suggested <code>impl&lt;T&gt; From&lt;T&gt; for Trap where T: Into&lt;anyhow::Error&gt;</code> conflicts with the reflexive impl <code>impl&lt;T&gt; std::convert::From&lt;T&gt; for T</code> since <code>Trap</code> itself implements <code>Error</code>. I did add a conversion <code>Box&lt;dyn std::error::Error + Send + Sync&gt;</code>.</p>\n<p>Based on the suggestions given and the uses in the project, I added a <code>Error(Box&lt;dyn std::error::Error + Send + Sync&gt;)</code> variant to <code>TrapReason</code> which allowed for some nice refactorings.</p>\n<p><code>Trap::message</code> is confusing to me, imo along with <code>Display</code> and <code>Debug</code> there are too many ways of converting a Trap to a string. But I kept it, though the return type had to be changed to an owned <code>String</code>.</p>\n</blockquote>",
        "id": 198960864,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590618004
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1753#issuecomment-634980553\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1753\">Issue #1753</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @peterhuene</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"wasmtime:c-api\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>peterhuene: wasmtime:c-api</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 198962495,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590619105
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1753#issuecomment-636175894\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1753\">Issue #1753</a>:</p>\n<blockquote>\n<p>This all looks great to me, thanks again for this!</p>\n</blockquote>",
        "id": 199207533,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590783862
    }
]