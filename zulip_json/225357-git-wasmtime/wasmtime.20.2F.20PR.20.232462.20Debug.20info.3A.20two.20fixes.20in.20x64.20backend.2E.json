[
    {
        "content": "<p>cfallin edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2462\">PR #2462</a> from <code>fix-sorted-debug-addr-transform</code> to <code>main</code>:</p>\n<blockquote>\n<ul>\n<li>\n<p>Sort by generated-code offset to maintain invariant and avoid gimli<br>\n  panic.</p>\n</li>\n<li>\n<p>Fix srcloc interaction with branch peephole optimization in<br>\n  MachBuffer: if a srcloc range overlaps with a branch that is<br>\n  truncated, remove that srcloc range.</p>\n</li>\n</ul>\n<p>These issues were found while fuzzing the new backend (#2453); I suspect<br>\nthat they arise with the new backend because we can sink instructions<br>\n(e.g. loads or extends) in more interesting ways than before, but I'm<br>\nnot entirely sure.</p>\n<p>Test coverage will be via the fuzz corpus once #2453 lands.</p>\n</blockquote>",
        "id": 218526171,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606897620
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2462#pullrequestreview-542917094\">PR Review</a>.</p>",
        "id": 218567241,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606920930
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2462#pullrequestreview-542917094\">PR Review</a>.</p>",
        "id": 218567242,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606920930
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2462#discussion_r534230152\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Out of curiosity, is there a speedier accesssor for non-sorted? If we do our own sort afterwards the sort here shouldn't matter too much.</p>\n</blockquote>",
        "id": 218567243,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606920930
    },
    {
        "content": "<p>yurydelendik submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2462#pullrequestreview-542937511\">PR Review</a>.</p>",
        "id": 218570153,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606922077
    },
    {
        "content": "<p>yurydelendik created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2462#discussion_r534245680\">PR Review Comment</a>:</p>\n<blockquote>\n<p>As documented: <code>MachBufferFinalized::get_srclocs_sorted</code> produces sorted-by-start-offset tuples. Do we need to move this logic to the <code>MachBuffer::finish</code>?</p>\n</blockquote>",
        "id": 218570155,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606922078
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2462\">PR #2462</a> from <code>fix-sorted-debug-addr-transform</code> to <code>main</code>:</p>\n<blockquote>\n<ul>\n<li>\n<p>Sort by generated-code offset to maintain invariant and avoid gimli<br>\n  panic.</p>\n</li>\n<li>\n<p>Fix srcloc interaction with branch peephole optimization in<br>\n  MachBuffer: if a srcloc range overlaps with a branch that is<br>\n  truncated, remove that srcloc range.</p>\n</li>\n</ul>\n<p>These issues were found while fuzzing the new backend (#2453); I suspect<br>\nthat they arise with the new backend because we can sink instructions<br>\n(e.g. loads or extends) in more interesting ways than before, but I'm<br>\nnot entirely sure.</p>\n<p>Test coverage will be via the fuzz corpus once #2453 lands.</p>\n</blockquote>",
        "id": 218597775,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606933227
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2462#pullrequestreview-543116632\">PR Review</a>.</p>",
        "id": 218597867,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606933270
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2462#discussion_r534384576\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Ah, yes, good call; for some reason I had assumed that this was sorted by srcloc, not offset. After fixing that (with a sort in <code>MachBuffer::finish()</code> the sort here is not needed anymore. Thanks!</p>\n</blockquote>",
        "id": 218597868,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606933270
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2462#pullrequestreview-543116937\">PR Review</a>.</p>",
        "id": 218597907,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606933292
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2462#discussion_r534384786\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Fixed instead by actually sorting by the right thing in <code>get_srclocs_sorted()</code>!</p>\n</blockquote>",
        "id": 218597909,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606933292
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2462\">PR #2462</a> from <code>fix-sorted-debug-addr-transform</code> to <code>main</code>:</p>\n<blockquote>\n<ul>\n<li>\n<p>Sort by generated-code offset to maintain invariant and avoid gimli<br>\n  panic.</p>\n</li>\n<li>\n<p>Fix srcloc interaction with branch peephole optimization in<br>\n  MachBuffer: if a srcloc range overlaps with a branch that is<br>\n  truncated, remove that srcloc range.</p>\n</li>\n</ul>\n<p>These issues were found while fuzzing the new backend (#2453); I suspect<br>\nthat they arise with the new backend because we can sink instructions<br>\n(e.g. loads or extends) in more interesting ways than before, but I'm<br>\nnot entirely sure.</p>\n<p>Test coverage will be via the fuzz corpus once #2453 lands.</p>\n</blockquote>",
        "id": 218600733,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606934483
    },
    {
        "content": "<p>yurydelendik submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2462#pullrequestreview-543157090\">PR Review</a>.</p>",
        "id": 218604841,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606936412
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2462\">PR #2462</a>.</p>",
        "id": 218606268,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606937086
    }
]