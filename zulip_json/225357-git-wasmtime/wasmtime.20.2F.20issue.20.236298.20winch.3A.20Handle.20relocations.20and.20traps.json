[
    {
        "content": "<p>saulecabrera <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6298#issuecomment-1526095375\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6298\">issue #6298</a>:</p>\n<blockquote>\n<p>@alexcrichton I'd like to get your thoughts on the direction of this change, mainly around the refactoring and sharing of <code>CompiledFunction</code>, given the ideas and thoughts that you've shared in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5944\">https://github.com/bytecodealliance/wasmtime/pull/5944</a>. </p>\n</blockquote>",
        "id": 353418191,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682617766
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6298#issuecomment-1526159402\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6298\">issue #6298</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @saulecabrera</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"winch\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>saulecabrera: winch</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 353441095,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682621092
    },
    {
        "content": "<p>saulecabrera <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6298#issuecomment-1531855387\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6298\">issue #6298</a>:</p>\n<blockquote>\n<p>@alexcrichton I think this is ready for another pass taking into account the feedback that you provided in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6298#discussion_r1179603816\">https://github.com/bytecodealliance/wasmtime/pull/6298#discussion_r1179603816</a>. Unfortunately this change doesn't fulfill your vision entirely; but I was able to considerably move the needle in that direction I think. In practice the <code>traps</code> and <code>relocations</code> can be easily deferred until the <code>append_code</code> step, but I couldn't find a way to do the same with the <code>address_map</code> and <code>unwind_info</code> without the need of a deeper refactoring (which I didn't get into), given that these fields are used in multiple places (<code>append_code</code> + <code>append_dwarf</code>) which requires either calculating them at the very beginning or finding a way to cache them after they are first calculated to be able to reuse them in later steps, which I think is doable but it might increase the scope of this PR further than what I had hoped for, but I think that with a couple more iterations we can get there in follow-up PRs. One thing to note is that I'm not passing a <code>&amp;MachBufferFinalized&lt;Final&gt;</code> to the builder functions, as initially suggested, but instead I'm passing a <code>&amp;CompiledFunction</code> which wraps the buffer and contains all the metadata needed to derive the information at each step.  </p>\n<p>Let me know your thoughts; I'm also happy to revert to the previous state in case you'd prefer to have the fully fleshed out approach as part of this change. </p>\n</blockquote>",
        "id": 355217474,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683047937
    }
]