[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1900\">PR #1900</a> from <code>clarify-lowering-docs</code> to <code>master</code>:</p>\n<blockquote>\n<p>From discussion with Julian and Ben, this PR makes a few documentation-<br>\nand naming-level changes (no functionality change):</p>\n<ul>\n<li>\n<p>Document that the <code>LowerCtx</code>-provided output register can be used as a<br>\n  scratch register during the lowered instruction sequence before<br>\n  placing the final result in it.</p>\n</li>\n<li>\n<p>Rename <code>input_to_*</code> helpers in the AArch64 backend to<br>\n<code>put_input_in_*</code>, emphasizing that these are side-effecting helpers<br>\n  that potentially generate code (e.g., sign/zero-extensions) to ensure<br>\n  an input value is in a register.</p>\n</li>\n</ul>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 201308095,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592505204
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/bnjbvr\">bnjbvr</a> and <a href=\"https://github.com/julian-seward1\">julian-seward1</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1900\">PR #1900</a>.</p>",
        "id": 201308096,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592505204
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/bnjbvr\">bnjbvr</a> and <a href=\"https://github.com/julian-seward1\">julian-seward1</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1900\">PR #1900</a>.</p>",
        "id": 201308097,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592505204
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1900\">PR #1900</a> from <code>clarify-lowering-docs</code> to <code>master</code>:</p>\n<blockquote>\n<p>From discussion with Julian and Ben, this PR makes a few documentation-<br>\nand naming-level changes (no functionality change):</p>\n<ul>\n<li>\n<p>Document that the <code>LowerCtx</code>-provided output register can be used as a<br>\n  scratch register during the lowered instruction sequence before<br>\n  placing the final result in it.</p>\n</li>\n<li>\n<p>Rename <code>input_to_*</code> helpers in the AArch64 backend to<br>\n<code>put_input_in_*</code>, emphasizing that these are side-effecting helpers<br>\n  that potentially generate code (e.g., sign/zero-extensions) to ensure<br>\n  an input value is in a register.</p>\n</li>\n</ul>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 201313927,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592508070
    },
    {
        "content": "<p>julian-seward1 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1900#pullrequestreview-433804359\">PR Review</a>.</p>",
        "id": 201352817,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592543153
    },
    {
        "content": "<p>julian-seward1 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1900#discussion_r442632557\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Indeed, IIUC, <code>it is guaranteed not to overlap with any of the inputs of either this or any other IR instruction</code>, yes?</p>\n</blockquote>",
        "id": 201352818,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592543153
    },
    {
        "content": "<p>julian-seward1 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1900#pullrequestreview-433804359\">PR Review</a>.</p>",
        "id": 201352820,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592543154
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1900#pullrequestreview-434881740\">PR Review</a>.</p>",
        "id": 201600393,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592829851
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1900#pullrequestreview-434881740\">PR Review</a>.</p>",
        "id": 201600394,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592829851
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1900#discussion_r443527948\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This output IR inst could be the input to another IR inst, right? And we're only concerned about usage local to the current IR instruction here. Maybe I'm missing something here?</p>\n</blockquote>",
        "id": 201600395,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592829851
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1900#discussion_r443529973\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Thanks for this renaming which clarifies the side-effects happening here indeed.</p>\n<p>As an alternative, as demonstrated by the changes in this PR, it seems that the narrowing is the edge case, and not the usual thing to do.</p>\n<p>Two propositions:</p>\n<ul>\n<li>either we could add another helper function <code>get_input(ctx, input)</code> which really reads the input and does no side-effect? Callers of <code>put_input_in_reg</code> with <code>NarrowMode::None</code> could call this function instead.</li>\n<li>or we could just remove the NarrowMode parameter all the time, and having another helper function that does the narrowing, separating the different responsibilities more clearly? (I hope to implement it this way on the x64 backend, if possible.)</li>\n</ul>\n</blockquote>",
        "id": 201600396,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592829851
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1900#pullrequestreview-435973916\">PR Review</a>.</p>",
        "id": 201752431,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592931269
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1900#discussion_r444369668\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Yes, as @bnjbvr said, the guarantee is only in the context of the current instruction being lowered (since if it were never used by any other IR instruction either, the computation would be dead).</p>\n</blockquote>",
        "id": 201752432,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592931269
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1900#pullrequestreview-435976312\">PR Review</a>.</p>",
        "id": 201752752,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592931455
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1900#discussion_r444371504\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Sure, I would be fine with the latter; perhaps we can consider this in the context of refactoring to share helpers with the x64 backend? (I'm thinking that e.g. we could define a trait to describe codegen for value widening and then plug that into a generic helper, for example. Similar for codegenning constants. Part of a \"libMachBackend\" of sorts as an optional layer on top of the lowering context API.)</p>\n</blockquote>",
        "id": 201752753,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592931455
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1900\">PR #1900</a>.</p>",
        "id": 201752947,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592931548
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1900#discussion_r444754377\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Good idea!</p>\n</blockquote>",
        "id": 201825803,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592989764
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1900#pullrequestreview-436463928\">PR Review</a>.</p>",
        "id": 201825804,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592989765
    }
]