[
    {
        "content": "<p>coolreader18 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5220\">PR #5220</a> from <code>store-fuel_remaining-set_fuel</code> to <code>main</code>:</p>\n<blockquote>\n<p>Resolves #5109. As discussed there, adds <code>Store::set_fuel</code> and <code>Store::fuel_remaining</code>, which sets the absolute amount of fuel in the store and returns the amount of fuel remaining in the store respectively. In updating the examples and tests, I was already able to change some stuff to be nicer/express intent more clearly. (<code>set_fuel</code> provides more of a use for <code>fuel_consumed</code>! e.g. see examples/fuel.rs).</p>\n<p>This feature doesn't have a maintainer assigned.</p>\n</blockquote>",
        "id": 308489424,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667862108
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5220#pullrequestreview-1172595153\">PR review</a>.</p>",
        "id": 308640403,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667930079
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5220#pullrequestreview-1172595153\">PR review</a>.</p>",
        "id": 308640404,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667930079
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5220#discussion_r1016949285\">PR review comment</a>:</p>\n<blockquote>\n<p>Or <code>add_fuel</code>, right?</p>\n</blockquote>",
        "id": 308640405,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667930079
    },
    {
        "content": "<p>coolreader18 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5220#discussion_r1021904464\">PR review comment</a>:</p>\n<blockquote>\n<p>Ach, sorry this took so long to respond to; but no, add_fuel doesn't reset the fuel counter, that's why <code>fuel_adj</code> exists. add_fuel does like <code>fuel += arg; fuel_adj += arg;</code> so that <code>fuel_consumed</code> can return <code>fuel_adj - fuel</code>. There was a discussion somewhere I saw about concerns with fuel_adj overflowing and personally I'm skeptical of the use-case for fuel_consumed tracking across multiple add_fuels (maybe that's what the c-api requires?), but it'd be a breaking change to change that and I just wanted to provide an alternative with this.</p>\n</blockquote>",
        "id": 309920810,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668449692
    },
    {
        "content": "<p>coolreader18 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5220#pullrequestreview-1179614656\">PR review</a>.</p>",
        "id": 309920814,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668449692
    },
    {
        "content": "<p>alexcrichton closed without merge <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5220\">PR #5220</a>.</p>",
        "id": 398558110,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698266684
    }
]