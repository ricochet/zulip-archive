[
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2976#issuecomment-858526258\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2976\">issue #2976</a>:</p>\n<blockquote>\n<p>The mini_core_hello_world example runs with this PR in combination with the following patch:</p>\n<p>&lt;details&gt;</p>\n<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"gh\">diff --git a/example/mini_core.rs b/example/mini_core.rs</span>\n<span class=\"gh\">index c4834c80..aeec532d 100644</span>\n<span class=\"gd\">--- a/example/mini_core.rs</span>\n<span class=\"gi\">+++ b/example/mini_core.rs</span>\n<span class=\"gu\">@@ -285,9 +285,11 @@ fn ne(&amp;self, other: &amp;u64) -&gt; bool {</span>\n }\n\n impl PartialEq for u128 {\n<span class=\"gi\">+    #[inline]</span>\n     fn eq(&amp;self, other: &amp;u128) -&gt; bool {\n         (*self) == (*other)\n     }\n<span class=\"gi\">+    #[inline]</span>\n     fn ne(&amp;self, other: &amp;u128) -&gt; bool {\n         (*self) != (*other)\n     }\n<span class=\"gu\">@@ -620,11 +622,3 @@ struct PanicLocation {</span>\n     column: u32,\n }\n\n<span class=\"gd\">-#[no_mangle]</span>\n<span class=\"gd\">-#[cfg(not(windows))]</span>\n<span class=\"gd\">-pub fn get_tls() -&gt; u8 {</span>\n<span class=\"gd\">-    #[thread_local]</span>\n<span class=\"gd\">-    static A: u8 = 42;</span>\n<span class=\"gd\">-</span>\n<span class=\"gd\">-    A</span>\n<span class=\"gd\">-}</span>\n<span class=\"gh\">diff --git a/example/mini_core_hello_world.rs b/example/mini_core_hello_world.rs</span>\n<span class=\"gh\">index 6570f2bf..895f6a2e 100644</span>\n<span class=\"gd\">--- a/example/mini_core_hello_world.rs</span>\n<span class=\"gi\">+++ b/example/mini_core_hello_world.rs</span>\n<span class=\"gu\">@@ -287,37 +287,12 @@ struct ExternTypeWrapper {</span>\n     assert_eq!(repeat[0], Some(42));\n     assert_eq!(repeat[1], Some(42));\n\n<span class=\"gd\">-    from_decimal_string();</span>\n<span class=\"gd\">-</span>\n<span class=\"gd\">-    #[cfg(not(any(jit, windows)))]</span>\n<span class=\"gd\">-    test_tls();</span>\n<span class=\"gd\">-</span>\n<span class=\"gd\">-    #[cfg(all(not(jit), target_os = \"linux\"))]</span>\n<span class=\"gd\">-    unsafe {</span>\n<span class=\"gd\">-        global_asm_test();</span>\n<span class=\"gd\">-    }</span>\n<span class=\"gd\">-</span>\n     // Both statics have a reference that points to the same anonymous allocation.\n     static REF1: &amp;u8 = &amp;42;\n     static REF2: &amp;u8 = REF1;\n     assert_eq!(*REF1, *REF2);\n }\n\n<span class=\"gd\">-#[cfg(all(not(jit), target_os = \"linux\"))]</span>\n<span class=\"gd\">-extern \"C\" {</span>\n<span class=\"gd\">-    fn global_asm_test();</span>\n<span class=\"gd\">-}</span>\n<span class=\"gd\">-</span>\n<span class=\"gd\">-#[cfg(all(not(jit), target_os = \"linux\"))]</span>\n<span class=\"gd\">-global_asm! {</span>\n<span class=\"gd\">-    \"</span>\n<span class=\"gd\">-    .global global_asm_test</span>\n<span class=\"gd\">-    global_asm_test:</span>\n<span class=\"gd\">-    // comment that would normally be removed by LLVM</span>\n<span class=\"gd\">-    ret</span>\n<span class=\"gd\">-    \"</span>\n<span class=\"gd\">-}</span>\n<span class=\"gd\">-</span>\n #[repr(C)]\n enum c_void {\n     _1,\n<span class=\"gh\">diff --git a/src/lib.rs b/src/lib.rs</span>\n<span class=\"gh\">index cfc5902c..c154fde3 100644</span>\n<span class=\"gd\">--- a/src/lib.rs</span>\n<span class=\"gi\">+++ b/src/lib.rs</span>\n<span class=\"gu\">@@ -288,7 +288,7 @@ fn build_isa(sess: &amp;Session, backend_config: &amp;BackendConfig) -&gt; Box&lt;dyn isa::Tar</span>\n                 cranelift_codegen::isa::lookup_variant(target_triple, variant).unwrap();\n             // Don't use \"haswell\" as the default, as it implies `has_lzcnt`.\n             // macOS CI is still at Ivy Bridge EP, so `lzcnt` is interpreted as `bsr`.\n<span class=\"gd\">-            builder.enable(\"nehalem\").unwrap();</span>\n<span class=\"gi\">+            //builder.enable(\"nehalem\").unwrap();</span>\n             builder\n         }\n     };\n</code></pre></div>\n<p>&lt;/details&gt;</p>\n</blockquote>",
        "id": 242188965,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623322944
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2976#issuecomment-858803865\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2976\">issue #2976</a>:</p>\n<blockquote>\n<p>CI failures are curious -- the particular relocation enum value seems to be missing in some builds. Old pinned version, or Cargo feature dependency maybe?</p>\n</blockquote>",
        "id": 242240170,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623345311
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2976#issuecomment-858808765\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2976\">issue #2976</a>:</p>\n<blockquote>\n<p>The CI failure is because <a href=\"https://github.com/gimli-rs/object/issues/322\">gimli-rs/object#322</a> needs to be merged first.</p>\n</blockquote>",
        "id": 242241061,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623345714
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2976#issuecomment-858809683\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2976\">issue #2976</a>:</p>\n<blockquote>\n<p>Ah, sorry, missed that it was still pending. Thanks!</p>\n</blockquote>",
        "id": 242241236,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623345782
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2976#issuecomment-860035074\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2976\">issue #2976</a>:</p>\n<blockquote>\n<p>Object released a new version with the change. CI passed.</p>\n</blockquote>",
        "id": 242442943,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623494298
    }
]