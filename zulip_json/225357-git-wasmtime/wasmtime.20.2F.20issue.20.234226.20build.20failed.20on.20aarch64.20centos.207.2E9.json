[
    {
        "content": "<p>bxq2011hust opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4226\">issue #4226</a>:</p>\n<blockquote>\n<p>Thanks for filing a bug report! Please fill out the TODOs below.</p>\n<p><strong>Note: if you want to report a security issue, please read our <a href=\"https://bytecodealliance.org/security\">security policy</a>!</strong></p>\n<h3>Steps to Reproduce</h3>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"c1\"># build on aarch64 centos 7.9</span>\nyum install -y epel-release centos-release-scl\nyum install -y git make llvm-toolset-7 devtoolset-7\n<span class=\"nb\">source</span> /opt/rh/devtoolset-7/enable\n<span class=\"nb\">export</span> <span class=\"nv\">LIBCLANG_PATH</span><span class=\"o\">=</span>/opt/rh/llvm-toolset-7.0/root/lib64/\n<span class=\"nb\">source</span> /opt/rh/llvm-toolset-7.0/enable\n\n<span class=\"nb\">cd</span> crates/fiber\ncargo build\n</code></pre></div>\n<p>the output is</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$ cargo build\n  Downloaded cc v1.0.68 <span class=\"o\">(</span>registry <span class=\"sb\">`</span>ustc<span class=\"sb\">`</span><span class=\"o\">)</span>\n  Downloaded semver v1.0.3 <span class=\"o\">(</span>registry <span class=\"sb\">`</span>ustc<span class=\"sb\">`</span><span class=\"o\">)</span>\n  Downloaded <span class=\"m\">2</span> crates <span class=\"o\">(</span><span class=\"m\">84</span>.9 KB<span class=\"o\">)</span> <span class=\"k\">in</span> <span class=\"m\">1</span>.12s\n   Compiling semver v1.0.3\n   Compiling cc v1.0.68\n   Compiling linux-raw-sys v0.0.36\n   Compiling bitflags v1.3.2\n   Compiling wasmtime-fiber v0.32.0 <span class=\"o\">(</span>/data/home/xingqiangbai/wasmtime/crates/fiber<span class=\"o\">)</span>\n   Compiling rustc_version v0.4.0\nThe following warnings were emitted during compilation:\n\nwarning: src/arch/aarch64.S: Assembler messages:\nwarning: src/arch/aarch64.S:21: Error: operand <span class=\"m\">1</span> must be a floating-point register -- <span class=\"sb\">`</span>stp lr,fp,<span class=\"o\">[</span>sp,-16<span class=\"o\">]</span>!<span class=\"s1\">'</span>\n<span class=\"s1\">warning: src/arch/aarch64.S:50: Error: operand 1 must be a floating-point register -- `ldp lr,fp,[sp],16'</span>\nwarning: src/arch/aarch64.S:90: Error: bad register expression\n\nerror: failed to run custom build <span class=\"nb\">command</span> <span class=\"k\">for</span> <span class=\"sb\">`</span>wasmtime-fiber v0.32.0 <span class=\"o\">(</span>/data/home/xingqiangbai/wasmtime/crates/fiber<span class=\"o\">)</span><span class=\"sb\">`</span>\n\nCaused by:\n  process didn<span class=\"s1\">'t exit successfully: `/data/home/xingqiangbai/wasmtime/target/debug/build/wasmtime-fiber-5d0a77b56f840026/build-script-build` (exit status: 1)</span>\n<span class=\"s1\">  --- stdout</span>\n<span class=\"s1\">  TARGET = Some(\"aarch64-unknown-linux-gnu\")</span>\n<span class=\"s1\">  OPT_LEVEL = Some(\"0\")</span>\n<span class=\"s1\">  HOST = Some(\"aarch64-unknown-linux-gnu\")</span>\n<span class=\"s1\">  CC_aarch64-unknown-linux-gnu = None</span>\n<span class=\"s1\">  CC_aarch64_unknown_linux_gnu = None</span>\n<span class=\"s1\">  HOST_CC = None</span>\n<span class=\"s1\">  CC = None</span>\n<span class=\"s1\">  CFLAGS_aarch64-unknown-linux-gnu = None</span>\n<span class=\"s1\">  CFLAGS_aarch64_unknown_linux_gnu = None</span>\n<span class=\"s1\">  HOST_CFLAGS = None</span>\n<span class=\"s1\">  CFLAGS = None</span>\n<span class=\"s1\">  CRATE_CC_NO_DEFAULTS = None</span>\n<span class=\"s1\">  DEBUG = Some(\"true\")</span>\n<span class=\"s1\">  CARGO_CFG_TARGET_FEATURE = Some(\"neon,pmuv3\")</span>\n<span class=\"s1\">  running: \"cc\" \"-O0\" \"-ffunction-sections\" \"-fdata-sections\" \"-fPIC\" \"-g\" \"-fno-omit-frame-pointer\" \"-Wall\" \"-Wextra\" \"-DCFG_TARGET_OS_linux\" \"-DCFG_TARGET_ARCH_aarch64\" \"-o\" \"/data/home/xingqiangbai/wasmtime/target/debug/build/wasmtime-fiber-3beb5f998a225eb9/out/src/arch/aarch64.o\" \"-c\" \"src/arch/aarch64.S\"</span>\n<span class=\"s1\">  cargo:warning=src/arch/aarch64.S: Assembler messages:</span>\n<span class=\"s1\">  cargo:warning=src/arch/aarch64.S:21: Error: operand 1 must be a floating-point register -- `stp lr,fp,[sp,-16]!'</span>\n  cargo:warning<span class=\"o\">=</span>src/arch/aarch64.S:50: Error: operand <span class=\"m\">1</span> must be a floating-point register -- <span class=\"sb\">`</span>ldp lr,fp,<span class=\"o\">[</span>sp<span class=\"o\">]</span>,16<span class=\"err\">'</span>\n  cargo:warning<span class=\"o\">=</span>src/arch/aarch64.S:90: Error: bad register expression\n  <span class=\"nb\">exit</span> status: <span class=\"m\">1</span>\n\n  --- stderr\n\n\n  error occurred: Command <span class=\"s2\">\"cc\"</span> <span class=\"s2\">\"-O0\"</span> <span class=\"s2\">\"-ffunction-sections\"</span> <span class=\"s2\">\"-fdata-sections\"</span> <span class=\"s2\">\"-fPIC\"</span> <span class=\"s2\">\"-g\"</span> <span class=\"s2\">\"-fno-omit-frame-pointer\"</span> <span class=\"s2\">\"-Wall\"</span> <span class=\"s2\">\"-Wextra\"</span> <span class=\"s2\">\"-DCFG_TARGET_OS_linux\"</span> <span class=\"s2\">\"-DCFG_TARGET_ARCH_aarch64\"</span> <span class=\"s2\">\"-o\"</span> <span class=\"s2\">\"/data/home/xingqiangbai/wasmtime/target/debug/build/wasmtime-fiber-3beb5f998a225eb9/out/src/arch/aarch64.o\"</span> <span class=\"s2\">\"-c\"</span> <span class=\"s2\">\"src/arch/aarch64.S\"</span> with args <span class=\"s2\">\"cc\"</span> did not execute successfully <span class=\"o\">(</span>status code <span class=\"nb\">exit</span> status: <span class=\"m\">1</span><span class=\"o\">)</span>.\n\n\nwarning: build failed, waiting <span class=\"k\">for</span> other <span class=\"nb\">jobs</span> to finish...\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>Build successfully. <br>\nIt works on m1 mac and a virtual machine(ubuntu 20.04 aarch64) on m1 mac.</p>\n</blockquote>",
        "id": 285080831,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654498075
    },
    {
        "content": "<p>bxq2011hust labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4226\">issue #4226</a>:</p>\n<blockquote>\n<p>Thanks for filing a bug report! Please fill out the TODOs below.</p>\n<p><strong>Note: if you want to report a security issue, please read our <a href=\"https://bytecodealliance.org/security\">security policy</a>!</strong></p>\n<h3>Steps to Reproduce</h3>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"c1\"># build on aarch64 centos 7.9</span>\nyum install -y epel-release centos-release-scl\nyum install -y git make llvm-toolset-7 devtoolset-7\n<span class=\"nb\">source</span> /opt/rh/devtoolset-7/enable\n<span class=\"nb\">export</span> <span class=\"nv\">LIBCLANG_PATH</span><span class=\"o\">=</span>/opt/rh/llvm-toolset-7.0/root/lib64/\n<span class=\"nb\">source</span> /opt/rh/llvm-toolset-7.0/enable\n\n<span class=\"nb\">cd</span> crates/fiber\ncargo build\n</code></pre></div>\n<p>the output is</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$ cargo build\n  Downloaded cc v1.0.68 <span class=\"o\">(</span>registry <span class=\"sb\">`</span>ustc<span class=\"sb\">`</span><span class=\"o\">)</span>\n  Downloaded semver v1.0.3 <span class=\"o\">(</span>registry <span class=\"sb\">`</span>ustc<span class=\"sb\">`</span><span class=\"o\">)</span>\n  Downloaded <span class=\"m\">2</span> crates <span class=\"o\">(</span><span class=\"m\">84</span>.9 KB<span class=\"o\">)</span> <span class=\"k\">in</span> <span class=\"m\">1</span>.12s\n   Compiling semver v1.0.3\n   Compiling cc v1.0.68\n   Compiling linux-raw-sys v0.0.36\n   Compiling bitflags v1.3.2\n   Compiling wasmtime-fiber v0.32.0 <span class=\"o\">(</span>/data/home/xingqiangbai/wasmtime/crates/fiber<span class=\"o\">)</span>\n   Compiling rustc_version v0.4.0\nThe following warnings were emitted during compilation:\n\nwarning: src/arch/aarch64.S: Assembler messages:\nwarning: src/arch/aarch64.S:21: Error: operand <span class=\"m\">1</span> must be a floating-point register -- <span class=\"sb\">`</span>stp lr,fp,<span class=\"o\">[</span>sp,-16<span class=\"o\">]</span>!<span class=\"s1\">'</span>\n<span class=\"s1\">warning: src/arch/aarch64.S:50: Error: operand 1 must be a floating-point register -- `ldp lr,fp,[sp],16'</span>\nwarning: src/arch/aarch64.S:90: Error: bad register expression\n\nerror: failed to run custom build <span class=\"nb\">command</span> <span class=\"k\">for</span> <span class=\"sb\">`</span>wasmtime-fiber v0.32.0 <span class=\"o\">(</span>/data/home/xingqiangbai/wasmtime/crates/fiber<span class=\"o\">)</span><span class=\"sb\">`</span>\n\nCaused by:\n  process didn<span class=\"s1\">'t exit successfully: `/data/home/xingqiangbai/wasmtime/target/debug/build/wasmtime-fiber-5d0a77b56f840026/build-script-build` (exit status: 1)</span>\n<span class=\"s1\">  --- stdout</span>\n<span class=\"s1\">  TARGET = Some(\"aarch64-unknown-linux-gnu\")</span>\n<span class=\"s1\">  OPT_LEVEL = Some(\"0\")</span>\n<span class=\"s1\">  HOST = Some(\"aarch64-unknown-linux-gnu\")</span>\n<span class=\"s1\">  CC_aarch64-unknown-linux-gnu = None</span>\n<span class=\"s1\">  CC_aarch64_unknown_linux_gnu = None</span>\n<span class=\"s1\">  HOST_CC = None</span>\n<span class=\"s1\">  CC = None</span>\n<span class=\"s1\">  CFLAGS_aarch64-unknown-linux-gnu = None</span>\n<span class=\"s1\">  CFLAGS_aarch64_unknown_linux_gnu = None</span>\n<span class=\"s1\">  HOST_CFLAGS = None</span>\n<span class=\"s1\">  CFLAGS = None</span>\n<span class=\"s1\">  CRATE_CC_NO_DEFAULTS = None</span>\n<span class=\"s1\">  DEBUG = Some(\"true\")</span>\n<span class=\"s1\">  CARGO_CFG_TARGET_FEATURE = Some(\"neon,pmuv3\")</span>\n<span class=\"s1\">  running: \"cc\" \"-O0\" \"-ffunction-sections\" \"-fdata-sections\" \"-fPIC\" \"-g\" \"-fno-omit-frame-pointer\" \"-Wall\" \"-Wextra\" \"-DCFG_TARGET_OS_linux\" \"-DCFG_TARGET_ARCH_aarch64\" \"-o\" \"/data/home/xingqiangbai/wasmtime/target/debug/build/wasmtime-fiber-3beb5f998a225eb9/out/src/arch/aarch64.o\" \"-c\" \"src/arch/aarch64.S\"</span>\n<span class=\"s1\">  cargo:warning=src/arch/aarch64.S: Assembler messages:</span>\n<span class=\"s1\">  cargo:warning=src/arch/aarch64.S:21: Error: operand 1 must be a floating-point register -- `stp lr,fp,[sp,-16]!'</span>\n  cargo:warning<span class=\"o\">=</span>src/arch/aarch64.S:50: Error: operand <span class=\"m\">1</span> must be a floating-point register -- <span class=\"sb\">`</span>ldp lr,fp,<span class=\"o\">[</span>sp<span class=\"o\">]</span>,16<span class=\"err\">'</span>\n  cargo:warning<span class=\"o\">=</span>src/arch/aarch64.S:90: Error: bad register expression\n  <span class=\"nb\">exit</span> status: <span class=\"m\">1</span>\n\n  --- stderr\n\n\n  error occurred: Command <span class=\"s2\">\"cc\"</span> <span class=\"s2\">\"-O0\"</span> <span class=\"s2\">\"-ffunction-sections\"</span> <span class=\"s2\">\"-fdata-sections\"</span> <span class=\"s2\">\"-fPIC\"</span> <span class=\"s2\">\"-g\"</span> <span class=\"s2\">\"-fno-omit-frame-pointer\"</span> <span class=\"s2\">\"-Wall\"</span> <span class=\"s2\">\"-Wextra\"</span> <span class=\"s2\">\"-DCFG_TARGET_OS_linux\"</span> <span class=\"s2\">\"-DCFG_TARGET_ARCH_aarch64\"</span> <span class=\"s2\">\"-o\"</span> <span class=\"s2\">\"/data/home/xingqiangbai/wasmtime/target/debug/build/wasmtime-fiber-3beb5f998a225eb9/out/src/arch/aarch64.o\"</span> <span class=\"s2\">\"-c\"</span> <span class=\"s2\">\"src/arch/aarch64.S\"</span> with args <span class=\"s2\">\"cc\"</span> did not execute successfully <span class=\"o\">(</span>status code <span class=\"nb\">exit</span> status: <span class=\"m\">1</span><span class=\"o\">)</span>.\n\n\nwarning: build failed, waiting <span class=\"k\">for</span> other <span class=\"nb\">jobs</span> to finish...\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>Build successfully. <br>\nIt works on m1 mac and a virtual machine(ubuntu 20.04 aarch64) on m1 mac.</p>\n</blockquote>",
        "id": 285080832,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654498075
    },
    {
        "content": "<p>bxq2011hust edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4226\">issue #4226</a>:</p>\n<blockquote>\n<h3>Steps to Reproduce</h3>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"c1\"># build on aarch64 centos 7.9</span>\nyum install -y epel-release centos-release-scl\nyum install -y git make llvm-toolset-7 devtoolset-7\n<span class=\"nb\">source</span> /opt/rh/devtoolset-7/enable\n<span class=\"nb\">export</span> <span class=\"nv\">LIBCLANG_PATH</span><span class=\"o\">=</span>/opt/rh/llvm-toolset-7.0/root/lib64/\n<span class=\"nb\">source</span> /opt/rh/llvm-toolset-7.0/enable\n\n<span class=\"nb\">cd</span> crates/fiber\ncargo build\n</code></pre></div>\n<p>the output is</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$ cargo build\n  Downloaded cc v1.0.68 <span class=\"o\">(</span>registry <span class=\"sb\">`</span>ustc<span class=\"sb\">`</span><span class=\"o\">)</span>\n  Downloaded semver v1.0.3 <span class=\"o\">(</span>registry <span class=\"sb\">`</span>ustc<span class=\"sb\">`</span><span class=\"o\">)</span>\n  Downloaded <span class=\"m\">2</span> crates <span class=\"o\">(</span><span class=\"m\">84</span>.9 KB<span class=\"o\">)</span> <span class=\"k\">in</span> <span class=\"m\">1</span>.12s\n   Compiling semver v1.0.3\n   Compiling cc v1.0.68\n   Compiling linux-raw-sys v0.0.36\n   Compiling bitflags v1.3.2\n   Compiling wasmtime-fiber v0.32.0 <span class=\"o\">(</span>/data/home/xingqiangbai/wasmtime/crates/fiber<span class=\"o\">)</span>\n   Compiling rustc_version v0.4.0\nThe following warnings were emitted during compilation:\n\nwarning: src/arch/aarch64.S: Assembler messages:\nwarning: src/arch/aarch64.S:21: Error: operand <span class=\"m\">1</span> must be a floating-point register -- <span class=\"sb\">`</span>stp lr,fp,<span class=\"o\">[</span>sp,-16<span class=\"o\">]</span>!<span class=\"s1\">'</span>\n<span class=\"s1\">warning: src/arch/aarch64.S:50: Error: operand 1 must be a floating-point register -- `ldp lr,fp,[sp],16'</span>\nwarning: src/arch/aarch64.S:90: Error: bad register expression\n\nerror: failed to run custom build <span class=\"nb\">command</span> <span class=\"k\">for</span> <span class=\"sb\">`</span>wasmtime-fiber v0.32.0 <span class=\"o\">(</span>/data/home/xingqiangbai/wasmtime/crates/fiber<span class=\"o\">)</span><span class=\"sb\">`</span>\n\nCaused by:\n  process didn<span class=\"s1\">'t exit successfully: `/data/home/xingqiangbai/wasmtime/target/debug/build/wasmtime-fiber-5d0a77b56f840026/build-script-build` (exit status: 1)</span>\n<span class=\"s1\">  --- stdout</span>\n<span class=\"s1\">  TARGET = Some(\"aarch64-unknown-linux-gnu\")</span>\n<span class=\"s1\">  OPT_LEVEL = Some(\"0\")</span>\n<span class=\"s1\">  HOST = Some(\"aarch64-unknown-linux-gnu\")</span>\n<span class=\"s1\">  CC_aarch64-unknown-linux-gnu = None</span>\n<span class=\"s1\">  CC_aarch64_unknown_linux_gnu = None</span>\n<span class=\"s1\">  HOST_CC = None</span>\n<span class=\"s1\">  CC = None</span>\n<span class=\"s1\">  CFLAGS_aarch64-unknown-linux-gnu = None</span>\n<span class=\"s1\">  CFLAGS_aarch64_unknown_linux_gnu = None</span>\n<span class=\"s1\">  HOST_CFLAGS = None</span>\n<span class=\"s1\">  CFLAGS = None</span>\n<span class=\"s1\">  CRATE_CC_NO_DEFAULTS = None</span>\n<span class=\"s1\">  DEBUG = Some(\"true\")</span>\n<span class=\"s1\">  CARGO_CFG_TARGET_FEATURE = Some(\"neon,pmuv3\")</span>\n<span class=\"s1\">  running: \"cc\" \"-O0\" \"-ffunction-sections\" \"-fdata-sections\" \"-fPIC\" \"-g\" \"-fno-omit-frame-pointer\" \"-Wall\" \"-Wextra\" \"-DCFG_TARGET_OS_linux\" \"-DCFG_TARGET_ARCH_aarch64\" \"-o\" \"/data/home/xingqiangbai/wasmtime/target/debug/build/wasmtime-fiber-3beb5f998a225eb9/out/src/arch/aarch64.o\" \"-c\" \"src/arch/aarch64.S\"</span>\n<span class=\"s1\">  cargo:warning=src/arch/aarch64.S: Assembler messages:</span>\n<span class=\"s1\">  cargo:warning=src/arch/aarch64.S:21: Error: operand 1 must be a floating-point register -- `stp lr,fp,[sp,-16]!'</span>\n  cargo:warning<span class=\"o\">=</span>src/arch/aarch64.S:50: Error: operand <span class=\"m\">1</span> must be a floating-point register -- <span class=\"sb\">`</span>ldp lr,fp,<span class=\"o\">[</span>sp<span class=\"o\">]</span>,16<span class=\"err\">'</span>\n  cargo:warning<span class=\"o\">=</span>src/arch/aarch64.S:90: Error: bad register expression\n  <span class=\"nb\">exit</span> status: <span class=\"m\">1</span>\n\n  --- stderr\n\n\n  error occurred: Command <span class=\"s2\">\"cc\"</span> <span class=\"s2\">\"-O0\"</span> <span class=\"s2\">\"-ffunction-sections\"</span> <span class=\"s2\">\"-fdata-sections\"</span> <span class=\"s2\">\"-fPIC\"</span> <span class=\"s2\">\"-g\"</span> <span class=\"s2\">\"-fno-omit-frame-pointer\"</span> <span class=\"s2\">\"-Wall\"</span> <span class=\"s2\">\"-Wextra\"</span> <span class=\"s2\">\"-DCFG_TARGET_OS_linux\"</span> <span class=\"s2\">\"-DCFG_TARGET_ARCH_aarch64\"</span> <span class=\"s2\">\"-o\"</span> <span class=\"s2\">\"/data/home/xingqiangbai/wasmtime/target/debug/build/wasmtime-fiber-3beb5f998a225eb9/out/src/arch/aarch64.o\"</span> <span class=\"s2\">\"-c\"</span> <span class=\"s2\">\"src/arch/aarch64.S\"</span> with args <span class=\"s2\">\"cc\"</span> did not execute successfully <span class=\"o\">(</span>status code <span class=\"nb\">exit</span> status: <span class=\"m\">1</span><span class=\"o\">)</span>.\n\n\nwarning: build failed, waiting <span class=\"k\">for</span> other <span class=\"nb\">jobs</span> to finish...\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>Build successfully. <br>\nIt works on m1 mac and a virtual machine(ubuntu 20.04 aarch64) on m1 mac.</p>\n</blockquote>",
        "id": 285080880,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654498092
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4226#issuecomment-1147124084\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4226\">issue #4226</a>:</p>\n<blockquote>\n<p>@bxq2011hust thanks for the report! Can you show the output of <code>cc --version</code> and <code>as --version</code>?</p>\n<p>I suspect that really old versions of GNU as may not support referring to the <code>fp</code> and <code>lr</code> registers as <code>fp</code> and <code>lr</code> -- see e.g. the patch in Comment 8 on this WebKit bug: <a href=\"https://bugs.webkit.org/show_bug.cgi?id=175512\">https://bugs.webkit.org/show_bug.cgi?id=175512</a></p>\n<p>If so, we could modify our assembly to always spell these as <code>x29</code> and <code>x30</code> respectively, though that's a bit unfortunate... cc @akirilov-arm , thoughts on this re: aarch64 toolchain requirements/expectations?</p>\n</blockquote>",
        "id": 285082097,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654499517
    },
    {
        "content": "<p>cfallin edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4226#issuecomment-1147124084\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4226\">issue #4226</a>:</p>\n<blockquote>\n<p>@bxq2011hust thanks for the report! Can you show the output of <code>cc --version</code> and <code>as --version</code>?</p>\n<p>I suspect that really old versions of GNU <code>as</code> may not support referring to the <code>fp</code> and <code>lr</code> registers as <code>fp</code> and <code>lr</code> -- see e.g. the patch in Comment 8 on this WebKit bug: <a href=\"https://bugs.webkit.org/show_bug.cgi?id=175512\">https://bugs.webkit.org/show_bug.cgi?id=175512</a></p>\n<p>If so, we could modify our assembly to always spell these as <code>x29</code> and <code>x30</code> respectively, though that's a bit unfortunate... cc @akirilov-arm , thoughts on this re: aarch64 toolchain requirements/expectations?</p>\n</blockquote>",
        "id": 285082149,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654499541
    },
    {
        "content": "<p>bxq2011hust <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4226#issuecomment-1147137284\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4226\">issue #4226</a>:</p>\n<blockquote>\n<blockquote>\n<p>@bxq2011hust thanks for the report! Can you show the output of <code>cc --version</code> and <code>as --version</code>?</p>\n<p>I suspect that really old versions of GNU <code>as</code> may not support referring to the <code>fp</code> and <code>lr</code> registers as <code>fp</code> and <code>lr</code> -- see e.g. the patch in Comment 8 on this WebKit bug: <a href=\"https://bugs.webkit.org/show_bug.cgi?id=175512\">https://bugs.webkit.org/show_bug.cgi?id=175512</a></p>\n<p>If so, we could modify our assembly to always spell these as <code>x29</code> and <code>x30</code> respectively, though that's a bit unfortunate... cc @akirilov-arm , thoughts on this re: aarch64 toolchain requirements/expectations?</p>\n</blockquote>\n<p>Thanks very much. I compare ubuntu 20.04 and CentOS7 and found that ubuntu 20.04 use gcc9. I tried gcc9 on aarch64 CentOS7, now it works fine.</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>cc --version\ncc <span class=\"o\">(</span>GCC<span class=\"o\">)</span> <span class=\"m\">7</span>.3.1 <span class=\"m\">20180303</span> <span class=\"o\">(</span>Red Hat <span class=\"m\">7</span>.3.1-5<span class=\"o\">)</span>\nCopyright <span class=\"o\">(</span>C<span class=\"o\">)</span> <span class=\"m\">2017</span> Free Software Foundation, Inc.\nThis is free software<span class=\"p\">;</span> see the <span class=\"nb\">source</span> <span class=\"k\">for</span> copying conditions.  There is NO\nwarranty<span class=\"p\">;</span> not even <span class=\"k\">for</span> MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n\nas --version\nGNU assembler version <span class=\"m\">2</span>.28-11.el7\nCopyright <span class=\"o\">(</span>C<span class=\"o\">)</span> <span class=\"m\">2017</span> Free Software Foundation, Inc.\nThis program is free software<span class=\"p\">;</span> you may redistribute it under the terms of\nthe GNU General Public License version <span class=\"m\">3</span> or later.\nThis program has absolutely no warranty.\nThis assembler was configured <span class=\"k\">for</span> a target of <span class=\"sb\">`</span>aarch64-redhat-linux<span class=\"err\">'</span>.\n</code></pre></div>\n</blockquote>",
        "id": 285082919,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654500460
    },
    {
        "content": "<p>bxq2011hust edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4226#issuecomment-1147137284\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4226\">issue #4226</a>:</p>\n<blockquote>\n<blockquote>\n<p>@bxq2011hust thanks for the report! Can you show the output of <code>cc --version</code> and <code>as --version</code>?</p>\n<p>I suspect that really old versions of GNU <code>as</code> may not support referring to the <code>fp</code> and <code>lr</code> registers as <code>fp</code> and <code>lr</code> -- see e.g. the patch in Comment 8 on this WebKit bug: <a href=\"https://bugs.webkit.org/show_bug.cgi?id=175512\">https://bugs.webkit.org/show_bug.cgi?id=175512</a></p>\n<p>If so, we could modify our assembly to always spell these as <code>x29</code> and <code>x30</code> respectively, though that's a bit unfortunate... cc @akirilov-arm , thoughts on this re: aarch64 toolchain requirements/expectations?</p>\n</blockquote>\n<p>Thanks very much. I compare ubuntu 20.04 and CentOS7 and found that ubuntu 20.04 use gcc9. I tried gcc9 on aarch64 CentOS7, now it works fine. @cfallin </p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>cc --version\ncc <span class=\"o\">(</span>GCC<span class=\"o\">)</span> <span class=\"m\">7</span>.3.1 <span class=\"m\">20180303</span> <span class=\"o\">(</span>Red Hat <span class=\"m\">7</span>.3.1-5<span class=\"o\">)</span>\nCopyright <span class=\"o\">(</span>C<span class=\"o\">)</span> <span class=\"m\">2017</span> Free Software Foundation, Inc.\nThis is free software<span class=\"p\">;</span> see the <span class=\"nb\">source</span> <span class=\"k\">for</span> copying conditions.  There is NO\nwarranty<span class=\"p\">;</span> not even <span class=\"k\">for</span> MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n\nas --version\nGNU assembler version <span class=\"m\">2</span>.28-11.el7\nCopyright <span class=\"o\">(</span>C<span class=\"o\">)</span> <span class=\"m\">2017</span> Free Software Foundation, Inc.\nThis program is free software<span class=\"p\">;</span> you may redistribute it under the terms of\nthe GNU General Public License version <span class=\"m\">3</span> or later.\nThis program has absolutely no warranty.\nThis assembler was configured <span class=\"k\">for</span> a target of <span class=\"sb\">`</span>aarch64-redhat-linux<span class=\"err\">'</span>.\n</code></pre></div>\n</blockquote>",
        "id": 285082971,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654500493
    },
    {
        "content": "<p>akirilov-arm <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4226#issuecomment-1147493060\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4226\">issue #4226</a>:</p>\n<blockquote>\n<p>I think it is reasonable to support older toolchain versions, provided that it is not too much of a hassle, which seems to be the case here. Personally, I think I have found myself wondering what register numbers <code>fp</code> and <code>lr</code> correspond to more often than the other way round, so I'd say that the proposed fix wouldn't even necessarily diminish readability.</p>\n<p>I will incorparate the fix in PR #4195, since I am tinkering with the fiber code anyway.</p>\n</blockquote>",
        "id": 285117556,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654524748
    },
    {
        "content": "<p>bxq2011hust edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4226#issuecomment-1147137284\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4226\">issue #4226</a>:</p>\n<blockquote>\n<blockquote>\n<p>@bxq2011hust thanks for the report! Can you show the output of <code>cc --version</code> and <code>as --version</code>?</p>\n<p>I suspect that really old versions of GNU <code>as</code> may not support referring to the <code>fp</code> and <code>lr</code> registers as <code>fp</code> and <code>lr</code> -- see e.g. the patch in Comment 8 on this WebKit bug: <a href=\"https://bugs.webkit.org/show_bug.cgi?id=175512\">https://bugs.webkit.org/show_bug.cgi?id=175512</a></p>\n<p>If so, we could modify our assembly to always spell these as <code>x29</code> and <code>x30</code> respectively, though that's a bit unfortunate... cc @akirilov-arm , thoughts on this re: aarch64 toolchain requirements/expectations?</p>\n</blockquote>\n<p>Thanks very much. I compare ubuntu 20.04 with CentOS7 and found that ubuntu 20.04 use gcc9. I tried gcc9 on aarch64 CentOS7, now it works fine. @cfallin </p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>cc --version\ncc <span class=\"o\">(</span>GCC<span class=\"o\">)</span> <span class=\"m\">7</span>.3.1 <span class=\"m\">20180303</span> <span class=\"o\">(</span>Red Hat <span class=\"m\">7</span>.3.1-5<span class=\"o\">)</span>\nCopyright <span class=\"o\">(</span>C<span class=\"o\">)</span> <span class=\"m\">2017</span> Free Software Foundation, Inc.\nThis is free software<span class=\"p\">;</span> see the <span class=\"nb\">source</span> <span class=\"k\">for</span> copying conditions.  There is NO\nwarranty<span class=\"p\">;</span> not even <span class=\"k\">for</span> MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n\nas --version\nGNU assembler version <span class=\"m\">2</span>.28-11.el7\nCopyright <span class=\"o\">(</span>C<span class=\"o\">)</span> <span class=\"m\">2017</span> Free Software Foundation, Inc.\nThis program is free software<span class=\"p\">;</span> you may redistribute it under the terms of\nthe GNU General Public License version <span class=\"m\">3</span> or later.\nThis program has absolutely no warranty.\nThis assembler was configured <span class=\"k\">for</span> a target of <span class=\"sb\">`</span>aarch64-redhat-linux<span class=\"err\">'</span>.\n</code></pre></div>\n</blockquote>",
        "id": 285194821,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654566972
    }
]