[
    {
        "content": "<p>jeffcharles opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7449\">PR #7449</a> from <code>jeffcharles:winch-popcnt-should-check-sse-flag</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;<br>\nI noticed a failure in Winch's fuzzing with the following:</p>\n<div class=\"codehilite\" data-code-language=\"WebAssembly\"><pre><span></span><code><span class=\"p\">(</span><span class=\"k\">module</span>\n  <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;0;)</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i64</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"kt\">i64</span><span class=\"p\">)))</span>\n  <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"cm\">(;0;)</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i64</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"kt\">i64</span><span class=\"p\">)</span>\n    <span class=\"nb\">local.get</span> <span class=\"mi\">0</span>\n    <span class=\"nb\">i64.popcnt</span>\n  <span class=\"p\">)</span>\n  <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"test\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n<p>with a configuration where <code>has_popcnt</code> was set to <code>true</code> but <code>has_sse42</code> was set to <code>false</code> with an error message saying:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Cannot</span><span class=\"w\"> </span><span class=\"n\">emit</span><span class=\"w\"> </span><span class=\"n\">inst</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">popcntq</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rax</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">ISA</span><span class=\"w\"> </span><span class=\"n\">requirements</span>: <span class=\"p\">[</span><span class=\"n\">Popcnt</span><span class=\"p\">]</span>\n</code></pre></div>\n<p>I was able to reproduce the error message with the two new file tests in this PR.</p>\n<p>Adding a check in the macroassember to use the fallback if either flag is missing appears to resolve the issue.</p>\n</blockquote>",
        "id": 399774071,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698862051
    },
    {
        "content": "<p><strong>jeffcharles</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7449\">PR #7449</a>.</p>",
        "id": 399774072,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698862051
    },
    {
        "content": "<p><strong>jeffcharles</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7449\">PR #7449</a>.</p>",
        "id": 399774073,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698862051
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7449#pullrequestreview-1708765740\">PR review</a>:</p>\n<blockquote>\n<p>Thanks!</p>\n</blockquote>",
        "id": 399774331,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698862173
    },
    {
        "content": "<p>fitzgen has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7449\">PR #7449</a>.</p>",
        "id": 399774346,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698862180
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7449\">PR #7449</a>.</p>",
        "id": 399783722,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698865450
    }
]