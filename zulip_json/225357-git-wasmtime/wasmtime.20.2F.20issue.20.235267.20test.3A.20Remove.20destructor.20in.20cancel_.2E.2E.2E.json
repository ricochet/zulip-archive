[
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5267#issuecomment-1315443184\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5267\">issue #5267</a>:</p>\n<blockquote>\n<p>Thanks for the PR, but I believe the test is working as intended. The test intentionally is moving the destructor into the returned future, not as part of simply the initial closure to create the future.</p>\n</blockquote>",
        "id": 310220694,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668524787
    },
    {
        "content": "<p>MediosZ <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5267#issuecomment-1315479619\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5267\">issue #5267</a>:</p>\n<blockquote>\n<p>Thanks for the clarification!<br>\nBut why calling the destructor before yielding?<br>\nNow the destructor is called before cancelling the future.</p>\n</blockquote>",
        "id": 310226053,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668526312
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5267#issuecomment-1315627769\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5267\">issue #5267</a>:</p>\n<blockquote>\n<p>The destructor isn't called due to the <code>&amp;</code> in <code>drop(&amp;dtor)</code>, that just serves for moving it into the future where it's forced to live in the automatically-closed-over-environment until the end.</p>\n</blockquote>",
        "id": 310248449,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668532489
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5267#issuecomment-1315641207\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5267\">issue #5267</a>:</p>\n<blockquote>\n<p>Wow, that's subtle. I would never have guessed that's what <code>drop(&amp;dtor);</code> was intended to do there.</p>\n<p>Would something like <code>let dtor = dtor;</code> work instead? Or moving the <code>let dtor = SetOnDrop(caller);</code> statement to inside the closure?</p>\n<p>At the least, @MediosZ, if you wanted to turn this PR into one that adds a comment explaining what's going on, that would be super helpful to anyone looking at this test later.</p>\n</blockquote>",
        "id": 310250660,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668533113
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5267#issuecomment-1315687143\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5267\">issue #5267</a>:</p>\n<blockquote>\n<p>Sure yeah I don't mind how this is written, I just want to make sure the test tests what it's supposed to test.</p>\n</blockquote>",
        "id": 310258987,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668535657
    },
    {
        "content": "<p>MediosZ <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5267#issuecomment-1316295060\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5267\">issue #5267</a>:</p>\n<blockquote>\n<p>Sure, I believe a comment is needed to explain what happens here.</p>\n</blockquote>",
        "id": 310334791,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668571304
    }
]