[
    {
        "content": "<p>Kmeakin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6037\">PR #6037</a> from <code>icmp-numeric-limits</code> to <code>main</code>:</p>\n<blockquote>\n<p>Adds the following rewrites:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">ult</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">.</span>\n<span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">ule</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">eq</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">ugt</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">ne</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">).</span>\n<span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">uge</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">.</span>\n\n<span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">ult</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">UMAX</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">ne</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">UMAX</span><span class=\"p\">).</span>\n<span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">ule</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">UMAX</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">.</span>\n<span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">ugt</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">UMAX</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">.</span>\n<span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">uge</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">UMAX</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">eq</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">UMAX</span><span class=\"p\">).</span>\n\n<span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">slt</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">SMIN</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">.</span>\n<span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">sle</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">SMIN</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">eq</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">SMIN</span><span class=\"p\">).</span>\n<span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">sgt</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">SMIN</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">ne</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">SMIN</span><span class=\"p\">).</span>\n<span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">sge</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">SMIN</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">.</span>\n\n<span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">slt</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">SMAX</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">ne</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">SMAX</span><span class=\"p\">).</span>\n<span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">sle</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">SMAX</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">.</span>\n<span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">sgt</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">SMAX</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">.</span>\n<span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">sge</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">SMAX</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">eq</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">SMAX</span><span class=\"p\">).</span>\n</code></pre></div>\n<p>Also adds <code>ty_umin</code>, <code>ty_umax</code>, <code>ty_smin</code> and <code>ty_smax</code> constructors</p>\n</blockquote>",
        "id": 342441684,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679009359
    },
    {
        "content": "<p>cfallin assigned <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6037\">PR #6037</a> to cfallin.</p>",
        "id": 342442422,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679009729
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6037#pullrequestreview-1345009738\">PR review</a>.</p>",
        "id": 342443467,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679010277
    },
    {
        "content": "<p>Kmeakin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6037\">PR #6037</a> (assigned to cfallin) from <code>icmp-numeric-limits</code> to <code>main</code>.</p>",
        "id": 342456818,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679018128
    },
    {
        "content": "<p><strong>Kmeakin</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6037\">PR #6037</a>.</p>",
        "id": 342456834,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679018150
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6037#pullrequestreview-1346509368\">PR review</a>.</p>",
        "id": 342643974,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679079264
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6037\">PR #6037</a>.</p>",
        "id": 342654450,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679082939
    }
]