[
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5546#issuecomment-1376374387\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5546\">issue #5546</a>:</p>\n<blockquote>\n<blockquote>\n<p>Perhaps we should take advantage of the egraph ability to represent equivalencies with a (simplify (icmp ty cc x y) (icmp ty (intcc_reverse cc) y x) rule.</p>\n</blockquote>\n<p>Yeah, that sounds like a good idea, I'll try that!</p>\n<blockquote>\n<p>The same reasoning should work on vectors; I think copying each of these rules for vselect of icmp should work.</p>\n</blockquote>\n<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span>, I'll add those in this PR if that's OK with you. </p>\n<blockquote>\n<p>Is there an equivalent floating-point rewrite? NaNs make my head hurt.</p>\n</blockquote>\n<p>I'm not sure, </p>\n<blockquote>\n<p>I'd love to see Sightglass benchmark figures for this PR. I think you can do /bench_x64 but I can't; it looks like my username isn't in the list in performance.yml.</p>\n</blockquote>\n<p>I don't expect any benefits for x86 since I think right now we lower <code>min</code>/<code>max</code> as <code>cmp</code>+<code>cmov*</code> which is the same as the unoptimized form, but we can try it. Although we might see some benefits on the <code>vselect</code> version (maybe?).</p>\n<p>/bench_x64</p>\n</blockquote>",
        "id": 320337334,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673300931
    },
    {
        "content": "<p>afonso360 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5546#issuecomment-1376374387\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5546\">issue #5546</a>:</p>\n<blockquote>\n<blockquote>\n<p>Perhaps we should take advantage of the egraph ability to represent equivalencies with a (simplify (icmp ty cc x y) (icmp ty (intcc_reverse cc) y x) rule.</p>\n</blockquote>\n<p>Yeah, that sounds like a good idea, I'll try that!</p>\n<blockquote>\n<p>The same reasoning should work on vectors; I think copying each of these rules for vselect of icmp should work.</p>\n</blockquote>\n<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span>, I'll add those in this PR if that's OK with you. </p>\n<blockquote>\n<p>Is there an equivalent floating-point rewrite? NaNs make my head hurt.</p>\n</blockquote>\n<p>I'm not sure, I'll try to look into it.</p>\n<blockquote>\n<p>I'd love to see Sightglass benchmark figures for this PR. I think you can do /bench_x64 but I can't; it looks like my username isn't in the list in performance.yml.</p>\n</blockquote>\n<p>I don't expect any benefits for x86 since I think right now we lower <code>min</code>/<code>max</code> as <code>cmp</code>+<code>cmov*</code> which is the same as the unoptimized form, but we can try it. Although we might see some benefits on the <code>vselect</code> version (maybe?).</p>\n<p>/bench_x64</p>\n</blockquote>",
        "id": 320337399,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673300956
    },
    {
        "content": "<p>jlb6740 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5546#issuecomment-1376381557\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5546\">issue #5546</a>:</p>\n<blockquote>\n<p>instantiation :: cycles :: benchmarks/bz2/benchmark.wasm</p>\n<p>No difference in performance.</p>\n<p>[160490 179150.32 293708] <a href=\"http://commit.so\">commit.so</a><br>\n  [155924 172967.04 189250] <a href=\"http://main.so\">main.so</a></p>\n<p>compilation :: cycles :: benchmarks/bz2/benchmark.wasm</p>\n<p>No difference in performance.</p>\n<p>[202562282 217920659.92 241944548] <a href=\"http://commit.so\">commit.so</a><br>\n  [199991838 212302882.08 235356036] <a href=\"http://main.so\">main.so</a></p>\n<p>instantiation :: cycles :: benchmarks/pulldown-cmark/benchmark.wasm</p>\n<p>No difference in performance.</p>\n<p>[186500 203277.04 247336] <a href=\"http://commit.so\">commit.so</a><br>\n  [186216 207677.60 249312] <a href=\"http://main.so\">main.so</a></p>\n<p>compilation :: cycles :: benchmarks/pulldown-cmark/benchmark.wasm</p>\n<p>No difference in performance.</p>\n<p>[293540152 337751307.12 374158094] <a href=\"http://commit.so\">commit.so</a><br>\n  [295516870 341031354.56 393946812] <a href=\"http://main.so\">main.so</a></p>\n<p>compilation :: cycles :: benchmarks/spidermonkey/benchmark.wasm</p>\n<p>No difference in performance.</p>\n<p>[6965675788 7114549484.48 7213034856] <a href=\"http://commit.so\">commit.so</a><br>\n  [6955473648 7075012926.00 7165106004] <a href=\"http://main.so\">main.so</a></p>\n<p>instantiation :: cycles :: benchmarks/spidermonkey/benchmark.wasm</p>\n<p>No difference in performance.</p>\n<p>[488512 504472.32 573802] <a href=\"http://commit.so\">commit.so</a><br>\n  [488122 501985.20 525900] <a href=\"http://main.so\">main.so</a></p>\n<p>execution :: cycles :: benchmarks/pulldown-cmark/benchmark.wasm</p>\n<p>No difference in performance.</p>\n<p>[8327116 8476234.16 8683322] <a href=\"http://commit.so\">commit.so</a><br>\n  [8339612 8512672.24 8750996] <a href=\"http://main.so\">main.so</a></p>\n<p>execution :: cycles :: benchmarks/bz2/benchmark.wasm</p>\n<p>No difference in performance.</p>\n<p>[111521870 115012543.92 117344984] <a href=\"http://commit.so\">commit.so</a><br>\n  [111540296 114710730.08 122547780] <a href=\"http://main.so\">main.so</a></p>\n<p>execution :: cycles :: benchmarks/spidermonkey/benchmark.wasm</p>\n<p>No difference in performance.</p>\n<p>[1024608234 1038058547.20 1067188634] <a href=\"http://commit.so\">commit.so</a><br>\n  [1027357456 1037305556.48 1048046760] <a href=\"http://main.so\">main.so</a></p>\n</blockquote>",
        "id": 320338540,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673301375
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5546#issuecomment-1383213229\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5546\">issue #5546</a>:</p>\n<blockquote>\n<p>I tried adding the icmp reverse rule, and while it works and is correct it seems to be doing something weird. We now get a bunch of aliases after optimizing a normal <code>icmp eq</code>. I've left it as a separate commit so that its easier to investigate.</p>\n<p>I'm worried that we might be unintentionally doing a bunch of stuff and worsening compile performance.</p>\n<p>This is what we get now:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">optimize</span><span class=\"w\"></span>\n<span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">use_egraphs</span><span class=\"o\">=</span><span class=\"kc\">true</span><span class=\"w\"></span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">icmp_eq</span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i8</span> <span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"kt\">i32</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">icmp</span><span class=\"w\"> </span><span class=\"n\">eq</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">check</span>: <span class=\"nc\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"kt\">i32</span><span class=\"p\">)</span>:\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">check</span>:    <span class=\"nc\">v8</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">icmp</span><span class=\"w\"> </span><span class=\"n\">eq</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">check</span>:    <span class=\"nc\">v9</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">v8</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">check</span>:    <span class=\"nc\">v10</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">v9</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">check</span>:    <span class=\"nc\">v11</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">v10</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">check</span>:    <span class=\"nc\">v12</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">v11</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">check</span>:    <span class=\"nc\">v13</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">v12</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">check</span>:    <span class=\"nc\">v14</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">v13</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">check</span>:    <span class=\"nc\">return</span><span class=\"w\"> </span><span class=\"n\">v8</span><span class=\"w\"></span>\n</code></pre></div>\n<hr>\n<blockquote>\n<p>Is there an equivalent floating-point rewrite? NaNs make my head hurt.</p>\n</blockquote>\n<p>So, I don't think there is an exact match for the full <code>fcmp</code> space, but the <code>f{min,max}_pseudo</code> instructions are an defined in terms of <code>fcmp {lt,gt} + select</code>, so we can at least get those.</p>\n<hr>\n<p>I ran the Sightglass SIMD benchmarks locally and they measured no difference, but I'm not too confident in my benchmarking setup since its a linux vm inside a windows host, which doesn't seem ideal...</p>\n<p>&lt;details&gt;<br>\n&lt;summary&gt;Sightglass SIMD benchmark results&lt;/summary&gt;</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">     </span><span class=\"n\">Running</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">sightglass</span><span class=\"o\">-</span><span class=\"n\">cli</span><span class=\"w\"> </span><span class=\"n\">benchmark</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_select</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"n\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">blake3</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">intgemm</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n<span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">compilation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">blake3</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">73345320</span><span class=\"w\"> </span><span class=\"mf\">95091825.36</span><span class=\"w\"> </span><span class=\"mi\">287267718</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">70722628</span><span class=\"w\"> </span><span class=\"mf\">101732805.98</span><span class=\"w\"> </span><span class=\"mi\">299985933</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">select</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n\n<span class=\"n\">instantiation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">intgemm</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">168256</span><span class=\"w\"> </span><span class=\"mf\">216817.60</span><span class=\"w\"> </span><span class=\"mi\">382976</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">177600</span><span class=\"w\"> </span><span class=\"mf\">220696.00</span><span class=\"w\"> </span><span class=\"mi\">344096</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">select</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n\n<span class=\"n\">instantiation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">blake3</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">133184</span><span class=\"w\"> </span><span class=\"mf\">167869.12</span><span class=\"w\"> </span><span class=\"mi\">416352</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">132128</span><span class=\"w\"> </span><span class=\"mf\">165781.12</span><span class=\"w\"> </span><span class=\"mi\">341184</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">select</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n\n<span class=\"n\">compilation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">intgemm</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">709243689</span><span class=\"w\"> </span><span class=\"mf\">815567491.90</span><span class=\"w\"> </span><span class=\"mi\">1073223272</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">729598384</span><span class=\"w\"> </span><span class=\"mf\">821242801.38</span><span class=\"w\"> </span><span class=\"mi\">1027388168</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">select</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n\n<span class=\"n\">execution</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">intgemm</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">3855579532</span><span class=\"w\"> </span><span class=\"mf\">3914533632.01</span><span class=\"w\"> </span><span class=\"mi\">4071619781</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">3855359377</span><span class=\"w\"> </span><span class=\"mf\">3917102361.59</span><span class=\"w\"> </span><span class=\"mi\">4042283617</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">select</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n\n<span class=\"n\">execution</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">blake3</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">439936</span><span class=\"w\"> </span><span class=\"mf\">513683.52</span><span class=\"w\"> </span><span class=\"mi\">823392</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">439488</span><span class=\"w\"> </span><span class=\"mf\">513457.28</span><span class=\"w\"> </span><span class=\"mi\">862848</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">select</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n</code></pre></div>\n<p>&lt;/details&gt;</p>\n<p>/bench_x64</p>\n</blockquote>",
        "id": 321515941,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673805569
    },
    {
        "content": "<p>afonso360 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5546#issuecomment-1383213229\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5546\">issue #5546</a>:</p>\n<blockquote>\n<p>I tried adding the icmp reverse rule, and while it works and is correct it seems to be doing something weird. We now get a bunch of aliases after optimizing a normal <code>icmp eq</code>. I've left it as a separate commit so that its easier to investigate.</p>\n<p>I'm worried that we might be unintentionally doing a bunch of stuff and worsening compile performance.</p>\n<p>This is what we get now:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">optimize</span><span class=\"w\"></span>\n<span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">use_egraphs</span><span class=\"o\">=</span><span class=\"kc\">true</span><span class=\"w\"></span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">icmp_eq</span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i8</span> <span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"kt\">i32</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">icmp</span><span class=\"w\"> </span><span class=\"n\">eq</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">check</span>: <span class=\"nc\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"kt\">i32</span><span class=\"p\">)</span>:\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">check</span>:    <span class=\"nc\">v8</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">icmp</span><span class=\"w\"> </span><span class=\"n\">eq</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">check</span>:    <span class=\"nc\">v9</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">v8</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">check</span>:    <span class=\"nc\">v10</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">v9</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">check</span>:    <span class=\"nc\">v11</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">v10</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">check</span>:    <span class=\"nc\">v12</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">v11</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">check</span>:    <span class=\"nc\">v13</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">v12</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">check</span>:    <span class=\"nc\">v14</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">v13</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">check</span>:    <span class=\"nc\">return</span><span class=\"w\"> </span><span class=\"n\">v8</span><span class=\"w\"></span>\n</code></pre></div>\n<hr>\n<blockquote>\n<p>Is there an equivalent floating-point rewrite? NaNs make my head hurt.</p>\n</blockquote>\n<p>So, I don't think there is an exact match for the full <code>fcmp</code> space, but the <code>f{min,max}_pseudo</code> instructions are defined in terms of <code>fcmp {lt,gt} + select</code>, so we can at least get those.</p>\n<hr>\n<p>I ran the Sightglass SIMD benchmarks locally and they measured no difference, but I'm not too confident in my benchmarking setup since its a linux vm inside a windows host, which doesn't seem ideal...</p>\n<p>&lt;details&gt;<br>\n&lt;summary&gt;Sightglass SIMD benchmark results&lt;/summary&gt;</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">     </span><span class=\"n\">Running</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">sightglass</span><span class=\"o\">-</span><span class=\"n\">cli</span><span class=\"w\"> </span><span class=\"n\">benchmark</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_select</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"n\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">blake3</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">intgemm</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n<span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">compilation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">blake3</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">73345320</span><span class=\"w\"> </span><span class=\"mf\">95091825.36</span><span class=\"w\"> </span><span class=\"mi\">287267718</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">70722628</span><span class=\"w\"> </span><span class=\"mf\">101732805.98</span><span class=\"w\"> </span><span class=\"mi\">299985933</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">select</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n\n<span class=\"n\">instantiation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">intgemm</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">168256</span><span class=\"w\"> </span><span class=\"mf\">216817.60</span><span class=\"w\"> </span><span class=\"mi\">382976</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">177600</span><span class=\"w\"> </span><span class=\"mf\">220696.00</span><span class=\"w\"> </span><span class=\"mi\">344096</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">select</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n\n<span class=\"n\">instantiation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">blake3</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">133184</span><span class=\"w\"> </span><span class=\"mf\">167869.12</span><span class=\"w\"> </span><span class=\"mi\">416352</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">132128</span><span class=\"w\"> </span><span class=\"mf\">165781.12</span><span class=\"w\"> </span><span class=\"mi\">341184</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">select</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n\n<span class=\"n\">compilation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">intgemm</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">709243689</span><span class=\"w\"> </span><span class=\"mf\">815567491.90</span><span class=\"w\"> </span><span class=\"mi\">1073223272</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">729598384</span><span class=\"w\"> </span><span class=\"mf\">821242801.38</span><span class=\"w\"> </span><span class=\"mi\">1027388168</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">select</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n\n<span class=\"n\">execution</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">intgemm</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">3855579532</span><span class=\"w\"> </span><span class=\"mf\">3914533632.01</span><span class=\"w\"> </span><span class=\"mi\">4071619781</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">3855359377</span><span class=\"w\"> </span><span class=\"mf\">3917102361.59</span><span class=\"w\"> </span><span class=\"mi\">4042283617</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">select</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n\n<span class=\"n\">execution</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">blake3</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">439936</span><span class=\"w\"> </span><span class=\"mf\">513683.52</span><span class=\"w\"> </span><span class=\"mi\">823392</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">439488</span><span class=\"w\"> </span><span class=\"mf\">513457.28</span><span class=\"w\"> </span><span class=\"mi\">862848</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">select</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n</code></pre></div>\n<p>&lt;/details&gt;</p>\n<p>/bench_x64</p>\n</blockquote>",
        "id": 321515978,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673805589
    },
    {
        "content": "<p>afonso360 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5546#issuecomment-1383213229\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5546\">issue #5546</a>:</p>\n<blockquote>\n<p>I tried adding the icmp reverse rule, and while it works and is correct it seems to be doing something weird. We now get a bunch of aliases after optimizing a normal <code>icmp eq</code>. I've left it as a separate commit so that its easier to investigate.</p>\n<p>I'm worried that we might be unintentionally doing a bunch of stuff and worsening compile performance.</p>\n<p>This is what we get now:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">optimize</span><span class=\"w\"></span>\n<span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">use_egraphs</span><span class=\"o\">=</span><span class=\"kc\">true</span><span class=\"w\"></span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">icmp_eq</span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i8</span> <span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"kt\">i32</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">icmp</span><span class=\"w\"> </span><span class=\"n\">eq</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">check</span>: <span class=\"nc\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"kt\">i32</span><span class=\"p\">)</span>:\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">check</span>:    <span class=\"nc\">v8</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">icmp</span><span class=\"w\"> </span><span class=\"n\">eq</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">check</span>:    <span class=\"nc\">v9</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">v8</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">check</span>:    <span class=\"nc\">v10</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">v9</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">check</span>:    <span class=\"nc\">v11</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">v10</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">check</span>:    <span class=\"nc\">v12</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">v11</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">check</span>:    <span class=\"nc\">v13</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">v12</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">check</span>:    <span class=\"nc\">v14</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">v13</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">check</span>:    <span class=\"nc\">return</span><span class=\"w\"> </span><span class=\"n\">v8</span><span class=\"w\"></span>\n</code></pre></div>\n<hr>\n<blockquote>\n<p>Is there an equivalent floating-point rewrite? NaNs make my head hurt.</p>\n</blockquote>\n<p>So, I don't think there is an exact match for the full <code>fcmp</code> space, but the <code>f{min,max}_pseudo</code> instructions are defined in terms of <code>fcmp {lt,gt} + select</code>, so we can at least get those.</p>\n<p>We have some <a href=\"https://docs.rs/cranelift-codegen/latest/cranelift_codegen/ir/trait.InstBuilder.html#method.fmax_pseudo\">docs for those instructions</a>, but they are better described in the <a href=\"https://github.com/WebAssembly/simd/pull/122\">Webassembly PR that introduces them</a></p>\n<hr>\n<p>I ran the Sightglass SIMD benchmarks locally and they measured no difference, but I'm not too confident in my benchmarking setup since its a linux vm inside a windows host, which doesn't seem ideal...</p>\n<p>&lt;details&gt;<br>\n&lt;summary&gt;Sightglass SIMD benchmark results&lt;/summary&gt;</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">     </span><span class=\"n\">Running</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">sightglass</span><span class=\"o\">-</span><span class=\"n\">cli</span><span class=\"w\"> </span><span class=\"n\">benchmark</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_select</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"n\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">blake3</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">intgemm</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n<span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">compilation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">blake3</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">73345320</span><span class=\"w\"> </span><span class=\"mf\">95091825.36</span><span class=\"w\"> </span><span class=\"mi\">287267718</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">70722628</span><span class=\"w\"> </span><span class=\"mf\">101732805.98</span><span class=\"w\"> </span><span class=\"mi\">299985933</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">select</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n\n<span class=\"n\">instantiation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">intgemm</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">168256</span><span class=\"w\"> </span><span class=\"mf\">216817.60</span><span class=\"w\"> </span><span class=\"mi\">382976</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">177600</span><span class=\"w\"> </span><span class=\"mf\">220696.00</span><span class=\"w\"> </span><span class=\"mi\">344096</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">select</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n\n<span class=\"n\">instantiation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">blake3</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">133184</span><span class=\"w\"> </span><span class=\"mf\">167869.12</span><span class=\"w\"> </span><span class=\"mi\">416352</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">132128</span><span class=\"w\"> </span><span class=\"mf\">165781.12</span><span class=\"w\"> </span><span class=\"mi\">341184</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">select</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n\n<span class=\"n\">compilation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">intgemm</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">709243689</span><span class=\"w\"> </span><span class=\"mf\">815567491.90</span><span class=\"w\"> </span><span class=\"mi\">1073223272</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">729598384</span><span class=\"w\"> </span><span class=\"mf\">821242801.38</span><span class=\"w\"> </span><span class=\"mi\">1027388168</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">select</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n\n<span class=\"n\">execution</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">intgemm</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">3855579532</span><span class=\"w\"> </span><span class=\"mf\">3914533632.01</span><span class=\"w\"> </span><span class=\"mi\">4071619781</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">3855359377</span><span class=\"w\"> </span><span class=\"mf\">3917102361.59</span><span class=\"w\"> </span><span class=\"mi\">4042283617</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">select</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n\n<span class=\"n\">execution</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">blake3</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">439936</span><span class=\"w\"> </span><span class=\"mf\">513683.52</span><span class=\"w\"> </span><span class=\"mi\">823392</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">439488</span><span class=\"w\"> </span><span class=\"mf\">513457.28</span><span class=\"w\"> </span><span class=\"mi\">862848</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">select</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n</code></pre></div>\n<p>&lt;/details&gt;</p>\n<p>/bench_x64</p>\n</blockquote>",
        "id": 321516207,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673805715
    },
    {
        "content": "<p>jlb6740 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5546#issuecomment-1383214764\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5546\">issue #5546</a>:</p>\n<blockquote>\n<p>instantiation :: cycles :: benchmarks/pulldown-cmark/benchmark.wasm</p>\n<p>No difference in performance.</p>\n<p>[195254 206675.84 239848] <a href=\"http://commit.so\">commit.so</a><br>\n  [185986 200724.96 227526] <a href=\"http://main.so\">main.so</a></p>\n<p>instantiation :: cycles :: benchmarks/bz2/benchmark.wasm</p>\n<p>No difference in performance.</p>\n<p>[158588 177232.96 200728] <a href=\"http://commit.so\">commit.so</a><br>\n  [153838 181267.68 359084] <a href=\"http://main.so\">main.so</a></p>\n<p>compilation :: cycles :: benchmarks/pulldown-cmark/benchmark.wasm</p>\n<p>No difference in performance.</p>\n<p>[310637436 342353446.56 390973658] <a href=\"http://commit.so\">commit.so</a><br>\n  [295484178 336498505.76 366404166] <a href=\"http://main.so\">main.so</a></p>\n<p>compilation :: cycles :: benchmarks/bz2/benchmark.wasm</p>\n<p>No difference in performance.</p>\n<p>[205285250 220044999.92 262015540] <a href=\"http://commit.so\">commit.so</a><br>\n  [202251150 217512094.00 237476954] <a href=\"http://main.so\">main.so</a></p>\n<p>execution :: cycles :: benchmarks/bz2/benchmark.wasm</p>\n<p>No difference in performance.</p>\n<p>[111173460 114115222.96 119495454] <a href=\"http://commit.so\">commit.so</a><br>\n  [111448476 114811907.92 115933528] <a href=\"http://main.so\">main.so</a></p>\n<p>compilation :: cycles :: benchmarks/spidermonkey/benchmark.wasm</p>\n<p>No difference in performance.</p>\n<p>[6940653952 7096700981.20 7212066130] <a href=\"http://commit.so\">commit.so</a><br>\n  [6942954936 7124108036.08 7229159218] <a href=\"http://main.so\">main.so</a></p>\n<p>instantiation :: cycles :: benchmarks/spidermonkey/benchmark.wasm</p>\n<p>No difference in performance.</p>\n<p>[478890 506487.60 662056] <a href=\"http://commit.so\">commit.so</a><br>\n  [485120 504785.28 608956] <a href=\"http://main.so\">main.so</a></p>\n<p>execution :: cycles :: benchmarks/spidermonkey/benchmark.wasm</p>\n<p>No difference in performance.</p>\n<p>[1023014568 1034258955.84 1055892690] <a href=\"http://commit.so\">commit.so</a><br>\n  [1019706902 1030842327.04 1044519376] <a href=\"http://main.so\">main.so</a></p>\n<p>execution :: cycles :: benchmarks/pulldown-cmark/benchmark.wasm</p>\n<p>No difference in performance.</p>\n<p>[8352392 8496849.04 8691182] <a href=\"http://commit.so\">commit.so</a><br>\n  [8360734 8482021.60 8626984] <a href=\"http://main.so\">main.so</a></p>\n</blockquote>",
        "id": 321516742,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673805974
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5546#issuecomment-1385970276\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5546\">issue #5546</a>:</p>\n<blockquote>\n<p>It makes me quite happy to see the usage of the egraph framework to add a rewrite be so straightforward!</p>\n<p>Regarding the benchmarking results: perhaps they are showing no effect because egraph-based optimization is still off by default? (I'm cooking up a PR to flip that, but it's not done yet.)</p>\n</blockquote>",
        "id": 321914273,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673985337
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5546#issuecomment-1387276793\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5546\">issue #5546</a>:</p>\n<blockquote>\n<blockquote>\n<p>It makes me quite happy to see the usage of the egraph framework to add a rewrite be so straightforward!</p>\n</blockquote>\n<p>It was also really intuitive to get to this solution which is awesome! </p>\n<blockquote>\n<p>Regarding the benchmarking results: perhaps they are showing no effect because egraph-based optimization is still off by default? </p>\n</blockquote>\n<p>Oh! I completely forgot about that! <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>\n<p>I'll try to enable those settings in sightglass in the next run I make. But I'm not expecting great things here, x86 and aarch64 both lower to the same instructions, RISC-V does benefit from it since in can do <code>max</code>/<code>min</code> as a single instruction.</p>\n<p>The <code>vselect</code> ones I think might make a difference? Unless existing toolchains already perform this optimization which is somewhat likely.</p>\n</blockquote>",
        "id": 322084574,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1674056605
    },
    {
        "content": "<p>afonso360 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5546#issuecomment-1387276793\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5546\">issue #5546</a>:</p>\n<blockquote>\n<blockquote>\n<p>It makes me quite happy to see the usage of the egraph framework to add a rewrite be so straightforward!</p>\n</blockquote>\n<p>It was also really intuitive to get to this solution which is awesome! </p>\n<blockquote>\n<p>Regarding the benchmarking results: perhaps they are showing no effect because egraph-based optimization is still off by default? </p>\n</blockquote>\n<p>Oh! I completely forgot about that! <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>\n<p>I'll try to enable those settings in sightglass in the next run I make. But I'm not expecting great things here, x86 and aarch64 both lower to the same instructions, RISC-V does benefit from it since in can do <code>max</code>/<code>min</code> as a single instruction.</p>\n<p>The <code>vselect</code> ones I think might make a difference? Unless existing toolchains already perform this optimization when producing wasm which is somewhat likely.</p>\n</blockquote>",
        "id": 322084901,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1674056676
    },
    {
        "content": "<p>EdorianDark <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5546#issuecomment-1407643532\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5546\">issue #5546</a>:</p>\n<blockquote>\n<p>Egraph based optimizations are now on by default, so I think an rebase should be enough to test if something changes.</p>\n</blockquote>",
        "id": 324423647,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1674993724
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5546#issuecomment-1407710693\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5546\">issue #5546</a>:</p>\n<blockquote>\n<p>Egraph optimizations are on by default if optimizations are on. Do benchmarks run with optimizations enabled?</p>\n</blockquote>",
        "id": 324460317,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675010098
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5546#issuecomment-1407744128\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5546\">issue #5546</a>:</p>\n<blockquote>\n<blockquote>\n<p>Do benchmarks run with optimizations enabled?</p>\n</blockquote>\n<p>I think optimizations are enabled by default, at least on the wasmtime cli that is the case. Although I'm not entirely sure about sightglass.</p>\n<p>Rebased this on main and ran sightglass on AArch64, doesen't seem to have much of an impact. I wonder if the results would be any different for something like <code>cg_clif</code> that doesen't run on already optimized code.<br>\nUnfortunately I can't run this on RISCV which is where I would hope to see some positive effect.</p>\n<p>&lt;details&gt;<br>\n&lt;summary&gt;Scalar Benchmarks AArch64&lt;/summary&gt;</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">ubuntu</span><span class=\"o\">@</span><span class=\"n\">instance</span><span class=\"o\">-</span><span class=\"mi\">20220805</span><span class=\"o\">-</span><span class=\"mi\">0848</span>:<span class=\"o\">~/</span><span class=\"n\">git</span><span class=\"o\">/</span><span class=\"n\">sightglass</span><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">sightglass</span><span class=\"o\">-</span><span class=\"n\">cli</span><span class=\"w\"> </span><span class=\"n\">benchmark</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">wasmtime_main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">wasmtime_select</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n\n<span class=\"n\">compilation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"err\">Δ</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">3282352.64</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"mf\">1066807.74</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">confidence</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">99</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"mf\">1.02</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"mf\">1.04</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">faster</span><span class=\"w\"> </span><span class=\"n\">than</span><span class=\"w\"> </span><span class=\"n\">select</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"o\">!</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">111047763</span><span class=\"w\"> </span><span class=\"mf\">118113547.11</span><span class=\"w\"> </span><span class=\"mi\">123328519</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">115034752</span><span class=\"w\"> </span><span class=\"mf\">121395899.75</span><span class=\"w\"> </span><span class=\"mi\">128445997</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">select</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n\n<span class=\"n\">execution</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">bz2</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"err\">Δ</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">6938.23</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"mf\">1941.66</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">confidence</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">99</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">select</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"mf\">1.01</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"mf\">1.01</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">faster</span><span class=\"w\"> </span><span class=\"n\">than</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"o\">!</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">876198</span><span class=\"w\"> </span><span class=\"mf\">884956.45</span><span class=\"w\"> </span><span class=\"mi\">902123</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">869354</span><span class=\"w\"> </span><span class=\"mf\">878018.22</span><span class=\"w\"> </span><span class=\"mi\">901740</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">select</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n\n<span class=\"n\">instantiation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">pulldown</span><span class=\"o\">-</span><span class=\"n\">cmark</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">2849</span><span class=\"w\"> </span><span class=\"mf\">3260.40</span><span class=\"w\"> </span><span class=\"mi\">12227</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">2804</span><span class=\"w\"> </span><span class=\"mf\">3148.16</span><span class=\"w\"> </span><span class=\"mi\">4268</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">select</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n\n<span class=\"n\">compilation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">pulldown</span><span class=\"o\">-</span><span class=\"n\">cmark</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">4381352</span><span class=\"w\"> </span><span class=\"mf\">5597680.00</span><span class=\"w\"> </span><span class=\"mi\">6817168</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">4465781</span><span class=\"w\"> </span><span class=\"mf\">5715523.09</span><span class=\"w\"> </span><span class=\"mi\">7002568</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">select</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n\n<span class=\"n\">instantiation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">bz2</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">2361</span><span class=\"w\"> </span><span class=\"mf\">2621.85</span><span class=\"w\"> </span><span class=\"mi\">4044</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">2284</span><span class=\"w\"> </span><span class=\"mf\">2575.55</span><span class=\"w\"> </span><span class=\"mi\">3465</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">select</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n\n<span class=\"n\">compilation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">bz2</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">2440354</span><span class=\"w\"> </span><span class=\"mf\">2586186.45</span><span class=\"w\"> </span><span class=\"mi\">3163455</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">2460769</span><span class=\"w\"> </span><span class=\"mf\">2621895.24</span><span class=\"w\"> </span><span class=\"mi\">3155162</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">select</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n\n<span class=\"n\">execution</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">pulldown</span><span class=\"o\">-</span><span class=\"n\">cmark</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">69303</span><span class=\"w\"> </span><span class=\"mf\">75400.87</span><span class=\"w\"> </span><span class=\"mi\">94495</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">70033</span><span class=\"w\"> </span><span class=\"mf\">76346.64</span><span class=\"w\"> </span><span class=\"mi\">97401</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">select</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n\n<span class=\"n\">instantiation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">5533</span><span class=\"w\"> </span><span class=\"mf\">6360.26</span><span class=\"w\"> </span><span class=\"mi\">18487</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">5558</span><span class=\"w\"> </span><span class=\"mf\">6418.39</span><span class=\"w\"> </span><span class=\"mi\">19011</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">select</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n\n<span class=\"n\">execution</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">8367754</span><span class=\"w\"> </span><span class=\"mf\">8415382.47</span><span class=\"w\"> </span><span class=\"mi\">8499654</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">8377518</span><span class=\"w\"> </span><span class=\"mf\">8420745.48</span><span class=\"w\"> </span><span class=\"mi\">8547947</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">select</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n</code></pre></div>\n<p>&lt;/details&gt;</p>\n<p>&lt;details&gt;<br>\n&lt;summary&gt;SIMD Benchmarks AArch64&lt;/summary&gt;</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">ubuntu</span><span class=\"o\">@</span><span class=\"n\">instance</span><span class=\"o\">-</span><span class=\"mi\">20220805</span><span class=\"o\">-</span><span class=\"mi\">0848</span>:<span class=\"o\">~/</span><span class=\"n\">git</span><span class=\"o\">/</span><span class=\"n\">sightglass</span><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">sightglass</span><span class=\"o\">-</span><span class=\"n\">cli</span><span class=\"w\"> </span><span class=\"n\">benchmark</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">wasmtime_main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">wasmtime_select</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"n\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">blake3</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">intgemm</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"n\">execution</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">intgemm</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"err\">Δ</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">203985.92</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"mf\">8663.93</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">confidence</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">99</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">select</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"mf\">1.00</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"mf\">1.00</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">faster</span><span class=\"w\"> </span><span class=\"n\">than</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"o\">!</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">45561021</span><span class=\"w\"> </span><span class=\"mf\">45611295.11</span><span class=\"w\"> </span><span class=\"mi\">45720621</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">45363259</span><span class=\"w\"> </span><span class=\"mf\">45407309.19</span><span class=\"w\"> </span><span class=\"mi\">45486165</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">select</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n\n<span class=\"n\">execution</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">blake3</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">3472</span><span class=\"w\"> </span><span class=\"mf\">4728.82</span><span class=\"w\"> </span><span class=\"mi\">13547</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">3477</span><span class=\"w\"> </span><span class=\"mf\">4261.65</span><span class=\"w\"> </span><span class=\"mi\">15734</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">select</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n\n<span class=\"n\">instantiation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">blake3</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">1749</span><span class=\"w\"> </span><span class=\"mf\">2124.65</span><span class=\"w\"> </span><span class=\"mi\">3341</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">1724</span><span class=\"w\"> </span><span class=\"mf\">2101.14</span><span class=\"w\"> </span><span class=\"mi\">3474</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">select</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n\n<span class=\"n\">compilation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">intgemm</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">5448821</span><span class=\"w\"> </span><span class=\"mf\">5745023.23</span><span class=\"w\"> </span><span class=\"mi\">6331575</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">5487095</span><span class=\"w\"> </span><span class=\"mf\">5779248.67</span><span class=\"w\"> </span><span class=\"mi\">6320724</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">select</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n\n<span class=\"n\">compilation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">blake3</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">526706</span><span class=\"w\"> </span><span class=\"mf\">615112.06</span><span class=\"w\"> </span><span class=\"mi\">1567920</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">536207</span><span class=\"w\"> </span><span class=\"mf\">613883.57</span><span class=\"w\"> </span><span class=\"mi\">1149844</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">select</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n\n<span class=\"n\">instantiation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">intgemm</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">2246</span><span class=\"w\"> </span><span class=\"mf\">2495.36</span><span class=\"w\"> </span><span class=\"mi\">3522</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">2126</span><span class=\"w\"> </span><span class=\"mf\">2497.00</span><span class=\"w\"> </span><span class=\"mi\">4032</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">select</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n</code></pre></div>\n<p>&lt;/details&gt;</p>\n</blockquote>",
        "id": 324478097,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675018980
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5546#issuecomment-1424850986\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5546\">issue #5546</a>:</p>\n<blockquote>\n<p>Looks like s390x doesn't have lowerings for <code>umin</code>/<code>umax</code> on scalars, so when this PR rewrites this pattern to those instructions the s390x tests fail. cc: @uweigand</p>\n</blockquote>",
        "id": 326918043,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675977375
    },
    {
        "content": "<p>uweigand <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5546#issuecomment-1425731003\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5546\">issue #5546</a>:</p>\n<blockquote>\n<blockquote>\n<p>Looks like s390x doesn't have lowerings for <code>umin</code>/<code>umax</code> on scalars, so when this PR rewrites this pattern to those instructions the s390x tests fail. cc: @uweigand</p>\n</blockquote>\n<p>Well, we don't have any instructions for <code>umin</code>/<code>umax</code> on scalars, so the only possible implementation would be to turn it right back into (the equivalent of) <code>select</code> + <code>icmp</code> ...   Is this what we're supposed to be doing here?<br>\n</p>\n</blockquote>",
        "id": 327035040,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676031353
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5546#issuecomment-1425741214\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5546\">issue #5546</a>:</p>\n<blockquote>\n<p>I think that's what x86 does, as well.</p>\n</blockquote>",
        "id": 327037041,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676031870
    },
    {
        "content": "<p>uweigand <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5546#issuecomment-1425968876\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5546\">issue #5546</a>:</p>\n<blockquote>\n<p>I've now opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5762\">https://github.com/bytecodealliance/wasmtime/pull/5762</a> to add support for these clif instructions on s390x.</p>\n</blockquote>",
        "id": 327080355,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676042906
    }
]