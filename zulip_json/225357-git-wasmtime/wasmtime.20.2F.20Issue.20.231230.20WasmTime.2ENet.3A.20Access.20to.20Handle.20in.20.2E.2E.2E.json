[
    {
        "content": "<p>christophwille opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1230\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1230\">Issue #1230</a>:</p>\n<blockquote>\n<p>I originally built <a href=\"https://github.com/christophwille/csharp-opa-wasm/\" target=\"_blank\" title=\"https://github.com/christophwille/csharp-opa-wasm/\">https://github.com/christophwille/csharp-opa-wasm/</a> using WasmerSharp. Today I started my initial run on porting it to WasmTime, however, I ran into a snag:</p>\n<p><a href=\"https://github.com/christophwille/csharp-opa-wasm/blob/master/WasmTimeTest/Program.cs#L19\" target=\"_blank\" title=\"https://github.com/christophwille/csharp-opa-wasm/blob/master/WasmTimeTest/Program.cs#L19\">https://github.com/christophwille/csharp-opa-wasm/blob/master/WasmTimeTest/Program.cs#L19</a></p>\n<p>All my imports are satisfied by name, however, the env.memory import bombs, exception details in the source code via comment, but basically the wasm expects two pages of memory minimum.</p>\n<p>The WasmerSharp equivalent is here <a href=\"https://github.com/christophwille/csharp-opa-wasm/blob/master/src/Opa.Wasm/OpaPolicy.cs#L14\" target=\"_blank\" title=\"https://github.com/christophwille/csharp-opa-wasm/blob/master/src/Opa.Wasm/OpaPolicy.cs#L14\">https://github.com/christophwille/csharp-opa-wasm/blob/master/src/Opa.Wasm/OpaPolicy.cs#L14</a>. My guess is that I'd actually need the handle here which is internal for Memory, or: I am using the entirely wrong class because I am translating from a different API by similarity... </p>\n</blockquote>",
        "id": 189770869,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583398603
    },
    {
        "content": "<p>christophwille edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1230\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1230\">Issue #1230</a>:</p>\n<blockquote>\n<p>I originally built <a href=\"https://github.com/christophwille/csharp-opa-wasm/\" target=\"_blank\" title=\"https://github.com/christophwille/csharp-opa-wasm/\">https://github.com/christophwille/csharp-opa-wasm/</a> using WasmerSharp. Today I started my initial run on porting it to WasmTime, however, I ran into a snag with the import for env.memory:</p>\n<p><a href=\"https://github.com/christophwille/csharp-opa-wasm/blob/master/WasmTimeTest/Program.cs#L19\" target=\"_blank\" title=\"https://github.com/christophwille/csharp-opa-wasm/blob/master/WasmTimeTest/Program.cs#L19\">https://github.com/christophwille/csharp-opa-wasm/blob/master/WasmTimeTest/Program.cs#L19</a></p>\n<p>All my imports are satisfied by name, however, the env.memory import bombs, exception details in the source code via comment, but basically the wasm expects two pages of memory minimum.</p>\n<p>The WasmerSharp equivalent is here <a href=\"https://github.com/christophwille/csharp-opa-wasm/blob/master/src/Opa.Wasm/OpaPolicy.cs#L14\" target=\"_blank\" title=\"https://github.com/christophwille/csharp-opa-wasm/blob/master/src/Opa.Wasm/OpaPolicy.cs#L14\">https://github.com/christophwille/csharp-opa-wasm/blob/master/src/Opa.Wasm/OpaPolicy.cs#L14</a>. My guess is that I'd actually need the handle here which is internal for Memory, or: I am using the entirely wrong class because I am translating from a different API by similarity... </p>\n</blockquote>",
        "id": 189770914,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583398660
    },
    {
        "content": "<p>tschneidereit <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1230#issuecomment-595126168\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1230#issuecomment-595126168\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1230\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1230\">Issue #1230</a>:</p>\n<blockquote>\n<p>CC @peterhuene </p>\n</blockquote>",
        "id": 189773650,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583400980
    },
    {
        "content": "<p>christophwille <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1230#issuecomment-595389728\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1230#issuecomment-595389728\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1230\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1230\">Issue #1230</a>:</p>\n<blockquote>\n<p>ok, I traced the min exception to here:</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/crates/misc/dotnet/src/Bindings/MemoryBinding.cs#L57\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/blob/master/crates/misc/dotnet/src/Bindings/MemoryBinding.cs#L57\">https://github.com/bytecodealliance/wasmtime/blob/master/crates/misc/dotnet/src/Bindings/MemoryBinding.cs#L57</a></p>\n<p>and yes, the wat shows (import \"env\" \"memory\" (memory $env.memory 2)) with a minimum of 2. This fixes the exception I reported. Just for clarification: providing more min memory than min requested is really a problem?</p>\n</blockquote>",
        "id": 189824268,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583434496
    },
    {
        "content": "<p>peterhuene <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1230#issuecomment-595393566\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1230#issuecomment-595393566\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1230\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1230\">Issue #1230</a>:</p>\n<blockquote>\n<p>Hi @christophwille.  I think these restrictions in the .NET API should be relaxed so that the host doesn't have to specify exactly the same values.</p>\n<p>By the way, the constructor to <code>Memory</code> expresses the minimum and maximums in page sizes, so this should do it:</p>\n<div class=\"codehilite\"><pre><span></span>EnvMemory = new Memory(2); // min page size = 2\n</pre></div>\n\n\n</blockquote>",
        "id": 189825075,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583435030
    },
    {
        "content": "<p>peterhuene edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1230#issuecomment-595393566\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1230#issuecomment-595393566\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1230\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1230\">Issue #1230</a>:</p>\n<blockquote>\n<p>Hi @christophwille.  I think these restrictions in the .NET API should be relaxed so that the host doesn't have to specify exactly the same values.</p>\n<p>By the way, the constructor to <code>Memory</code> expresses the minimum and maximums in page sizes, so this should do it:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">EnvMemory</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"n\">Memory</span><span class=\"p\">(</span><span class=\"m\">2</span><span class=\"p\">);</span> <span class=\"c1\">// min page size = 2</span>\n</pre></div>\n\n\n</blockquote>",
        "id": 189825083,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583435036
    },
    {
        "content": "<p>peterhuene assigned <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1230\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1230\">Issue #1230</a>:</p>\n<blockquote>\n<p>I originally built <a href=\"https://github.com/christophwille/csharp-opa-wasm/\" target=\"_blank\" title=\"https://github.com/christophwille/csharp-opa-wasm/\">https://github.com/christophwille/csharp-opa-wasm/</a> using WasmerSharp. Today I started my initial run on porting it to WasmTime, however, I ran into a snag with the import for env.memory:</p>\n<p><a href=\"https://github.com/christophwille/csharp-opa-wasm/blob/master/WasmTimeTest/Program.cs#L19\" target=\"_blank\" title=\"https://github.com/christophwille/csharp-opa-wasm/blob/master/WasmTimeTest/Program.cs#L19\">https://github.com/christophwille/csharp-opa-wasm/blob/master/WasmTimeTest/Program.cs#L19</a></p>\n<p>All my imports are satisfied by name, however, the env.memory import bombs, exception details in the source code via comment, but basically the wasm expects two pages of memory minimum.</p>\n<p>The WasmerSharp equivalent is here <a href=\"https://github.com/christophwille/csharp-opa-wasm/blob/master/src/Opa.Wasm/OpaPolicy.cs#L14\" target=\"_blank\" title=\"https://github.com/christophwille/csharp-opa-wasm/blob/master/src/Opa.Wasm/OpaPolicy.cs#L14\">https://github.com/christophwille/csharp-opa-wasm/blob/master/src/Opa.Wasm/OpaPolicy.cs#L14</a>. My guess is that I'd actually need the handle here which is internal for Memory, or: I am using the entirely wrong class because I am translating from a different API by similarity... </p>\n</blockquote>",
        "id": 189825116,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583435043
    },
    {
        "content": "<p>peterhuene <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1230#issuecomment-595394366\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1230#issuecomment-595394366\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1230\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1230\">Issue #1230</a>:</p>\n<blockquote>\n<p>It also appears that the doc comment for the <code>Memory</code> constructor is missing <code>param</code> text too.</p>\n</blockquote>",
        "id": 189825238,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583435146
    },
    {
        "content": "<p>peterhuene edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1230#issuecomment-595393566\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1230#issuecomment-595393566\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1230\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1230\">Issue #1230</a>:</p>\n<blockquote>\n<p>Hi @christophwille.  I think these restrictions in the .NET API should be relaxed so that the host doesn't have to specify exactly the same values.</p>\n<p>By the way, the constructor to <code>Memory</code> expresses the minimum and maximums in page units, so this should do it:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">EnvMemory</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"n\">Memory</span><span class=\"p\">(</span><span class=\"m\">2</span><span class=\"p\">);</span> <span class=\"c1\">// min page size = 2</span>\n</pre></div>\n\n\n</blockquote>",
        "id": 189825244,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583435155
    },
    {
        "content": "<p>christophwille <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1230#issuecomment-595401453\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1230#issuecomment-595401453\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1230\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1230\">Issue #1230</a>:</p>\n<blockquote>\n<p>Yes, thanks, the min page I figured out by reading the source code of WasmTime.Net.</p>\n</blockquote>",
        "id": 189826729,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583436100
    },
    {
        "content": "<p>christophwille <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1230#issuecomment-595420199\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1230#issuecomment-595420199\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1230\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1230\">Issue #1230</a>:</p>\n<blockquote>\n<p>I completed porting to WasmTime, please see <a href=\"https://github.com/christophwille/csharp-opa-wasm/tree/master/WasmTimeTest\" target=\"_blank\" title=\"https://github.com/christophwille/csharp-opa-wasm/tree/master/WasmTimeTest\">https://github.com/christophwille/csharp-opa-wasm/tree/master/WasmTimeTest</a>. It is much more readable thanks to DynamicObject (never cared to nicely hide the necessary magic in WasmerSharp). I think I'll port the NuGet that I create over to WasmTime too.</p>\n</blockquote>",
        "id": 189830475,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583438504
    },
    {
        "content": "<p>peterhuene <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1230#issuecomment-595482549\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1230#issuecomment-595482549\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1230\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1230\">Issue #1230</a>:</p>\n<blockquote>\n<p>@christophwille that's awesome!</p>\n<p>If there are other improvements you'd like to see regarding the Wasmtime .NET API, we're definitely open to suggestions and contributions!</p>\n</blockquote>",
        "id": 189844987,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583447869
    },
    {
        "content": "<p>christophwille <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1230#issuecomment-595620704\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1230#issuecomment-595620704\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1230\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1230\">Issue #1230</a>:</p>\n<blockquote>\n<p>After that little memory snag, the only minor issue was the null-terminated strings; however, I already had the code for WasmerSharp, so this translated nicely to Memory.Span. I don't know how common those null-terminated strings are, but maybe having a ReadNullTerminatedString baked into Memory might be useful (but only if OPA isn't the only one out there doing it this way).</p>\n</blockquote>",
        "id": 189866022,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583476010
    },
    {
        "content": "<p>peterhuene <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1230#issuecomment-596665872\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1230#issuecomment-596665872\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1230\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1230\">Issue #1230</a>:</p>\n<blockquote>\n<p><code>ExternMemory.ReadNullTerminatedString</code> was added after 0.12.0 as well and would be included in the next release.</p>\n</blockquote>",
        "id": 190094470,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583774530
    },
    {
        "content": "<p>peterhuene edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1230#issuecomment-596665872\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1230#issuecomment-596665872\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1230\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1230\">Issue #1230</a>:</p>\n<blockquote>\n<p><code>ExternMemory.ReadNullTerminatedString</code> was added after 0.12.0 (I think? I'd have to check) as well and would be included in the next release.</p>\n</blockquote>",
        "id": 190094618,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583774613
    },
    {
        "content": "<p>peterhuene <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1230#issuecomment-610095632\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1230#issuecomment-610095632\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1230\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1230\">Issue #1230</a>:</p>\n<blockquote>\n<p>This should now be fixed in 0.15.0 since it uses the new internal Wasmtime linker rather than implementing linker in the C# API.  For future issues, we've created a new repro at <a href=\"https://github.com/bytecodealliance/wasmtime-dotnet\" title=\"https://github.com/bytecodealliance/wasmtime-dotnet\">https://github.com/bytecodealliance/wasmtime-dotnet</a>.</p>\n</blockquote>",
        "id": 193117166,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586217176
    },
    {
        "content": "<p>peterhuene closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1230\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1230\">Issue #1230</a> (assigned to peterhuene):</p>\n<blockquote>\n<p>I originally built <a href=\"https://github.com/christophwille/csharp-opa-wasm/\" title=\"https://github.com/christophwille/csharp-opa-wasm/\">https://github.com/christophwille/csharp-opa-wasm/</a> using WasmerSharp. Today I started my initial run on porting it to WasmTime, however, I ran into a snag with the import for env.memory:</p>\n<p><a href=\"https://github.com/christophwille/csharp-opa-wasm/blob/master/WasmTimeTest/Program.cs#L19\" title=\"https://github.com/christophwille/csharp-opa-wasm/blob/master/WasmTimeTest/Program.cs#L19\">https://github.com/christophwille/csharp-opa-wasm/blob/master/WasmTimeTest/Program.cs#L19</a></p>\n<p>All my imports are satisfied by name, however, the env.memory import bombs, exception details in the source code via comment, but basically the wasm expects two pages of memory minimum.</p>\n<p>The WasmerSharp equivalent is here <a href=\"https://github.com/christophwille/csharp-opa-wasm/blob/master/src/Opa.Wasm/OpaPolicy.cs#L14\" title=\"https://github.com/christophwille/csharp-opa-wasm/blob/master/src/Opa.Wasm/OpaPolicy.cs#L14\">https://github.com/christophwille/csharp-opa-wasm/blob/master/src/Opa.Wasm/OpaPolicy.cs#L14</a>. My guess is that I'd actually need the handle here which is internal for Memory, or: I am using the entirely wrong class because I am translating from a different API by similarity... </p>\n</blockquote>",
        "id": 193117167,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586217177
    },
    {
        "content": "<p>peterhuene transferred <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1230\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1230\">Issue #1230</a> (assigned to peterhuene):</p>\n<blockquote>\n<p>I originally built <a href=\"https://github.com/christophwille/csharp-opa-wasm/\" title=\"https://github.com/christophwille/csharp-opa-wasm/\">https://github.com/christophwille/csharp-opa-wasm/</a> using WasmerSharp. Today I started my initial run on porting it to WasmTime, however, I ran into a snag with the import for env.memory:</p>\n<p><a href=\"https://github.com/christophwille/csharp-opa-wasm/blob/master/WasmTimeTest/Program.cs#L19\" title=\"https://github.com/christophwille/csharp-opa-wasm/blob/master/WasmTimeTest/Program.cs#L19\">https://github.com/christophwille/csharp-opa-wasm/blob/master/WasmTimeTest/Program.cs#L19</a></p>\n<p>All my imports are satisfied by name, however, the env.memory import bombs, exception details in the source code via comment, but basically the wasm expects two pages of memory minimum.</p>\n<p>The WasmerSharp equivalent is here <a href=\"https://github.com/christophwille/csharp-opa-wasm/blob/master/src/Opa.Wasm/OpaPolicy.cs#L14\" title=\"https://github.com/christophwille/csharp-opa-wasm/blob/master/src/Opa.Wasm/OpaPolicy.cs#L14\">https://github.com/christophwille/csharp-opa-wasm/blob/master/src/Opa.Wasm/OpaPolicy.cs#L14</a>. My guess is that I'd actually need the handle here which is internal for Memory, or: I am using the entirely wrong class because I am translating from a different API by similarity... </p>\n</blockquote>",
        "id": 193117727,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586217780
    }
]