[
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171#issuecomment-683322507\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171\">Issue #2171</a>:</p>\n<blockquote>\n<p>Thanks for this! Do you have some wall-clock benchmarks as well which show the improvement?</p>\n</blockquote>",
        "id": 208445855,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1598723644
    },
    {
        "content": "<p>MaxGraey <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171#issuecomment-683322975\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171\">Issue #2171</a>:</p>\n<blockquote>\n<p>no, I just compared metrics from llvm-mca. Btw it will be great to have some online benchmark tools like <a href=\"https://quick-bench.com\"><code>quick-bench.com</code></a> which allow you bench on different architectures and version of compiler</p>\n</blockquote>",
        "id": 208446027,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1598723887
    },
    {
        "content": "<p>MaxGraey <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171#issuecomment-683339394\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171\">Issue #2171</a>:</p>\n<blockquote>\n<p>Here benchmark results:</p>\n<p><a href=\"https://gist.github.com/MaxGraey/a826c71909353e3a28a54e8a749c06ac\">benchmark code</a></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_abs_copysign</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">29</span><span class=\"p\">,</span><span class=\"mi\">973</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">9</span><span class=\"p\">,</span><span class=\"mi\">049</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_branch</span><span class=\"w\">       </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">35</span><span class=\"p\">,</span><span class=\"mi\">935</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">135</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_copysign</span><span class=\"w\">     </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">33</span><span class=\"p\">,</span><span class=\"mi\">115</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">961</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_original</span><span class=\"w\">     </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:     <span class=\"mi\">102</span><span class=\"p\">,</span><span class=\"mi\">740</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">22</span><span class=\"p\">,</span><span class=\"mi\">607</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n<p><code>nearest_original</code> is original function in wasmtime<br>\n<code>nearest_copysign</code> is proposed in current PR.</p>\n</blockquote>",
        "id": 208452900,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1598733451
    },
    {
        "content": "<p>MaxGraey edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171#issuecomment-683339394\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171\">Issue #2171</a>:</p>\n<blockquote>\n<p>Here benchmark results:</p>\n<p><a href=\"https://gist.github.com/MaxGraey/a826c71909353e3a28a54e8a749c06ac\">benchmark code</a></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_abs_copysign</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">29</span><span class=\"p\">,</span><span class=\"mi\">973</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">9</span><span class=\"p\">,</span><span class=\"mi\">049</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_branch</span><span class=\"w\">       </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">35</span><span class=\"p\">,</span><span class=\"mi\">935</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">135</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_copysign</span><span class=\"w\">     </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">33</span><span class=\"p\">,</span><span class=\"mi\">115</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">961</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_original</span><span class=\"w\">     </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:     <span class=\"mi\">102</span><span class=\"p\">,</span><span class=\"mi\">740</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">22</span><span class=\"p\">,</span><span class=\"mi\">607</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n<p><code>nearest_original</code> is original function in wasmtime<br>\n<code>nearest_copysign</code> is proposed in current PR.</p>\n<p>So it seems new proposed in 3 times faster</p>\n</blockquote>",
        "id": 208452954,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1598733519
    },
    {
        "content": "<p>MaxGraey edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171#issuecomment-683339394\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171\">Issue #2171</a>:</p>\n<blockquote>\n<p>Here benchmark results:</p>\n<p><a href=\"https://gist.github.com/MaxGraey/a826c71909353e3a28a54e8a749c06ac\">benchmark code</a></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_abs_copysign</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">29</span><span class=\"p\">,</span><span class=\"mi\">973</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">9</span><span class=\"p\">,</span><span class=\"mi\">049</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_branch</span><span class=\"w\">       </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">35</span><span class=\"p\">,</span><span class=\"mi\">935</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">135</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_copysign</span><span class=\"w\">     </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">33</span><span class=\"p\">,</span><span class=\"mi\">115</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">961</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_original</span><span class=\"w\">     </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:     <span class=\"mi\">102</span><span class=\"p\">,</span><span class=\"mi\">740</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">22</span><span class=\"p\">,</span><span class=\"mi\">607</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n<p><code>nearest_original</code> is original function in wasmtime<br>\n<code>nearest_copysign</code> is proposed in current PR.</p>\n<p>So it seems new proposed approach in 3 times faster</p>\n</blockquote>",
        "id": 208453143,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1598733812
    },
    {
        "content": "<p>MaxGraey edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171#issuecomment-683339394\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171\">Issue #2171</a>:</p>\n<blockquote>\n<p>Here benchmark results:</p>\n<p><a href=\"https://gist.github.com/MaxGraey/a826c71909353e3a28a54e8a749c06ac\">benchmark code</a></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_abs_copysign</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">29</span><span class=\"p\">,</span><span class=\"mi\">973</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">9</span><span class=\"p\">,</span><span class=\"mi\">049</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_branch</span><span class=\"w\">       </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">35</span><span class=\"p\">,</span><span class=\"mi\">935</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">135</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_copysign</span><span class=\"w\">     </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">33</span><span class=\"p\">,</span><span class=\"mi\">115</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">961</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_original</span><span class=\"w\">     </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:     <span class=\"mi\">102</span><span class=\"p\">,</span><span class=\"mi\">740</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">22</span><span class=\"p\">,</span><span class=\"mi\">607</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n<p><code>nearest_original</code> is original function in wasmtime<br>\n<code>nearest_copysign</code> is proposed in current PR.</p>\n<p>So it seems new proposed approach in 3 times faster</p>\n<p>And btw all this was expected from llvm-mca metrics. I choose <code>nearest_copysign</code> due to potentially it could have better speed on ARMs </p>\n</blockquote>",
        "id": 208453294,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1598733964
    },
    {
        "content": "<p>MaxGraey edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171#issuecomment-683339394\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171\">Issue #2171</a>:</p>\n<blockquote>\n<p>Here benchmark results:</p>\n<p><a href=\"https://gist.github.com/MaxGraey/a826c71909353e3a28a54e8a749c06ac\">benchmark code</a></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_abs_copysign</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">29</span><span class=\"p\">,</span><span class=\"mi\">973</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">9</span><span class=\"p\">,</span><span class=\"mi\">049</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_branch</span><span class=\"w\">       </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">35</span><span class=\"p\">,</span><span class=\"mi\">935</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">135</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_copysign</span><span class=\"w\">     </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">33</span><span class=\"p\">,</span><span class=\"mi\">115</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">961</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_original</span><span class=\"w\">     </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:     <span class=\"mi\">102</span><span class=\"p\">,</span><span class=\"mi\">740</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">22</span><span class=\"p\">,</span><span class=\"mi\">607</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n<p><code>nearest_original</code> is original function in wasmtime<br>\n<code>nearest_copysign</code> is proposed in current PR.</p>\n<p>So it seems new proposed approach in 3 times faster</p>\n<p>And btw all this was expected from llvm-mca metrics. I choose <code>nearest_copysign</code> due to potentially it could have better performance on ARMs </p>\n</blockquote>",
        "id": 208453324,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1598734073
    },
    {
        "content": "<p>MaxGraey edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171#issuecomment-683339394\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171\">Issue #2171</a>:</p>\n<blockquote>\n<p>Here benchmark results on my MacBook Pro (15-inch 2019, 2,3 GHz 8-cores i9):</p>\n<p><a href=\"https://gist.github.com/MaxGraey/a826c71909353e3a28a54e8a749c06ac\">benchmark code</a></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_abs_copysign</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">29</span><span class=\"p\">,</span><span class=\"mi\">973</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">9</span><span class=\"p\">,</span><span class=\"mi\">049</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_branch</span><span class=\"w\">       </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">35</span><span class=\"p\">,</span><span class=\"mi\">935</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">135</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_copysign</span><span class=\"w\">     </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">33</span><span class=\"p\">,</span><span class=\"mi\">115</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">961</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_original</span><span class=\"w\">     </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:     <span class=\"mi\">102</span><span class=\"p\">,</span><span class=\"mi\">740</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">22</span><span class=\"p\">,</span><span class=\"mi\">607</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n<p><code>nearest_original</code> is original function in wasmtime<br>\n<code>nearest_copysign</code> is proposed in current PR.</p>\n<p>So it seems new proposed approach in 3 times faster</p>\n<p>And btw all this was expected from llvm-mca metrics. I choose <code>nearest_copysign</code> due to potentially it could have better performance on ARMs </p>\n</blockquote>",
        "id": 208453450,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1598734316
    },
    {
        "content": "<p>MaxGraey edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171#issuecomment-683339394\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171\">Issue #2171</a>:</p>\n<blockquote>\n<p>Here benchmark results on MacBook Pro (15-inch 2019, 2,3 GHz 8-cores i9):</p>\n<p><a href=\"https://gist.github.com/MaxGraey/a826c71909353e3a28a54e8a749c06ac\">benchmark code</a></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_abs_copysign</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">29</span><span class=\"p\">,</span><span class=\"mi\">973</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">9</span><span class=\"p\">,</span><span class=\"mi\">049</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_branch</span><span class=\"w\">       </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">35</span><span class=\"p\">,</span><span class=\"mi\">935</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">135</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_copysign</span><span class=\"w\">     </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">33</span><span class=\"p\">,</span><span class=\"mi\">115</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">961</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_original</span><span class=\"w\">     </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:     <span class=\"mi\">102</span><span class=\"p\">,</span><span class=\"mi\">740</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">22</span><span class=\"p\">,</span><span class=\"mi\">607</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n<p><code>nearest_original</code> is original function in wasmtime<br>\n<code>nearest_copysign</code> is proposed in current PR.</p>\n<p>So it seems new proposed approach in 3 times faster</p>\n<p>And btw all this was expected from llvm-mca metrics. I choose <code>nearest_copysign</code> due to potentially it could have better performance on ARMs </p>\n</blockquote>",
        "id": 208453511,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1598734384
    },
    {
        "content": "<p>MaxGraey <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171#issuecomment-683349114\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171\">Issue #2171</a>:</p>\n<blockquote>\n<p>@alexcrichton I'm wondering is it possible use <a href=\"https://doc.rust-lang.org/1.29.0/core/arch/x86/fn._mm_round_pd.html\"><code>sse4.1 _mm_round_pd intrinsic</code></a> for this in wasmtime? And fallback to current polyfill for rest of architectures</p>\n</blockquote>",
        "id": 208457345,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1598740624
    },
    {
        "content": "<p>MaxGraey edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171#issuecomment-683349114\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171\">Issue #2171</a>:</p>\n<blockquote>\n<p>@alexcrichton I'm wondering is it possible use <a href=\"https://doc.rust-lang.org/1.29.0/core/arch/x86/fn._mm_round_pd.html\"><code>sse4.1 _mm_round_pd(ps) intrinsic</code></a> for this in wasmtime? And fallback to current polyfill for rest of architectures</p>\n</blockquote>",
        "id": 208457489,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1598740820
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171#issuecomment-683390776\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171\">Issue #2171</a>:</p>\n<blockquote>\n<p>The <code>NearestF32</code> and <code>NearestF64</code> libcalls are already a fallback for when there is no hardware instruction to do this. The old style x86 backend already uses <code>roundss</code> and <code>roundsd</code>: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/5c5a30f76c35e15697fc150fb00c4b86be621d66/cranelift/codegen/meta/src/isa/x86/encodings.rs#L1341-L1345\">https://github.com/bytecodealliance/wasmtime/blob/5c5a30f76c35e15697fc150fb00c4b86be621d66/cranelift/codegen/meta/src/isa/x86/encodings.rs#L1341-L1345</a> The new style x86_64 backend has a todo for this: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/8ac4bd1d0d8228b97a88b1841cfc0247e9ef4306/cranelift/codegen/src/isa/x64/lower.rs#L1749\">https://github.com/bytecodealliance/wasmtime/blob/8ac4bd1d0d8228b97a88b1841cfc0247e9ef4306/cranelift/codegen/src/isa/x64/lower.rs#L1749</a></p>\n</blockquote>",
        "id": 208474391,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1598775164
    },
    {
        "content": "<p>MaxGraey <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171#issuecomment-683391073\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171\">Issue #2171</a>:</p>\n<blockquote>\n<p>@bjorn3 Good to know. Thanks!</p>\n</blockquote>",
        "id": 208474494,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1598775365
    },
    {
        "content": "<p>MaxGraey edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171#issuecomment-683349114\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171\">Issue #2171</a>:</p>\n<blockquote>\n<p>~@alexcrichton I'm wondering is it possible use <a href=\"https://doc.rust-lang.org/1.29.0/core/arch/x86/fn._mm_round_pd.html\"><code>sse4.1 _mm_round_pd(ps) intrinsic</code></a> for this in wasmtime? And fallback to current polyfill for rest of architectures~~</p>\n</blockquote>",
        "id": 208474690,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1598775821
    },
    {
        "content": "<p>MaxGraey edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171#issuecomment-683349114\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171\">Issue #2171</a>:</p>\n<blockquote>\n<p><del>@alexcrichton I'm wondering is it possible use <a href=\"https://doc.rust-lang.org/1.29.0/core/arch/x86/fn._mm_round_pd.html\"><code>sse4.1 _mm_round_pd(ps) intrinsic</code></a> for this in wasmtime? And fallback to current polyfill for rest of architectures</del></p>\n</blockquote>",
        "id": 208474691,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1598775831
    },
    {
        "content": "<p>MaxGraey <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171#issuecomment-683394965\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171\">Issue #2171</a>:</p>\n<blockquote>\n<p>Also added sse 4.1 intrinsic to gist. Update results (via <code>RUSTFLAGS='-C target-cpu=native' cargo bench</code>):</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_abs_copysign</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">29</span><span class=\"p\">,</span><span class=\"mi\">344</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">691</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_branch</span><span class=\"w\">       </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">33</span><span class=\"p\">,</span><span class=\"mi\">893</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">300</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_copysign</span><span class=\"w\">     </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">32</span><span class=\"p\">,</span><span class=\"mi\">487</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">328</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_original</span><span class=\"w\">     </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">51</span><span class=\"p\">,</span><span class=\"mi\">732</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">668</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_sse41</span><span class=\"w\">        </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">20</span><span class=\"p\">,</span><span class=\"mi\">537</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">958</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n</blockquote>",
        "id": 208475714,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1598777937
    },
    {
        "content": "<p>MaxGraey edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171#issuecomment-683394965\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171\">Issue #2171</a>:</p>\n<blockquote>\n<p>Also added sse 4.1 intrinsic to gist. Update results (via <code>RUSTFLAGS='-C target-cpu=native' cargo bench</code>):</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_abs_copysign</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">29</span><span class=\"p\">,</span><span class=\"mi\">322</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">160</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_branch</span><span class=\"w\">       </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">33</span><span class=\"p\">,</span><span class=\"mi\">783</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"p\">,</span><span class=\"mi\">887</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_copysign</span><span class=\"w\">     </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">32</span><span class=\"p\">,</span><span class=\"mi\">049</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">080</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_original</span><span class=\"w\">     </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">52</span><span class=\"p\">,</span><span class=\"mi\">751</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"mi\">244</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_sse41</span><span class=\"w\">        </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">19</span><span class=\"p\">,</span><span class=\"mi\">452</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">967</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n</blockquote>",
        "id": 208477599,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1598781569
    },
    {
        "content": "<p>MaxGraey edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171#issuecomment-683394965\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171\">Issue #2171</a>:</p>\n<blockquote>\n<p>Also added sse 4.1 intrinsic to gist.</p>\n<p><strong>Upd</strong><br>\n<code>cargo bench</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_abs_copysign</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">31</span><span class=\"p\">,</span><span class=\"mi\">500</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">883</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_branch</span><span class=\"w\">       </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">35</span><span class=\"p\">,</span><span class=\"mi\">911</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">852</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_copysign</span><span class=\"w\">     </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">32</span><span class=\"p\">,</span><span class=\"mi\">282</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"mi\">079</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_original</span><span class=\"w\">     </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:     <span class=\"mi\">106</span><span class=\"p\">,</span><span class=\"mi\">932</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">13</span><span class=\"p\">,</span><span class=\"mi\">186</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_sse41</span><span class=\"w\">        </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">41</span><span class=\"p\">,</span><span class=\"mi\">642</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">501</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n<p><code>RUSTFLAGS='-C target-cpu=native' cargo bench</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_abs_copysign</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">29</span><span class=\"p\">,</span><span class=\"mi\">554</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"mi\">914</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_branch</span><span class=\"w\">       </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">44</span><span class=\"p\">,</span><span class=\"mi\">846</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">056</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_copysign</span><span class=\"w\">     </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">33</span><span class=\"p\">,</span><span class=\"mi\">609</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">196</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_original</span><span class=\"w\">     </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">52</span><span class=\"p\">,</span><span class=\"mi\">212</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"mi\">702</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_sse41</span><span class=\"w\">        </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">19</span><span class=\"p\">,</span><span class=\"mi\">542</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">766</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n</blockquote>",
        "id": 208479719,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1598785327
    },
    {
        "content": "<p>MaxGraey edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171#issuecomment-683394965\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171\">Issue #2171</a>:</p>\n<blockquote>\n<p>Also added sse 4.1 intrinsic to gist.</p>\n<p><strong>Upd</strong><br>\n<code>cargo bench</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_abs_copysign</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">31</span><span class=\"p\">,</span><span class=\"mi\">500</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">883</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_branch</span><span class=\"w\">       </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">35</span><span class=\"p\">,</span><span class=\"mi\">911</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">852</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_copysign</span><span class=\"w\">     </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">32</span><span class=\"p\">,</span><span class=\"mi\">282</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"mi\">079</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_original</span><span class=\"w\">     </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:     <span class=\"mi\">106</span><span class=\"p\">,</span><span class=\"mi\">932</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">13</span><span class=\"p\">,</span><span class=\"mi\">186</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_sse41</span><span class=\"w\">        </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">41</span><span class=\"p\">,</span><span class=\"mi\">642</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">501</span><span class=\"p\">)</span><span class=\"w\">  </span><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">fallback</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">soft</span><span class=\"w\"> </span><span class=\"n\">implementation</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n<p><code>RUSTFLAGS='-C target-cpu=native' cargo bench</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_abs_copysign</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">29</span><span class=\"p\">,</span><span class=\"mi\">554</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"mi\">914</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_branch</span><span class=\"w\">       </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">44</span><span class=\"p\">,</span><span class=\"mi\">846</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">056</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_copysign</span><span class=\"w\">     </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">33</span><span class=\"p\">,</span><span class=\"mi\">609</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">196</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_original</span><span class=\"w\">     </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">52</span><span class=\"p\">,</span><span class=\"mi\">212</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"mi\">702</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_sse41</span><span class=\"w\">        </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">19</span><span class=\"p\">,</span><span class=\"mi\">542</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">766</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n</blockquote>",
        "id": 208479851,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1598785559
    },
    {
        "content": "<p>MaxGraey edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171#issuecomment-683394965\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171\">Issue #2171</a>:</p>\n<blockquote>\n<p>Also added sse 4.1 intrinsic to gist.</p>\n<p><strong>Upd</strong><br>\n<code>cargo bench</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_abs_copysign</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">31</span><span class=\"p\">,</span><span class=\"mi\">500</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">883</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_branch</span><span class=\"w\">       </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">35</span><span class=\"p\">,</span><span class=\"mi\">911</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">852</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_copysign</span><span class=\"w\">     </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">32</span><span class=\"p\">,</span><span class=\"mi\">282</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"mi\">079</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_original</span><span class=\"w\">     </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:     <span class=\"mi\">106</span><span class=\"p\">,</span><span class=\"mi\">932</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">13</span><span class=\"p\">,</span><span class=\"mi\">186</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_sse41</span><span class=\"w\">        </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">41</span><span class=\"p\">,</span><span class=\"mi\">642</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">501</span><span class=\"p\">)</span><span class=\"w\">  </span><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">fallback</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">soft</span><span class=\"w\"> </span><span class=\"n\">implementation</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n<p><code>RUSTFLAGS='-C target-cpu=native' cargo bench</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_abs_copysign</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">29</span><span class=\"p\">,</span><span class=\"mi\">554</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"mi\">914</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_branch</span><span class=\"w\">       </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">44</span><span class=\"p\">,</span><span class=\"mi\">846</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">056</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_copysign</span><span class=\"w\">     </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">33</span><span class=\"p\">,</span><span class=\"mi\">609</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">196</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_original</span><span class=\"w\">     </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">52</span><span class=\"p\">,</span><span class=\"mi\">212</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"mi\">702</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_sse41</span><span class=\"w\">        </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">19</span><span class=\"p\">,</span><span class=\"mi\">542</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">766</span><span class=\"p\">)</span><span class=\"w\">  </span><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">rael</span><span class=\"w\"> </span><span class=\"n\">usage</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">roundpd</span><span class=\"err\">`</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n</blockquote>",
        "id": 208479914,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1598785629
    },
    {
        "content": "<p>MaxGraey edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171#issuecomment-683394965\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171\">Issue #2171</a>:</p>\n<blockquote>\n<p>Also added sse 4.1 intrinsic to gist.</p>\n<p><strong>Upd</strong><br>\n<code>cargo bench</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_abs_copysign</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">31</span><span class=\"p\">,</span><span class=\"mi\">500</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">883</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_branch</span><span class=\"w\">       </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">35</span><span class=\"p\">,</span><span class=\"mi\">911</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">852</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_copysign</span><span class=\"w\">     </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">32</span><span class=\"p\">,</span><span class=\"mi\">282</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"mi\">079</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_original</span><span class=\"w\">     </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:     <span class=\"mi\">106</span><span class=\"p\">,</span><span class=\"mi\">932</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">13</span><span class=\"p\">,</span><span class=\"mi\">186</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_sse41</span><span class=\"w\">        </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">41</span><span class=\"p\">,</span><span class=\"mi\">642</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">501</span><span class=\"p\">)</span><span class=\"w\">  </span><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">fallback</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">soft</span><span class=\"w\"> </span><span class=\"n\">implementation</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n<p><code>RUSTFLAGS='-C target-cpu=native' cargo bench</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_abs_copysign</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">29</span><span class=\"p\">,</span><span class=\"mi\">554</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"mi\">914</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_branch</span><span class=\"w\">       </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">44</span><span class=\"p\">,</span><span class=\"mi\">846</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">056</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_copysign</span><span class=\"w\">     </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">33</span><span class=\"p\">,</span><span class=\"mi\">609</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">196</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_original</span><span class=\"w\">     </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">52</span><span class=\"p\">,</span><span class=\"mi\">212</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"mi\">702</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_sse41</span><span class=\"w\">        </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">19</span><span class=\"p\">,</span><span class=\"mi\">542</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">766</span><span class=\"p\">)</span><span class=\"w\">  </span><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">real</span><span class=\"w\"> </span><span class=\"n\">usage</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">roundpd</span><span class=\"err\">`</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n</blockquote>",
        "id": 208479920,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1598785637
    },
    {
        "content": "<p>MaxGraey edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171#issuecomment-683394965\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171\">Issue #2171</a>:</p>\n<blockquote>\n<p>Also added sse 4.1 intrinsic to gist.</p>\n<p><strong>Upd</strong><br>\n<code>cargo bench</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_abs_copysign</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">31</span><span class=\"p\">,</span><span class=\"mi\">500</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">883</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_branch</span><span class=\"w\">       </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">35</span><span class=\"p\">,</span><span class=\"mi\">911</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">852</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_copysign</span><span class=\"w\">     </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">32</span><span class=\"p\">,</span><span class=\"mi\">282</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"mi\">079</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_original</span><span class=\"w\">     </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:     <span class=\"mi\">106</span><span class=\"p\">,</span><span class=\"mi\">932</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">13</span><span class=\"p\">,</span><span class=\"mi\">186</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_sse41</span><span class=\"w\">        </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">41</span><span class=\"p\">,</span><span class=\"mi\">642</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">501</span><span class=\"p\">)</span><span class=\"w\">  </span><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">fallback</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">soft</span><span class=\"w\"> </span><span class=\"n\">implementation</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n<p><code>RUSTFLAGS='-C target-cpu=native' cargo bench</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_abs_copysign</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">29</span><span class=\"p\">,</span><span class=\"mi\">554</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"mi\">914</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_branch</span><span class=\"w\">       </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">44</span><span class=\"p\">,</span><span class=\"mi\">846</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">056</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_copysign</span><span class=\"w\">     </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">33</span><span class=\"p\">,</span><span class=\"mi\">609</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">196</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_original</span><span class=\"w\">     </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">52</span><span class=\"p\">,</span><span class=\"mi\">212</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"mi\">702</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">nearest_sse41</span><span class=\"w\">        </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">bench</span>:      <span class=\"mi\">19</span><span class=\"p\">,</span><span class=\"mi\">542</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"o\">/</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">+/-</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">766</span><span class=\"p\">)</span><span class=\"w\">  </span><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">real</span><span class=\"w\"> </span><span class=\"n\">usage</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">roundpd</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n</blockquote>",
        "id": 208479930,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1598785671
    },
    {
        "content": "<p>MaxGraey <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171#issuecomment-683457258\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171\">Issue #2171</a>:</p>\n<blockquote>\n<p>Squashed commits</p>\n</blockquote>",
        "id": 208499232,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1598814016
    },
    {
        "content": "<p>sunfishcode <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171#issuecomment-683892933\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2171\">Issue #2171</a>:</p>\n<blockquote>\n<p>Great, thanks!</p>\n</blockquote>",
        "id": 208583922,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1598891949
    }
]