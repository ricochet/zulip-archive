[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2820\">PR #2820</a> from <code>faster-stack-maps</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit fixes a perf issue I was seeing in some local benchmarking<br>\nwhere registration of stack maps took a nontrivial amount of time for a<br>\nmodule that didn't even use stack maps! The fix here is to largely just<br>\ndo the same thing as #2811 which is to use the in-memory data structures<br>\nof a <code>CompiledModule</code> rather than rebuilding different data structures<br>\nwhen a module is registered with a <code>Store</code>.</p>\n<p>The <code>StackMapRegistry</code> type now takes a lookup object for a range of<br>\npcs, simplifying registration. Registration additionally doesn't even<br>\nhappen if a module is pre-determined to not have any stack maps inside<br>\nof it. This trait object encapsulates all the logic that was previously<br>\nused in the rebuilt data structures and also leverages conveniences like<br>\n<code>CompiledModule::func_by_pc</code> added recently as well.</p>\n<p>With this all combined it means that modules which don't have stack maps<br>\nnow skip this registration step entirely and modules with stack maps<br>\nshould do much less work during registration as well.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 233699856,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617904651
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2820\">PR #2820</a>.</p>",
        "id": 233699884,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617904660
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2820#pullrequestreview-631719771\">PR Review</a>.</p>",
        "id": 233706287,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617906957
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2820#discussion_r610049146\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Question: why the trait over using a method on <code>CompiledModule</code> (similar to <code>func_by_pc</code> and <code>func_info</code>)?</p>\n</blockquote>",
        "id": 233717542,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617911527
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2820#pullrequestreview-631777928\">PR Review</a>.</p>",
        "id": 233717543,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617911527
    },
    {
        "content": "<p>peterhuene edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2820#discussion_r610049146\">PR Review Comment</a>.</p>",
        "id": 233717685,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617911609
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2820#pullrequestreview-631787892\">PR Review</a>.</p>",
        "id": 233719397,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617912314
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2820#discussion_r610058756\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Only because the <code>CompiledModule</code> lives in the <code>wasmtime_jit</code> crate which this <code>wasmtime_runtime</code> crate doesn't have access to. Otherwise though there's definitely no need for dynamic trait dispatch here.</p>\n</blockquote>",
        "id": 233719398,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617912315
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2820\">PR #2820</a> from <code>faster-stack-maps</code> to <code>main</code>.</p>",
        "id": 233719568,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617912382
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2820#pullrequestreview-631798712\">PR Review</a>.</p>",
        "id": 233721460,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617913215
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2820#discussion_r610069911\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Makes sense.  I guess the alternative would be to use a \"lookup\" trait that the runtime interacts with (it would just need the <code>lookup_stack_map</code> method), freeing the registry implementation to live in the <code>wasmtime</code> crate, but that's just trading dynamic-dispatch during module instantiation to dynamic-dispatch at externref gc.</p>\n</blockquote>",
        "id": 233721461,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617913215
    },
    {
        "content": "<p>peterhuene edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2820#discussion_r610069911\">PR Review Comment</a>.</p>",
        "id": 233721507,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617913228
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2820#pullrequestreview-631811076\">PR Review</a>.</p>",
        "id": 233723981,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617914197
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2820#discussion_r610082138\">PR Review Comment</a>:</p>\n<blockquote>\n<p>If we did move the registry implementation to <code>wasmtime</code>, I think this data structure could be a generic one replacing <code>StoreFrameInfo</code> too, basically just a \"which <code>CompiledModule</code> should I be talking to given this pc?\" which responds with an answer that we then use to lookup the appropriate information (gimmie frame info, gimmie trap info, gimmie stack maps, etc.)</p>\n</blockquote>",
        "id": 233723982,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617914197
    },
    {
        "content": "<p>peterhuene edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2820#discussion_r610082138\">PR Review Comment</a>.</p>",
        "id": 233724667,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617914519
    },
    {
        "content": "<p>peterhuene edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2820#discussion_r610069911\">PR Review Comment</a>.</p>",
        "id": 233726103,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617915184
    },
    {
        "content": "<p>peterhuene edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2820#discussion_r610069911\">PR Review Comment</a>.</p>",
        "id": 233726241,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617915250
    },
    {
        "content": "<p>peterhuene edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2820#discussion_r610069911\">PR Review Comment</a>.</p>",
        "id": 233726566,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617915410
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2820#pullrequestreview-631840757\">PR Review</a>.</p>",
        "id": 233728850,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617915980
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2820#discussion_r610105761\">PR Review Comment</a>:</p>\n<blockquote>\n<p>In fact, given externref gc being a relatively expensive (and hopefully very infrequent) operation and the cost of doing trait object dispatch per frame would be negligible, I would argue <code>VMContext</code> should have <code>*const dyn StackMapLookup</code> rather than <code>*mut StackMapRegistry</code>.</p>\n<p>This frees us to remove <code>StackMapRegistry</code> and <code>StoreFrameInfo</code> in favor of a single <code>CompiledModuleRegistry</code> per store which impls the runtime's <code>StackMapLookup</code> and can lookup frame and trap information  as well.</p>\n<p>Thoughts on this approach? Perhaps for another PR?</p>\n</blockquote>",
        "id": 233728851,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617915980
    },
    {
        "content": "<p>peterhuene edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2820#discussion_r610105761\">PR Review Comment</a>.</p>",
        "id": 233729304,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617916113
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2820#pullrequestreview-631881259\">PR Review</a>.</p>",
        "id": 233739068,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617920031
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2820#discussion_r610152703\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Hm good points! I'll look to add this to this PR, seems reasonable to do here!</p>\n</blockquote>",
        "id": 233739069,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617920032
    },
    {
        "content": "<p>alexcrichton closed without merge <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2820\">PR #2820</a>.</p>",
        "id": 234680453,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618495267
    }
]