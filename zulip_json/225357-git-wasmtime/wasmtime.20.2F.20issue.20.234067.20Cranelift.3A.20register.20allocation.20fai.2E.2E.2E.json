[
    {
        "content": "<p>Mrmaxmeier opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4067\">issue #4067</a>:</p>\n<blockquote>\n<h3><code>.clif</code> Test Case</h3>\n<p>This snipped started crashing with <code>register allocation: EntryLivein</code> in e4b7c8a7376c0b4196262b176373b606c7b4c760 (x86_64):</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">u0</span>:<span class=\"mi\">0</span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i32</span> <span class=\"nc\">fast</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v1</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2</span>: <span class=\"kt\">i64</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"n\">notrap</span><span class=\"w\"> </span><span class=\"n\">aligned</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v4</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">umax</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v4</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>I'm not sure why/if this issue is only present with the integer min/max implementations, but I'd guess that it only surfaces with load operands reused in both a conditional move and compare.</p>\n<p>CC @cfallin </p>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: e4b7c8a7376c0b4196262b176373b606c7b4c760</p>\n<p>Operating system: Linux</p>\n<p>Architecture: x86_64<br>\n</p>\n</blockquote>",
        "id": 280049432,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650882397
    },
    {
        "content": "<p>Mrmaxmeier labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4067\">issue #4067</a>:</p>\n<blockquote>\n<h3><code>.clif</code> Test Case</h3>\n<p>This snipped started crashing with <code>register allocation: EntryLivein</code> in e4b7c8a7376c0b4196262b176373b606c7b4c760 (x86_64):</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">u0</span>:<span class=\"mi\">0</span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i32</span> <span class=\"nc\">fast</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v1</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2</span>: <span class=\"kt\">i64</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"n\">notrap</span><span class=\"w\"> </span><span class=\"n\">aligned</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v4</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">umax</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v4</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>I'm not sure why/if this issue is only present with the integer min/max implementations, but I'd guess that it only surfaces with load operands reused in both a conditional move and compare.</p>\n<p>CC @cfallin </p>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: e4b7c8a7376c0b4196262b176373b606c7b4c760</p>\n<p>Operating system: Linux</p>\n<p>Architecture: x86_64<br>\n</p>\n</blockquote>",
        "id": 280049433,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650882397
    },
    {
        "content": "<p>Mrmaxmeier labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4067\">issue #4067</a>:</p>\n<blockquote>\n<h3><code>.clif</code> Test Case</h3>\n<p>This snipped started crashing with <code>register allocation: EntryLivein</code> in e4b7c8a7376c0b4196262b176373b606c7b4c760 (x86_64):</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">u0</span>:<span class=\"mi\">0</span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i32</span> <span class=\"nc\">fast</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v1</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2</span>: <span class=\"kt\">i64</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"n\">notrap</span><span class=\"w\"> </span><span class=\"n\">aligned</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v4</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">umax</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v4</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>I'm not sure why/if this issue is only present with the integer min/max implementations, but I'd guess that it only surfaces with load operands reused in both a conditional move and compare.</p>\n<p>CC @cfallin </p>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: e4b7c8a7376c0b4196262b176373b606c7b4c760</p>\n<p>Operating system: Linux</p>\n<p>Architecture: x86_64<br>\n</p>\n</blockquote>",
        "id": 280049434,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650882397
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4067#issuecomment-1108790431\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4067\">issue #4067</a>:</p>\n<blockquote>\n<p>Thanks for the report -- taking a look right away!</p>\n</blockquote>",
        "id": 280094368,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650904221
    },
    {
        "content": "<p>cfallin closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4067\">issue #4067</a>:</p>\n<blockquote>\n<h3><code>.clif</code> Test Case</h3>\n<p>This snipped started crashing with <code>register allocation: EntryLivein</code> in e4b7c8a7376c0b4196262b176373b606c7b4c760 (x86_64):</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">u0</span>:<span class=\"mi\">0</span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i32</span> <span class=\"nc\">fast</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v1</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2</span>: <span class=\"kt\">i64</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"n\">notrap</span><span class=\"w\"> </span><span class=\"n\">aligned</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v4</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">umax</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v4</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>I'm not sure why/if this issue is only present with the integer min/max implementations, but I'd guess that it only surfaces with load operands reused in both a conditional move and compare.</p>\n<p>CC @cfallin </p>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: e4b7c8a7376c0b4196262b176373b606c7b4c760</p>\n<p>Operating system: Linux</p>\n<p>Architecture: x86_64<br>\n</p>\n</blockquote>",
        "id": 280102761,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650907930
    }
]