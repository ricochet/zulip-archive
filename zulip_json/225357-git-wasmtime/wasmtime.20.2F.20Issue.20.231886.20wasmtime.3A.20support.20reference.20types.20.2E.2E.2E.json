[
    {
        "content": "<p>fitzgen opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886\">Issue #1886</a>:</p>\n<blockquote>\n<p>I think this should mostly Just Work after <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1617\">https://github.com/bytecodealliance/wasmtime/issues/1617</a> lands, but we also need to remove these <code>cfg</code>s (and make sure the tests pass, ofc):</p>\n<ul>\n<li>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/647d2b423131c533af57e59e98928ca5d1f6887e/build.rs#L214-L216\">https://github.com/bytecodealliance/wasmtime/blob/647d2b423131c533af57e59e98928ca5d1f6887e/build.rs#L214-L216</a></p>\n</li>\n<li>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/647d2b423131c533af57e59e98928ca5d1f6887e/tests/all/main.rs#L22-L24\">https://github.com/bytecodealliance/wasmtime/blob/647d2b423131c533af57e59e98928ca5d1f6887e/tests/all/main.rs#L22-L24</a></p>\n</li>\n</ul>\n</blockquote>",
        "id": 201045190,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592326935
    },
    {
        "content": "<p>fitzgen labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886\">Issue #1886</a>:</p>\n<blockquote>\n<p>I think this should mostly Just Work after <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1617\">https://github.com/bytecodealliance/wasmtime/issues/1617</a> lands, but we also need to remove these <code>cfg</code>s (and make sure the tests pass, ofc):</p>\n<ul>\n<li>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/647d2b423131c533af57e59e98928ca5d1f6887e/build.rs#L214-L216\">https://github.com/bytecodealliance/wasmtime/blob/647d2b423131c533af57e59e98928ca5d1f6887e/build.rs#L214-L216</a></p>\n</li>\n<li>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/647d2b423131c533af57e59e98928ca5d1f6887e/tests/all/main.rs#L22-L24\">https://github.com/bytecodealliance/wasmtime/blob/647d2b423131c533af57e59e98928ca5d1f6887e/tests/all/main.rs#L22-L24</a></p>\n</li>\n</ul>\n</blockquote>",
        "id": 201045191,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592326935
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886#issuecomment-644946403\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886\">Issue #1886</a>:</p>\n<blockquote>\n<p>For tracking purposes: the initial support for the ref values and opcodes themselves is in the WIP PR #1852, and @julian-seward1 and I are working out the safepoints story from the <a href=\"http://regalloc.rs\">regalloc.rs</a> and isel sides respectively. We should have at least an initial version done in the next few weeks.</p>\n<p>We're pushing things forward for the SpiderMonkey use-case and planning to test there, so I'll be interested to see how we interface with <code>wasmtime</code>'s new reftypes support you've been building. The stackmaps interface will likely need a bit of finessing but I'm happy to work that out once we get there.</p>\n</blockquote>",
        "id": 201057770,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592333107
    },
    {
        "content": "<p>cfallin edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886#issuecomment-644946403\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886\">Issue #1886</a>:</p>\n<blockquote>\n<p>For tracking purposes: the initial support for the ref values and opcodes themselves on AArch64 is in the WIP PR #1852, and @julian-seward1 and I are working out the safepoints story from the <a href=\"http://regalloc.rs\">regalloc.rs</a> and isel sides respectively. We should have at least an initial version done in the next few weeks.</p>\n<p>We're pushing things forward for the SpiderMonkey use-case and planning to test there, so I'll be interested to see how we interface with <code>wasmtime</code>'s new reftypes support you've been building. The stackmaps interface will likely need a bit of finessing but I'm happy to work that out once we get there.</p>\n</blockquote>",
        "id": 201057810,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592333126
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886#issuecomment-644963218\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886\">Issue #1886</a>:</p>\n<blockquote>\n<p>Thanks for the update @cfallin!</p>\n<p>FYI we now have <code>test stackmaps</code> support in filetests now too, so that should hopefully make testing in-tree a little easier for you:</p>\n<ul>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/cranelift/filetests/src/test_stackmaps.rs\">https://github.com/bytecodealliance/wasmtime/blob/master/cranelift/filetests/src/test_stackmaps.rs</a></li>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/tree/master/cranelift/filetests/filetests/stackmaps\">https://github.com/bytecodealliance/wasmtime/tree/master/cranelift/filetests/filetests/stackmaps</a></li>\n</ul>\n<p>The stack maps interfaces definitely need a little finessing (one example off the top of my head would be to have \"semantic\" methods rather than just exposing the inner bit map directly and expecting callers to figure out how to interpret that; also I suspect we can do better than iterating over every word in the frame and have an iterator over only the live refs instead).</p>\n<p>As long as everything remains SP-relative, then I think Wasmtime should be fine (getting SP portably and reliably is <em>much</em> easier than getting the CFA with libunwind).</p>\n</blockquote>",
        "id": 201061625,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592335117
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886#issuecomment-726916679\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886\">Issue #1886</a>:</p>\n<blockquote>\n<p>Fixed by #2410.</p>\n</blockquote>",
        "id": 216647586,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605289929
    },
    {
        "content": "<p>cfallin closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886\">Issue #1886</a>:</p>\n<blockquote>\n<p>I think this should mostly Just Work after <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1617\">https://github.com/bytecodealliance/wasmtime/issues/1617</a> lands, but we also need to remove these <code>cfg</code>s (and make sure the tests pass, ofc):</p>\n<ul>\n<li>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/647d2b423131c533af57e59e98928ca5d1f6887e/build.rs#L214-L216\">https://github.com/bytecodealliance/wasmtime/blob/647d2b423131c533af57e59e98928ca5d1f6887e/build.rs#L214-L216</a></p>\n</li>\n<li>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/647d2b423131c533af57e59e98928ca5d1f6887e/tests/all/main.rs#L22-L24\">https://github.com/bytecodealliance/wasmtime/blob/647d2b423131c533af57e59e98928ca5d1f6887e/tests/all/main.rs#L22-L24</a></p>\n</li>\n</ul>\n</blockquote>",
        "id": 216647588,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605289929
    }
]