[
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/elliottt\">elliottt</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8609\">PR #8609</a>.</p>",
        "id": 438438786,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715630822
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8609\">PR #8609</a>.</p>",
        "id": 438438787,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715630822
    },
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8609\">PR #8609</a> from <code>alexcrichton:refactor-wasi</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This commit builds on the support from #8448 to remove all blanket impls from the WASI crates and instead replace them with concrete impls. This is slightly functionally different from before where impls are now on trait objects meaning dynamic dispatch is involved where previously dynamic dispatch was used. That being said the perf hit here is expected to be negligible-to-nonexistent since the implementations are large enough that the dynamic dispatch won't be the hot path.</p>\n<p>The motivations for this commit are:</p>\n<ul>\n<li>Removes the need for an odd <code>skip_mut_forwarding_impls</code> option - but this'll be left for a bit in case others need it.</li>\n<li>Improves incremental compile time of these crates where the crates themselves now contain all object code for all of WASI instead of forcing the final consume to codegen everything (although there's still a significant amount monomorphized).</li>\n<li>Improves future compatibility with refactorings of bindgen-generated-traits and such because blanket impls are pretty hard to work around where concrete impls are easier to reason about (and document).</li>\n</ul>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 438438790,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715630822
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8609#pullrequestreview-2056027478\">PR review</a>:</p>\n<blockquote>\n<p>Love it!</p>\n</blockquote>",
        "id": 438623534,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715708165
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8609\">PR #8609</a>.</p>",
        "id": 438628237,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715710187
    }
]