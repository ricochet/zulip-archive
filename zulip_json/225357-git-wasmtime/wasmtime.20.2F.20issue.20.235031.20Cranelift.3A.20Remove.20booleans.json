[
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5031#issuecomment-1271750234\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5031\">issue #5031</a>:</p>\n<blockquote>\n<p>I'm really happy that we're finally doing this! Thank you for taking this on.</p>\n<p>Some of our lowerings depend on the fact that bools can only be represented as all ones or all zeroes, and so now that we are removing that assumption we might want to revisit them.</p>\n<p>The <a href=\"https://github.com/bytecodealliance/wasmtime/blob/e45577e097b064797def3554468cffa5fdd443d3/cranelift/codegen/src/isa/aarch64/lower.isle#L1556-L1560\">AArch64 implementation for <code>bmask</code></a> is wrong if we want to accept any integer other than -1 and 0. (i.e. 2 will be false, but should be true)</p>\n<p><code>bint</code> is also assuming that inputs are all ones or all zeros and is <a href=\"https://github.com/bytecodealliance/wasmtime/blob/e45577e097b064797def3554468cffa5fdd443d3/cranelift/codegen/src/isa/aarch64/lower.isle#L1541-L1542\">implemented as <code>and_imm</code> on AArch64</a>.</p>\n</blockquote>",
        "id": 302879445,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665156957
    },
    {
        "content": "<p>afonso360 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5031#issuecomment-1271750234\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5031\">issue #5031</a>:</p>\n<blockquote>\n<p>I'm really happy that we're finally doing this! Thank you for taking this on.</p>\n<p>Some of our lowerings depend on the fact that bools can only be represented as all ones or all zeroes, and so now that we are removing that assumption we might want to revisit them.</p>\n<p>The <a href=\"https://github.com/bytecodealliance/wasmtime/blob/e45577e097b064797def3554468cffa5fdd443d3/cranelift/codegen/src/isa/aarch64/lower.isle#L1556-L1560\">AArch64 implementation for <code>bmask</code></a> is wrong if we want to accept any integer other than -1 and 0. </p>\n<p><code>bint</code> is also assuming that inputs are all ones or all zeros and is <a href=\"https://github.com/bytecodealliance/wasmtime/blob/e45577e097b064797def3554468cffa5fdd443d3/cranelift/codegen/src/isa/aarch64/lower.isle#L1541-L1542\">implemented as <code>and_imm</code> on AArch64</a>. (i.e. 2 will be false, but should be true)</p>\n</blockquote>",
        "id": 302879627,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665157004
    },
    {
        "content": "<p>afonso360 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5031#issuecomment-1271750234\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5031\">issue #5031</a>:</p>\n<blockquote>\n<p>I'm really happy that we're finally doing this! Thank you for taking this on.</p>\n<p>Some of our lowerings depend on the fact that bools can only be represented as all ones or all zeroes, and so now that we are removing that assumption we might want to revisit them.</p>\n<p>The <a href=\"https://github.com/bytecodealliance/wasmtime/blob/e45577e097b064797def3554468cffa5fdd443d3/cranelift/codegen/src/isa/aarch64/lower.isle#L1556-L1560\">AArch64 implementation for <code>bmask</code></a> is wrong if we want to accept any integer other than -1 and 0. I would expect to get -1 if I do a <code>bmask</code> on a 2, but that's not what's going to happen. (I haven't tested this, but that's my reading of the implementation).</p>\n<p><code>bint</code> is also assuming that inputs are all ones or all zeros and is <a href=\"https://github.com/bytecodealliance/wasmtime/blob/e45577e097b064797def3554468cffa5fdd443d3/cranelift/codegen/src/isa/aarch64/lower.isle#L1541-L1542\">implemented as <code>and_imm</code> on AArch64</a>. (i.e. 2 will be false, but should be true)</p>\n</blockquote>",
        "id": 302880082,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665157126
    },
    {
        "content": "<p>afonso360 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5031#issuecomment-1271750234\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5031\">issue #5031</a>:</p>\n<blockquote>\n<p>I'm really happy that we're finally doing this! Thank you for taking this on.</p>\n<p>Some of our lowerings depend on the fact that bools can only be represented as all ones or all zeroes, and so now that we are removing that assumption we might want to revisit them.</p>\n<p>The <a href=\"https://github.com/bytecodealliance/wasmtime/blob/e45577e097b064797def3554468cffa5fdd443d3/cranelift/codegen/src/isa/aarch64/lower.isle#L1556-L1560\">AArch64 implementation for <code>bmask</code></a> is wrong if we want to accept any integer other than -1 and 0. I would expect to get -1 if I do a <code>bmask</code> on a 2, but that's not what's going to happen. (I haven't tested this, but that's my reading of the implementation).</p>\n<p><code>bint</code> is also assuming that inputs are all ones or all zeros and is <a href=\"https://github.com/bytecodealliance/wasmtime/blob/e45577e097b064797def3554468cffa5fdd443d3/cranelift/codegen/src/isa/aarch64/lower.isle#L1541-L1542\">implemented as <code>and_imm</code> on AArch64</a>. (i.e. 2 will be false, but should be true)</p>\n<p>Edit: AArch64 has instructions (<a href=\"https://developer.arm.com/documentation/ddi0596/2020-12/Base-Instructions/CSET--Conditional-Set--an-alias-of-CSINC-\"><code>cset</code></a> and <a href=\"https://developer.arm.com/documentation/ddi0596/2020-12/Base-Instructions/CSETM--Conditional-Set-Mask--an-alias-of-CSINV-\"><code>csetm</code></a>) that represent these two operations, so we may want to partially revert b8f6d53a6bdf861e66093a046a081c886546cdf1 to get them back</p>\n</blockquote>",
        "id": 302893023,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665161096
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5031#issuecomment-1272162522\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5031\">issue #5031</a>:</p>\n<blockquote>\n<p>Also, just to note it here: if at all possible, I'd prefer for us to wait to merge this until after my mid-end work in #4953 is merged, if only because they're both large and likely-to-conflict PRs and mine has been through ~three painful rebases already :-)</p>\n</blockquote>",
        "id": 302949242,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665186049
    }
]