[
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5885\">PR #5885</a> from <code>fuzz-simd</code> to <code>main</code>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>This PR Introduces support for SIMD vectors on fuzzgen. This is mostly to test ABI since it doesn't enable a lot of instructions.</p>\n<p>I'm also not planning on introducing pretty much any other SIMD opcodes with the current opcode list system. I think the next step really is to move away from the opcode list.</p>\n<hr>\n<p>This also does some changes to the clif file format. The current format represents consts as:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">const0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mh\">0x00</span><span class=\"w\"> </span><span class=\"mh\">0x01</span><span class=\"w\"> </span><span class=\"mh\">0x02</span><span class=\"p\">]</span>\n</code></pre></div>\n<p>However, when printing a function we print in the following format:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">const0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mh\">0x000102</span>\n</code></pre></div>\n<p>And the file does not parse anymore. I.e. we are printing invalid CLIF when constants are involved.</p>\n<p>It was easier for me to change the parser, than the printer. However if people prefer the old format, it should also be a fairly easy change.</p>\n<p>Another option would be to start accepting both formats, which should also be fairly easy.</p>\n<p>If anyone has opinions about this, let me know!</p>\n</blockquote>",
        "id": 338163700,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677424175
    },
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/jameysharp\">jameysharp</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5885\">PR #5885</a>.</p>",
        "id": 338163701,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677424175
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5885#pullrequestreview-1316212654\">PR review</a>.</p>",
        "id": 338439782,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677528545
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5885#pullrequestreview-1316212654\">PR review</a>.</p>",
        "id": 338439785,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677528545
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5885#discussion_r1119230580\">PR review comment</a>:</p>\n<blockquote>\n<p>I think I'd rather place this check in the risc-v branch of the <code>match triple.architecture</code> below. You can place it before the <code>exceptions!</code> macro and do an early <code>return false</code>, or even say <code>!is_simd &amp;&amp; exceptions!(...)</code> since the macro is just an expression evaluating to a <code>bool.</code></p>\n</blockquote>",
        "id": 338439786,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677528546
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5885#discussion_r1119134854\">PR review comment</a>:</p>\n<blockquote>\n<p>How about a <code>supports_simd</code> variable instead of <code>is_riscv</code>?</p>\n</blockquote>",
        "id": 338439787,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677528546
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5885\">PR #5885</a> from <code>fuzz-simd</code> to <code>main</code>.</p>",
        "id": 338555984,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677582121
    },
    {
        "content": "<p>afonso360 has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5885\">PR #5885</a>.</p>",
        "id": 338559499,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677583206
    },
    {
        "content": "<p>afonso360 merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5885\">PR #5885</a>.</p>",
        "id": 338580717,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677589213
    }
]