[
    {
        "content": "<p>abrown opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2240\">PR #2240</a> from <code>refactor-ext-mode</code> to <code>main</code>:</p>\n<blockquote>\n<p>In previous PRs I noticed that the logic for calculating the extension modes is duplicated throughout the x64 module. This change moves the logic to a single place <code>ExtMode::calculate</code> and removes the duplication by calling this function (we can inline this if there are performance concerns). The more pressing question is whether the more expansive definition used in <code>ExtMode::calculate</code> is correct in all of the places it is used; some of these only handled, e.g. <code>{8 -&gt; 64, 16 -&gt; 64, 32 -&gt; 64}</code>, and it is unclear to me whether the other extension modes should be matched here. </p>\n</blockquote>",
        "id": 211542408,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601323224
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2240\">PR #2240</a> from <code>refactor-ext-mode</code> to <code>main</code>:</p>\n<blockquote>\n<p>In previous PRs I noticed that the logic for calculating the extension modes is duplicated throughout the x64 module. This change moves the logic to a single place <code>ExtMode::calculate</code> and removes the duplication by calling this function (we can inline this if there are performance concerns). The more pressing question is whether the more expansive definition used in <code>ExtMode::calculate</code> is correct in all of the places it is used; some of these only handled, e.g. <code>{8 -&gt; 64, 16 -&gt; 64, 32 -&gt; 64}</code>, and it is unclear to me whether the other extension modes should be matched here. </p>\n</blockquote>",
        "id": 211542546,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601323292
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2240\">PR #2240</a> from <code>refactor-ext-mode</code> to <code>main</code>:</p>\n<blockquote>\n<p>In previous PRs I noticed that the logic for calculating the extension modes is duplicated throughout the x64 module. This change moves the logic to a single place <code>ExtMode::calculate</code> and removes the duplication by calling this function (we can inline this if there are performance concerns). The more pressing question is whether the more expansive definition used in <code>ExtMode::calculate</code> is correct in all of the places it is used; some of these only handled, e.g. <code>{8 -&gt; 64, 16 -&gt; 64, 32 -&gt; 64}</code>, and it is unclear to me whether the other extension modes should be matched here. </p>\n</blockquote>",
        "id": 211543184,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601323560
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2240\">PR #2240</a> from <code>refactor-ext-mode</code> to <code>main</code>:</p>\n<blockquote>\n<p>In previous PRs I noticed that the logic for calculating the extension modes is duplicated throughout the x64 module. This change moves the logic to a single place <code>ExtMode::calculate</code> and removes the duplication by calling this function (we can inline this if there are performance concerns). The more pressing question is whether the more expansive definition used in <code>ExtMode::calculate</code> is correct in all of the places it is used; some of these only handled, e.g. <code>{8 -&gt; 64, 16 -&gt; 64, 32 -&gt; 64}</code>, and it is unclear to me whether the other extension modes should be matched here. </p>\n</blockquote>",
        "id": 211544574,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601324167
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2240#pullrequestreview-498426586\">PR Review</a>.</p>",
        "id": 211615230,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601383546
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2240#discussion_r496685195\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Shouldn't this be <code>src_ty.bits() &lt; dst_ty.bits() || ext_mode.is_none()</code>?</p>\n</blockquote>",
        "id": 211615231,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601383547
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2240#pullrequestreview-498426586\">PR Review</a>.</p>",
        "id": 211615232,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601383547
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2240#discussion_r496686516\">PR Review Comment</a>:</p>\n<blockquote>\n<p><code>calculate</code> made me think that there would be some complicated calculation here happening here; how about using a plain <code>new</code> here? (or <code>infer</code>, or <code>for</code> which would read nicely <code>ExtMode::for(32, 64)</code>)</p>\n</blockquote>",
        "id": 211615233,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601383547
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2240#pullrequestreview-498633216\">PR Review</a>.</p>",
        "id": 211640235,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601394380
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2240#discussion_r496833649\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Yeah, I like <code>for</code> or even <code>from</code>... ugh, choosing names. I'll go with <code>for</code>.</p>\n</blockquote>",
        "id": 211640237,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601394380
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2240#pullrequestreview-498662142\">PR Review</a>.</p>",
        "id": 211645047,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601396252
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2240#discussion_r496866322\">PR Review Comment</a>:</p>\n<blockquote>\n<p><code>for</code> is a keyword, so you can't use it as identifier.</p>\n</blockquote>",
        "id": 211645049,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601396253
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2240#pullrequestreview-498695373\">PR Review</a>.</p>",
        "id": 211650737,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601398661
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2240#discussion_r496896167\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Then I guess <code>new</code> or <code>from</code>?</p>\n</blockquote>",
        "id": 211650738,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601398661
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2240#discussion_r496941241\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Yeah, looking at it again I think it should actually be: <code>(src_ty.bits() &lt; dst_ty.bits() &amp;&amp; ext_mode.is_some()) || ext_mode.is_none()</code>. Either we have the right size bits and we get a proper <code>Some(ExtMode)</code> or we don't and get a <code>None</code>--anything else should be an error.</p>\n</blockquote>",
        "id": 211661293,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601403122
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2240#pullrequestreview-498753394\">PR Review</a>.</p>",
        "id": 211661296,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601403122
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2240\">PR #2240</a> from <code>refactor-ext-mode</code> to <code>main</code>:</p>\n<blockquote>\n<p>In previous PRs I noticed that the logic for calculating the extension modes is duplicated throughout the x64 module. This change moves the logic to a single place <code>ExtMode::calculate</code> and removes the duplication by calling this function (we can inline this if there are performance concerns). The more pressing question is whether the more expansive definition used in <code>ExtMode::calculate</code> is correct in all of the places it is used; some of these only handled, e.g. <code>{8 -&gt; 64, 16 -&gt; 64, 32 -&gt; 64}</code>, and it is unclear to me whether the other extension modes should be matched here. </p>\n</blockquote>",
        "id": 211661499,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601403198
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2240#pullrequestreview-498755045\">PR Review</a>.</p>",
        "id": 211661665,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601403257
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2240#discussion_r496942593\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Went with <code>new</code>.</p>\n</blockquote>",
        "id": 211661666,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601403257
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2240#pullrequestreview-498918507\">PR Review</a>.</p>",
        "id": 211689122,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601416128
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2240#discussion_r497080582\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Fixed.</p>\n</blockquote>",
        "id": 211689123,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601416129
    },
    {
        "content": "<p>abrown merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2240\">PR #2240</a>.</p>",
        "id": 211689143,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601416141
    }
]