[
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5118\">PR #5118</a> from <code>fix-bmask</code> to <code>main</code>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span>  Hey,</p>\n<p>The fuzzer pointed this out when I added <code>bmask</code>,  it turns out we are not correctly masking off high bits in our <code>bmask</code> implementations. This is not triggered by our current tests  since we always either use a <code>iconst</code> or pass the value in via a register argument, which never has \"dirty\" high bits.</p>\n<p>The changes on AArch64 are fairly minimal and they only mostly impact <code>i8</code> and <code>i16</code>.</p>\n<p>However for RISC-V masking off 32 bits ends up generating a lot of code. I haven't checked but I think on RISC-V this also impacts <code>brz</code> and <code>brnz</code> since they also use <code>normalize_value</code>.</p>\n<p>cc: @elliottt </p>\n</blockquote>",
        "id": 306014068,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666700071
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5118#discussion_r1004409926\">PR review comment</a>:</p>\n<blockquote>\n<p>I'm not too familiar with RISCV, is there a better way of masking off the top 32bits? This ends up generating a lot of code, which is unfortunate.</p>\n</blockquote>",
        "id": 306014218,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666700125
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5118#pullrequestreview-1154696743\">PR review</a>.</p>",
        "id": 306014220,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666700125
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5118#discussion_r1004409926\">PR review comment</a>.</p>",
        "id": 306014305,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666700159
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5118#discussion_r1004409926\">PR review comment</a>.</p>",
        "id": 306014374,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666700173
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5118\">PR #5118</a> from <code>fix-bmask</code> to <code>main</code>.</p>",
        "id": 306015874,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666700725
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5118#pullrequestreview-1154714139\">PR review</a>.</p>",
        "id": 306016196,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666700844
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5118#discussion_r1004421905\">PR review comment</a>:</p>\n<blockquote>\n<p>For reference, this generates the following assembly:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">auipc</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">ld</span><span class=\"w\"> </span><span class=\"n\">t2</span><span class=\"p\">,</span><span class=\"mi\">12</span><span class=\"p\">(</span><span class=\"n\">t2</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">j</span><span class=\"w\"> </span><span class=\"mi\">12</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"p\">.</span><span class=\"mi\">8</span><span class=\"n\">byte</span><span class=\"w\"> </span><span class=\"mh\">0xffffffff</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">a4</span><span class=\"p\">,</span><span class=\"n\">a0</span><span class=\"p\">,</span><span class=\"n\">t2</span><span class=\"w\"></span>\n</code></pre></div>\n<p>The only other solution I can think of right now would be to shift left 32 and then shift right 32, which would only be 2 instructions.</p>\n</blockquote>",
        "id": 306016197,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666700845
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5118#discussion_r1004421905\">PR review comment</a>.</p>",
        "id": 306016232,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666700859
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5118#discussion_r1004421905\">PR review comment</a>.</p>",
        "id": 306019214,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666701841
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5118#discussion_r1004421905\">PR review comment</a>.</p>",
        "id": 306020512,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666702104
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5118\">PR #5118</a> from <code>fix-bmask</code> to <code>main</code>.</p>",
        "id": 306038865,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666707493
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5118#discussion_r1004421905\">PR review comment</a>.</p>",
        "id": 306039335,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666707637
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5118#pullrequestreview-1155149438\">PR review</a>.</p>",
        "id": 306071558,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666716065
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5118#discussion_r1004719833\">PR review comment</a>:</p>\n<blockquote>\n<p>Playing around with clang's output on godbolt shows that it does this conversion with <code>addiw rd, rs, 0</code> (or the <code>sext.w</code> pseudo instruction). That will perform a 32-bit add of <code>0</code> to <code>rs</code>, and then sign-extend the value to 64-bits. As we do appear to be using <code>srliw</code> for a 32-bit right shift, I think this should work?</p>\n</blockquote>",
        "id": 306071559,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666716065
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5118#pullrequestreview-1155178834\">PR review</a>.</p>",
        "id": 306076908,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666717381
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5118#discussion_r1004740310\">PR review comment</a>:</p>\n<blockquote>\n<p>For <code>normalize_value</code> I think that is not the correct answer since it always guarantees that the top 32 bits will be clear, which may not always be the case for <code>sext.w</code>. However I think we can use that for <code>bmask</code>/<code>brz</code>/<code>brnz</code> and we get back to a 1 instruction solution which is nice! </p>\n</blockquote>",
        "id": 306076909,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666717381
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5118#pullrequestreview-1155194443\">PR review</a>.</p>",
        "id": 306079830,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666718110
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5118#discussion_r1004751289\">PR review comment</a>:</p>\n<blockquote>\n<p><code>normalize_value</code> might be overly conservative as it is now. Switching to <code>addiw rd, rs, 0</code> for the 32-bit case didn't produce any test failures for me locally, and I suspect that we don't even need that instruction.</p>\n</blockquote>",
        "id": 306079831,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666718110
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5118\">PR #5118</a> from <code>fix-bmask</code> to <code>main</code>.</p>",
        "id": 306099695,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666723769
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5118#discussion_r1004879915\">PR review comment</a>:</p>\n<blockquote>\n<p>I've updated it to use <code>addiw</code> and  changed the meaning of <code>normalize_value</code> so that it fits the new implementation. Thanks!</p>\n<blockquote>\n<p>I suspect that we don't even need that instruction.<br>\nThat would be even better, if you have any ideas about this let me know!</p>\n</blockquote>\n</blockquote>",
        "id": 306105098,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666725677
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5118#pullrequestreview-1155374423\">PR review</a>.</p>",
        "id": 306105099,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666725677
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5118#discussion_r1004879915\">PR review comment</a>.</p>",
        "id": 306111823,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666728143
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5118#pullrequestreview-1157038664\">PR review</a>.</p>",
        "id": 306300853,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666807823
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5118#pullrequestreview-1157038664\">PR review</a>.</p>",
        "id": 306300855,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666807823
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5118#discussion_r1006016486\">PR review comment</a>:</p>\n<blockquote>\n<p>It would probably be worth making this rule priority 0, and the one that handles the <code>&lt;= 16</code> case higher than the others; we'll test the arguments left-to-right, and <code>fits_in_64</code> will be true for the 16-bit and smaller cases.</p>\n</blockquote>",
        "id": 306300857,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666807824
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5118#discussion_r1006018667\">PR review comment</a>:</p>\n<blockquote>\n<p>Thanks for updating this comment!</p>\n</blockquote>",
        "id": 306300859,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666807824
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5118\">PR #5118</a> from <code>fix-bmask</code> to <code>main</code>.</p>",
        "id": 306428841,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666870938
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5118\">PR #5118</a> from <code>fix-bmask</code> to <code>main</code>.</p>",
        "id": 306429342,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666871135
    },
    {
        "content": "<p>elliottt merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5118\">PR #5118</a>.</p>",
        "id": 306491731,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666889141
    }
]