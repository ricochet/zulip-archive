[
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/401#issuecomment-928095469\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/401\">issue #401</a>:</p>\n<blockquote>\n<p>Lightbeam was removed in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3390\">https://github.com/bytecodealliance/wasmtime/pull/3390</a> as explained in <a href=\"https://github.com/bytecodealliance/rfcs/pull/14\">RFC 14</a>, so I'm going to close this.</p>\n</blockquote>",
        "id": 255087042,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1632763716
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/401\">issue #401</a>:</p>\n<blockquote>\n<p>If we kept track of what conditions were set we could get better performance on the idiom:</p>\n<div class=\"codehilite\" data-code-language=\"C\"><pre><span></span><code><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">something</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">--</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"c1\">// ...</span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Instead of emitting a <code>cmp</code> after the <code>dec</code>, we can work out that we already have the zero flag set from the <code>dec</code> and just emit a <code>jnz</code>. Currently there's no way to abstract over different instructions and get metadata for them, so this would be very complicated to implement without a new assembler.</p>\n<p>EDIT: Keeping track of what instructions mutate which condition codes would allow us to implement <a href=\"https://github.com/CraneStation/lightbeam/issues/16\">CraneStation/lightbeam#16</a> in a way that only spills the \"condition\" if we're about to emit an instruction that would invalidate it.</p>\n</blockquote>",
        "id": 255087043,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1632763716
    }
]