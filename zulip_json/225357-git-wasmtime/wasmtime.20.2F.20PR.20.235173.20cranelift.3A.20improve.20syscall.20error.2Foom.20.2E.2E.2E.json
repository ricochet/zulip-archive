[
    {
        "content": "<p>11evan opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5173\">PR #5173</a> from <code>jit-system-errors</code> to <code>main</code>:</p>\n<blockquote>\n<p>The JIT module has several places where it <code>expect</code>s or <code>panic</code>s on syscall or allocator errors. For example, <code>mmap</code> and <code>mprotect</code> can fail if Linux <code>vm.max_map_count</code> is not high enough, and some users may wish to handle this error rather than immediately crashing.</p>\n<p>This commit plumbs these errors upward as new <code>ModuleError</code> types, so that callers of jit module functions like <code>finalize_definitions</code> and <code>define_function</code> can handle them (or just <code>unwrap()</code>, as desired).</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 307428916,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667348074
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5173#pullrequestreview-1164990307\">PR review</a>.</p>",
        "id": 307495529,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667386105
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5173#discussion_r1011551832\">PR review comment</a>:</p>\n<blockquote>\n<p>I think this one should be placed behind the <code>Backend</code> variant.</p>\n</blockquote>",
        "id": 307495530,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667386106
    },
    {
        "content": "<p>11evan updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5173\">PR #5173</a> from <code>jit-system-errors</code> to <code>main</code>.</p>",
        "id": 307562798,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667405695
    },
    {
        "content": "<p>11evan created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5173#discussion_r1012011571\">PR review comment</a>:</p>\n<blockquote>\n<p>Do you mean it should be reordered to come after <code>Backend</code>? Or does \"behind\" mean a multi level error enum like </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">enum</span> <span class=\"nc\">BackendError</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Allocation</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Syscall</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Other</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>?</p>\n</blockquote>",
        "id": 307563603,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667405898
    },
    {
        "content": "<p>11evan submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5173#pullrequestreview-1165597138\">PR review</a>.</p>",
        "id": 307563604,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667405898
    },
    {
        "content": "<p>11evan updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5173\">PR #5173</a> from <code>jit-system-errors</code> to <code>main</code>.</p>",
        "id": 307575231,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667409032
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5173#pullrequestreview-1165750042\">PR review</a>.</p>",
        "id": 307583682,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667411471
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5173#discussion_r1012115899\">PR review comment</a>:</p>\n<blockquote>\n<p>No, I mean the <code>anyhow::Error</code> field of <code>ModuleError::Backend</code> should be used to store this error I think. <code>anyhow::Error</code> allows storing any type implementing <code>std::error::Error</code>, including the <code>std::io::Error</code> you have here.</p>\n</blockquote>",
        "id": 307583684,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667411471
    },
    {
        "content": "<p>11evan submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5173#pullrequestreview-1165786657\">PR review</a>.</p>",
        "id": 307589674,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667412952
    },
    {
        "content": "<p>11evan created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5173#discussion_r1012141154\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah, I see. Yeah, <code>anyhow::Error</code> can store an <code>io::Error</code>, and we could use it to get rid of the <code>Allocation</code> and <code>Syscall</code> error variants, and use <code>ModuleError::Backend</code> for all cases. </p>\n<p>The difference is that the separate variants make it possible for the code catching the error to distinguish between allocation/syscall and other failures, since it can <code>match</code> and tell them apart. If all cases are <code>anyhow::Error</code>, the caller can't really disambiguate an allocation failure, from a syscall failure, from other <code>Backend</code> errors that already exist.</p>\n</blockquote>",
        "id": 307589675,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667412952
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5173#discussion_r1012143521\">PR review comment</a>:</p>\n<blockquote>\n<p>For allocation failure having a separate <code>ModuleError</code> variant makes sense to me. For syscall failure, I don't think you would ever want to distinguish it from any other <code>io::Error</code>, but if that is necessary it would be possible to add a new error type to cranelift-jit wrapping <code>io::Error</code> in that case and then store this new type in <code>anyhow::Error</code>.</p>\n</blockquote>",
        "id": 307590276,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667413106
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5173#pullrequestreview-1165790127\">PR review</a>.</p>",
        "id": 307590277,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667413106
    },
    {
        "content": "<p>11evan updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5173\">PR #5173</a> from <code>jit-system-errors</code> to <code>main</code>.</p>",
        "id": 307595189,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667414542
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5173#pullrequestreview-1165829774\">PR review</a>.</p>",
        "id": 307596034,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667414791
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5173#pullrequestreview-1165829774\">PR review</a>.</p>",
        "id": 307596035,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667414791
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5173#discussion_r1012170483\">PR review comment</a>:</p>\n<blockquote>\n<p>This may not necessarily be correct. Not every global allocator impl sets errno. In fact I believe most don't.</p>\n</blockquote>",
        "id": 307596036,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667414791
    },
    {
        "content": "<p>11evan submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5173#pullrequestreview-1165863522\">PR review</a>.</p>",
        "id": 307600263,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667416243
    },
    {
        "content": "<p>11evan created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5173#discussion_r1012196897\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah, I didn't realize. Maybe it would be better to just return <code>io::Error::from(io::ErrorKind::OutOfMemory)</code> ourselves here, then?</p>\n</blockquote>",
        "id": 307600264,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667416243
    },
    {
        "content": "<p>11evan updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5173\">PR #5173</a> from <code>jit-system-errors</code> to <code>main</code>.</p>",
        "id": 307602494,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667417069
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5173#discussion_r1012256605\">PR review comment</a>:</p>\n<blockquote>\n<p>Yeah, that makes sense.</p>\n</blockquote>",
        "id": 307610640,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667420144
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5173#pullrequestreview-1165952943\">PR review</a>.</p>",
        "id": 307610641,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667420144
    },
    {
        "content": "<p>11evan submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5173#pullrequestreview-1167266338\">PR review</a>.</p>",
        "id": 307768663,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667492579
    },
    {
        "content": "<p>11evan created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5173#discussion_r1013128997\">PR review comment</a>:</p>\n<blockquote>\n<p>Updated to directly return <code>OutOfMemory</code> instead of trying to use <code>last_os_error()</code></p>\n</blockquote>",
        "id": 307768675,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667492582
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5173#pullrequestreview-1167794191\">PR review</a>.</p>",
        "id": 307861267,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667519972
    },
    {
        "content": "<p>abrown merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5173\">PR #5173</a>.</p>",
        "id": 307861273,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667519983
    }
]