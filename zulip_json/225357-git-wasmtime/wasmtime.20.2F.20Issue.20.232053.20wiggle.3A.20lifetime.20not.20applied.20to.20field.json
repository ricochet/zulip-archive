[
    {
        "content": "<p>abrown opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2053\">Issue #2053</a>:</p>\n<blockquote>\n<p>While talking to @kubkon about an issue with #2050, we found that the lifetime of the <code>Tensor</code> struct was not being propagated downwards to the field correctly. On #2050's branch and using <code>cd crates/wasi-common &amp;&amp; cargo expand wasi</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code>9014   │         pub type TensorData&lt;&#39;a&gt; = wiggle::GuestPtr&lt;&#39;a, [u8]&gt;;\n9015   │         pub struct Tensor&lt;&#39;a&gt; {\n9016   │             pub dimensions: TensorDimensions,\n9017   │             pub type_: TensorType,\n9018   │             pub data: TensorData,\n9019   │         }\n</code></pre></div>\n\n\n<p>It looks like it should generate instead <code>pub data: TensorData&lt;'a&gt;</code> and <code>pub data: TensorDimensions&lt;'a&gt;</code>.</p>\n</blockquote>",
        "id": 204576437,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595352082
    },
    {
        "content": "<p>abrown labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2053\">Issue #2053</a>:</p>\n<blockquote>\n<p>While talking to @kubkon about an issue with #2050, we found that the lifetime of the <code>Tensor</code> struct was not being propagated downwards to the field correctly. On #2050's branch and using <code>cd crates/wasi-common &amp;&amp; cargo expand wasi</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code>9014   │         pub type TensorData&lt;&#39;a&gt; = wiggle::GuestPtr&lt;&#39;a, [u8]&gt;;\n9015   │         pub struct Tensor&lt;&#39;a&gt; {\n9016   │             pub dimensions: TensorDimensions,\n9017   │             pub type_: TensorType,\n9018   │             pub data: TensorData,\n9019   │         }\n</code></pre></div>\n\n\n<p>It looks like it should generate instead <code>pub data: TensorData&lt;'a&gt;</code> and <code>pub data: TensorDimensions&lt;'a&gt;</code>.</p>\n</blockquote>",
        "id": 204576438,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595352082
    },
    {
        "content": "<p>abrown labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2053\">Issue #2053</a>:</p>\n<blockquote>\n<p>While talking to @kubkon about an issue with #2050, we found that the lifetime of the <code>Tensor</code> struct was not being propagated downwards to the field correctly. On #2050's branch and using <code>cd crates/wasi-common &amp;&amp; cargo expand wasi</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code>9014   │         pub type TensorData&lt;&#39;a&gt; = wiggle::GuestPtr&lt;&#39;a, [u8]&gt;;\n9015   │         pub struct Tensor&lt;&#39;a&gt; {\n9016   │             pub dimensions: TensorDimensions,\n9017   │             pub type_: TensorType,\n9018   │             pub data: TensorData,\n9019   │         }\n</code></pre></div>\n\n\n<p>It looks like it should generate instead <code>pub data: TensorData&lt;'a&gt;</code> and <code>pub data: TensorDimensions&lt;'a&gt;</code>.</p>\n</blockquote>",
        "id": 204576568,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595352134
    },
    {
        "content": "<p>abrown labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2053\">Issue #2053</a>:</p>\n<blockquote>\n<p>While talking to @kubkon about an issue with #2050, we found that the lifetime of the <code>Tensor</code> struct was not being propagated downwards to the field correctly. On #2050's branch and using <code>cd crates/wasi-common &amp;&amp; cargo expand wasi</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code>9014   │         pub type TensorData&lt;&#39;a&gt; = wiggle::GuestPtr&lt;&#39;a, [u8]&gt;;\n9015   │         pub struct Tensor&lt;&#39;a&gt; {\n9016   │             pub dimensions: TensorDimensions,\n9017   │             pub type_: TensorType,\n9018   │             pub data: TensorData,\n9019   │         }\n</code></pre></div>\n\n\n<p>It looks like it should generate instead <code>pub data: TensorData&lt;'a&gt;</code> and <code>pub data: TensorDimensions&lt;'a&gt;</code>.</p>\n</blockquote>",
        "id": 204576569,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595352134
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2053#issuecomment-661995844\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2053\">Issue #2053</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @kubkon</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"wasi\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>kubkon: wasi</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 204576591,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595352147
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2053#issuecomment-661995923\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2053\">Issue #2053</a>:</p>\n<blockquote>\n<p>cc: @kubkon, @pchickey, @sunfishcode </p>\n</blockquote>",
        "id": 204576610,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595352155
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2053#issuecomment-662020679\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2053\">Issue #2053</a>:</p>\n<blockquote>\n<p>@kubkon, the workaround we talked about doesn't work: I replaced <code>(field $data $tensor_data)</code> with <code>(field $data (struct (field $data (@witx pointer u8)) (field $len u32)))</code> (an anonymous struct) and get:</p>\n<div class=\"codehilite\"><pre><span></span><code>   3   │  --&gt; crates/wasi-common/src/wasi.rs:6:1\n   4   │   |\n   5   │ 6 | / wiggle::from_witx!({\n   6   │ 7 | |     witx: [&quot;WASI/phases/snapshot/witx/wasi_snapshot_preview1.witx&quot;, &quot;WASI/phases/ephemeral/witx/wasi_ephemeral_nn.witx&quot;],\n   7   │ 8 | |     ctx: WasiCtx,\n   8   │ 9 | | });\n   9   │   | |___^\n  10   │   |\n  11   │   = help: message: loading witx: Validation(AnonymousStructure { location: Location { path: &quot;.../crates/wasi-common/WASI/phases/ephemeral/witx/wasi_ephemeral_nn.witx&quot;, line: 43, column: 12 } })\n</code></pre></div>\n\n\n<p>Looking at <code>WASI/tools/witx/src/validate.rs:45</code>, it would appear that I can't use an anonymous struct there, but if I use a named struct then the lifetime issue happens. I guess we actually need #2054 to make this work.</p>\n</blockquote>",
        "id": 204581952,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595354843
    },
    {
        "content": "<p>kubkon <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2053#issuecomment-662034868\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2053\">Issue #2053</a>:</p>\n<blockquote>\n<p>An update here. I've fixed the lifetime issue, but the problem remains with marshalling the memory in and out. Take this bit of <code>witx</code> for example:</p>\n<div class=\"codehilite\"><pre><span></span><code>(typename $struct_of_array\n    (struct\n       (field $arr $some_bytes)))\n\n(module $something\n    (@interface func (export &quot;summm&quot;)\n        (param $a_struct $struct_of_array)\n        (result $error $errno))\n</code></pre></div>\n\n\n<p>The shims we generate for the interface function will look like:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">summm</span><span class=\"p\">(</span><span class=\"n\">ctx</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">WasiCtx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">memory</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">dym</span><span class=\"w\"> </span><span class=\"n\">wiggle</span>::<span class=\"n\">GuestMemory</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">a_struct_ptr</span>: <span class=\"kt\">i32</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i32</span> <span class=\"p\">{</span><span class=\"w\"> </span><span class=\"c1\">// ... }</span>\n</code></pre></div>\n\n\n<p>The trick here is being able to extract the pointer and length of the array from the struct pointer which we currently don't support in <code>wiggle</code>. I'm wondering if we should though. @pchickey thoughts?</p>\n</blockquote>",
        "id": 204585186,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595356460
    },
    {
        "content": "<p>pchickey closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2053\">Issue #2053</a>:</p>\n<blockquote>\n<p>While talking to @kubkon about an issue with #2050, we found that the lifetime of the <code>Tensor</code> struct was not being propagated downwards to the field correctly. On #2050's branch and using <code>cd crates/wasi-common &amp;&amp; cargo expand wasi</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"mi\">9014</span><span class=\"w\">   </span><span class=\"err\">│</span><span class=\"w\">         </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">TensorData</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;a</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wiggle</span>::<span class=\"n\">GuestPtr</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"kt\">u8</span><span class=\"p\">]</span><span class=\"o\">&gt;</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"mi\">9015</span><span class=\"w\">   </span><span class=\"err\">│</span><span class=\"w\">         </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"nc\">Tensor</span><span class=\"o\">&lt;</span><span class=\"na\">&#39;a</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"mi\">9016</span><span class=\"w\">   </span><span class=\"err\">│</span><span class=\"w\">             </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"n\">dimensions</span>: <span class=\"nc\">TensorDimensions</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"mi\">9017</span><span class=\"w\">   </span><span class=\"err\">│</span><span class=\"w\">             </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"n\">type_</span>: <span class=\"nc\">TensorType</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"mi\">9018</span><span class=\"w\">   </span><span class=\"err\">│</span><span class=\"w\">             </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"n\">data</span>: <span class=\"nc\">TensorData</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"mi\">9019</span><span class=\"w\">   </span><span class=\"err\">│</span><span class=\"w\">         </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n<p>It looks like it should generate instead <code>pub data: TensorData&lt;'a&gt;</code> and <code>pub data: TensorDimensions&lt;'a&gt;</code>.</p>\n</blockquote>",
        "id": 206047623,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596646330
    }
]