[
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/pchickey\">pchickey</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9560\">PR #9560</a>.</p>",
        "id": 480778722,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1730831468
    },
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9560\">PR #9560</a> from <code>alexcrichton:refactor-wast</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This commit refactors the <code>tests/wast.rs</code> test suite which runs all of the upstream spec tests as <code>*.wast</code> files as well as our own <code>misc_testsuite</code> which has its own suite of <code>*.wast</code> files. Previously the set of wasm features active for each test was a sort of random mishmash and convoluted set of conditionals which was updated and edited over time as upstream proposal test suites evolved. This was then mirrored into our own conventions for <code>misc_testsuite</code> as well. Overall though this has a number of downsides I'm trying to fix here:</p>\n<ul>\n<li>\n<p>The calculation of what features are enabled is quite complicated and effectively a random mishmash of <code>||</code> conditionals with hierarchies that don't make any sense beyond \"this is just required to get things to pass\".</p>\n</li>\n<li>\n<p>There is no means of per-test configuration. For example <code>canonicalize-nans.wast</code> had hardcoded logic in <code>tests/wast.rs</code> that it needed a different setting turned on in <code>Config</code>.</p>\n</li>\n<li>\n<p>There was no easy means to write tests for Wasmtime which take a union of a number of proposals together without having lots of sub-folders that may not make sense.</p>\n</li>\n<li>\n<p>Tests that require a particular proposal had to have duplicate logic for Winch as it doesn't support the full suite of features of all proposals that Cranelift does.</p>\n</li>\n</ul>\n<p>The new system implemented in this commit takes a leaf out of the <code>disas</code> tests. There is a new <code>TestConfig</code> structure in the <code>tests/wast.rs</code> harness which is decoded from each test (leading <code>;;!</code> comments) which enables specifying, in each test, what's required. This encompasses many wasm proposals but additionally captures other behavior like nan-canonicalization. This means that all test files in <code>misc_testsuite/**/*.wast</code> are now manually annotated with what wasm features they require and what's needed to run. This makes per-test configuration much easier, per-config-setting much easier, and blanket ignore-by-proposal for Winch much easier as well.</p>\n<p>For spec tests we can't modify the contents of the upstream <code>*.wast</code> files. To handle this they're handled specially where <code>TestConfig</code> is manually created and manipulated for each spec proposal and the main test suite itself. This enables per-proposal configuration that doesn't leak into any others and makes it more obvious what proposals are doing what.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 480778723,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1730831468
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9560\">PR #9560</a>.</p>",
        "id": 480778724,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1730831468
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9560\">PR #9560</a>.</p>",
        "id": 480782608,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1730833058
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9560#pullrequestreview-2416636653\">PR review</a>:</p>\n<blockquote>\n<p>Very nice!</p>\n</blockquote>",
        "id": 480795586,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1730838830
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9560\">PR #9560</a>.</p>",
        "id": 480801390,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1730841382
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9560\">PR #9560</a>.</p>",
        "id": 480801400,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1730841388
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9560\">PR #9560</a>.</p>",
        "id": 480804628,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1730842964
    }
]