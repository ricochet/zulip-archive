[
    {
        "content": "<p>sehz opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7778\">PR #7778</a> from <code>sehz:custom_wasi_link</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>Allow passing of closure to wasi command linking.  Current <code>add_to_linker</code> is re-implemented more general API</p>\n</blockquote>",
        "id": 413044424,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705361557
    },
    {
        "content": "<p><strong>sehz</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7778\">PR #7778</a>.</p>",
        "id": 413044427,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705361557
    },
    {
        "content": "<p><strong>sehz</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7778\">PR #7778</a>.</p>",
        "id": 413044428,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705361557
    },
    {
        "content": "<p>sehz edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7778\">PR #7778</a>:</p>\n<blockquote>\n<p>Allow passing of closure to wasi command linking.  Current <code>add_to_linker</code> is re-implemented more general API.  Without this, it's hard to create reusable wasi context store</p>\n</blockquote>",
        "id": 413044568,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705361653
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7778#issuecomment-1894317453\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7778\">PR #7778</a>:</p>\n<blockquote>\n<p>Thanks for the PR, but this is something we were ideally hoping to avoid with the <code>WasiView</code> trait design. Would it be possible to implement <code>WasiView</code> for your type <code>T</code> within the <code>Store&lt;T&gt;</code>?</p>\n</blockquote>",
        "id": 413217508,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705430598
    },
    {
        "content": "<p>sehz <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7778#issuecomment-1897547502\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7778\">PR #7778</a>:</p>\n<blockquote>\n<p>Problem is that <code>T</code> is becoming very complex.   Ideally Store should be composable.    Key problem is that store is tied to linker which makes difficult separate host implementation</p>\n</blockquote>",
        "id": 416469442,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705537520
    },
    {
        "content": "<p>sehz edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7778#issuecomment-1897547502\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7778\">PR #7778</a>:</p>\n<blockquote>\n<p>Issue is that <code>T</code> is becoming very complex.   Ideally Store should be composable.    Key problem is that store is tied to linker which makes difficult separate host implementation</p>\n</blockquote>",
        "id": 416469461,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705537533
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7778#issuecomment-1898840057\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7778\">PR #7778</a>:</p>\n<blockquote>\n<p>I understand that <code>T</code> can be complex, and I also understand that writing a closure is shorter than writing a trait impl, but I'm not sure why the complexity would make trait impls more difficult (as opposed to a simple <code>T</code>). The fact that the store and linker are tied together is indeed a bit limiting, but with trait bounds it should be possible to design roughly the sme APIs.</p>\n<p>Is there anything preventing the trait impls on <code>T</code> in your case?</p>\n</blockquote>",
        "id": 416609951,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705596198
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7778#issuecomment-1920474950\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7778\">PR #7778</a>:</p>\n<blockquote>\n<p>We chattec a bit more tonight about this and I think it's a reasonable enough feature to add given it's pretty small and solves a concrete use case. If you're ok fixing the failing test on CI (I think there's a new trait bound needed) I can r+</p>\n</blockquote>",
        "id": 419171630,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706761065
    },
    {
        "content": "<p>sehz <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7778#issuecomment-1921443873\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7778\">PR #7778</a>:</p>\n<blockquote>\n<p>Thanks.  Will fix CI</p>\n</blockquote>",
        "id": 419255453,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706797083
    }
]