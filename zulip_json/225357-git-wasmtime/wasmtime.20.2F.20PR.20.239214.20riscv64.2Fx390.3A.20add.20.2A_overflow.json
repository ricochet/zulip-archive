[
    {
        "content": "<p>ghostway0 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9214\">PR #9214</a> from <code>ghostway0:ghostway/9186</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>currently a draft and only riscv64</p>\n</blockquote>",
        "id": 468525351,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1725779913
    },
    {
        "content": "<p>ghostway0 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9214\">PR #9214</a>.</p>",
        "id": 468844307,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1725897398
    },
    {
        "content": "<p>ghostway0 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9214\">PR #9214</a>.</p>",
        "id": 468868004,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1725902624
    },
    {
        "content": "<p>ghostway0 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9214\">PR #9214</a>.</p>",
        "id": 468882386,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1725906885
    },
    {
        "content": "<p>ghostway0 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9214#issuecomment-2343783858\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9214\">PR #9214</a>:</p>\n<blockquote>\n<p>@bjorn3 can you take a look? also, I haven't found umul equivalent (or mul with zext*) in s390x. do you know what are their names?</p>\n</blockquote>",
        "id": 469410381,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726063725
    },
    {
        "content": "<p>ghostway0 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9214\">PR #9214</a>.</p>",
        "id": 469410473,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726063746
    },
    {
        "content": "<p>uweigand <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9214#issuecomment-2360990227\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9214\">PR #9214</a>:</p>\n<blockquote>\n<p>Hi @ghostway0,   a few comments on the s390x part:</p>\n<ul>\n<li>All the new instruction rules you added seem to provide only a single return, the overflow bit.  However, my understanding is that <code>smul_overflow</code> and all the other overflow instructions are defined to have <em>two</em> returns, the low-part result and the overflow bit.  I think you'll need to use some form of <code>with_flags</code> to construct the pair of results (like x86 and aarch64 already do).</li>\n<li>You're simply re-using the same instructions used for the \"normal\" operation (add/sub/mul) also for the overflow operation.  That is correct for 32-bit and 64-bit operations, but <em>not</em> for 8-bit and 16-bit operations.  The reason is that the 390x ISA does not actually have any 8-bit or 16-bit arithmetic instructions, so we simply use the 32-bit version also for 8-bit and 16-bit operations.  That provides the correct (low-part) result, but any overflow indication would be incorrect.</li>\n<li>There is no unsigned-multiply instruction with overflow indication on our platform.  What other compilers do is to use the 32x32-&gt;64 or 64x64-&gt;128 bit wide multiply instruction, and check whether the high-part of the output is zero.<br>\n</li>\n</ul>\n</blockquote>",
        "id": 471486786,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726752495
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9214#discussion_r1769526759\">PR review comment</a>:</p>\n<blockquote>\n<p>Ditto here</p>\n</blockquote>",
        "id": 471970237,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726948730
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9214#discussion_r1769527126\">PR review comment</a>:</p>\n<blockquote>\n<p>It might be better to use <code>rv_sltu</code> here instead of a select between one and zero. The RISC-V comparision functions already return a zero or one, and they are a lot shorter than our current implementation of <code>select_xreg</code></p>\n</blockquote>",
        "id": 471970238,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726948731
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9214#discussion_r1769526855\">PR review comment</a>:</p>\n<blockquote>\n<p>It might be better to use <code>rv_snez</code> here instead of a select between one and zero.<br>\n</p>\n</blockquote>",
        "id": 471970240,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726948731
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9214#discussion_r1769621234\">PR review comment</a>:</p>\n<blockquote>\n<p>Same here</p>\n</blockquote>",
        "id": 471970241,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726948731
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9214#pullrequestreview-2319706108\">PR review</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>I don't know if this is ready for review yet, but It's a great start!</p>\n<p>A few comments for the RISC-V part. I didn't check the lowerings in a lot of detail, mostly just spotting a few things that could be shorter.</p>\n<p>Thanks for working on this!<br>\n</p>\n</blockquote>",
        "id": 471970242,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726948731
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9214#discussion_r1769527518\">PR review comment</a>:</p>\n<blockquote>\n<p>Ditto here for <code>sltu</code>.</p>\n</blockquote>",
        "id": 471970243,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726948731
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9214#discussion_r1769622243\">PR review comment</a>:</p>\n<blockquote>\n<p>This <code>one</code> doesn't seem to be used anywhere, similarly in the rules below there are a few <code>one</code> unused instructions.</p>\n</blockquote>",
        "id": 471970244,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726948731
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9214#discussion_r1769621689\">PR review comment</a>:</p>\n<blockquote>\n<p>This <code>one</code> doesn't seem to be used anywhere.</p>\n</blockquote>",
        "id": 471970245,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726948731
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9214#discussion_r1769621163\">PR review comment</a>:</p>\n<blockquote>\n<p>This could also be a <code>snez</code></p>\n</blockquote>",
        "id": 471970246,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726948731
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9214#discussion_r1769624508\">PR review comment</a>:</p>\n<blockquote>\n<p>This could also be replaced with a <code>sltu</code> instruction which is a shorter sequence than a full select.</p>\n</blockquote>",
        "id": 471970247,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726948731
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9214#discussion_r1769622825\">PR review comment</a>:</p>\n<blockquote>\n<p>Instead of doing madd here, we can just multiply <code>x_lo</code> and <code>y_lo</code> and save one instruction.</p>\n</blockquote>",
        "id": 471970248,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726948731
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9214#discussion_r1769624444\">PR review comment</a>:</p>\n<blockquote>\n<p>We could replace this with a <code>snez</code> instruction</p>\n</blockquote>",
        "id": 471970249,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726948731
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9214#discussion_r1769624293\">PR review comment</a>:</p>\n<blockquote>\n<p>Here we could use <code>mul</code> instead of <code>madd</code> and save one instruction.</p>\n</blockquote>",
        "id": 471970250,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726948731
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9214#discussion_r1769526855\">PR review comment</a>.</p>",
        "id": 471970269,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726948762
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9214#discussion_r1769526759\">PR review comment</a>.</p>",
        "id": 471970271,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726948764
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9214#pullrequestreview-2319706108\">PR review</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>I don't know if this is ready for review yet, but It's a great start!</p>\n<p>A few comments for the RISC-V part. I didn't check the lowerings in a lot of detail, mostly just spotting a few things that could be shorter.</p>\n<p>Thanks for working on this!</p>\n<p>Edit: I also ran the fuzzer (with these <a href=\"https://github.com/afonso360/wasmtime/commit/b6b15dac87c4854b8ab7c75bf887aeb78ed9b4f4\">changes</a>) and it pointed out this testcase.</p>\n<p>&lt;details&gt;</p>\n<p>&lt;summary&gt;Fuzzer testcase&lt;/summary&gt;</p>\n<p>Testcase:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">interpret</span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">run</span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">riscv64gc</span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">a</span><span class=\"p\">(</span><span class=\"kt\">i8</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">i8</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kt\">i8</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"nc\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">smul_overflow</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v0</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span>\n<span class=\"p\">}</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">a</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">15</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n</code></pre></div>\n<p>Result:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\"> </span><span class=\"n\">ERROR</span><span class=\"w\"> </span><span class=\"n\">cranelift_filetests</span><span class=\"p\">::</span><span class=\"n\">concurrent</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">FAIL</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">run</span>\n<span class=\"n\">FAIL</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"p\">.</span><span class=\"n\">clif</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">run</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nc\">Failed</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">run</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">a</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">15</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">actual</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">tests</span>\n<span class=\"n\">Error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">failure</span>\n</code></pre></div>\n<p>&lt;/summary&gt;<br>\n</p>\n</blockquote>",
        "id": 472046160,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727010912
    }
]