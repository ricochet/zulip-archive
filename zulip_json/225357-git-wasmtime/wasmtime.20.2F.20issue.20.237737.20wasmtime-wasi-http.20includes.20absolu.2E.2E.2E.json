[
    {
        "content": "<p><a href=\"https://github.com/arlyon\">arlyon</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7737\">Issue #7737</a>.</p>",
        "id": 410876933,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704215305
    },
    {
        "content": "<p>arlyon opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7737\">issue #7737</a>:</p>\n<blockquote>\n<p>Thanks for filing a bug report! Please fill out the TODOs below.</p>\n<p><strong>Note: if you want to report a security issue, please read our <a href=\"https://bytecodealliance.org/security\">security policy</a>!</strong></p>\n<h3>Steps to Reproduce</h3>\n<p>The default outgoing handler inserts the URI as-is into the request in absolute form which should only be used for proxies. It seems we can fix this fairly easily by stripping out the other parts from the uri in here <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/wasi-http/src/types.rs#L142\">https://github.com/bytecodealliance/wasmtime/blob/main/crates/wasi-http/src/types.rs#L142</a></p>\n<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"gi\">+    // remove the scheme and authority from the request</span>\n<span class=\"gi\">+    *request.uri_mut() = Uri::builder()</span>\n<span class=\"gi\">+        .path_and_query(</span>\n<span class=\"gi\">+            request</span>\n<span class=\"gi\">+                .uri()</span>\n<span class=\"gi\">+                .path_and_query()</span>\n<span class=\"gi\">+                .map(|p| p.as_str())</span>\n<span class=\"gi\">+                .unwrap_or(\"/\"),</span>\n<span class=\"gi\">+        )</span>\n<span class=\"gi\">+        .build()</span>\n<span class=\"gi\">+        .expect(\"ok\");</span>\n</code></pre></div>\n<p>Otherwise, the absolute form uri will be used as-is, as described here <a href=\"https://github.com/hyperium/hyper/blob/master/src/client/conn/http1.rs#L175-L190\">https://github.com/hyperium/hyper/blob/master/src/client/conn/http1.rs#L175-L190</a>.</p>\n<h3>Expected Results</h3>\n<p>I expect the http handler _not_ to serialize requests using the absolute uri, since the support for this format is spotty (and potentially goes against the RFC)</p>\n<h3>Actual Results</h3>\n<p>The absolute form of the uri ends up in the http packet.</p>\n<h3>Versions and Environment</h3>\n<p>Version: Git master + hyper 1.1.0<br>\nOperating system: N/A<br>\nArchitecture: N/A</p>\n<h3>Extra Info</h3>\n<p>N/A<br>\n</p>\n</blockquote>",
        "id": 410876935,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704215305
    },
    {
        "content": "<p>arlyon edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7737\">issue #7737</a>:</p>\n<blockquote>\n<p>Thanks for filing a bug report! Please fill out the TODOs below.</p>\n<p><strong>Note: if you want to report a security issue, please read our <a href=\"https://bytecodealliance.org/security\">security policy</a>!</strong></p>\n<h3>Steps to Reproduce</h3>\n<p>The default outgoing handler inserts the URI as-is into the request in absolute form which should only be used for proxies. It seems we can fix this fairly easily by stripping out the other parts from the uri in here <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/wasi-http/src/types.rs#L142\">https://github.com/bytecodealliance/wasmtime/blob/main/crates/wasi-http/src/types.rs#L142</a></p>\n<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"gi\">+    // remove the scheme and authority from the request</span>\n<span class=\"gi\">+    *request.uri_mut() = Uri::builder()</span>\n<span class=\"gi\">+        .path_and_query(</span>\n<span class=\"gi\">+            request</span>\n<span class=\"gi\">+                .uri()</span>\n<span class=\"gi\">+                .path_and_query()</span>\n<span class=\"gi\">+                .map(|p| p.as_str())</span>\n<span class=\"gi\">+                .unwrap_or(\"/\"),</span>\n<span class=\"gi\">+        )</span>\n<span class=\"gi\">+        .build()</span>\n<span class=\"gi\">+        .expect(\"ok\");</span>\n</code></pre></div>\n<p>Otherwise, the absolute form uri will be used as-is, as described here <a href=\"https://github.com/hyperium/hyper/blob/master/src/client/conn/http1.rs#L175-L190\">https://github.com/hyperium/hyper/blob/master/src/client/conn/http1.rs#L175-L190</a>.</p>\n<h3>Expected Results</h3>\n<p>I expect the http handler _not_ to serialize requests using the absolute uri, since the support for this format is spotty (and potentially goes against the RFC)</p>\n<h3>Actual Results</h3>\n<p>The absolute form of the uri ends up in the http packet.</p>\n<h3>Versions and Environment</h3>\n<p>Version: Git master + hyper 1.1.0<br>\nOperating system: N/A<br>\nArchitecture: N/A</p>\n<h3>Extra Info</h3>\n<p>N/A</p>\n<p>```[tasklist]</p>\n<h3>Tasks</h3>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">~~~</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 410877022,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704215336
    },
    {
        "content": "<p>arlyon edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7737\">issue #7737</a>:</p>\n<blockquote>\n<p>Thanks for filing a bug report! Please fill out the TODOs below.</p>\n<p><strong>Note: if you want to report a security issue, please read our <a href=\"https://bytecodealliance.org/security\">security policy</a>!</strong></p>\n<h3>Steps to Reproduce</h3>\n<p>The default outgoing handler inserts the URI as-is into the request in absolute form which should only be used for proxies. It seems we can fix this fairly easily by stripping out the other parts from the uri in here <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/wasi-http/src/types.rs#L142\">https://github.com/bytecodealliance/wasmtime/blob/main/crates/wasi-http/src/types.rs#L142</a></p>\n<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"gi\">+    // remove the scheme and authority from the request</span>\n<span class=\"gi\">+    *request.uri_mut() = Uri::builder()</span>\n<span class=\"gi\">+        .path_and_query(</span>\n<span class=\"gi\">+            request</span>\n<span class=\"gi\">+                .uri()</span>\n<span class=\"gi\">+                .path_and_query()</span>\n<span class=\"gi\">+                .map(|p| p.as_str())</span>\n<span class=\"gi\">+                .unwrap_or(\"/\"),</span>\n<span class=\"gi\">+        )</span>\n<span class=\"gi\">+        .build()</span>\n<span class=\"gi\">+        .expect(\"ok\");</span>\n</code></pre></div>\n<p>Otherwise, the absolute form uri will be used as-is, as described here <a href=\"https://github.com/hyperium/hyper/blob/master/src/client/conn/http1.rs#L175-L190\">https://github.com/hyperium/hyper/blob/master/src/client/conn/http1.rs#L175-L190</a>.</p>\n<h3>Expected Results</h3>\n<p>I expect the http handler _not_ to serialize requests using the absolute uri, since the support for this format is spotty (and potentially goes against the RFC)</p>\n<h3>Actual Results</h3>\n<p>The absolute form of the uri ends up in the http packet.</p>\n<h3>Versions and Environment</h3>\n<p>Version: Git master + hyper 1.1.0<br>\nOperating system: N/A<br>\nArchitecture: N/A</p>\n<h3>Extra Info</h3>\n<p>N/A</p>\n</blockquote>",
        "id": 410877054,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704215346
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7737#issuecomment-1876227925\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7737\">issue #7737</a>:</p>\n<blockquote>\n<p>Thanks - can you send a PR with the fix you outlined above?</p>\n</blockquote>",
        "id": 411114619,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704335650
    },
    {
        "content": "<p>arlyon <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7737#issuecomment-1877065593\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7737\">issue #7737</a>:</p>\n<blockquote>\n<p>PR here <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7747\">https://github.com/bytecodealliance/wasmtime/pull/7747</a> waiting on CI. I have an issue where it complains about missing witx running locally so if there are test failures I will update them</p>\n</blockquote>",
        "id": 411185914,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704373515
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7737\">issue #7737</a>:</p>\n<blockquote>\n<p>Thanks for filing a bug report! Please fill out the TODOs below.</p>\n<p><strong>Note: if you want to report a security issue, please read our <a href=\"https://bytecodealliance.org/security\">security policy</a>!</strong></p>\n<h3>Steps to Reproduce</h3>\n<p>The default outgoing handler inserts the URI as-is into the request in absolute form which should only be used for proxies. It seems we can fix this fairly easily by stripping out the other parts from the uri in here <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/wasi-http/src/types.rs#L142\">https://github.com/bytecodealliance/wasmtime/blob/main/crates/wasi-http/src/types.rs#L142</a></p>\n<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"gi\">+    // remove the scheme and authority from the request</span>\n<span class=\"gi\">+    *request.uri_mut() = Uri::builder()</span>\n<span class=\"gi\">+        .path_and_query(</span>\n<span class=\"gi\">+            request</span>\n<span class=\"gi\">+                .uri()</span>\n<span class=\"gi\">+                .path_and_query()</span>\n<span class=\"gi\">+                .map(|p| p.as_str())</span>\n<span class=\"gi\">+                .unwrap_or(\"/\"),</span>\n<span class=\"gi\">+        )</span>\n<span class=\"gi\">+        .build()</span>\n<span class=\"gi\">+        .expect(\"ok\");</span>\n</code></pre></div>\n<p>Otherwise, the absolute form uri will be used as-is, as described here <a href=\"https://github.com/hyperium/hyper/blob/master/src/client/conn/http1.rs#L175-L190\">https://github.com/hyperium/hyper/blob/master/src/client/conn/http1.rs#L175-L190</a>.</p>\n<h3>Expected Results</h3>\n<p>I expect the http handler _not_ to serialize requests using the absolute uri, since the support for this format is spotty (and potentially goes against the RFC)</p>\n<h3>Actual Results</h3>\n<p>The absolute form of the uri ends up in the http packet.</p>\n<h3>Versions and Environment</h3>\n<p>Version: Git master + hyper 1.1.0<br>\nOperating system: N/A<br>\nArchitecture: N/A</p>\n<h3>Extra Info</h3>\n<p>N/A</p>\n</blockquote>",
        "id": 411403477,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704474874
    }
]