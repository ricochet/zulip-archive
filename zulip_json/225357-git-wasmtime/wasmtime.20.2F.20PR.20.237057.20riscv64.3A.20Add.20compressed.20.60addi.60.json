[
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7057\">PR #7057</a> from <code>afonso360:riscv-c-inst-part-2</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>This PR introduces all of the compressed variations of the <code>addi</code> instruction (4 different adds!) as well as compressed trap, compressed <code>debugtrap</code>, and compressed shift left.</p>\n<p>We have the following add variants:</p>\n<ul>\n<li><code>c.addi</code> this is the normal <code>addi</code>, with a signed 6 bit immediate field.</li>\n<li><code>c.addiw</code> also fairly normal, a 32 bit add with a 6 bit immediate, that sign extends the result to 64bits.</li>\n<li><code>c.addi16sp</code> modifies the stack pointer with a signed 6 bit immediate scaled by 16.</li>\n<li><code>c.addi4spn</code> adds a zero extended 6 bit immediate scaled by 4 to the stack pointer. Unlike <code>c.addi16sp</code> it allows saving the result in any compressible register.<br>\n</li>\n</ul>\n</blockquote>",
        "id": 391765584,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695066870
    },
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7057\">PR #7057</a>.</p>",
        "id": 391765585,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695066871
    },
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7057\">PR #7057</a>.</p>",
        "id": 391765586,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695066871
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7057#pullrequestreview-1631913113\">PR review</a>.</p>",
        "id": 391770348,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695069093
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7057#pullrequestreview-1631913113\">PR review</a>.</p>",
        "id": 391770349,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695069093
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7057#discussion_r1329245289\">PR review comment</a>:</p>\n<blockquote>\n<p>To avoid the double-construction logic for <code>Imm6::maybe_from_imm12</code> could this do:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">imm6</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">Imm6</span>::<span class=\"n\">maybe_from_imm12</span><span class=\"p\">(</span><span class=\"n\">imm12</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">imm6</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">imm6</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nb\">None</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">,</span>\n<span class=\"p\">};</span>\n</code></pre></div>\n<p>or alternatively if this function returned <code>Option&lt;()&gt;</code> instead of <code>bool</code> it could use <code>?</code>. Or alternatively I think this could use <code>let Some(imm6) = ... else { return false; };</code>, but I haven't use <code>let</code>/<code>else</code> much myself.</p>\n</blockquote>",
        "id": 391770350,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695069093
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7057#discussion_r1329246402\">PR review comment</a>:</p>\n<blockquote>\n<p>Instead of gating all these rules with <code>has_zca</code>, could that be at the top of the function to early-return <code>false</code> if it's not enabled?</p>\n</blockquote>",
        "id": 391770352,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695069093
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7057#discussion_r1329247294\">PR review comment</a>:</p>\n<blockquote>\n<p>Should this be <code>c.addiw</code> instead of <code>c.sext.w</code>?</p>\n</blockquote>",
        "id": 391770353,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695069093
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7057#pullrequestreview-1631935165\">PR review</a>.</p>",
        "id": 391772076,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695069846
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7057#discussion_r1329259099\">PR review comment</a>:</p>\n<blockquote>\n<p>Yes, I think we can. I was worried that it was possible for a target to implement <code>Zcd</code> or <code>Zcb</code> (which I'm planing on implementing soon) without <code>Zca</code>, but I looked at the spec and both of them require <code>Zca</code> to be present.</p>\n</blockquote>",
        "id": 391772077,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695069846
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7057#pullrequestreview-1631935529\">PR review</a>.</p>",
        "id": 391772127,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695069863
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7057#discussion_r1329259317\">PR review comment</a>:</p>\n<blockquote>\n<p>Oops, yes it should.</p>\n</blockquote>",
        "id": 391772128,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695069863
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7057#pullrequestreview-1631938564\">PR review</a>:</p>\n<blockquote>\n<p>Oh I meant to do this too</p>\n</blockquote>",
        "id": 391772434,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695070003
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7057#pullrequestreview-1631940131\">PR review</a>.</p>",
        "id": 391772581,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695070073
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7057#discussion_r1329262429\">PR review comment</a>:</p>\n<blockquote>\n<p>Here I think it's ok  to do that, but I'd like to keep the separate check for <code>c.addi16sp</code> and <code>c.addi4spn</code> so that we can try to match all 3 instructions. Otherwise we could enter into one branch and never emit the instruction.</p>\n</blockquote>",
        "id": 391772584,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695070074
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7057#discussion_r1329262429\">PR review comment</a>.</p>",
        "id": 391772669,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695070099
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7057#discussion_r1329262429\">PR review comment</a>.</p>",
        "id": 391773275,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695070381
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7057\">PR #7057</a>.</p>",
        "id": 391773587,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695070496
    },
    {
        "content": "<p>afonso360 has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7057\">PR #7057</a>.</p>",
        "id": 391776086,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695071572
    },
    {
        "content": "<p>afonso360 merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7057\">PR #7057</a>.</p>",
        "id": 391796138,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695082588
    }
]