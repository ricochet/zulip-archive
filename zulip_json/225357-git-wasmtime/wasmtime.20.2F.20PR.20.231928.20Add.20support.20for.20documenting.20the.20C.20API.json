[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1928\">PR #1928</a> from <code>c-api-docs</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit adds a bit of a skeleton of what it might look like to<br>\ndocument the C API. Today the C API has virtually zero documentation<br>\nbecause the upstream documentation does not exist and we haven't put a<br>\nton of effort into documenting our own extensions. Given that this is<br>\none of the main vectors we expect users to use Wasmtime, we should make<br>\nsure it's thoroughly documented!</p>\n<p>I've never really done much documentation generation of C myself before,<br>\nbut I did a bit of searching and Doxygen seems reasonable proficient for<br>\ndoing this. This commit sets up what it might look like for Doxygen to<br>\nbe used for the C API. One nice feature of DOxygen is that we can<br>\ndocument the items in <code>wasm.h</code> without actually modifying <code>wasm.h</code>. For<br>\nthose purposes a <code>doc-wasm.h</code> file was added here which is where we can<br>\nput Wasmtime-specific documentation about <code>wasm.h</code>.</p>\n<p>There's quite a few functions in the C API so I didn't want to get them<br>\nall done before getting consensus on this. I've started some skeletons<br>\nof documentation for global types in <code>wasm.h</code> and also confirmed that<br>\ndocumentation works for our own <code>wasmtime.h</code> and such header files. If<br>\nthis looks good to everyone and it runs reasonable well on CI then I can<br>\nspend more time filling out the rest of the documentation.</p>\n</blockquote>",
        "id": 202109068,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593187262
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1928#pullrequestreview-438415197\">PR Review</a>.</p>",
        "id": 202109139,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593187304
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1928#discussion_r446272538\">PR Review Comment</a>:</p>\n<blockquote>\n<p>It's worth pointing out that I generated this file with <code>doxygen -f doxygen.conf</code>. I've tweaked a number of settings internally but I'm hoping that most of this file can basically be ignored.</p>\n</blockquote>",
        "id": 202109140,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593187304
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1928\">PR #1928</a> from <code>c-api-docs</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit adds a bit of a skeleton of what it might look like to<br>\ndocument the C API. Today the C API has virtually zero documentation<br>\nbecause the upstream documentation does not exist and we haven't put a<br>\nton of effort into documenting our own extensions. Given that this is<br>\none of the main vectors we expect users to use Wasmtime, we should make<br>\nsure it's thoroughly documented!</p>\n<p>I've never really done much documentation generation of C myself before,<br>\nbut I did a bit of searching and Doxygen seems reasonable proficient for<br>\ndoing this. This commit sets up what it might look like for Doxygen to<br>\nbe used for the C API. One nice feature of DOxygen is that we can<br>\ndocument the items in <code>wasm.h</code> without actually modifying <code>wasm.h</code>. For<br>\nthose purposes a <code>doc-wasm.h</code> file was added here which is where we can<br>\nput Wasmtime-specific documentation about <code>wasm.h</code>.</p>\n<p>There's quite a few functions in the C API so I didn't want to get them<br>\nall done before getting consensus on this. I've started some skeletons<br>\nof documentation for global types in <code>wasm.h</code> and also confirmed that<br>\ndocumentation works for our own <code>wasmtime.h</code> and such header files. If<br>\nthis looks good to everyone and it runs reasonable well on CI then I can<br>\nspend more time filling out the rest of the documentation.</p>\n</blockquote>",
        "id": 202109290,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593187374
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1928\">PR #1928</a> from <code>c-api-docs</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit adds a bit of a skeleton of what it might look like to<br>\ndocument the C API. Today the C API has virtually zero documentation<br>\nbecause the upstream documentation does not exist and we haven't put a<br>\nton of effort into documenting our own extensions. Given that this is<br>\none of the main vectors we expect users to use Wasmtime, we should make<br>\nsure it's thoroughly documented!</p>\n<p>I've never really done much documentation generation of C myself before,<br>\nbut I did a bit of searching and Doxygen seems reasonable proficient for<br>\ndoing this. This commit sets up what it might look like for Doxygen to<br>\nbe used for the C API. One nice feature of DOxygen is that we can<br>\ndocument the items in <code>wasm.h</code> without actually modifying <code>wasm.h</code>. For<br>\nthose purposes a <code>doc-wasm.h</code> file was added here which is where we can<br>\nput Wasmtime-specific documentation about <code>wasm.h</code>.</p>\n<p>There's quite a few functions in the C API so I didn't want to get them<br>\nall done before getting consensus on this. I've started some skeletons<br>\nof documentation for global types in <code>wasm.h</code> and also confirmed that<br>\ndocumentation works for our own <code>wasmtime.h</code> and such header files. If<br>\nthis looks good to everyone and it runs reasonable well on CI then I can<br>\nspend more time filling out the rest of the documentation.</p>\n</blockquote>",
        "id": 202109770,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593187595
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1928\">PR #1928</a> from <code>c-api-docs</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit adds a bit of a skeleton of what it might look like to<br>\ndocument the C API. Today the C API has virtually zero documentation<br>\nbecause the upstream documentation does not exist and we haven't put a<br>\nton of effort into documenting our own extensions. Given that this is<br>\none of the main vectors we expect users to use Wasmtime, we should make<br>\nsure it's thoroughly documented!</p>\n<p>I've never really done much documentation generation of C myself before,<br>\nbut I did a bit of searching and Doxygen seems reasonable proficient for<br>\ndoing this. This commit sets up what it might look like for Doxygen to<br>\nbe used for the C API. One nice feature of DOxygen is that we can<br>\ndocument the items in <code>wasm.h</code> without actually modifying <code>wasm.h</code>. For<br>\nthose purposes a <code>doc-wasm.h</code> file was added here which is where we can<br>\nput Wasmtime-specific documentation about <code>wasm.h</code>.</p>\n<p>There's quite a few functions in the C API so I didn't want to get them<br>\nall done before getting consensus on this. I've started some skeletons<br>\nof documentation for global types in <code>wasm.h</code> and also confirmed that<br>\ndocumentation works for our own <code>wasmtime.h</code> and such header files. If<br>\nthis looks good to everyone and it runs reasonable well on CI then I can<br>\nspend more time filling out the rest of the documentation.</p>\n</blockquote>",
        "id": 202109851,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593187635
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1928\">PR #1928</a> from <code>c-api-docs</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit adds a bit of a skeleton of what it might look like to<br>\ndocument the C API. Today the C API has virtually zero documentation<br>\nbecause the upstream documentation does not exist and we haven't put a<br>\nton of effort into documenting our own extensions. Given that this is<br>\none of the main vectors we expect users to use Wasmtime, we should make<br>\nsure it's thoroughly documented!</p>\n<p>I've never really done much documentation generation of C myself before,<br>\nbut I did a bit of searching and Doxygen seems reasonable proficient for<br>\ndoing this. This commit sets up what it might look like for Doxygen to<br>\nbe used for the C API. One nice feature of DOxygen is that we can<br>\ndocument the items in <code>wasm.h</code> without actually modifying <code>wasm.h</code>. For<br>\nthose purposes a <code>doc-wasm.h</code> file was added here which is where we can<br>\nput Wasmtime-specific documentation about <code>wasm.h</code>.</p>\n<p>There's quite a few functions in the C API so I didn't want to get them<br>\nall done before getting consensus on this. I've started some skeletons<br>\nof documentation for global types in <code>wasm.h</code> and also confirmed that<br>\ndocumentation works for our own <code>wasmtime.h</code> and such header files. If<br>\nthis looks good to everyone and it runs reasonable well on CI then I can<br>\nspend more time filling out the rest of the documentation.</p>\n</blockquote>",
        "id": 202110000,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593187695
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1928\">PR #1928</a> from <code>c-api-docs</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit adds a bit of a skeleton of what it might look like to<br>\ndocument the C API. Today the C API has virtually zero documentation<br>\nbecause the upstream documentation does not exist and we haven't put a<br>\nton of effort into documenting our own extensions. Given that this is<br>\none of the main vectors we expect users to use Wasmtime, we should make<br>\nsure it's thoroughly documented!</p>\n<p>I've never really done much documentation generation of C myself before,<br>\nbut I did a bit of searching and Doxygen seems reasonable proficient for<br>\ndoing this. This commit sets up what it might look like for Doxygen to<br>\nbe used for the C API. One nice feature of DOxygen is that we can<br>\ndocument the items in <code>wasm.h</code> without actually modifying <code>wasm.h</code>. For<br>\nthose purposes a <code>doc-wasm.h</code> file was added here which is where we can<br>\nput Wasmtime-specific documentation about <code>wasm.h</code>.</p>\n<p>There's quite a few functions in the C API so I didn't want to get them<br>\nall done before getting consensus on this. I've started some skeletons<br>\nof documentation for global types in <code>wasm.h</code> and also confirmed that<br>\ndocumentation works for our own <code>wasmtime.h</code> and such header files. If<br>\nthis looks good to everyone and it runs reasonable well on CI then I can<br>\nspend more time filling out the rest of the documentation.</p>\n</blockquote>",
        "id": 202110292,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593187860
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1928\">PR #1928</a> from <code>c-api-docs</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit adds a bit of a skeleton of what it might look like to<br>\ndocument the C API. Today the C API has virtually zero documentation<br>\nbecause the upstream documentation does not exist and we haven't put a<br>\nton of effort into documenting our own extensions. Given that this is<br>\none of the main vectors we expect users to use Wasmtime, we should make<br>\nsure it's thoroughly documented!</p>\n<p>I've never really done much documentation generation of C myself before,<br>\nbut I did a bit of searching and Doxygen seems reasonable proficient for<br>\ndoing this. This commit sets up what it might look like for Doxygen to<br>\nbe used for the C API. One nice feature of DOxygen is that we can<br>\ndocument the items in <code>wasm.h</code> without actually modifying <code>wasm.h</code>. For<br>\nthose purposes a <code>doc-wasm.h</code> file was added here which is where we can<br>\nput Wasmtime-specific documentation about <code>wasm.h</code>.</p>\n<p>There's quite a few functions in the C API so I didn't want to get them<br>\nall done before getting consensus on this. I've started some skeletons<br>\nof documentation for global types in <code>wasm.h</code> and also confirmed that<br>\ndocumentation works for our own <code>wasmtime.h</code> and such header files. If<br>\nthis looks good to everyone and it runs reasonable well on CI then I can<br>\nspend more time filling out the rest of the documentation.</p>\n</blockquote>",
        "id": 202110657,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593188042
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1928#pullrequestreview-441118529\">PR Review</a>.</p>",
        "id": 202608714,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593629491
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1928\">PR #1928</a>.</p>",
        "id": 202610387,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593630320
    }
]