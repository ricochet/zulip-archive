[
    {
        "content": "<p><strong>jameysharp</strong> requested <a href=\"https://github.com/elliottt\">elliottt</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8457\">PR #8457</a>.</p>",
        "id": 435119204,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713940224
    },
    {
        "content": "<p><strong>jameysharp</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8457\">PR #8457</a>.</p>",
        "id": 435119205,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713940224
    },
    {
        "content": "<p>jameysharp opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8457\">PR #8457</a> from <code>jameysharp:cache-allocatable</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>The implementation of <code>PRegSet::from(self.vcode.machine_env())</code> does a surprising amount of work: it lazily initializes a <code>OnceLock</code> in the backend, then loops over six vectors of registers and adds them all to the <code>PRegSet</code>.</p>\n<p>We could likely implement that better, but in the meantime at least we can avoid repeating that work for every single machine instruction. The <code>PRegSet</code> itself only takes a few words to store so it's cheap to just keep it around.</p>\n<p>I discovered this because when the call to <code>self.vcode.machine_env()</code> is in the middle of the loop, that prevents holding a mutable borrow on parts of <code>self.vcode</code>, which I want to be able to do in another PR.</p>\n</blockquote>",
        "id": 435119206,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713940224
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8457#issuecomment-2075158335\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8457\">PR #8457</a>:</p>\n<blockquote>\n<p>This one really surprised me so I went looking at history to figure out if we ever measured it: it looks like first appeared in #6957; previously the <code>PRegSet</code> was computed once when the lowering backend was created; and we didn't benchmark that. The PR did note caching the <code>MachineEnv</code> but we missed caching the derived information.</p>\n<p>Out of curiosity have you seen a perf improvement with this PR? (We should do it even if not, but it seems to me it should improve compile time)</p>\n</blockquote>",
        "id": 435210388,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713970842
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8457#pullrequestreview-2020134742\">PR review</a>:</p>\n<blockquote>\n<p>also I'll go ahead and r+ since I dug into this (sorry to preempt reviewers!).</p>\n</blockquote>",
        "id": 435210585,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713970878
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8457#issuecomment-2078585682\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8457\">PR #8457</a>:</p>\n<blockquote>\n<p>According to hyperfine, this commit is 1.02 Â± 0.01 times faster when running <code>wasmtime compile -C cache=n ../sightglass/benchmarks/spidermonkey/benchmark.wasm</code>. That's actually a bigger effect than I expected since I thought operand collection is a pretty small part of the overall time.</p>\n</blockquote>",
        "id": 435510350,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714103768
    },
    {
        "content": "<p>jameysharp merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8457\">PR #8457</a>.</p>",
        "id": 435511947,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714104916
    }
]