[
    {
        "content": "<p>acfoltzer opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949\">PR #1949</a> from <code>acf/virtual-pipes</code> to <code>main</code>:</p>\n<blockquote>\n<p>This introduces <code>Handle</code> implementations for readable and writable pipes, backed by arbitrary <code>Read</code> and <code>Write</code> types, respectively. In particular, this allows for easily providing, capturing, or redirecting WASI stdio without having to resort to OS-provided file descriptors.</p>\n<p>The implementation is based heavily on <code>wasi_common::virtfs::InMemoryFile</code>, but without inapplicable operations like <code>seek</code> or <code>allocate</code>.</p>\n<p>Note that these types are not 1:1 replacements for real pipes, because they do not support <code>poll_oneoff</code>.</p>\n</blockquote>",
        "id": 202471093,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593539176
    },
    {
        "content": "<p>iximeow submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#pullrequestreview-440322447\">PR Review</a>.</p>",
        "id": 202485945,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593546612
    },
    {
        "content": "<p>iximeow submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#pullrequestreview-440322447\">PR Review</a>.</p>",
        "id": 202485946,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593546612
    },
    {
        "content": "<p>iximeow created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#discussion_r447928970\">PR Review Comment</a>:</p>\n<blockquote>\n<div class=\"codehilite\"><pre><span></span><code>impl&lt;&#39;a&gt; From&lt;&amp;&#39;a [u8]&gt; for ReadPipe&lt;io::Cursor&lt;&amp;&#39;a [u8]&gt;&gt; {\n</code></pre></div>\n\n\n<p>I _think_ this is a correct way to spell an impl entirely on a ref of the underlying data, and I'm pretty sure we can <code>Cursor&lt;&amp;'_ [u8]&gt;</code> for reading here, so this ought to let is avoid forcing a copy of the underlying slice?</p>\n</blockquote>",
        "id": 202485947,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593546612
    },
    {
        "content": "<p>iximeow created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#discussion_r447938103\">PR Review Comment</a>:</p>\n<blockquote>\n<p>One thing I punted on when first doing virtfs work was figuring out what kind of errors are actually acceptable to return from what function. I broadly worked off of <code>In the parts of WASI which do correspond to POSIX functionality, WASI follows POSIX when it doesn't conflict with WASI's other goals. And, we consult POSIX even when we aren't strictly following it.</code> from <a href=\"https://github.com/WebAssembly/WASI/blob/master/docs/DesignPrinciples.md\">DesignPrinciples.md</a> but we should probably consider documenting the full set of errors that WASI functions may return - even if that's simply \"all functions may return any <code>Errno</code>\" (I think we can and should do better than that, since it would be good to be accurate in communicating kinds of errors to downstream users)</p>\n<p>I bring this up mostly because I'm wondering if it's right to accept and do nothing here, or should this <code>Errno::Perm</code>? Silently doing nothing is probably the right answer, but there ought to be more implementation guidance for virtfs users.</p>\n</blockquote>",
        "id": 202485948,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593546612
    },
    {
        "content": "<p>iximeow created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#discussion_r447929607\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Same idea about a <code>Cursor&lt;&amp;'a str&gt;</code> here too, but I'm not as sure that this'll Just Work. Might be worth trying?</p>\n</blockquote>",
        "id": 202485950,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593546612
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#pullrequestreview-440284859\">PR Review</a>.</p>",
        "id": 202486526,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593546921
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#pullrequestreview-440284859\">PR Review</a>.</p>",
        "id": 202486527,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593546921
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#discussion_r447901391\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Not an issue we can solve here, but I guess we could add a Filetype for pipes to the standard? @sunfishcode is an existing filetype more appropriate for a pipe?</p>\n</blockquote>",
        "id": 202486528,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593546922
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#discussion_r447898553\">PR Review Comment</a>:</p>\n<blockquote>\n<p>use <code>HandleRights::from_base</code>  to construct a HandleRights that has an empty inheriting set</p>\n</blockquote>",
        "id": 202486529,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593546922
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#discussion_r447897573\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I'd rather leave traces out of these components</p>\n</blockquote>",
        "id": 202486530,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593546922
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#discussion_r447901620\">PR Review Comment</a>:</p>\n<blockquote>\n<p>HandleRights::from_base here</p>\n</blockquote>",
        "id": 202486531,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593546922
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#discussion_r447901966\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This would be nicer if wiggle had derived Default on Filestat - just a note for future work in wiggle.</p>\n</blockquote>",
        "id": 202486532,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593546922
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#discussion_r447902177\">PR Review Comment</a>:</p>\n<blockquote>\n<p>would rather not trace</p>\n</blockquote>",
        "id": 202486533,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593546922
    },
    {
        "content": "<p>iximeow submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#pullrequestreview-440342477\">PR Review</a>.</p>",
        "id": 202487168,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593547220
    },
    {
        "content": "<p>iximeow created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#discussion_r447944659\">PR Review Comment</a>:</p>\n<blockquote>\n<p>just noting: this is probably for consistency with the other virtfs <code>write_vectored</code> methods: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/wasi-common/src/virtfs.rs#L290\">https://github.com/bytecodealliance/wasmtime/blob/main/crates/wasi-common/src/virtfs.rs#L290</a> - I was pretty trace-y in all that and it might make sense to remove some of those too.</p>\n</blockquote>",
        "id": 202487169,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593547220
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#discussion_r447953590\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Yes, I would prefer that are removed as well. Low priority, but nice to clean up.</p>\n</blockquote>",
        "id": 202489181,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593548259
    },
    {
        "content": "<p>acfoltzer submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#pullrequestreview-440366117\">PR Review</a>.</p>",
        "id": 202491244,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593549356
    },
    {
        "content": "<p>acfoltzer created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#discussion_r447963116\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Sadly <code>&amp;'a [u8]</code> is not <code>Any</code> due to the non-static lifetime, but <code>Any</code> is required to implement <code>Handle</code> <span aria-label=\"sob\" class=\"emoji emoji-1f62d\" role=\"img\" title=\"sob\">:sob:</span> </p>\n</blockquote>",
        "id": 202491246,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593549356
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#pullrequestreview-440450968\">PR Review</a>.</p>",
        "id": 202507452,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593559493
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#pullrequestreview-440451367\">PR Review</a>.</p>",
        "id": 202507546,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593559566
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#pullrequestreview-440453286\">PR Review</a>.</p>",
        "id": 202507863,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593559887
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#discussion_r448034945\">PR Review Comment</a>:</p>\n<blockquote>\n<p>What does POSIX do if you try to set O_APPEND on a pipe? Do real-world implementations support O_NONBLOCK on pipes? I don't have a clear sense of the right thing to do here yet.</p>\n<p>I agree that we eventually want to move toward documenting the possible error codes for each function. I expect that'll be easier to do once we can start splitting up \"file descriptors\" into separate types, and we can have separate errno enums rather than one big POSIX-style errno space shared by filesystem and networking functions of all kinds.</p>\n</blockquote>",
        "id": 202507864,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593559887
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#pullrequestreview-440453535\">PR Review</a>.</p>",
        "id": 202507933,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593559926
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#discussion_r448035166\">PR Review Comment</a>:</p>\n<blockquote>\n<p>tracing should be (optionally) inserted by wiggle, right? In which case, we don't need the implementation code to manually do it.</p>\n</blockquote>",
        "id": 202507934,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593559926
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#discussion_r448035329\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Along the lines above, splitting up file descriptors into different types should also reduce the one-big-trait factor here, which should clean a lot of this up.</p>\n</blockquote>",
        "id": 202507959,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593559957
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#pullrequestreview-440453740\">PR Review</a>.</p>",
        "id": 202507960,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593559957
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#pullrequestreview-440472128\">PR Review</a>.</p>",
        "id": 202518318,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593563440
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#discussion_r448051555\">PR Review Comment</a>:</p>\n<blockquote>\n<p>tracing is always inserted by wiggle at the layer below this, and will trace just the guest pointer. however, without a <code>tracing_subscriber</code> enabled in some manner, or the <code>tracing_log</code> feature enabled, the traces will act as no-ops. This tracing does show more detail, because the guest pointers have been translated into host slices, which wiggle doesn't know about.</p>\n</blockquote>",
        "id": 202518319,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593563440
    },
    {
        "content": "<p>pchickey edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#discussion_r448051555\">PR Review Comment</a>.</p>",
        "id": 202518351,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593563473
    },
    {
        "content": "<p>pchickey edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#discussion_r448051555\">PR Review Comment</a>.</p>",
        "id": 202518447,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593563542
    },
    {
        "content": "<p>pchickey edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#discussion_r448051555\">PR Review Comment</a>.</p>",
        "id": 202518477,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593563579
    },
    {
        "content": "<p>acfoltzer submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#pullrequestreview-441035859\">PR Review</a>.</p>",
        "id": 202592916,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593621855
    },
    {
        "content": "<p>acfoltzer created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#discussion_r448489400\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Yeah, I was actually thinking about breaking up <code>Handle</code>, but since this part of the code is new to me I didn't want to stir things up too much. Are you alright with saving this for a future PR?</p>\n</blockquote>",
        "id": 202592917,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593621856
    },
    {
        "content": "<p>acfoltzer submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#pullrequestreview-441037203\">PR Review</a>.</p>",
        "id": 202593179,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593621974
    },
    {
        "content": "<p>acfoltzer created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#discussion_r448490504\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Agreed that there should be more implementation guidance, but since I'm new to this corner of the codebase I'm not sure what to provide. Would you be okay with merging this for now with the expectation of doing that work later?</p>\n</blockquote>",
        "id": 202593180,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593621974
    },
    {
        "content": "<p>acfoltzer updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949\">PR #1949</a> from <code>acf/virtual-pipes</code> to <code>main</code>:</p>\n<blockquote>\n<p>This introduces <code>Handle</code> implementations for readable and writable pipes, backed by arbitrary <code>Read</code> and <code>Write</code> types, respectively. In particular, this allows for easily providing, capturing, or redirecting WASI stdio without having to resort to OS-provided file descriptors.</p>\n<p>The implementation is based heavily on <code>wasi_common::virtfs::InMemoryFile</code>, but without inapplicable operations like <code>seek</code> or <code>allocate</code>.</p>\n<p>Note that these types are not 1:1 replacements for real pipes, because they do not support <code>poll_oneoff</code>.</p>\n</blockquote>",
        "id": 202593242,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593622011
    },
    {
        "content": "<p><strong>acfoltzer</strong> requested <a href=\"https://github.com/iximeow\">iximeow</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949\">PR #1949</a>.</p>",
        "id": 202593275,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593622027
    },
    {
        "content": "<p><strong>acfoltzer</strong> requested <a href=\"https://github.com/pchickey\">pchickey</a> and <a href=\"https://github.com/iximeow\">iximeow</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949\">PR #1949</a>.</p>",
        "id": 202593304,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593622036
    },
    {
        "content": "<p>iximeow submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#pullrequestreview-441066207\">PR Review</a>.</p>",
        "id": 202598370,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593624552
    },
    {
        "content": "<p>iximeow created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#discussion_r448513230\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Ahh drat.</p>\n</blockquote>",
        "id": 202598372,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593624552
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#pullrequestreview-441082730\">PR Review</a>.</p>",
        "id": 202601507,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593626077
    },
    {
        "content": "<p>iximeow submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#pullrequestreview-441083070\">PR Review</a>.</p>",
        "id": 202601561,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593626109
    },
    {
        "content": "<p>acfoltzer submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#pullrequestreview-441102547\">PR Review</a>.</p>",
        "id": 202605575,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593627950
    },
    {
        "content": "<p>acfoltzer created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#discussion_r448542105\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Sorry @sunfishcode, Github wasn't showing your comment in this thread when I left my reply. In my testing, <code>O_APPEND</code> seems to be ignored.</p>\n</blockquote>",
        "id": 202605576,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593627950
    },
    {
        "content": "<p>acfoltzer merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949\">PR #1949</a>.</p>",
        "id": 202605661,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593627975
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#pullrequestreview-441179100\">PR Review</a>.</p>",
        "id": 202620844,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593635723
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#discussion_r448602231\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Yeah, I should have clarified; I'm talking about cleanups we can do in the future here.</p>\n</blockquote>",
        "id": 202620847,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593635723
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#pullrequestreview-441179931\">PR Review</a>.</p>",
        "id": 202621012,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593635805
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1949#discussion_r448602917\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Yes, as long as you're ok making subtle behavior changes later :-).</p>\n</blockquote>",
        "id": 202621013,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593635806
    }
]