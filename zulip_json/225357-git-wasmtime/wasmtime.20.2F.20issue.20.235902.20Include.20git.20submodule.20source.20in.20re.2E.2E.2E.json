[
    {
        "content": "<p>kriswuollett opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5902\">issue #5902</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>Include submodules source in release source artifacts.</p>\n<h4>Benefit</h4>\n<p>Can compile <code>wasmtime</code> from release source artifact, otherwise one currently encounters this issue:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$<span class=\"w\"> </span>cargo<span class=\"w\"> </span>build<span class=\"w\"> </span>--release<span class=\"w\"> </span>--manifest-path<span class=\"w\"> </span>crates/c-api/Cargo.toml\nerror:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>workspace<span class=\"w\"> </span>member<span class=\"w\"> </span><span class=\"sb\">`</span>/home/kris/code/wasmtime-6.0.0/crates/bench-api<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>wasi-cap-std-sync<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>wasi-common<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>wasmtime<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>wasmtime-wasi<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>wasi-tokio<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>wiggle<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>wiggle-macro<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>wiggle-generate<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>witx<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span><span class=\"nb\">read</span><span class=\"w\"> </span><span class=\"sb\">`</span>/home/kris/code/wasmtime-6.0.0/crates/wasi-common/WASI/tools/witx/Cargo.toml<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>No<span class=\"w\"> </span>such<span class=\"w\"> </span>file<span class=\"w\"> </span>or<span class=\"w\"> </span>directory<span class=\"w\"> </span><span class=\"o\">(</span>os<span class=\"w\"> </span>error<span class=\"w\"> </span><span class=\"m\">2</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>My use case is to use <code>http_archive</code> instead of <code>git_repository</code> in a Bazel workspace for faster build initialization, e.g.,:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">_ALL_CONTENT</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"\"\"\\</span>\n<span class=\"s\">filegroup(</span>\n<span class=\"s\">    name = \"</span><span class=\"n\">all_srcs</span><span class=\"s\">\",</span>\n<span class=\"s\">    srcs = glob([\"</span><span class=\"o\">**</span><span class=\"s\">\"]),</span>\n<span class=\"s\">    visibility = [\"</span><span class=\"c1\">//visibility:public\"],</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">http_archive</span><span class=\"p\">(</span>\n<span class=\"w\">    </span><span class=\"n\">name</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"wasmtime\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">build_file_content</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_ALL_CONTENT</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">strip_prefix</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"wasmtime-6.0.0\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">urls</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">        </span><span class=\"s\">\"https://github.com/bytecodealliance/wasmtime/archive/refs/tags/v6.0.0.tar.gz\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">],</span>\n<span class=\"w\">    </span><span class=\"n\">sha256</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"02af6132501ec5aff6993925a23efda0cbaab16e509787d3649cfc1bf8a33978\"</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n<h4>Implementation</h4>\n<p>It is possible to reuse a script created for another project with the same issue to include submodules in the release source archive, see <a href=\"https://github.com/AcademySoftwareFoundation/MaterialX/issues/317#issuecomment-560131043\">https://github.com/AcademySoftwareFoundation/MaterialX/issues/317#issuecomment-560131043</a>.</p>\n</blockquote>",
        "id": 338880638,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677685864
    },
    {
        "content": "<p>kriswuollett edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5902\">issue #5902</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>Include submodules source in release source artifacts.</p>\n<h4>Benefit</h4>\n<p>Can compile <code>wasmtime</code> from release source artifact, which can be mirrored on an internal archive, otherwise one currently encounters this issue:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$<span class=\"w\"> </span>cargo<span class=\"w\"> </span>build<span class=\"w\"> </span>--release<span class=\"w\"> </span>--manifest-path<span class=\"w\"> </span>crates/c-api/Cargo.toml\nerror:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>workspace<span class=\"w\"> </span>member<span class=\"w\"> </span><span class=\"sb\">`</span>/home/kris/code/wasmtime-6.0.0/crates/bench-api<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>wasi-cap-std-sync<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>wasi-common<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>wasmtime<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>wasmtime-wasi<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>wasi-tokio<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>wiggle<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>wiggle-macro<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>wiggle-generate<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>witx<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span><span class=\"nb\">read</span><span class=\"w\"> </span><span class=\"sb\">`</span>/home/kris/code/wasmtime-6.0.0/crates/wasi-common/WASI/tools/witx/Cargo.toml<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>No<span class=\"w\"> </span>such<span class=\"w\"> </span>file<span class=\"w\"> </span>or<span class=\"w\"> </span>directory<span class=\"w\"> </span><span class=\"o\">(</span>os<span class=\"w\"> </span>error<span class=\"w\"> </span><span class=\"m\">2</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>My use case is to use <code>http_archive</code> instead of <code>git_repository</code> in a Bazel workspace for faster build initialization, e.g.,:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">_ALL_CONTENT</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"\"\"\\</span>\n<span class=\"s\">filegroup(</span>\n<span class=\"s\">    name = \"</span><span class=\"n\">all_srcs</span><span class=\"s\">\",</span>\n<span class=\"s\">    srcs = glob([\"</span><span class=\"o\">**</span><span class=\"s\">\"]),</span>\n<span class=\"s\">    visibility = [\"</span><span class=\"c1\">//visibility:public\"],</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">http_archive</span><span class=\"p\">(</span>\n<span class=\"w\">    </span><span class=\"n\">name</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"wasmtime\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">build_file_content</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_ALL_CONTENT</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">strip_prefix</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"wasmtime-6.0.0\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">urls</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">        </span><span class=\"s\">\"https://github.com/bytecodealliance/wasmtime/archive/refs/tags/v6.0.0.tar.gz\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">],</span>\n<span class=\"w\">    </span><span class=\"n\">sha256</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"02af6132501ec5aff6993925a23efda0cbaab16e509787d3649cfc1bf8a33978\"</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n<h4>Implementation</h4>\n<p>It is possible to reuse a script created for another project with the same issue to include submodules in the release source archive, see <a href=\"https://github.com/AcademySoftwareFoundation/MaterialX/issues/317#issuecomment-560131043\">https://github.com/AcademySoftwareFoundation/MaterialX/issues/317#issuecomment-560131043</a>.</p>\n</blockquote>",
        "id": 338882055,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677686123
    },
    {
        "content": "<p>kriswuollett edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5902\">issue #5902</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>Include submodules source in release source artifacts.</p>\n<h4>Benefit</h4>\n<p>Can compile <code>wasmtime</code> from release source artifact, which can be mirrored on an internal archive, otherwise one currently encounters this issue:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$<span class=\"w\"> </span>cargo<span class=\"w\"> </span>build<span class=\"w\"> </span>--release<span class=\"w\"> </span>--manifest-path<span class=\"w\"> </span>crates/c-api/Cargo.toml\nerror:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>workspace<span class=\"w\"> </span>member<span class=\"w\"> </span><span class=\"sb\">`</span>/home/kris/code/wasmtime-6.0.0/crates/bench-api<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>wasi-cap-std-sync<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>wasi-common<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>wasmtime<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>wasmtime-wasi<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>wasi-tokio<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>wiggle<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>wiggle-macro<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>wiggle-generate<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>witx<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span><span class=\"nb\">read</span><span class=\"w\"> </span><span class=\"sb\">`</span>/home/kris/code/wasmtime-6.0.0/crates/wasi-common/WASI/tools/witx/Cargo.toml<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>No<span class=\"w\"> </span>such<span class=\"w\"> </span>file<span class=\"w\"> </span>or<span class=\"w\"> </span>directory<span class=\"w\"> </span><span class=\"o\">(</span>os<span class=\"w\"> </span>error<span class=\"w\"> </span><span class=\"m\">2</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>My use case is to use <code>http_archive</code> instead of <code>git_repository</code> in a Bazel workspace for faster build initialization, e.g.,:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">_ALL_CONTENT</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"\"\"\\</span>\n<span class=\"s\">filegroup(</span>\n<span class=\"s\">    name = \"</span><span class=\"n\">all_srcs</span><span class=\"s\">\",</span>\n<span class=\"s\">    srcs = glob([\"</span><span class=\"o\">**</span><span class=\"s\">\"]),</span>\n<span class=\"s\">    visibility = [\"</span><span class=\"c1\">//visibility:public\"],</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">http_archive</span><span class=\"p\">(</span>\n<span class=\"w\">    </span><span class=\"n\">name</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"wasmtime\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">build_file_content</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_ALL_CONTENT</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">strip_prefix</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"wasmtime-6.0.0\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">urls</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">        </span><span class=\"s\">\"https://archive.corp.mycompany.com/bytecodealliance/wasmtime/v6.0.0.tar.gz\"</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"s\">\"https://github.com/bytecodealliance/wasmtime/archive/refs/tags/v6.0.0.tar.gz\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">],</span>\n<span class=\"w\">    </span><span class=\"n\">sha256</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"02af6132501ec5aff6993925a23efda0cbaab16e509787d3649cfc1bf8a33978\"</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n<h4>Implementation</h4>\n<p>It is possible to reuse a script created for another project with the same issue to include submodules in the release source archive, see <a href=\"https://github.com/AcademySoftwareFoundation/MaterialX/issues/317#issuecomment-560131043\">https://github.com/AcademySoftwareFoundation/MaterialX/issues/317#issuecomment-560131043</a>.</p>\n</blockquote>",
        "id": 338882430,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677686185
    },
    {
        "content": "<p>kriswuollett edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5902\">issue #5902</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>Include submodules source in release source artifacts.</p>\n<h4>Benefit</h4>\n<p>Can compile <code>wasmtime</code> from release source artifact, which can be mirrored on an internal archive, otherwise one currently encounters this issue:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$<span class=\"w\"> </span>cargo<span class=\"w\"> </span>build<span class=\"w\"> </span>--release<span class=\"w\"> </span>--manifest-path<span class=\"w\"> </span>crates/c-api/Cargo.toml\nerror:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>workspace<span class=\"w\"> </span>member<span class=\"w\"> </span><span class=\"sb\">`</span>/home/kris/code/wasmtime-6.0.0/crates/bench-api<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>wasi-cap-std-sync<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>wasi-common<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>wasmtime<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>wasmtime-wasi<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>wasi-tokio<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>wiggle<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>wiggle-macro<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>wiggle-generate<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>witx<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span><span class=\"nb\">read</span><span class=\"w\"> </span><span class=\"sb\">`</span>/home/kris/code/wasmtime-6.0.0/crates/wasi-common/WASI/tools/witx/Cargo.toml<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>No<span class=\"w\"> </span>such<span class=\"w\"> </span>file<span class=\"w\"> </span>or<span class=\"w\"> </span>directory<span class=\"w\"> </span><span class=\"o\">(</span>os<span class=\"w\"> </span>error<span class=\"w\"> </span><span class=\"m\">2</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>My use case is to use <code>http_archive</code> instead of <code>git_repository</code> in a Bazel workspace for faster build initialization, e.g.,:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">_ALL_CONTENT</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"\"\"\\</span>\n<span class=\"s\">filegroup(</span>\n<span class=\"s\">    name = \"</span><span class=\"n\">all_srcs</span><span class=\"s\">\",</span>\n<span class=\"s\">    srcs = glob([\"</span><span class=\"o\">**</span><span class=\"s\">\"]),</span>\n<span class=\"s\">    visibility = [\"</span><span class=\"c1\">//visibility:public\"],</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">http_archive</span><span class=\"p\">(</span>\n<span class=\"w\">    </span><span class=\"n\">name</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"wasmtime\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">build_file_content</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_ALL_CONTENT</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">strip_prefix</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"wasmtime-6.0.0\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">urls</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">        </span><span class=\"s\">\"https://archive.corp.example.com/bytecodealliance/wasmtime/v6.0.0.tar.gz\"</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"s\">\"https://github.com/bytecodealliance/wasmtime/archive/refs/tags/v6.0.0.tar.gz\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">],</span>\n<span class=\"w\">    </span><span class=\"n\">sha256</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"02af6132501ec5aff6993925a23efda0cbaab16e509787d3649cfc1bf8a33978\"</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n<h4>Implementation</h4>\n<p>It is possible to reuse a script created for another project with the same issue to include submodules in the release source archive, see <a href=\"https://github.com/AcademySoftwareFoundation/MaterialX/issues/317#issuecomment-560131043\">https://github.com/AcademySoftwareFoundation/MaterialX/issues/317#issuecomment-560131043</a>.</p>\n</blockquote>",
        "id": 338882577,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677686211
    },
    {
        "content": "<p>kriswuollett <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5902#issuecomment-1450414532\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5902\">issue #5902</a>:</p>\n<blockquote>\n<p>Current workaround:</p>\n<div class=\"codehilite\" data-code-language=\"bazel\"><pre><span></span><code>git_repository(\n    name = \"wasmtime\",\n    build_file_content = _ALL_CONTENT,\n    remote = \"https://github.com/bytecodealliance/wasmtime.git\",\n    commit = \"c00d3f0542855a13adffffd5f4ff0177dfbdcb34\", # v6.0.0\n    recursive_init_submodules = True,\n)\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$<span class=\"w\"> </span>bazel<span class=\"w\"> </span>query<span class=\"w\"> </span><span class=\"s1\">'deps(@wasmtime//:all_srcs)'</span><span class=\"w\"> </span><span class=\"m\">2</span>&gt;/dev/null<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>grep<span class=\"w\"> </span><span class=\"s1\">'tools/witx'</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>head\n@wasmtime//:crates/wasi-common/WASI/tools/witx-cli/Cargo.toml\n@wasmtime//:crates/wasi-common/WASI/tools/witx-cli/src/main.rs\n@wasmtime//:crates/wasi-common/WASI/tools/witx/.gitignore\n@wasmtime//:crates/wasi-common/WASI/tools/witx/Cargo.toml\n@wasmtime//:crates/wasi-common/WASI/tools/witx/LICENSE\n@wasmtime//:crates/wasi-common/WASI/tools/witx/src/abi.rs\n@wasmtime//:crates/wasi-common/WASI/tools/witx/src/ast.rs\n@wasmtime//:crates/wasi-common/WASI/tools/witx/src/docs/ast.rs\n@wasmtime//:crates/wasi-common/WASI/tools/witx/src/docs/md.rs\n@wasmtime//:crates/wasi-common/WASI/tools/witx/src/docs/mod.rs\n</code></pre></div>\n</blockquote>",
        "id": 338886708,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677687073
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5902#issuecomment-1450417940\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5902\">issue #5902</a>:</p>\n<blockquote>\n<p>Could you try using the <a href=\"https://github.com/bytecodealliance/wasmtime/releases/download/v6.0.0/wasmtime-v6.0.0-src.tar.gz\">dedicated source tarball</a>? We have no control over the github-generated tarballs to include submodules or not.</p>\n</blockquote>",
        "id": 338887268,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677687198
    },
    {
        "content": "<p>kriswuollett <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5902#issuecomment-1452047455\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5902\">issue #5902</a>:</p>\n<blockquote>\n<p>Yes, thanks, that works! I seem to have been in the habit of always skipping down to the src link at the bottom of GitHub releases for a repo.</p>\n</blockquote>",
        "id": 339129689,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677770493
    },
    {
        "content": "<p>kriswuollett closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5902\">issue #5902</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>Include submodules source in release source artifacts.</p>\n<h4>Benefit</h4>\n<p>Can compile <code>wasmtime</code> from release source artifact, which can be mirrored on an internal archive, otherwise one currently encounters this issue:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$<span class=\"w\"> </span>cargo<span class=\"w\"> </span>build<span class=\"w\"> </span>--release<span class=\"w\"> </span>--manifest-path<span class=\"w\"> </span>crates/c-api/Cargo.toml\nerror:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>workspace<span class=\"w\"> </span>member<span class=\"w\"> </span><span class=\"sb\">`</span>/home/kris/code/wasmtime-6.0.0/crates/bench-api<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>wasi-cap-std-sync<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>wasi-common<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>wasmtime<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>wasmtime-wasi<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>wasi-tokio<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>wiggle<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>wiggle-macro<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>wiggle-generate<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>manifest<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>dependency<span class=\"w\"> </span><span class=\"sb\">`</span>witx<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span><span class=\"nb\">read</span><span class=\"w\"> </span><span class=\"sb\">`</span>/home/kris/code/wasmtime-6.0.0/crates/wasi-common/WASI/tools/witx/Cargo.toml<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>No<span class=\"w\"> </span>such<span class=\"w\"> </span>file<span class=\"w\"> </span>or<span class=\"w\"> </span>directory<span class=\"w\"> </span><span class=\"o\">(</span>os<span class=\"w\"> </span>error<span class=\"w\"> </span><span class=\"m\">2</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>My use case is to use <code>http_archive</code> instead of <code>git_repository</code> in a Bazel workspace for faster build initialization, e.g.,:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">_ALL_CONTENT</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"\"\"\\</span>\n<span class=\"s\">filegroup(</span>\n<span class=\"s\">    name = \"</span><span class=\"n\">all_srcs</span><span class=\"s\">\",</span>\n<span class=\"s\">    srcs = glob([\"</span><span class=\"o\">**</span><span class=\"s\">\"]),</span>\n<span class=\"s\">    visibility = [\"</span><span class=\"c1\">//visibility:public\"],</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">http_archive</span><span class=\"p\">(</span>\n<span class=\"w\">    </span><span class=\"n\">name</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"wasmtime\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">build_file_content</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_ALL_CONTENT</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">strip_prefix</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"wasmtime-6.0.0\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">urls</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">        </span><span class=\"s\">\"https://archive.corp.example.com/bytecodealliance/wasmtime/v6.0.0.tar.gz\"</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"s\">\"https://github.com/bytecodealliance/wasmtime/archive/refs/tags/v6.0.0.tar.gz\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">],</span>\n<span class=\"w\">    </span><span class=\"n\">sha256</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"02af6132501ec5aff6993925a23efda0cbaab16e509787d3649cfc1bf8a33978\"</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n<h4>Implementation</h4>\n<p>It is possible to reuse a script created for another project with the same issue to include submodules in the release source archive, see <a href=\"https://github.com/AcademySoftwareFoundation/MaterialX/issues/317#issuecomment-560131043\">https://github.com/AcademySoftwareFoundation/MaterialX/issues/317#issuecomment-560131043</a>.</p>\n</blockquote>",
        "id": 339129690,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677770493
    }
]