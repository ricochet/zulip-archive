[
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> added the wasmtime:c-api label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8367\">Issue #8367</a>.</p>",
        "id": 433159787,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713123768
    },
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8367\">issue #8367</a>:</p>\n<blockquote>\n<p>I'm in the process of trying to update wasmtime-py to the latest C API to weed out any issues ahead of the 20.0.0 release. One test is currently failing which asserts that a value is collected and unreferenced in Python, but it's failing. The general shape is:</p>\n<ul>\n<li>Create a <code>wasmtime_externref_t</code></li>\n<li>Put that in <code>wasmtime_val_t</code></li>\n<li>Pass that to <code>wasmtime_func_call</code></li>\n<li>Run <code>store.gc()</code></li>\n<li>Assert that the value has geen gc'd</li>\n</ul>\n<p>The problem appears to be <a href=\"https://github.com/bytecodealliance/wasmtime/blob/e1de17fb1a104a7b2aa75933044b9fecd4138dc9/crates/c-api/src/val.rs#L239\">here</a> if I'm understanding this correctly. Notably in this location there's no <code>RootScope</code> so the <code>to_val</code>, which creates a <code>Rooted&lt;T&gt;</code>, attaches itself to the <code>Store</code> directly meaning that it's now un-collect-able.</p>\n<p>cc @fitzgen</p>\n</blockquote>",
        "id": 433159788,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713123768
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8367#issuecomment-2054165396\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8367\">issue #8367</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @peterhuene</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"wasmtime:c-api\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>peterhuene: wasmtime:c-api</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 433159802,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713123798
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8367#issuecomment-2054185383\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8367\">issue #8367</a>:</p>\n<blockquote>\n<p>Yeah that function takes any <code>impl AsContextMut</code> and it is on callers to provide a suitable context, since that function cannot (it returns a rooted value, so that function can't create the scope, callers must).</p>\n<p>So the question is: which caller needs to be updated to add a root scope? I guess <code>wasmtime_func_call</code>?</p>\n</blockquote>",
        "id": 433165310,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713129052
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8367\">issue #8367</a>:</p>\n<blockquote>\n<p>I'm in the process of trying to update wasmtime-py to the latest C API to weed out any issues ahead of the 20.0.0 release. One test is currently failing which asserts that a value is collected and unreferenced in Python, but it's failing. The general shape is:</p>\n<ul>\n<li>Create a <code>wasmtime_externref_t</code></li>\n<li>Put that in <code>wasmtime_val_t</code></li>\n<li>Pass that to <code>wasmtime_func_call</code></li>\n<li>Run <code>store.gc()</code></li>\n<li>Assert that the value has geen gc'd</li>\n</ul>\n<p>The problem appears to be <a href=\"https://github.com/bytecodealliance/wasmtime/blob/e1de17fb1a104a7b2aa75933044b9fecd4138dc9/crates/c-api/src/val.rs#L239\">here</a> if I'm understanding this correctly. Notably in this location there's no <code>RootScope</code> so the <code>to_val</code>, which creates a <code>Rooted&lt;T&gt;</code>, attaches itself to the <code>Store</code> directly meaning that it's now un-collect-able.</p>\n<p>cc @fitzgen</p>\n</blockquote>",
        "id": 433401028,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713221009
    }
]