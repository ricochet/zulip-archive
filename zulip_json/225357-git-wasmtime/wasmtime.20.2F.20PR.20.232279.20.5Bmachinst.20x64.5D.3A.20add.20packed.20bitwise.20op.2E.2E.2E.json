[
    {
        "content": "<p>abrown opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2279\">PR #2279</a> from <code>more-simd</code> to <code>main</code>:</p>\n<blockquote>\n<p>This implements packed <code>and</code>, <code>and_not</code>, <code>or</code>, <code>xor</code>, and <code>bitselect</code> and begins creating <code>Inst</code> methods for these as discussed in #2252.</p>\n</blockquote>",
        "id": 212629701,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602111476
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/bnjbvr\">bnjbvr</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2279\">PR #2279</a>.</p>",
        "id": 212629702,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602111476
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2279\">PR #2279</a> from <code>more-simd</code> to <code>main</code>:</p>\n<blockquote>\n<p>This implements packed <code>and</code>, <code>and_not</code>, <code>or</code>, <code>xor</code>, and <code>bitselect</code> and begins creating <code>Inst</code> methods for these as discussed in #2252.</p>\n</blockquote>",
        "id": 212632119,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602113332
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2279#pullrequestreview-504551511\">PR Review</a>.</p>",
        "id": 212661551,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602146710
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2279#pullrequestreview-504551511\">PR Review</a>.</p>",
        "id": 212661552,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602146711
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2279#discussion_r501544846\">PR Review Comment</a>:</p>\n<blockquote>\n<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> What do you think of putting it into a different impl of a (zero-side) struct called <code>InstHelper</code> (or dare I say, <code>MacroAssembler</code>)? It'll help make a clear distinction between the low-level assembler instructions represented by Vcode, vs the slightly higher level logic that's provided here.</p>\n<p>Here and below: would it make sense to add non-SIMD types here, or put \"simd\" in the name if that's only achieved for SIMD instructions?</p>\n</blockquote>",
        "id": 212661553,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602146711
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2279#discussion_r501545469\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Should we refine this to <code>is_vector &amp;&amp; 128 bits</code>?</p>\n</blockquote>",
        "id": 212661554,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602146711
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2279#discussion_r501546293\">PR Review Comment</a>:</p>\n<blockquote>\n<p>nit: \"of\" is missing after \"instead\"</p>\n</blockquote>",
        "id": 212661555,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602146711
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2279#discussion_r501545539\">PR Review Comment</a>:</p>\n<blockquote>\n<p>ditto (etc a few times below)</p>\n<p>If that makes sense, we could create a helper for this particular test \"is vector of 128 bits\".</p>\n</blockquote>",
        "id": 212661556,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602146711
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2279#discussion_r501548636\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Can you expand the names a bit, please? <code>condition</code>, <code>if_true</code>, <code>if_false</code>?</p>\n</blockquote>",
        "id": 212661557,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602146711
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2279#discussion_r501548242\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Here (and below for the condition too): it's incorrect to get a writable register for input values. If the input vreg is used in more vcode instructions after this one, then its value will be clobbered by this particular vcode inst (and resulting machine code). We'll need temporaries here instead.</p>\n</blockquote>",
        "id": 212661558,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602146711
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2279#pullrequestreview-504926079\">PR Review</a>.</p>",
        "id": 212710083,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602172168
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2279#discussion_r501827564\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I think my idea was to eventually add the scalar types here as well but the refactorings we talked about in #2252 are going to take a while so this is just the beginning.</p>\n</blockquote>",
        "id": 212710087,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602172169
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2279#pullrequestreview-505198451\">PR Review</a>.</p>",
        "id": 212754918,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602194696
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2279#discussion_r502038543\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Um, after thinking about it a bit more I just stuffed the functions down in the <code>// Inst helpers.</code> block of the <code>impl Inst</code> so they still exist in <code>Inst</code>; I'll leave this PR up for you to take another look. I will add an <code>InstHelper</code> if you really think it would help but I figured creating a new struct would be more confusing at this point so we should either remove these functions or discuss #2252 a bit more before refactoring. (We can always move them later--and <code>Inst::load</code> and <code>Inst::store</code> are probably in the same class).</p>\n</blockquote>",
        "id": 212754919,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602194696
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2279\">PR #2279</a> from <code>more-simd</code> to <code>main</code>:</p>\n<blockquote>\n<p>This implements packed <code>and</code>, <code>and_not</code>, <code>or</code>, <code>xor</code>, and <code>bitselect</code> and begins creating <code>Inst</code> methods for these as discussed in #2252.</p>\n</blockquote>",
        "id": 212755585,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602195161
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2279\">PR #2279</a> from <code>more-simd</code> to <code>main</code>:</p>\n<blockquote>\n<p>This implements packed <code>and</code>, <code>and_not</code>, <code>or</code>, <code>xor</code>, and <code>bitselect</code> and begins creating <code>Inst</code> methods for these as discussed in #2252.</p>\n</blockquote>",
        "id": 212756673,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602195916
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2279#pullrequestreview-505208120\">PR Review</a>.</p>",
        "id": 212756701,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602195935
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2279#discussion_r502046190\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Ok, I think I did that correctly... I ported some more CLIF filetests to ensure no extra moves are required.</p>\n</blockquote>",
        "id": 212756702,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602195935
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2279#pullrequestreview-505447117\">PR Review</a>.</p>",
        "id": 212794378,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602230855
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2279#pullrequestreview-505447117\">PR Review</a>.</p>",
        "id": 212794379,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602230855
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2279#discussion_r502257797\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Could we use <code>input_to_reg_mem</code> for <code>if_false</code>, then?</p>\n</blockquote>",
        "id": 212794380,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602230856
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2279#discussion_r502256240\">PR Review Comment</a>:</p>\n<blockquote>\n<p>uber nit: can you add spaces before and after <code>--</code>, please?</p>\n</blockquote>",
        "id": 212794381,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602230856
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2279\">PR #2279</a> from <code>more-simd</code> to <code>main</code>:</p>\n<blockquote>\n<p>This implements packed <code>and</code>, <code>and_not</code>, <code>or</code>, <code>xor</code>, and <code>bitselect</code> and begins creating <code>Inst</code> methods for these as discussed in #2252.</p>\n</blockquote>",
        "id": 212848441,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602261173
    },
    {
        "content": "<p>abrown merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2279\">PR #2279</a>.</p>",
        "id": 212851671,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602263092
    }
]