[
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6827\">issue #6827</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">interpret</span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">simd_ineg_i64x2</span><span class=\"p\">(</span><span class=\"n\">i64x2</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">i64x2</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"nc\">i64x2</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">ineg</span><span class=\"w\"> </span><span class=\"n\">v0</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v1</span>\n<span class=\"p\">}</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">simd_ineg_i64x2</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">])</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<ul>\n<li><code>cd cranelift</code></li>\n<li><code>cargo run -- test ./the-above.clif</code></li>\n</ul>\n<h3>Expected Results</h3>\n<p>The test to pass!</p>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\"> </span><span class=\"n\">ERROR</span><span class=\"w\"> </span><span class=\"n\">cranelift_filetests</span>::<span class=\"n\">concurrent</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">FAIL</span>: <span class=\"nc\">interpret</span>\n<span class=\"n\">FAIL</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">lmao</span><span class=\"p\">.</span><span class=\"n\">clif</span>: <span class=\"nc\">interpret</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"nc\">unexpected</span><span class=\"w\"> </span><span class=\"n\">trap</span>: <span class=\"nc\">StepError</span><span class=\"p\">(</span><span class=\"n\">ValueError</span><span class=\"p\">(</span><span class=\"n\">InvalidType</span><span class=\"p\">(</span><span class=\"n\">Integer</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">types</span>::<span class=\"n\">I64X2</span><span class=\"p\">)))</span>\n<span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">tests</span>\n<span class=\"n\">Error</span>: <span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">failure</span>\n</code></pre></div>\n<p>It looks like the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/f32993002bc523083b7d7cca49179a3285c44c03/cranelift/interpreter/src/step.rs#L656\"><code>ineg</code> instruction in the interpreter</a> is implemented for scalar values but not for SIMD!</p>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: main</p>\n<p>Operating system: Linux</p>\n<p>Architecture: X86_64 (but it could be any really!)</p>\n<h3>Extra Info</h3>\n<p>I would suspect that this goes wrong in <code>DataValueExt::int(0, ctrl_ty)</code>, that operation seems to not be ready to produce SIMD values. We could change that and it might work!</p>\n<p>If anyone needs help working on this let me know!</p>\n</blockquote>",
        "id": 383421529,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691616690
    },
    {
        "content": "<p><a href=\"https://github.com/afonso360\">afonso360</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6827\">Issue #6827</a>.</p>",
        "id": 383421530,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691616690
    },
    {
        "content": "<p><a href=\"https://github.com/afonso360\">afonso360</a> added the good first issue label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6827\">Issue #6827</a>.</p>",
        "id": 383421531,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691616690
    },
    {
        "content": "<p><a href=\"https://github.com/afonso360\">afonso360</a> added the cranelift:E-easy label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6827\">Issue #6827</a>.</p>",
        "id": 383421534,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691616691
    },
    {
        "content": "<p><a href=\"https://github.com/afonso360\">afonso360</a> added the cranelift label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6827\">Issue #6827</a>.</p>",
        "id": 383421535,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691616691
    },
    {
        "content": "<p>gurry <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6827#issuecomment-1675718627\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6827\">issue #6827</a>:</p>\n<blockquote>\n<p>Reproduces on Windows too.</p>\n</blockquote>",
        "id": 384157763,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691818921
    },
    {
        "content": "<p>afonso360 closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6827\">issue #6827</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">interpret</span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">simd_ineg_i64x2</span><span class=\"p\">(</span><span class=\"n\">i64x2</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">i64x2</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"nc\">i64x2</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">ineg</span><span class=\"w\"> </span><span class=\"n\">v0</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v1</span>\n<span class=\"p\">}</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">simd_ineg_i64x2</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">])</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<ul>\n<li><code>cd cranelift</code></li>\n<li><code>cargo run -- test ./the-above.clif</code></li>\n</ul>\n<h3>Expected Results</h3>\n<p>The test to pass!</p>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\"> </span><span class=\"n\">ERROR</span><span class=\"w\"> </span><span class=\"n\">cranelift_filetests</span>::<span class=\"n\">concurrent</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">FAIL</span>: <span class=\"nc\">interpret</span>\n<span class=\"n\">FAIL</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">lmao</span><span class=\"p\">.</span><span class=\"n\">clif</span>: <span class=\"nc\">interpret</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"nc\">unexpected</span><span class=\"w\"> </span><span class=\"n\">trap</span>: <span class=\"nc\">StepError</span><span class=\"p\">(</span><span class=\"n\">ValueError</span><span class=\"p\">(</span><span class=\"n\">InvalidType</span><span class=\"p\">(</span><span class=\"n\">Integer</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">types</span>::<span class=\"n\">I64X2</span><span class=\"p\">)))</span>\n<span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">tests</span>\n<span class=\"n\">Error</span>: <span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">failure</span>\n</code></pre></div>\n<p>It looks like the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/f32993002bc523083b7d7cca49179a3285c44c03/cranelift/interpreter/src/step.rs#L656\"><code>ineg</code> instruction in the interpreter</a> is implemented for scalar values but not for SIMD!</p>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: main</p>\n<p>Operating system: Linux</p>\n<p>Architecture: X86_64 (but it could be any really!)</p>\n<h3>Extra Info</h3>\n<p>I would suspect that this goes wrong in <code>DataValueExt::int(0, ctrl_ty)</code>, that operation seems to not be ready to produce SIMD values. We could change that and it might work!</p>\n<p>If anyone needs help working on this let me know!</p>\n</blockquote>",
        "id": 384739402,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692012062
    }
]