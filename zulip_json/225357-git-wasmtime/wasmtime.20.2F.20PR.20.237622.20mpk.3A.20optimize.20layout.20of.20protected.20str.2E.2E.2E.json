[
    {
        "content": "<p>abrown opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7622\">PR #7622</a> from <code>abrown:pku-optimize-again</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This is another attempt at #7603, attempting reduce the slab layout sizes of MPK-protected stripes. While experimenting with the limits of MPK-protected memory pools, @alexcrichton and I discovered that the current slab layout calculations were too conservative. This meant that the memory pool could not pack in as many memories as it should have been able: we were expecting, but not seeing, ~15x more memory slots over non-MPK memory pools.</p>\n<p>This change brings together several fixes:</p>\n<ul>\n<li>it more aggressively divides up the stripes (as in b212152)</li>\n<li>it eliminates an extra stripe (as in 8813a30)</li>\n<li>it replaces some uses of <code>checked_*</code> with <code>saturating_*</code> (as in fb22a20)</li>\n<li>it improves some documentation</li>\n<li>and, crucially, it reports back a larger value for <code>memory_and_guard_size</code></li>\n</ul>\n<p>The failures observed with #7603 when run with MPK (<code>WASMTIME_TEST_FORCE_MPK=1 cargo test</code>) were due to <code>Store::wasm_fault</code> not being able to identify which memory an OOB address belonged to. This is because the <code>MemoryPool</code> was underreporting the size of the region in which OOB accesses would fault. The correct value is provided by the new <code>SlabLayout::bytes_to_next_stripe_slot</code>: any OOB access within that larger region must fault because (1) the other stripes have different protection keys and (2) a <code>Store</code> can only use one protection key. We also use (2) to guarantee that <code>Store::wasm_fault</code> will be able to calculate the Wasm address from the raw address.</p>\n<p>This change also provides a new <code>traps</code> test that will reproduce the failures from #7603; if we observe <code>SIGABRT</code> from that test, it will be a regression.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 405228513,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701387883
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7622\">PR #7622</a>.</p>",
        "id": 405228514,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701387883
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/pchickey\">pchickey</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7622\">PR #7622</a>.</p>",
        "id": 405228515,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701387883
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7622\">PR #7622</a>.</p>",
        "id": 405228522,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701387890
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7622#issuecomment-1834872177\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7622\">PR #7622</a>:</p>\n<blockquote>\n<p>I manually checked that the following pass:</p>\n<ul>\n<li><code>cargo test --package wasmtime-runtime --features pooling-allocator</code> passes, which means the proptested invariants still hold</li>\n<li><code>WASMTIME_TEST_FORCE_MPK=1 cargo test</code> passes, which means that the subset of tests (e.g., spec tests) that we force to use MPK work on my MPK-enabled machine</li>\n</ul>\n<p>Running the example program from #7609, I see expected improvements in the number of slots:</p>\n<p><div class=\"codehilite\" data-code-language=\"Bash Session\"><pre><span></span><code><span class=\"gp\">$ </span>cargo<span class=\"w\"> </span>run<span class=\"w\"> </span>--example<span class=\"w\"> </span>mpk\n<span class=\"go\">without MPK:    14713 memory slots      86.2 TiB reserved</span>\n<span class=\"go\">with MPK:       220685 memory slots     86.2 TiB reserved</span>\n<span class=\"go\">                14.999x more slots per reserved memory</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 405229015,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701388154
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7622#pullrequestreview-1760072096\">PR review</a>.</p>",
        "id": 405389763,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701445571
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7622#issuecomment-1836441897\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7622\">PR #7622</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/actions/runs/7062145323/job/19225342835#step:18:2446\">This</a> is kind of interesting: arm64 is miscomputing the <code>WasmFault</code> address by 8.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">memory</span><span class=\"w\"> </span><span class=\"n\">fault</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">address</span><span class=\"w\"> </span><span class=\"mh\">0xdeadbee8</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">linear</span><span class=\"w\"> </span><span class=\"n\">memory</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"w\"> </span><span class=\"mh\">0x10000</span>\n</code></pre></div>\n<p>It should be <code>0xdeadbeef</code>, right?</p>\n</blockquote>",
        "id": 405399647,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701449033
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7622#issuecomment-1836545056\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7622\">PR #7622</a>:</p>\n<blockquote>\n<p>Ah that's expected that some platforms report a different faulting address rounded to some boundary. s390x will round it to a page boundary I think.</p>\n<p>There's a <a href=\"https://github.com/bytecodealliance/wasmtime/blob/338653878d89afb5fab99d2e1aa8575aac21feea/tests/all/traps.rs#L1331-L1365\">similar test to what you're doing here</a> which should be ok to copy</p>\n</blockquote>",
        "id": 405412751,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701453508
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7622\">PR #7622</a>.</p>",
        "id": 405413954,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701453931
    },
    {
        "content": "<p>abrown has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7622\">PR #7622</a>.</p>",
        "id": 405414061,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701453968
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7622#pullrequestreview-1760348925\">PR review</a>.</p>",
        "id": 405415911,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701454784
    },
    {
        "content": "<p>abrown merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7622\">PR #7622</a>.</p>",
        "id": 405421149,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701457105
    }
]