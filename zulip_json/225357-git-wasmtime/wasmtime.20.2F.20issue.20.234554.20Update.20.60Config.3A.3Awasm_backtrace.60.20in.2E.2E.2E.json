[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4554\">issue #4554</a>:</p>\n<blockquote>\n<p>With the reimplementation of backtraces in WebAssembly in #4431 there's a few updates to <code>Config</code> which I think would be good to do. For example:</p>\n<ul>\n<li><code>Config::wasm_backtrace</code> shouldn't be needed any longer in theory. That being said we may wish to leave it around at least temporarily in case anyone runs into issues with fp-based unwinding.</li>\n<li>Emission of native debug information (e.g. <code>.eh_frame</code> and <code>.xdata</code>/<code>.pdata</code>) is now separable from wasm backtraces.</li>\n<li>Registration of <code>.eh_frame</code> and native information on module load time is also separable from wasm backtraces.</li>\n</ul>\n<p>I think that we should deprecate <code>Config::wasm_backtrace</code> with a message saying \"it will always be enabled in the future, if that causes issues let us know\".  Additionally I think we can add something like <code>Config::native_unwind_info</code> which defaults to <code>true</code> and configures whether unwinding information is generated and/or registered with the OS. I think this should still be <code>true</code> by default to assist features like <code>RUST_BACKTRACE</code> or anyone else who reads that registered information, but the documentation for this config can indicate that disabling has no impact on Wasmtime itself in terms of features and functionality provided.</p>\n</blockquote>",
        "id": 291331943,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659104098
    },
    {
        "content": "<p>alexcrichton labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4554\">issue #4554</a>:</p>\n<blockquote>\n<p>With the reimplementation of backtraces in WebAssembly in #4431 there's a few updates to <code>Config</code> which I think would be good to do. For example:</p>\n<ul>\n<li><code>Config::wasm_backtrace</code> shouldn't be needed any longer in theory. That being said we may wish to leave it around at least temporarily in case anyone runs into issues with fp-based unwinding.</li>\n<li>Emission of native debug information (e.g. <code>.eh_frame</code> and <code>.xdata</code>/<code>.pdata</code>) is now separable from wasm backtraces.</li>\n<li>Registration of <code>.eh_frame</code> and native information on module load time is also separable from wasm backtraces.</li>\n</ul>\n<p>I think that we should deprecate <code>Config::wasm_backtrace</code> with a message saying \"it will always be enabled in the future, if that causes issues let us know\".  Additionally I think we can add something like <code>Config::native_unwind_info</code> which defaults to <code>true</code> and configures whether unwinding information is generated and/or registered with the OS. I think this should still be <code>true</code> by default to assist features like <code>RUST_BACKTRACE</code> or anyone else who reads that registered information, but the documentation for this config can indicate that disabling has no impact on Wasmtime itself in terms of features and functionality provided.</p>\n</blockquote>",
        "id": 291331955,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659104103
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4554#issuecomment-1199360939\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4554\">issue #4554</a>:</p>\n<blockquote>\n<p>cc @fitzgen </p>\n</blockquote>",
        "id": 291331978,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659104111
    },
    {
        "content": "<p>fitzgen closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4554\">issue #4554</a>:</p>\n<blockquote>\n<p>With the reimplementation of backtraces in WebAssembly in #4431 there's a few updates to <code>Config</code> which I think would be good to do. For example:</p>\n<ul>\n<li><code>Config::wasm_backtrace</code> shouldn't be needed any longer in theory. That being said we may wish to leave it around at least temporarily in case anyone runs into issues with fp-based unwinding.</li>\n<li>Emission of native debug information (e.g. <code>.eh_frame</code> and <code>.xdata</code>/<code>.pdata</code>) is now separable from wasm backtraces.</li>\n<li>Registration of <code>.eh_frame</code> and native information on module load time is also separable from wasm backtraces.</li>\n</ul>\n<p>I think that we should deprecate <code>Config::wasm_backtrace</code> with a message saying \"it will always be enabled in the future, if that causes issues let us know\".  Additionally I think we can add something like <code>Config::native_unwind_info</code> which defaults to <code>true</code> and configures whether unwinding information is generated and/or registered with the OS. I think this should still be <code>true</code> by default to assist features like <code>RUST_BACKTRACE</code> or anyone else who reads that registered information, but the documentation for this config can indicate that disabling has no impact on Wasmtime itself in terms of features and functionality provided.</p>\n</blockquote>",
        "id": 292495187,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659992093
    }
]