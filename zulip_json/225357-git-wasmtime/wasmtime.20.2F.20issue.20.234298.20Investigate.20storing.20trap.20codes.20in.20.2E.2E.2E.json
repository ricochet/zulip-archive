[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4298\">issue #4298</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/issues/3340\">https://github.com/bytecodealliance/wasmtime/issues/3340</a>, specifically this:</p>\n<blockquote>\n<p>Note that UDF has an immediate parameter, which could be used to address the second point to an extent, e.g. UDF #0xBAD could signify Cranelift-generated code.</p>\n</blockquote>\n<p>got me wondering if we can store the <code>.wasmtime.traps</code> section directly in the text section instead of in a separate section of the executable. As a separate section this is somewhat hefty and would probably be much smaller if we simply stored the trap code in the instruction itself (like <code>#0xBAD</code> above). </p>\n<p>I'm not sure if this is possible on all platforms though or whether it's even going to net us all that many savings. Not having to manage a side table of traps though would indeed simplify a number of pieces related to trap handling in Wasmtime.</p>\n</blockquote>",
        "id": 287106071,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1655928389
    },
    {
        "content": "<p>alexcrichton labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4298\">issue #4298</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/issues/3340\">https://github.com/bytecodealliance/wasmtime/issues/3340</a>, specifically this:</p>\n<blockquote>\n<p>Note that UDF has an immediate parameter, which could be used to address the second point to an extent, e.g. UDF #0xBAD could signify Cranelift-generated code.</p>\n</blockquote>\n<p>got me wondering if we can store the <code>.wasmtime.traps</code> section directly in the text section instead of in a separate section of the executable. As a separate section this is somewhat hefty and would probably be much smaller if we simply stored the trap code in the instruction itself (like <code>#0xBAD</code> above). </p>\n<p>I'm not sure if this is possible on all platforms though or whether it's even going to net us all that many savings. Not having to manage a side table of traps though would indeed simplify a number of pieces related to trap handling in Wasmtime.</p>\n</blockquote>",
        "id": 287106074,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1655928390
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4298#issuecomment-1232489297\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4298\">issue #4298</a>:</p>\n<blockquote>\n<p>I think it is fine to save trap_code after <code>udf</code> on riscv.<br>\n</p>\n</blockquote>",
        "id": 296259408,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661924701
    },
    {
        "content": "<p>yuyang-ok deleted a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4298#issuecomment-1232489297\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4298\">issue #4298</a>:</p>\n<blockquote>\n<p>I think it is fine to save trap_code after <code>udf</code> on riscv.<br>\n</p>\n</blockquote>",
        "id": 296260666,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661925574
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4298#issuecomment-1232568066\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4298\">issue #4298</a>:</p>\n<blockquote>\n<p>I think a explicit <code>udf ...</code> can store trap code in <code>.text</code>, but a <code>load </code> can cause <code>HeapOutOFBounds</code> trap and there is no place to save trap_code.<br>\n</p>\n</blockquote>",
        "id": 296269968,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661931041
    },
    {
        "content": "<p>yuyang-ok edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4298#issuecomment-1232568066\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4298\">issue #4298</a>:</p>\n<blockquote>\n<p>I think a explicit <code>udf ...</code> can store trap code in <code>.text</code>, but a <code>load </code> may cause <code>HeapOutOFBounds</code> trap and there is no place to save trap_code.<br>\n</p>\n</blockquote>",
        "id": 296273701,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661932659
    },
    {
        "content": "<p>yuyang-ok edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4298#issuecomment-1232568066\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4298\">issue #4298</a>:</p>\n<blockquote>\n<p>I think a explicit <code>udf ...</code> can store trap code in <code>.text</code>, but a <code>load </code> may cause <code>HeapOutOFBounds</code> trap and there is no place to save trap_code.<br>\nI mean <code>udf</code> always cause trap can store trap_code after <code>udf</code>.<br>\n<code>load</code> may trap maybe have to emit a <code>jump</code> jumpover trap_code , this is a little wired.</p>\n</blockquote>",
        "id": 296276317,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661933690
    }
]