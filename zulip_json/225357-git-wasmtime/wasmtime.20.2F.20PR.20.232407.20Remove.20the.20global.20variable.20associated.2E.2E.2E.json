[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2407\">PR #2407</a> from <code>no-frame-info-global</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit removes the global variable associated with wasm traps which<br>\nstores frame information. The only purpose of this global is to help<br>\nsymbolicate <code>Trap</code>s created since we support creating a <code>Trap</code> without a<br>\n<code>Store</code>. The global, however, is only used for wasm frames on the stack,<br>\nand when wasm frames are on the stack we know that our thread local for<br>\n\"what was the last context\" is set and configured.</p>\n<p>The change here is to hijack this thread-local some more to effectively<br>\nstore the <code>Store</code> inside of it. All frame information is then moved<br>\ndirectly into <code>Store</code> and no longer lives off on the side in a global.<br>\nAdditionally support for registering/unregistering modules is now<br>\nsimplified because once a module is registered with a store it can never<br>\nbe unregistered.</p>\n<p>This has one slight functional change where if there are two instances<br>\nof <code>Store</code> interleaving calls to wasm code on the stack we'll only be<br>\nable to symbolicate one of them instead of both. That's arguably also a<br>\nfeature however because this is sort of a way to leak information across<br>\nstores right now.</p>\n<p>Otherwise, though, this isn't intended to change any existing logic, but<br>\ninstead keep everything working as-is.</p>\n</blockquote>",
        "id": 216534496,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605217971
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2407\">PR #2407</a> from <code>no-frame-info-global</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit removes the global variable associated with wasm traps which<br>\nstores frame information. The only purpose of this global is to help<br>\nsymbolicate <code>Trap</code>s created since we support creating a <code>Trap</code> without a<br>\n<code>Store</code>. The global, however, is only used for wasm frames on the stack,<br>\nand when wasm frames are on the stack we know that our thread local for<br>\n\"what was the last context\" is set and configured.</p>\n<p>The change here is to hijack this thread-local some more to effectively<br>\nstore the <code>Store</code> inside of it. All frame information is then moved<br>\ndirectly into <code>Store</code> and no longer lives off on the side in a global.<br>\nAdditionally support for registering/unregistering modules is now<br>\nsimplified because once a module is registered with a store it can never<br>\nbe unregistered.</p>\n<p>This has one slight functional change where if there are two instances<br>\nof <code>Store</code> interleaving calls to wasm code on the stack we'll only be<br>\nable to symbolicate one of them instead of both. That's arguably also a<br>\nfeature however because this is sort of a way to leak information across<br>\nstores right now.</p>\n<p>Otherwise, though, this isn't intended to change any existing logic, but<br>\ninstead keep everything working as-is.</p>\n</blockquote>",
        "id": 216536704,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605219099
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2407\">PR #2407</a> from <code>no-frame-info-global</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit removes the global variable associated with wasm traps which<br>\nstores frame information. The only purpose of this global is to help<br>\nsymbolicate <code>Trap</code>s created since we support creating a <code>Trap</code> without a<br>\n<code>Store</code>. The global, however, is only used for wasm frames on the stack,<br>\nand when wasm frames are on the stack we know that our thread local for<br>\n\"what was the last context\" is set and configured.</p>\n<p>The change here is to hijack this thread-local some more to effectively<br>\nstore the <code>Store</code> inside of it. All frame information is then moved<br>\ndirectly into <code>Store</code> and no longer lives off on the side in a global.<br>\nAdditionally support for registering/unregistering modules is now<br>\nsimplified because once a module is registered with a store it can never<br>\nbe unregistered.</p>\n<p>This has one slight functional change where if there are two instances<br>\nof <code>Store</code> interleaving calls to wasm code on the stack we'll only be<br>\nable to symbolicate one of them instead of both. That's arguably also a<br>\nfeature however because this is sort of a way to leak information across<br>\nstores right now.</p>\n<p>Otherwise, though, this isn't intended to change any existing logic, but<br>\ninstead keep everything working as-is.</p>\n</blockquote>",
        "id": 216539003,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605220389
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2407\">PR #2407</a>.</p>",
        "id": 216952772,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605573306
    }
]