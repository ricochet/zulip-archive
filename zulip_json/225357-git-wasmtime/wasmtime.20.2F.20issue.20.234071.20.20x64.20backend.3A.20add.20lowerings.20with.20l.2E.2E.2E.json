[
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4071#issuecomment-1109204323\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4071\">issue #4071</a>:</p>\n<blockquote>\n<p>I plan to measure perf impacts using Sightglass tomorrow.</p>\n</blockquote>",
        "id": 280151386,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650936801
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4071#issuecomment-1109246080\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4071\">issue #4071</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @cfallin, @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\", \"cranelift:area:aarch64\", \"cranelift:area:machinst\", \"cranelift:area:x64\", \"isle\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>cfallin: isle</li>\n<li>fitzgen: isle</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 280155834,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650941561
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4071#issuecomment-1110027716\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4071\">issue #4071</a>:</p>\n<blockquote>\n<p>Sightglass results:</p>\n<ul>\n<li>compilation: <code>spidermonkey</code> compiles 1-5% faster (99% conf); no statistically-significant delta on other benchmarks</li>\n<li>runtime: <code>meshoptimizer</code> runs 0-2% faster (99% conf); no statistically-significant delta on other benchmarks</li>\n</ul>\n<p>&lt;details&gt;<br>\n&lt;summary&gt;Raw output&lt;/summary&gt;<br>\ncompilation :: nanoseconds :: benchmarks-next/blake3-scalar/benchmark.wasm</p>\n<p>No difference in performance.</p>\n<p>[96952328 108855882.00 153663990] <a href=\"http://new.so\">new.so</a><br>\n  [97420583 126474185.60 236630061] <a href=\"http://old.so\">old.so</a></p>\n<p>compilation :: cycles :: benchmarks-next/blake3-scalar/benchmark.wasm</p>\n<p>No difference in performance.</p>\n<p>[290866158 326577946.00 461006510] <a href=\"http://new.so\">new.so</a><br>\n  [292270968 379434523.20 709912570] <a href=\"http://old.so\">old.so</a></p>\n<p>execution :: cycles :: benchmarks-next/blake3-scalar/benchmark.wasm</p>\n<p>No difference in performance.</p>\n<p>[329790 386819.00 492639] <a href=\"http://new.so\">new.so</a><br>\n  [359659 432876.40 542195] <a href=\"http://old.so\">old.so</a></p>\n<p>execution :: nanoseconds :: benchmarks-next/blake3-scalar/benchmark.wasm</p>\n<p>No difference in performance.</p>\n<p>[109926 128935.20 164207] <a href=\"http://new.so\">new.so</a><br>\n  [119882 144286.80 180725] <a href=\"http://old.so\">old.so</a></p>\n<hr>\n<p>compilation :: nanoseconds :: benchmarks-next/blake3-simd/benchmark.wasm</p>\n<p>No difference in performance.</p>\n<p>[25885394 40076919.40 125071043] <a href=\"http://new.so\">new.so</a><br>\n  [26219789 39964380.85 129711310] <a href=\"http://old.so\">old.so</a></p>\n<p>compilation :: cycles :: benchmarks-next/blake3-simd/benchmark.wasm</p>\n<p>No difference in performance.</p>\n<p>[77658329 120234399.75 375223492] <a href=\"http://new.so\">new.so</a><br>\n  [78661871 119896890.20 389146306] <a href=\"http://old.so\">old.so</a></p>\n<p>execution :: cycles :: benchmarks-next/blake3-simd/benchmark.wasm</p>\n<p>No difference in performance.</p>\n<p>[359827 511799.55 718133] <a href=\"http://new.so\">new.so</a><br>\n  [367750 552108.65 931043] <a href=\"http://old.so\">old.so</a></p>\n<p>execution :: nanoseconds :: benchmarks-next/blake3-simd/benchmark.wasm</p>\n<p>No difference in performance.</p>\n<p>[119938 170594.25 239371] <a href=\"http://new.so\">new.so</a><br>\n  [122579 184029.90 310338] <a href=\"http://old.so\">old.so</a></p>\n<hr>\n<p>compilation :: nanoseconds :: benchmarks-next/bz2/benchmark.wasm</p>\n<p>No difference in performance.</p>\n<p>[118172745 129572819.80 169109539] <a href=\"http://new.so\">new.so</a><br>\n  [115979079 148610225.20 264135389] <a href=\"http://old.so\">old.so</a></p>\n<p>compilation :: cycles :: benchmarks-next/bz2/benchmark.wasm</p>\n<p>No difference in performance.</p>\n<p>[354528901 388730155.20 507343881] <a href=\"http://new.so\">new.so</a><br>\n  [347947706 445844089.40 792430008] <a href=\"http://old.so\">old.so</a></p>\n<p>execution :: nanoseconds :: benchmarks-next/bz2/benchmark.wasm</p>\n<p>No difference in performance.</p>\n<p>[27040663 36381782.80 43965436] <a href=\"http://new.so\">new.so</a><br>\n  [27063345 34608139.00 47209747] <a href=\"http://old.so\">old.so</a></p>\n<p>execution :: cycles :: benchmarks-next/bz2/benchmark.wasm</p>\n<p>No difference in performance.</p>\n<p>[81124432 109148633.40 131900278] <a href=\"http://new.so\">new.so</a><br>\n  [81192478 103827542.20 141633504] <a href=\"http://old.so\">old.so</a></p>\n<hr>\n<p>compilation :: cycles :: benchmarks-next/meshoptimizer/benchmark.wasm</p>\n<p>No difference in performance.</p>\n<p>[1282376053 1326468067.00 1451645218] <a href=\"http://new.so\">new.so</a><br>\n  [1272432714 1357904857.20 1654942504] <a href=\"http://old.so\">old.so</a></p>\n<p>compilation :: nanoseconds :: benchmarks-next/meshoptimizer/benchmark.wasm</p>\n<p>No difference in performance.</p>\n<p>[427446460 442143377.80 483867902] <a href=\"http://new.so\">new.so</a><br>\n  [424132108 452622008.00 551631726] <a href=\"http://old.so\">old.so</a></p>\n<p>execution :: cycles :: benchmarks-next/meshoptimizer/benchmark.wasm</p>\n<p>Δ = 147589246.80 ± 98683346.93 (confidence = 99%)</p>\n<p><a href=\"http://new.so\">new.so</a> is 1.00x to 1.02x faster than <a href=\"http://old.so\">old.so</a>!<br>\n<a href=\"http://old.so\">old.so</a> is 0.98x to 1.00x faster than <a href=\"http://new.so\">new.so</a>!</p>\n<p>[15953718734 15986742228.20 16019689935] <a href=\"http://new.so\">new.so</a><br>\n  [16083185443 16134331475.00 16216644357] <a href=\"http://old.so\">old.so</a></p>\n<p>execution :: nanoseconds :: benchmarks-next/meshoptimizer/benchmark.wasm</p>\n<p>Δ = 49195008.40 ± 32893508.70 (confidence = 99%)</p>\n<p><a href=\"http://new.so\">new.so</a> is 1.00x to 1.02x faster than <a href=\"http://old.so\">old.so</a>!<br>\n<a href=\"http://old.so\">old.so</a> is 0.98x to 1.00x faster than <a href=\"http://new.so\">new.so</a>!</p>\n<p>[5317754171 5328761687.40 5339743942] <a href=\"http://new.so\">new.so</a><br>\n  [5360908506 5377956695.80 5405393539] <a href=\"http://old.so\">old.so</a></p>\n<hr>\n<p>compilation :: cycles :: benchmarks-next/pulldown-cmark/benchmark.wasm</p>\n<p>No difference in performance.</p>\n<p>[735805278 782317116.80 900108996] <a href=\"http://new.so\">new.so</a><br>\n  [731913754 837217882.00 1190772847] <a href=\"http://old.so\">old.so</a></p>\n<p>compilation :: nanoseconds :: benchmarks-next/pulldown-cmark/benchmark.wasm</p>\n<p>No difference in performance.</p>\n<p>[245261607 260765122.00 300027990] <a href=\"http://new.so\">new.so</a><br>\n  [243964468 279064868.20 396913247] <a href=\"http://old.so\">old.so</a></p>\n<p>execution :: cycles :: benchmarks-next/pulldown-cmark/benchmark.wasm</p>\n<p>No difference in performance.</p>\n<p>[6447417 15244423.00 23764193] <a href=\"http://new.so\">new.so</a><br>\n  [6230053 14582477.00 19118086] <a href=\"http://old.so\">old.so</a></p>\n<p>execution :: nanoseconds :: benchmarks-next/pulldown-cmark/benchmark.wasm</p>\n<p>No difference in performance.</p>\n<p>[2149079 5081332.60 7921177] <a href=\"http://new.so\">new.so</a><br>\n  [2076626 4860690.20 6372518] <a href=\"http://old.so\">old.so</a></p>\n<hr>\n<p>compilation :: nanoseconds :: benchmarks-next/spidermonkey/benchmark.wasm</p>\n<p>Δ = 162675183.40 ± 113727657.28 (confidence = 99%)</p>\n<p><a href=\"http://new.so\">new.so</a> is 1.01x to 1.05x faster than <a href=\"http://old.so\">old.so</a>!<br>\n<a href=\"http://old.so\">old.so</a> is 0.95x to 0.99x faster than <a href=\"http://new.so\">new.so</a>!</p>\n<p>[5118140606 5134329955.80 5158376785] <a href=\"http://new.so\">new.so</a><br>\n  [5253448682 5297005139.20 5386482615] <a href=\"http://old.so\">old.so</a></p>\n<p>compilation :: cycles :: benchmarks-next/spidermonkey/benchmark.wasm</p>\n<p>Δ = 488040638.00 ± 341193520.58 (confidence = 99%)</p>\n<p><a href=\"http://new.so\">new.so</a> is 1.01x to 1.05x faster than <a href=\"http://old.so\">old.so</a>!<br>\n<a href=\"http://old.so\">old.so</a> is 0.95x to 0.99x faster than <a href=\"http://new.so\">new.so</a>!</p>\n<p>[15354896528 15403466078.40 15475608797] <a href=\"http://new.so\">new.so</a><br>\n  [15760833306 15891506716.40 16159947443] <a href=\"http://old.so\">old.so</a></p>\n<p>execution :: cycles :: benchmarks-next/spidermonkey/benchmark.wasm</p>\n<p>No difference in performance.</p>\n<p>[9543126199 9582239412.20 9626118333] <a href=\"http://new.so\">new.so</a><br>\n  [9448596655 9495030913.20 9584393744] <a href=\"http://old.so\">old.so</a></p>\n<p>execution :: nanoseconds :: benchmarks-next/spidermonkey/benchmark.wasm</p>\n<p>No difference in performance.</p>\n<p>[3180943722 3193981056.20 3208606911] <a href=\"http://new.so\">new.so</a><br>\n  [3149434848 3164912455.40 3194699145] <a href=\"http://old.so\">old.so</a><br>\n&lt;/details&gt;</p>\n<p>I suspect that with alias analysis and redundant-load elimination, this might get a little better still: in some cases the same heap base pointer is loaded multiple times, and these lowering patterns don't handle that (the second pointer is a new address, and the intervening load is a side-effect over which we can't move the first load).</p>\n</blockquote>",
        "id": 280237805,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650991810
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4071#issuecomment-1110028005\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4071\">issue #4071</a>:</p>\n<blockquote>\n<p>Out of curiosity, have you verified that this properly fuses our <code>externref</code> write barriers?</p>\n</blockquote>",
        "id": 280237832,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650991830
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4071#issuecomment-1110038204\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4071\">issue #4071</a>:</p>\n<blockquote>\n<blockquote>\n<p>Out of curiosity, have you verified that this properly fuses our <code>externref</code> write barriers?</p>\n</blockquote>\n<p>I just took a look, and it seems that this (it looks like the inc/dec is <a href=\"https://github.com/bytecodealliance/wasmtime/blob/164bfeaf7e0bbe60c63e3c605266c8bc5edcfd60/crates/cranelift/src/func_environ.rs#L316\">here</a>?) is actually an atomic operation, so this PR does not handle it. There are also direct-on-memory forms for atomic add/sub (<code>lock add [mem], reg/imm</code>) which we could do if this becomes important for performance.</p>\n</blockquote>",
        "id": 280239399,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650992481
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4071#issuecomment-1110039466\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4071\">issue #4071</a>:</p>\n<blockquote>\n<p>Ah that's right, I forgot that our ref counting became atomic.</p>\n</blockquote>",
        "id": 280239553,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650992555
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4071#issuecomment-1110263110\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4071\">issue #4071</a>:</p>\n<blockquote>\n<p>Thanks! Added a runtest as well.</p>\n</blockquote>",
        "id": 280274265,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1651008232
    }
]