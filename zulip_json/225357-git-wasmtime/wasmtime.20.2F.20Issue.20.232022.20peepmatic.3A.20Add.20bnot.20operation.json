[
    {
        "content": "<p>MaxGraey <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2022#issuecomment-659363655\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2022\">Issue #2022</a>:</p>\n<blockquote>\n<p>Alright. I removed rule but keep <code>bnot</code> instruction code for peepmatic</p>\n</blockquote>",
        "id": 204073317,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594900683
    },
    {
        "content": "<p>MaxGraey <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2022#issuecomment-659616075\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2022\">Issue #2022</a>:</p>\n<blockquote>\n<blockquote>\n<p>the new backend(s) that are under development, could easily enough match that in their instruction selectors and directly emit a not insn as appropriate. There's no requirement for any more heavyweight </p>\n</blockquote>\n<p>btw one potential goal of early tranformation <code>x ^ -1</code> to <code>~x</code> might be canonization for further iterations / post-optimizations. Although I probably didn't go deep into the details of the cranelift architecture and if your pipeline uses only single passes for <code>pre-opt-&gt; post-opt -&gt; target codegen</code> chain this no big deal</p>\n</blockquote>",
        "id": 204129768,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594926984
    },
    {
        "content": "<p>MaxGraey edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2022#issuecomment-659616075\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2022\">Issue #2022</a>:</p>\n<blockquote>\n<blockquote>\n<p>the new backend(s) that are under development, could easily enough match that in their instruction selectors and directly emit a not insn as appropriate. There's no requirement for any more heavyweight </p>\n</blockquote>\n<p>btw one potential goal of early tranformation <code>x ^ -1</code> to <code>~x</code> might be canonization for further iterations of peephole optimizations / post-optimizations. Although I probably didn't go deep into the details of the cranelift architecture and if your pipeline uses only single passes for <code>pre-opt-&gt; post-opt -&gt; target codegen</code> chain this no big deal</p>\n</blockquote>",
        "id": 204132178,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594928112
    }
]