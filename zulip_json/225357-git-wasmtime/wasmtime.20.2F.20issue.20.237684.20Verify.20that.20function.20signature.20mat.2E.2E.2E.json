[
    {
        "content": "<p>PROMETHIA-27 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7684\">issue #7684</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>Add a check that a function signature matches its declared signature. For example in the following code:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">main_sig</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"p\">.</span><span class=\"n\">make_signature</span><span class=\"p\">();</span>\n<span class=\"n\">main_sig</span><span class=\"p\">.</span><span class=\"n\">returns</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"fm\">vec!</span><span class=\"p\">[</span><span class=\"n\">AbiParam</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">types</span>::<span class=\"n\">I32</span><span class=\"p\">)];</span>\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">main_id</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">module</span>\n<span class=\"w\">    </span><span class=\"p\">.</span><span class=\"n\">declare_function</span><span class=\"p\">(</span><span class=\"s\">\"main\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift_module</span>::<span class=\"n\">Linkage</span>::<span class=\"n\">Export</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">main_sig</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">.</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Function</span>::<span class=\"n\">new</span><span class=\"p\">();</span>\n<span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">signature</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">main_sig</span><span class=\"p\">;</span>\n</code></pre></div>\n<p>It is very easy to forget to add the <code>ctx.func.signature = main_sig;</code> line which can cause confusing verifier errors such as <code>arguments of return must match function signature</code>, which actively makes it harder to identify the error.</p>\n<h4>Benefit</h4>\n<p>This makes it easier to learn to use cranelift and easier to debug a class of errors.</p>\n<h4>Implementation</h4>\n<p>I think this would likely end up being put somewhere <em>other</em> than the verifier, as I believe the verifier likely doesn't have sufficient information to check this. Maybe in the module API somewhere?</p>\n<h4>Alternatives</h4>\n<p>It also seems viable to change the API somehow such that a signature is only required once per function. Perhaps something like this:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">main_sig</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"p\">.</span><span class=\"n\">make_signature</span><span class=\"p\">();</span>\n<span class=\"n\">main_sig</span><span class=\"p\">.</span><span class=\"n\">returns</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"fm\">vec!</span><span class=\"p\">[</span><span class=\"n\">AbiParam</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">types</span>::<span class=\"n\">I32</span><span class=\"p\">)];</span>\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">main_id</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">module</span>\n<span class=\"w\">    </span><span class=\"p\">.</span><span class=\"n\">declare_function</span><span class=\"p\">(</span><span class=\"s\">\"main\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift_module</span>::<span class=\"n\">Linkage</span>::<span class=\"n\">Export</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">main_sig</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">.</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n</code></pre></div>\n<p>Having <code>.declare_function()</code> construct and return a <code>Function</code> with the given signature.</p>\n</blockquote>",
        "id": 407818500,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702505055
    }
]