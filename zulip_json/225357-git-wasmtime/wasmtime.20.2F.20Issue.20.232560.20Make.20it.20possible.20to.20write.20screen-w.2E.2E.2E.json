[
    {
        "content": "<p>elimisteve opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2560\">Issue #2560</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>If it is not possible to do so already, please make it possible for us to write user-facing graphical software that can adapt to the app's width. That is, it must be possible for WASM apps to be \"responsive\" in the web app sense!</p>\n<h4>Benefit</h4>\n<p>This would make it practical to write web apps in a statically typed, non-JavaScript-esque programming language, thus making the world more stable, users more happy, and WASM much more widespread.</p>\n<h4>Implementation</h4>\n<p>I don't know how hard it is to safely place some sort of reference representing the current app's width (in pixels) into a WASM sandbox, but having some mechanism for detecting changes to this value probably doesn't make it that easy to pull this off. I still think it's really important to soon so that WASM is way more practical, both in the browser or outside of it!</p>\n<h4>Alternatives</h4>\n<p>N/A</p>\n</blockquote>",
        "id": 222080532,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610117479
    },
    {
        "content": "<p>elimisteve edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2560\">Issue #2560</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>If it is not possible to do so already, please make it possible for us to write user-facing graphical software that can adapt to the app interface's width. That is, it should be possible for WASM apps to be \"responsive\" (in the web app sense)!</p>\n<h4>Benefit</h4>\n<p>This would make it practical to write web apps in a statically typed, non-JavaScript-esque programming language, thus making the world more stable, users more happy, and WASM much more widespread.</p>\n<h4>Implementation</h4>\n<p>I don't know how hard it is to safely place some sort of reference representing the current app's width (in pixels) into a WASM sandbox, but having some mechanism for detecting changes to this value probably doesn't make it that easy to pull this off. I still think it's really important to soon so that WASM is way more practical, both in the browser or outside of it!</p>\n<h4>Alternatives</h4>\n<p>N/A</p>\n</blockquote>",
        "id": 222080592,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610117513
    },
    {
        "content": "<p>sunfishcode <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2560#issuecomment-756807751\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2560\">Issue #2560</a>:</p>\n<blockquote>\n<p>In the browser, this is addressed by <a href=\"https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Responsive_Design\">existing Web APIs</a>.</p>\n<p>Outside the browser, there are not yet any standard graphical APIs, or even any projects to create any yet. I expect there will be in the future, as there are people interested in such projects, and I agree that when this happens, it would be good for these projects to take responsive design into consideration. I encourage you to file issues in those projects when they emerge :slightly_smiling_face:.</p>\n</blockquote>",
        "id": 222083273,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610118834
    },
    {
        "content": "<p>sunfishcode closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2560\">Issue #2560</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>If it is not possible to do so already, please make it possible for us to write user-facing graphical software that can adapt to the app interface's width. That is, it should be possible for WASM apps to be \"responsive\" (in the web app sense)!</p>\n<h4>Benefit</h4>\n<p>This would make it practical to write web apps in a statically typed, non-JavaScript-esque programming language, thus making the world more stable, users more happy, and WASM much more widespread.</p>\n<h4>Implementation</h4>\n<p>I don't know how hard it is to safely place some sort of reference representing the current app's width (in pixels) into a WASM sandbox, but having some mechanism for detecting changes to this value probably doesn't make it that easy to pull this off. I still think it's really important to soon so that WASM is way more practical, both in the browser or outside of it!</p>\n<h4>Alternatives</h4>\n<p>N/A</p>\n</blockquote>",
        "id": 222083274,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610118834
    },
    {
        "content": "<p>elimisteve <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2560#issuecomment-756814107\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2560\">Issue #2560</a>:</p>\n<blockquote>\n<blockquote>\n<p>In the browser, this is addressed by existing Web APIs.</p>\n</blockquote>\n<p>Sure, if not using WASM and instead using JS and CSS, but can a WASM UI element in the browser be responsive now, including buttons? The WASM UI doesn't need to have a hardcoded width?</p>\n<p>Thanks!</p>\n</blockquote>",
        "id": 222084679,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610119477
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2560#issuecomment-756841196\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2560\">Issue #2560</a>:</p>\n<blockquote>\n<p>WASM has no relation at all to UI. WASM programs need to be embedded within a different program. This program can then choose what API's to make available to the WASM program. When you are using WASM in the browser, you need to write a bit of javascript to run the WASM. This javascript code can choose to export specific Web API's to the WASM program or it can export it's own API. If the javascript doesn't export either, the WASM is fundamentally incapable of showing any UI. In fact all a WASM program can do when no API's are exported to it it doing calculations. It can't do anything else in that case.</p>\n</blockquote>",
        "id": 222090378,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610122143
    },
    {
        "content": "<p>elimisteve <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2560#issuecomment-756855393\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2560\">Issue #2560</a>:</p>\n<blockquote>\n<p>Thank you for explaining, @bjorn3 <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> </p>\n</blockquote>",
        "id": 222093320,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610123492
    },
    {
        "content": "<p>elimisteve <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2560#issuecomment-756858137\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2560\">Issue #2560</a>:</p>\n<blockquote>\n<p>(Thank you @sunfishcode, too. And yay Fastly for having more foresight than a certain other org...)</p>\n</blockquote>",
        "id": 222093912,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610123772
    }
]