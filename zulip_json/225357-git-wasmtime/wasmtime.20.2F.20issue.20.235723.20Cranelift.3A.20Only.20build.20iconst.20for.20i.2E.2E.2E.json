[
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5723#issuecomment-1419756472\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5723\">issue #5723</a>:</p>\n<blockquote>\n<p>I think this should be back-ported for the upcoming release, once we've validated this change, even though we haven't received any bug reports about these rules. I don't think it needs to be backported further since this will be the first release with e-graph optimization on by default.</p>\n</blockquote>",
        "id": 326238517,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675717626
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5723#issuecomment-1419848467\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5723\">issue #5723</a>:</p>\n<blockquote>\n<p>If we're generalizing <code>iconst</code>, I'd be tempted to try for a generic <code>const</code> that works with floats and vectors too.</p>\n</blockquote>",
        "id": 326247929,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675721503
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5723#issuecomment-1419872821\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5723\">issue #5723</a>:</p>\n<blockquote>\n<p>Perhaps, yeah. I just went to remind myself how <code>fconst</code> works and it turns out that we actually split to <code>fconst32</code> and <code>fconst64</code> <em>opcodes</em>, so the situation is even less polymorphic than I had thought. Cleanup would be nice!</p>\n</blockquote>",
        "id": 326250539,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675722598
    }
]