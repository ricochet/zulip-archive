[
    {
        "content": "<p>jameysharp opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8837\">PR #8837</a> from <code>jameysharp:consume-fuel-on-return</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>As far as I can tell, when functions use a <code>return</code> instruction rather than falling off the end, fuel was not being tracked correctly. The <code>fuel_function_exit</code> method was only called from<br>\n<code>after_translate_function</code>, which is only called once all the instructions in the function have been translated, not at each return.</p>\n<p>In this commit I switched to calling <code>fuel_function_exit</code> from <code>handle_before_return</code> instead, alongside some of the <code>wmemcheck</code> hooks. That should ensure that it happens on every function exit, regardless of what form that exit takes.</p>\n<p>I think <code>after_translate_function</code> is fundamentally difficult to use correctly, and it wasn't used for anything else, so I've also removed it in this commit. And I did a minor cleanup at the site of one of the calls to <code>handle_before_return</code> while I was looking at it.</p>\n</blockquote>",
        "id": 445483234,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718756249
    },
    {
        "content": "<p><strong>jameysharp</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8837\">PR #8837</a>.</p>",
        "id": 445483235,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718756249
    },
    {
        "content": "<p><strong>jameysharp</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8837\">PR #8837</a>.</p>",
        "id": 445483236,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718756250
    },
    {
        "content": "<p><strong>jameysharp</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8837\">PR #8837</a>.</p>",
        "id": 445483237,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718756250
    },
    {
        "content": "<p><strong>jameysharp</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8837\">PR #8837</a>.</p>",
        "id": 445483416,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718756383
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8837#issuecomment-2177292001\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8837\">PR #8837</a>:</p>\n<blockquote>\n<p>I think Nick's out for a few days so I'm handing this off to you instead, Alex.</p>\n</blockquote>",
        "id": 445483482,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718756427
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8837#pullrequestreview-2126764872\">PR review</a>:</p>\n<blockquote>\n<p>Good catch! Mind adding a test or two <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/tests/all/fuel.wast\">here as well</a>?</p>\n</blockquote>",
        "id": 445483732,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718756652
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8837#issuecomment-2177754318\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8837\">PR #8837</a>:</p>\n<blockquote>\n<p>Thanks for pointing me to those tests because I immediately got usefully confused about why the tests passed both before and after my changes.</p>\n<p>It turns out that <code>fuel_save_from_var</code> is called by way of <code>before_translate_operator</code> for any of <code>unreachable</code>, <code>return</code>, or various kinds of calls. So doing it again in <code>handle_before_return</code> is unnecessary—and calling <code>fuel_save_from_var</code> multiple times is harmless but a waste of time—except when the return is an implicit fall-through off the end of the function. And that case is currently correctly handled by <code>after_translate_function</code>.</p>\n<p>So the current implementation is not actually buggy!</p>\n<p>But I still think the <code>after_translate_function</code> interface is sketchy. So I want to think more about what interface actually makes sense for instrumenting wasm translation like this, maybe drawing inspiration from <a href=\"https://github.com/titzer/wizard-engine/blob/6e52d99b8d326d42c1ed1050c0e509a2b5741da0/src/monitors/WhammMonitor.v3#L8-L29\">whamm</a>. Perhaps for instrumentation purposes we should behave as if there's a <code>return</code> instruction after the end of every function…</p>\n</blockquote>",
        "id": 445508611,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718773669
    }
]