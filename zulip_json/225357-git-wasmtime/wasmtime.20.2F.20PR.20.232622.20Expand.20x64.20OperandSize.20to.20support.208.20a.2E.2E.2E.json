[
    {
        "content": "<p>kaseyc opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2622\">PR #2622</a> from <code>operand</code> to <code>main</code>:</p>\n<blockquote>\n<p>This is in preparation for refactoring all x64::Inst arms to use OperandSize.</p>\n<p>Current uses of OperandSize fall into two categories:</p>\n<p>1. XMM operations which require 32/64 bit operands<br>\n  2. Immediates which only care about 64-bit or not.</p>\n<p>Adds assertions to existing Inst constructors to check that they are passed valid sizes.<br>\nThis change also removes the implicit widening of 1 and 2 byte values to 4 bytes. from_bytes() is only used by category 2, so removing this behavior will not change any visible behavior.</p>\n<p>Overall this change should be a no-op.<br>\n</p>\n</blockquote>",
        "id": 224447469,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1611912742
    },
    {
        "content": "<p>kaseyc updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2622\">PR #2622</a> from <code>operand</code> to <code>main</code>:</p>\n<blockquote>\n<p>This is in preparation for refactoring all x64::Inst arms to use OperandSize.</p>\n<p>Current uses of OperandSize fall into two categories:</p>\n<p>1. XMM operations which require 32/64 bit operands<br>\n  2. Immediates which only care about 64-bit or not.</p>\n<p>Adds assertions to existing Inst constructors to check that they are passed valid sizes.<br>\nThis change also removes the implicit widening of 1 and 2 byte values to 4 bytes. from_bytes() is only used by category 2, so removing this behavior will not change any visible behavior.</p>\n<p>Overall this change should be a no-op.<br>\n</p>\n</blockquote>",
        "id": 224618199,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612060911
    },
    {
        "content": "<p>kaseyc updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2622\">PR #2622</a> from <code>operand</code> to <code>main</code>:</p>\n<blockquote>\n<p>This is in preparation for refactoring all x64::Inst arms to use OperandSize.</p>\n<p>Current uses of OperandSize fall into two categories:</p>\n<p>1. XMM operations which require 32/64 bit operands<br>\n  2. Immediates which only care about 64-bit or not.</p>\n<p>Adds assertions to existing Inst constructors to check that they are passed valid sizes.<br>\nThis change also removes the implicit widening of 1 and 2 byte values to 4 bytes. from_bytes() is only used by category 2, so removing this behavior will not change any visible behavior.</p>\n<p>Overall this change should be a no-op.<br>\n</p>\n</blockquote>",
        "id": 224631444,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612081304
    },
    {
        "content": "<p>kaseyc updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2622\">PR #2622</a> from <code>operand</code> to <code>main</code>:</p>\n<blockquote>\n<p>This is in preparation for refactoring all x64::Inst arms to use OperandSize.</p>\n<p>Current uses of OperandSize fall into two categories:</p>\n<p>1. XMM operations which require 32/64 bit operands<br>\n  2. Immediates which only care about 64-bit or not.</p>\n<p>Adds assertions to existing Inst constructors to check that they are passed valid sizes.<br>\nThis change also removes the implicit widening of 1 and 2 byte values to 4 bytes. from_bytes() is only used by category 2, so removing this behavior will not change any visible behavior.</p>\n<p>Overall this change should be a no-op.<br>\n</p>\n</blockquote>",
        "id": 224677625,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612143681
    }
]