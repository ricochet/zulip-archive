[
    {
        "content": "<p>lann edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448\">PR #8448</a>.</p>",
        "id": 435052319,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713899834
    },
    {
        "content": "<p>lann updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448\">PR #8448</a>.</p>",
        "id": 437486465,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715098423
    },
    {
        "content": "<p>lann updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448\">PR #8448</a>.</p>",
        "id": 437499270,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715103328
    },
    {
        "content": "<p>lann <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448#issuecomment-2100686859\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448\">PR #8448</a>:</p>\n<blockquote>\n<p>Tracking for myself: next step is to update the top-level world linking: add a e.g. <code>add_root_to_linker_get_host</code>, revert the world <code>add_to_linker</code> impl to call child trait closure-form <code>add_to_linker</code>s directly (avoiding the need for <code>WorldGetHost</code> to somehow impl all imported interface/resource <code>GetHost</code>s as well).</p>\n</blockquote>",
        "id": 437660452,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715177652
    },
    {
        "content": "<p>lann <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448#issuecomment-2100842045\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448\">PR #8448</a>:</p>\n<blockquote>\n<p>@alexcrichton <br>\nre: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8382#issuecomment-2072986390\">https://github.com/bytecodealliance/wasmtime/issues/8382#issuecomment-2072986390</a> (<code>?Sized</code> for <code>impl &lt;T: Host&gt; Host for &amp;mut T</code>), this doesn't work for methods that return the type itself:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"mi\">27</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"k\">impl</span><span class=\"o\">&lt;</span><span class=\"n\">T</span>: <span class=\"nc\">FooImports</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"nb\">Sized</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">FooImports</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">T</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">      </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">parameter</span><span class=\"w\"> </span><span class=\"n\">needs</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">be</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Sized</span><span class=\"err\">`</span>\n<span class=\"mi\">28</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"k\">fn</span> <span class=\"nf\">x</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">T</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                        </span><span class=\"o\">^</span><span class=\"w\"> </span><span class=\"n\">doesn</span><span class=\"o\">'</span><span class=\"na\">t</span><span class=\"w\"> </span><span class=\"n\">have</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"w\"> </span><span class=\"n\">known</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">compile</span><span class=\"o\">-</span><span class=\"n\">time</span>\n</code></pre></div>\n<p>I'm just going to drop the <code>?Sized</code> unless you think its worth trying to special case somehow.</p>\n</blockquote>",
        "id": 437674124,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715181999
    },
    {
        "content": "<p>lann edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448#issuecomment-2100842045\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448\">PR #8448</a>:</p>\n<blockquote>\n<p>@alexcrichton <br>\nre: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8382#issuecomment-2072986390\">https://github.com/bytecodealliance/wasmtime/issues/8382#issuecomment-2072986390</a> (<code>?Sized</code> for <code>impl &lt;T: Host&gt; Host for &amp;mut T</code>), this doesn't work for resource methods that return the type itself:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"mi\">27</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"k\">impl</span><span class=\"o\">&lt;</span><span class=\"n\">T</span>: <span class=\"nc\">FooImports</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"nb\">Sized</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">FooImports</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">T</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">      </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">parameter</span><span class=\"w\"> </span><span class=\"n\">needs</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">be</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Sized</span><span class=\"err\">`</span>\n<span class=\"mi\">28</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"k\">fn</span> <span class=\"nf\">x</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">T</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                        </span><span class=\"o\">^</span><span class=\"w\"> </span><span class=\"n\">doesn</span><span class=\"o\">'</span><span class=\"na\">t</span><span class=\"w\"> </span><span class=\"n\">have</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"w\"> </span><span class=\"n\">known</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">compile</span><span class=\"o\">-</span><span class=\"n\">time</span>\n</code></pre></div>\n<p>I'm just going to drop the <code>?Sized</code> unless you think its worth trying to special case somehow.</p>\n</blockquote>",
        "id": 437674341,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715182070
    },
    {
        "content": "<p>lann edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448#issuecomment-2100842045\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448\">PR #8448</a>:</p>\n<blockquote>\n<p>@alexcrichton <br>\nre: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8382#issuecomment-2072986390\">https://github.com/bytecodealliance/wasmtime/issues/8382#issuecomment-2072986390</a> (<code>?Sized</code> for <code>impl &lt;T: Host&gt; Host for &amp;mut T</code>), this doesn't work for methods that return the type itself:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"mi\">27</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"k\">impl</span><span class=\"o\">&lt;</span><span class=\"n\">T</span>: <span class=\"nc\">FooImports</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"nb\">Sized</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">FooImports</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">T</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">      </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">parameter</span><span class=\"w\"> </span><span class=\"n\">needs</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">be</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Sized</span><span class=\"err\">`</span>\n<span class=\"mi\">28</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"k\">fn</span> <span class=\"nf\">x</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">T</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                        </span><span class=\"o\">^</span><span class=\"w\"> </span><span class=\"n\">doesn</span><span class=\"o\">'</span><span class=\"na\">t</span><span class=\"w\"> </span><span class=\"n\">have</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"w\"> </span><span class=\"n\">known</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">compile</span><span class=\"o\">-</span><span class=\"n\">time</span>\n</code></pre></div>\n<p>I'm just going to drop the <code>?Sized</code> unless you think its worth trying to special case somehow.</p>\n</blockquote>",
        "id": 437674468,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715182101
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448#issuecomment-2100848514\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448\">PR #8448</a>:</p>\n<blockquote>\n<p>Is that actually the type parameter <code>T</code> shadowing a WIT type <code>T</code>? I don't think that any WIT api should return <code>Self</code>, and that might be fixable by renaming the type parameter to <code>_T</code> perhaps?</p>\n</blockquote>",
        "id": 437674798,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715182196
    },
    {
        "content": "<p>lann <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448#issuecomment-2100858912\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448\">PR #8448</a>:</p>\n<blockquote>\n<p>Ah, you are correct. That explains why I couldn't figure out where this would be happening...</p>\n</blockquote>",
        "id": 437675812,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715182505
    },
    {
        "content": "<p>lann updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448\">PR #8448</a>.</p>",
        "id": 438017507,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715361257
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448#issuecomment-2105229472\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448\">PR #8448</a>:</p>\n<blockquote>\n<p>This has run into a bit of a snag. <a href=\"https://github.com/rust-lang/rust/issues/124984\">https://github.com/rust-lang/rust/issues/124984</a> shows code this PR was going to generate which compiled with Rust 1.77.0 but does not compile with Rust 1.78.0.</p>\n</blockquote>",
        "id": 438041680,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715372762
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448\">PR #8448</a>.</p>",
        "id": 438044987,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715374582
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448\">PR #8448</a>.</p>",
        "id": 438049925,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715377176
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448#issuecomment-2105307232\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448\">PR #8448</a>:</p>\n<blockquote>\n<p>Ok I think most tests should be passing now. A summary of changes now at its current state:</p>\n<p>Previously <code>bindgen!</code> would generate:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">            </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">add_to_linker</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">U</span><span class=\"o\">&gt;</span><span class=\"p\">(</span>\n<span class=\"w\">                </span><span class=\"n\">linker</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"n\">component</span>::<span class=\"n\">Linker</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n<span class=\"w\">                </span><span class=\"n\">get</span>: <span class=\"nc\">impl</span><span class=\"w\"> </span><span class=\"nb\">Fn</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">T</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"n\">U</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">Send</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">Sync</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">Copy</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"nb\">static</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">wasmtime</span>::<span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span>\n<span class=\"w\">            </span><span class=\"k\">where</span>\n<span class=\"w\">                </span><span class=\"n\">U</span>: <span class=\"nc\">Host</span><span class=\"p\">,</span>\n</code></pre></div>\n<p>Now it generates:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">            </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">GetHost</span><span class=\"o\">&lt;</span>\n<span class=\"w\">                </span><span class=\"n\">T</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"o\">&gt;</span>: <span class=\"nb\">Fn</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"o\">&lt;</span><span class=\"bp\">Self</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">GetHost</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;&gt;</span>::<span class=\"n\">Output</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">Send</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">Sync</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">Copy</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"nb\">static</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"k\">type</span> <span class=\"nc\">Output</span>: <span class=\"nc\">Host</span><span class=\"p\">;</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n\n<span class=\"w\">            </span><span class=\"k\">impl</span><span class=\"o\">&lt;</span><span class=\"n\">F</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">T</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">O</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">GetHost</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">F</span>\n<span class=\"w\">            </span><span class=\"k\">where</span>\n<span class=\"w\">                </span><span class=\"n\">F</span>: <span class=\"nb\">Fn</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">O</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">Send</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">Sync</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">Copy</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"nb\">static</span><span class=\"p\">,</span>\n<span class=\"w\">                </span><span class=\"n\">O</span>: <span class=\"nc\">Host</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"k\">type</span> <span class=\"nc\">Output</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">O</span><span class=\"p\">;</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n\n<span class=\"w\">            </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">add_to_linker_get_host</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"p\">(</span>\n<span class=\"w\">                </span><span class=\"n\">linker</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"n\">component</span>::<span class=\"n\">Linker</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n<span class=\"w\">                </span><span class=\"n\">host_getter</span>: <span class=\"nc\">impl</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">GetHost</span><span class=\"o\">&lt;&amp;'</span><span class=\"na\">a</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">wasmtime</span>::<span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"c1\">// ...</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n\n<span class=\"w\">            </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">add_to_linker</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">U</span><span class=\"o\">&gt;</span><span class=\"p\">(</span>\n<span class=\"w\">                </span><span class=\"n\">linker</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"n\">component</span>::<span class=\"n\">Linker</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n<span class=\"w\">                </span><span class=\"n\">get</span>: <span class=\"nc\">impl</span><span class=\"w\"> </span><span class=\"nb\">Fn</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">T</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"n\">U</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">Send</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">Sync</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">Copy</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"nb\">static</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">wasmtime</span>::<span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span>\n<span class=\"w\">            </span><span class=\"k\">where</span>\n<span class=\"w\">                </span><span class=\"n\">U</span>: <span class=\"nc\">Host</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">add_to_linker_get_host</span><span class=\"p\">(</span><span class=\"n\">linker</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">get</span><span class=\"p\">)</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n</code></pre></div>\n<p>Effectively the old <code>add_to_linker</code> is still there but everything is actually built on a more-general <code>GetHost</code> trait which enables not being requried to use literally <code>&amp;mut U</code> but instead you can use something like <code>MyStruct&lt;'a&gt;</code>. Usage of <code>add_to_linker_get_host</code> will probably require type-annotating closures. For example wasmtime-wasi contains:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">type_annotate</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">val</span>: <span class=\"nc\">F</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">F</span>\n<span class=\"w\">    </span><span class=\"k\">where</span>\n<span class=\"w\">        </span><span class=\"n\">F</span>: <span class=\"nb\">Fn</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">T</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"n\">T</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">val</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">closure</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">type_annotate</span>::<span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"n\">t</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">t</span><span class=\"p\">);</span>\n</code></pre></div>\n<p>Usage of <code>add_to_linker</code> will not require type annotations over what's already required today.</p>\n<p>I would like to, in a future commit I want to refactor all of wasmtime-wasi{,-http} to remove <code>imp&lt;T: WasiView&gt; Host for T</code> and replace that with <code>impl Host for dyn WasiView</code> using this support. That'll enable removing the odd <code>skip_mut_forwarding_impls</code> I've added to <code>bindgen!</code> here which is just to get WASI bits as-is compiling. </p>\n</blockquote>",
        "id": 438050521,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715377506
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448#issuecomment-2105308185\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448\">PR #8448</a>:</p>\n<blockquote>\n<p>I should also say there are other minor details here and there but the comment above is the main thrust of the change, everything else is \"smith a few things until everything compiles again\"</p>\n</blockquote>",
        "id": 438050648,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715377567
    },
    {
        "content": "<p>lann submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448#pullrequestreview-2052565232\">PR review</a>:</p>\n<blockquote>\n<p>Approach lgtm</p>\n</blockquote>",
        "id": 438353573,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715604567
    },
    {
        "content": "<p>lann submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448#pullrequestreview-2052565232\">PR review</a>:</p>\n<blockquote>\n<p>Approach lgtm</p>\n</blockquote>",
        "id": 438353574,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715604567
    },
    {
        "content": "<p>lann created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448#discussion_r1598398559\">PR review comment</a>:</p>\n<blockquote>\n<p>Side note: we should pick a small subset of these tests with good feature coverage to expand. As-is these are useful for review but its hard to know how many/which files to review before stopping, and having so many changed files screws with Github's UI...</p>\n</blockquote>",
        "id": 438353575,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715604567
    },
    {
        "content": "<p>lann created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448#discussion_r1598392854\">PR review comment</a>:</p>\n<blockquote>\n<p>Slightly confusing in the definition but maybe more obvious for implementers?</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>                type Host: Host;\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 438353576,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715604568
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448\">PR #8448</a>.</p>",
        "id": 438399975,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715616945
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448#discussion_r1598732050\">PR review comment</a>:</p>\n<blockquote>\n<p>That's a good point yeah I've been a bit sad that the actual changes were all hidden by default as well...</p>\n</blockquote>",
        "id": 438400097,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715616982
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448#pullrequestreview-2053149944\">PR review</a>.</p>",
        "id": 438400099,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715616982
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448\">PR #8448</a>.</p>",
        "id": 438402708,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715617808
    },
    {
        "content": "<p><strong>alexcrichton</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448\">PR #8448</a> as ready for review.</p>",
        "id": 438402717,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715617811
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448\">PR #8448</a>.</p>",
        "id": 438402723,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715617812
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448\">PR #8448</a>.</p>",
        "id": 438402724,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715617812
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448#pullrequestreview-2053205311\">PR review</a>.</p>",
        "id": 438405053,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715618598
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448\">PR #8448</a>.</p>",
        "id": 438405062,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715618602
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448\">PR #8448</a>.</p>",
        "id": 438411439,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715620731
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448\">PR #8448</a>.</p>",
        "id": 438411505,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715620761
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448\">PR #8448</a>.</p>",
        "id": 438415982,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715622326
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448\">PR #8448</a>.</p>",
        "id": 438415998,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715622331
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8448\">PR #8448</a>.</p>",
        "id": 438423642,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715625099
    }
]