[
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> and <a href=\"https://github.com/julian-seward1\">julian-seward1</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2489\">PR #2489</a>.</p>",
        "id": 219231057,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607446274
    },
    {
        "content": "<p>abrown opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2489\">PR #2489</a> from <code>load-zero</code> to <code>main</code>:</p>\n<blockquote>\n<p>Like #2480, this should not be merged until #2432 is resolved and x64 Wasm SIMD spec tests are turned back on. The <code>simd_load_zero.wast</code> test is now in-tree since #2481 but will have to be enabled in the <code>build.rs</code> file.</p>\n</blockquote>",
        "id": 219231058,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607446274
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> and <a href=\"https://github.com/julian-seward1\">julian-seward1</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2489\">PR #2489</a>.</p>",
        "id": 219231059,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607446274
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2489#pullrequestreview-547428290\">PR Review</a>.</p>",
        "id": 219231182,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607446329
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2489#discussion_r538594039\">PR Review Comment</a>:</p>\n<blockquote>\n<p>nit: missing trailing newline</p>\n</blockquote>",
        "id": 219231184,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607446329
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2489\">PR #2489</a> from <code>load-zero</code> to <code>main</code>:</p>\n<blockquote>\n<p>Like #2480, this should not be merged until #2432 is resolved and x64 Wasm SIMD spec tests are turned back on. The <code>simd_load_zero.wast</code> test is now in-tree since #2481 but will have to be enabled in the <code>build.rs</code> file.</p>\n</blockquote>",
        "id": 221598278,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609805377
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2489\">PR #2489</a> from <code>load-zero</code> to <code>main</code>:</p>\n<blockquote>\n<p>Like #2480, this should not be merged until #2432 is resolved and x64 Wasm SIMD spec tests are turned back on. The <code>simd_load_zero.wast</code> test is now in-tree since #2481 but will have to be enabled in the <code>build.rs</code> file.</p>\n</blockquote>",
        "id": 221598543,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609805475
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2489\">PR #2489</a> from <code>load-zero</code> to <code>main</code>:</p>\n<blockquote>\n<p>Like #2480, this should not be merged until #2432 is resolved and x64 Wasm SIMD spec tests are turned back on. The <code>simd_load_zero.wast</code> test is now in-tree since #2481 but will have to be enabled in the <code>build.rs</code> file.</p>\n</blockquote>",
        "id": 221598691,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609805601
    },
    {
        "content": "<p><strong>abrown</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2489\">PR #2489</a> as ready for review.</p>",
        "id": 221600349,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609806934
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2489#pullrequestreview-561451381\">PR Review</a>.</p>",
        "id": 221602230,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609808761
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2489#pullrequestreview-561451381\">PR Review</a>.</p>",
        "id": 221602232,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609808761
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2489#discussion_r551658559\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Did you work out what the issue was with the earlier version of this test that could not coalesce?</p>\n</blockquote>",
        "id": 221602233,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609808762
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2489#pullrequestreview-561994289\">PR Review</a>.</p>",
        "id": 221676819,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609868331
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2489#discussion_r552086965\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I debug-ed to <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/codegen/src/machinst/lower.rs#L918-L924\">here</a> and realized that indeed the insertion of the block was preventing <code>input_to_reg_mem</code> from seeing the input as mergeable. I realized I didn't understand how the coloring is working, but my hazy mental model makes me think that the logic should not be \"allow sinking if the color is +1\" but rather \"allow sinking if the color is 0 or +1\". I mean, I haven't looked too closely at the logic, but from the comments in <code>src/machinst/lower.rs</code>, I would expect the following code to coalesce, but it does not:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">load32_zero</span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">i32x4</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i64</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">scalar_to_vector</span><span class=\"p\">.</span><span class=\"n\">i32x4</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">jump</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">block1</span>:\n    <span class=\"nc\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>In any case, the optimization here is a separate issue than implementing the load*_zero instruction itself.</p>\n</blockquote>",
        "id": 221676820,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609868331
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2489#pullrequestreview-562001141\">PR Review</a>.</p>",
        "id": 221678142,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609868897
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2489#discussion_r552092254\">PR Review Comment</a>:</p>\n<blockquote>\n<p>So the reason for the +1 correction is that the test is comparing the <em>input</em> color of the possibly-merged load to the color at the merging point; and because loads are effectful (in this model), the <em>output</em> color of the load is input+1. So the test is really just \"output color of load is current color\". That said, it's possible that the new-block increment is happening at the wrong place such that we disallow this case -- can debug further in a bit...</p>\n</blockquote>",
        "id": 221678143,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609868897
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2489#pullrequestreview-562275148\">PR Review</a>.</p>",
        "id": 221725762,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609898238
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2489#discussion_r552320990\">PR Review Comment</a>:</p>\n<blockquote>\n<p>(To clarify the above: I'm fine with this PR merging as-is, but please feel free to create a tracking issue for this coalescing case if still unsolved!)</p>\n</blockquote>",
        "id": 221725763,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609898238
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2489#discussion_r554258349\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Ok, opened #2562 to track this; will merge as-is to keep things moving along.</p>\n</blockquote>",
        "id": 222142498,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610151690
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2489#pullrequestreview-564659316\">PR Review</a>.</p>",
        "id": 222142499,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610151690
    },
    {
        "content": "<p>abrown merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2489\">PR #2489</a>.</p>",
        "id": 222142515,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610151719
    }
]