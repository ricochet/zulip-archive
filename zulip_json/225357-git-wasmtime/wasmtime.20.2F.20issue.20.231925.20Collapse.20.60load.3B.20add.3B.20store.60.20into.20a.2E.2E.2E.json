[
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1925#issuecomment-1117818937\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1925\">issue #1925</a>:</p>\n<blockquote>\n<p>Closing now; fixed by #4071.</p>\n</blockquote>",
        "id": 281211207,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1651694201
    },
    {
        "content": "<p>cfallin closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1925\">issue #1925</a>:</p>\n<blockquote>\n<p>Right now, this</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i64</span><span class=\"p\">)</span>:\n        <span class=\"nc\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"n\">aligned</span><span class=\"w\"> </span><span class=\"n\">notrap</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iadd_imm</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"n\">aligned</span><span class=\"w\"> </span><span class=\"n\">notrap</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>compiles down into</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Disassembly</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"mi\">19</span><span class=\"w\"> </span><span class=\"n\">bytes</span>:\n   <span class=\"mi\">0</span>:   <span class=\"mi\">40</span><span class=\"w\"> </span><span class=\"mi\">55</span><span class=\"w\">                   </span><span class=\"n\">push</span><span class=\"w\">    </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">2</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">e5</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\"> </span><span class=\"n\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rsp</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">5</span>:   <span class=\"mi\">40</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">07</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\"> </span><span class=\"n\">eax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">dword</span><span class=\"w\"> </span><span class=\"n\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">rdi</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">8</span>:   <span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">c1</span><span class=\"w\">                   </span><span class=\"n\">mov</span><span class=\"w\"> </span><span class=\"n\">ecx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">eax</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"n\">a</span>:   <span class=\"mi\">83</span><span class=\"w\"> </span><span class=\"n\">c1</span><span class=\"w\"> </span><span class=\"mi\">01</span><span class=\"w\">                </span><span class=\"n\">add</span><span class=\"w\"> </span><span class=\"n\">ecx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"n\">d</span>:   <span class=\"mi\">40</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"mi\">08</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\"> </span><span class=\"n\">dword</span><span class=\"w\"> </span><span class=\"n\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">rax</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"n\">ecx</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">10</span>:   <span class=\"mi\">40</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"n\">d</span><span class=\"w\">                   </span><span class=\"n\">pop</span><span class=\"w\"> </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">12</span>:   <span class=\"nc\">c3</span><span class=\"w\">                      </span><span class=\"n\">ret</span><span class=\"w\"></span>\n</code></pre></div>\n<p>on x86-64.</p>\n<p>I would expect it to instead generate</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">push</span><span class=\"w\"> </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"n\">mov</span><span class=\"w\">  </span><span class=\"n\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rsp</span><span class=\"w\"></span>\n<span class=\"n\">add</span><span class=\"w\">  </span><span class=\"n\">dword</span><span class=\"w\"> </span><span class=\"n\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">rdi</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"></span>\n<span class=\"n\">pop</span><span class=\"w\">  </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"n\">ret</span><span class=\"w\"></span>\n</code></pre></div>\n<p>but I don't think we any IR instruction handles this addressing mode right now.</p>\n</blockquote>",
        "id": 281211208,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1651694201
    }
]