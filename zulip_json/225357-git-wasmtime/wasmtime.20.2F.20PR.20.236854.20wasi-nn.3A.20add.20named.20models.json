[
    {
        "content": "<p>abrown opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6854\">PR #6854</a> from <code>abrown:registries</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This implements named models in Wasmtime; see the commit messages for more details.</p>\n</blockquote>",
        "id": 385569010,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692233445
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6854\">PR #6854</a>.</p>",
        "id": 385569012,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692233446
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6854\">PR #6854</a>.</p>",
        "id": 385569013,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692233446
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6854\">PR #6854</a>.</p>",
        "id": 385569014,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692233446
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/pchickey\">pchickey</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6854\">PR #6854</a>.</p>",
        "id": 385569026,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692233451
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6854#pullrequestreview-1581613757\">PR review</a>.</p>",
        "id": 385569976,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692233789
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6854#discussion_r1296568358\">PR review comment</a>:</p>\n<blockquote>\n<p>I'm not quite happy with using this script for testing. It was good initially to get things working but I would prefer to be using <code>cargo test</code> instead. The problem is that there is a dependency expectation: this can only run if the system has OpenVINO installed, which will not always be the case for developers running <code>cargo test</code>.</p>\n<p>I can think of two workarounds:</p>\n<ul>\n<li><code>#[ignore]</code> the OpenVINO-specific tests and add some comments telling developers to turn them on to fully test the system</li>\n<li>add some checks at the beginning of each test to early-exit if OpenVINO is not available; the issue with this is that users may see \"false success\" if something goes wrong in the environment, so perhaps a <code>FORCE_RUN_OPENVINO_TESTS</code> env variable is necessary?</li>\n</ul>\n<p>Interested in some feedback on whether one of those approaches is better than this script!</p>\n</blockquote>",
        "id": 385569978,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692233790
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6854#pullrequestreview-1583022334\">PR review</a>.</p>",
        "id": 385713139,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692290185
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6854#discussion_r1297474006\">PR review comment</a>:</p>\n<blockquote>\n<p>Another thing I'm not quite sure of is whether this should return <code>Option&lt;&amp;mut Graph&gt;</code>, <code>Option&lt;&amp;Graph&gt;</code>, or even <code>Option&lt;Graph&gt;</code> (seeing as how <code>Graph</code> is just an <code>Arc</code>-wrapper). We immediately clone the graph and I removed the mutability requirement for <code>BackendGraph::init_execution_context</code>... @geekbeast , any opinions from implementing other kinds of <code>GraphRegistry</code>?</p>\n</blockquote>",
        "id": 385713140,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692290185
    },
    {
        "content": "<p>abrown edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6854#discussion_r1297474006\">PR review comment</a>.</p>",
        "id": 385713185,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692290208
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6854#pullrequestreview-1585214670\">PR review</a>.</p>",
        "id": 385987997,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692392226
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6854#discussion_r1298860511\">PR review comment</a>:</p>\n<blockquote>\n<p>Personally I like your second suggestion and matches what I was going to suggest as well. We do run a higher risk of not actually running the tests in CI but I think running something by default as part of <code>cargo test --workspace</code> is a good mitigating factor for that.</p>\n</blockquote>",
        "id": 385987998,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692392226
    },
    {
        "content": "<p>geekbeast submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6854#pullrequestreview-1585773054\">PR review</a>.</p>",
        "id": 386169908,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692495630
    },
    {
        "content": "<p>geekbeast created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6854#discussion_r1299287269\">PR review comment</a>:</p>\n<blockquote>\n<p>If the tests are for wasi-nn, we should just have a test backend that does something basic like an affine layer. </p>\n<p>If this is testing integration we should think about how we handle multiple backends. This same issue will come up with pytorch, onnxruntime, tf, etc. </p>\n</blockquote>",
        "id": 386169910,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692495630
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6854#pullrequestreview-1589909288\">PR review</a>.</p>",
        "id": 386653127,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692722803
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6854#discussion_r1301930202\">PR review comment</a>:</p>\n<blockquote>\n<p>@alexcrichton, I have a whole other set of commits ready for switching to that kind of testing. Just waiting on a review of this one because the new testing also covers the <code>load_by_name</code> logic added here.</p>\n</blockquote>",
        "id": 386653129,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692722804
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6854#pullrequestreview-1590164421\">PR review</a>:</p>\n<blockquote>\n<p>I can't review the wasi-nn stuff specifically really, it all seems reasonable though. The <code>src/commands/run.rs</code> bits look good to me, although I might recommend renaming <code>--graph</code> to something like <code>--wasi-nn-graph</code> or <code>--nn-graph</code> or something like that perhaps to make it a bit more clear it's for wasi-nn as opposed to something else graph-related (not that we have much else like that right now)</p>\n</blockquote>",
        "id": 386677937,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692731878
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6854\">PR #6854</a>.</p>",
        "id": 386710367,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692746139
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6854\">PR #6854</a>.</p>",
        "id": 386711321,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692746786
    },
    {
        "content": "<p>abrown has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6854\">PR #6854</a>.</p>",
        "id": 386713026,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692747982
    },
    {
        "content": "<p>abrown merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6854\">PR #6854</a>.</p>",
        "id": 386721981,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692752115
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6854#pullrequestreview-1592513612\">PR review</a>.</p>",
        "id": 386960000,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692830451
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6854#discussion_r1303613013\">PR review comment</a>:</p>\n<blockquote>\n<p>Ok, check out <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6895\">https://github.com/bytecodealliance/wasmtime/pull/6895</a> if you're interested in where I went with this.</p>\n</blockquote>",
        "id": 386960001,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692830451
    }
]