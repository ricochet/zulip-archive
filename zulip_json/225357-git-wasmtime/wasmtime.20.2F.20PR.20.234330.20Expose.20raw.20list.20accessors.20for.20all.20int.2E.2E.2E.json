[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4330\">PR #4330</a> from <code>component-model-slice-align</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit extends the <code>WasmList&lt;T&gt;</code> type to have an<br>\n<code>as_slice</code>-lookalike method (now renamed to <code>as_le_slice</code>) for all<br>\ninteger types rather than just the <code>u8</code> type. With the guarantees of the<br>\ncomponent model it's known that all lists are aligned in linear memory.<br>\nAdditionally linear memories themselves are also generally guaranteed to<br>\nbe aligned. This means that hosts where the primitive integer alignment<br>\nis at most the size (which I think is basically all host platforms) can<br>\nget a raw view into memory for the wasm linear memory for slices of<br>\nthese types.</p>\n<p>Note, though, that the remaining caveat after alignment is endianness.<br>\nBig-endian hosts need to be aware that the integers aren't stored in a<br>\nnative format. Previously tools like wit-bindgen have added an <code>Le&lt;T&gt;</code><br>\nwrapper but for now I've opted to instead use a method that has \"le\" in<br>\nthe name - <code>as_le_slice</code>. I'm hoping that this is a clear enough<br>\nindicator for users to little-endian conversions as appropriate when<br>\nreading the values within the slice.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 287602697,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656347188
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4330#pullrequestreview-1020874804\">PR review</a>.</p>",
        "id": 287648638,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656370426
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4330#discussion_r907864160\">PR review comment</a>:</p>\n<blockquote>\n<p>I guess if that isn't the case, this assertion will trip.</p>\n</blockquote>",
        "id": 287648639,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656370426
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4330#pullrequestreview-1020874804\">PR review</a>.</p>",
        "id": 287648640,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656370427
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4330#discussion_r907863804\">PR review comment</a>:</p>\n<blockquote>\n<p>Do we trap if they are not aligned? That is, can we rely on these <em>actually</em> being aligned here?</p>\n</blockquote>",
        "id": 287648641,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656370427
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4330\">PR #4330</a>.</p>",
        "id": 287731760,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656429842
    }
]