[
    {
        "content": "<p>TAOFOR4 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8500\">issue #8500</a>:</p>\n<blockquote>\n<p>Hi,</p>\n<p>I am wondering if wasmtime supports IoT devices like Raspberry Pico, ESP32 C6, or something similar? Thank you!<br>\n</p>\n</blockquote>",
        "id": 436010819,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714387499
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8500#issuecomment-2082440474\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8500\">issue #8500</a>:</p>\n<blockquote>\n<p>The biggest problem is likely going to be architecture support. Cranelift and by extension Wasmtime currently doesn't support any 32bit target. Only x86_64, arm64, riscv64 and s390x are currently supported.</p>\n<p>If you have a microcontroller with a supported architecture however, since <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995\">https://github.com/bytecodealliance/wasmtime/pull/7995</a> it should be possible to run without an OS assuming you implement the functions of <code>wasmtime-platform.h</code>. The min-platform example takes almost 7MB as it includes not just the WASM runtime, but also the compiler. If you push a wasm module precompiled for the target to the microcontroller instead you can enable just the runtime part of Wasmtime, which cuts down the size to a little over 700k.</p>\n</blockquote>",
        "id": 436015326,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714388893
    },
    {
        "content": "<p>TAOFOR4 closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8500\">issue #8500</a>:</p>\n<blockquote>\n<p>Hi,</p>\n<p>I am wondering if wasmtime supports IoT devices like Raspberry Pico, ESP32 C6, or something similar? Thank you!<br>\n</p>\n</blockquote>",
        "id": 436019582,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714390350
    }
]