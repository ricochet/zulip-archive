[
    {
        "content": "<p>tschneidereit opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1720\">Issue #1720</a>:</p>\n<blockquote>\n<p>We're creating aarch64 builds in CI, but for people wanting to do so themselves using cross-compilation, it's hard to figure out how.</p>\n<p>We should have documentation for how to do this for at least x64 Linux, but ideally also macOS and, if feasible, Windows.</p>\n<p>CC @alexcrichton </p>\n</blockquote>",
        "id": 197865032,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589743730
    },
    {
        "content": "<p>tschneidereit labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1720\">Issue #1720</a>:</p>\n<blockquote>\n<p>We're creating aarch64 builds in CI, but for people wanting to do so themselves using cross-compilation, it's hard to figure out how.</p>\n<p>We should have documentation for how to do this for at least x64 Linux, but ideally also macOS and, if feasible, Windows.</p>\n<p>CC @alexcrichton </p>\n</blockquote>",
        "id": 197865066,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589743774
    },
    {
        "content": "<p>tschneidereit labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1720\">Issue #1720</a>:</p>\n<blockquote>\n<p>We're creating aarch64 builds in CI, but for people wanting to do so themselves using cross-compilation, it's hard to figure out how.</p>\n<p>We should have documentation for how to do this for at least x64 Linux, but ideally also macOS and, if feasible, Windows.</p>\n<p>CC @alexcrichton </p>\n</blockquote>",
        "id": 197865069,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589743783
    },
    {
        "content": "<p>tschneidereit <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1720#issuecomment-629848348\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1720\">Issue #1720</a>:</p>\n<blockquote>\n<p>Oh, and ideally we'd have this for both Wasmtime and Cranelift, but those are probably separate tasks.</p>\n</blockquote>",
        "id": 197865116,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589743841
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1720#issuecomment-630171275\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1720\">Issue #1720</a>:</p>\n<blockquote>\n<p>Hm so in theory this is the same as cross-compilation of any other Rust code, where you'd first install a native toolchain for the linker and then you'd execute <code>cargo build --target aarch64-unknown-linux-gnu</code>.</p>\n<p>Beyond that I feel that documentation for Wasmtime would cover all the standard \"this applies to all cross compilation in Rust\" bullet points:</p>\n<ul>\n<li>A native toolchain which compiles to AArch64 is required. <ul>\n<li>This is typically extremely difficult to obtain on macOS and Windows. </li>\n<li>If you're not using a package manager with an AArch64 toolchain on Linux, it's also likely extremely hard to obtain. </li>\n<li>The name of the toolchain in Linux package managers likely varies widely across distributions.</li>\n</ul>\n</li>\n<li>You'll need to install the rustup target via <code>rustup target add</code></li>\n<li>The final binary shows up in <code>target/aarch64-unknown-linux-gnu/*</code> instead of <code>target/*</code></li>\n</ul>\n<p>@tschneidereit do you have an idea on what folks were getting tripped up on more specifically?</p>\n</blockquote>",
        "id": 197931387,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589807313
    },
    {
        "content": "<p>alexcrichton edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1720#issuecomment-630171275\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1720\">Issue #1720</a>:</p>\n<blockquote>\n<p>Hm so in theory this is the same as cross-compilation of any other Rust code, where you'd first install a native toolchain for the linker and then you'd execute <code>cargo build --target aarch64-unknown-linux-gnu</code>.</p>\n<p>Beyond that I feel that documentation for Wasmtime would cover all the standard \"this applies to all cross compilation in Rust\" bullet points:</p>\n<ul>\n<li>A native toolchain which compiles to AArch64 is required. <ul>\n<li>This is typically extremely difficult to obtain on macOS and Windows. </li>\n<li>If you're not using a package manager with an AArch64 toolchain on Linux, it's also likely extremely hard to obtain. </li>\n<li>The name of the toolchain in Linux package managers likely varies widely across distributions.</li>\n</ul>\n</li>\n<li>You'll need to install the rustup target via <code>rustup target add</code></li>\n<li>The final binary shows up in <code>target/aarch64-unknown-linux-gnu/*</code> instead of <code>target/*</code></li>\n<li>You'll have to configure Cargo to pass the right linker to rustc since it otherwise won't find it.</li>\n</ul>\n<p>@tschneidereit do you have an idea on what folks were getting tripped up on more specifically?</p>\n</blockquote>",
        "id": 197931433,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589807333
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1720#issuecomment-630171983\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1720\">Issue #1720</a>:</p>\n<blockquote>\n<p>To be clear it seems fine to document all this, it's just worth knowing that it's not really anything novel or specific to Wasmtime itself. I'm mostly just curious if there's something else that I'm missing about what we would need to document.</p>\n</blockquote>",
        "id": 197931549,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589807385
    },
    {
        "content": "<p>tschneidereit <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1720#issuecomment-630177190\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1720\">Issue #1720</a>:</p>\n<blockquote>\n<p>@alexcrichton thank you for the explanation, that makes a lot of sense. Based on <a href=\"https://twitter.com/KevinHoffman/status/1261653823115968512\">this Twitter thread</a>, I tried building for Aarch64 myself, and honestly simply didn't know where to even begin. If there is good general documentation, perhaps we could link to that in our docs? Something like \"follow this general guide, then take these exact steps for Wasmtime, specifically\".</p>\n<p>Also, I just realized that it'd be good to have this both for building the shared library and CLI, and for embedding in other Rust projects. I think the ladder is what @autodidaddict, @dlmanning, and @squillace are talking about in that Twitter thread.</p>\n</blockquote>",
        "id": 197932738,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589807926
    },
    {
        "content": "<p>tschneidereit <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1720#issuecomment-630177518\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1720\">Issue #1720</a>:</p>\n<blockquote>\n<blockquote>\n<div class=\"codehilite\"><pre><span></span><code>* This is typically extremely difficult to obtain on macOS and Windows.\n</code></pre></div>\n\n\n</blockquote>\n<p>Oh, and this is where the \"if feasible\" comes in :)</p>\n</blockquote>",
        "id": 197932795,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589807959
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1720#issuecomment-630210990\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1720\">Issue #1720</a>:</p>\n<blockquote>\n<p>I don't personally know of standard docs now that I think about it (so documenting this regardless definitely makes sense), although if others know some it'd be great to link!</p>\n<p>That twitter looks a bit like the wrong version of the source is being used, especially if unsupported platform errors show up for AArch64. In any case I've opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1721\">https://github.com/bytecodealliance/wasmtime/pull/1721</a> to help improve the state of things.</p>\n</blockquote>",
        "id": 197940576,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589811326
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1720\">Issue #1720</a>:</p>\n<blockquote>\n<p>We're creating aarch64 builds in CI, but for people wanting to do so themselves using cross-compilation, it's hard to figure out how.</p>\n<p>We should have documentation for how to do this for at least x64 Linux, but ideally also macOS and, if feasible, Windows.</p>\n<p>CC @alexcrichton </p>\n</blockquote>",
        "id": 197954554,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589817122
    }
]