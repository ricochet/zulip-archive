[
    {
        "content": "<p><strong>akirilov-arm</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2823\">PR #2823</a>.</p>",
        "id": 233836923,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617980582
    },
    {
        "content": "<p>akirilov-arm opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2823\">PR #2823</a> from <code>callee_saves</code> to <code>main</code>:</p>\n<blockquote>\n<p>SIMD &amp; FP registers are now saved and restored in pairs, similarly to general-purpose registers. Also, the fix for issue #2254 has enabled us to save and to restore only the bottom 64 bits of the registers (in case of non-Baldrdash ABIs), which is the requirement from the Procedure Call Standard for the Arm 64-bit Architecture.<br>\nAs for the callee-saved general-purpose registers, if a procedure needs to save and restore an odd number of them, it no longer uses store and load pair instructions for the last register.</p>\n</blockquote>",
        "id": 233836925,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617980582
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2823#pullrequestreview-633848469\">PR Review</a>.</p>",
        "id": 234208564,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618252517
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2823#pullrequestreview-633848469\">PR Review</a>.</p>",
        "id": 234208565,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618252517
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2823#discussion_r611862212\">PR Review Comment</a>:</p>\n<blockquote>\n<p>A comment here to explain the strategies for both cases would make it a bit clearer, I think -- something like \"The Baldrdash ABI saves whole (16-byte) clobbered vector registers, so there is no need to worry about 16-byte stack alignment. The SystemV (AAPCS) ABI saves half (8-byte) clobbered vector registers, so we round up if odd.\"?</p>\n</blockquote>",
        "id": 234208566,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618252517
    },
    {
        "content": "<p>akirilov-arm updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2823\">PR #2823</a> from <code>callee_saves</code> to <code>main</code>.</p>",
        "id": 234301118,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618309477
    },
    {
        "content": "<p>akirilov-arm updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2823\">PR #2823</a> from <code>callee_saves</code> to <code>main</code>.</p>",
        "id": 234385735,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618341844
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2823\">PR #2823</a>.</p>",
        "id": 234412453,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618353347
    }
]