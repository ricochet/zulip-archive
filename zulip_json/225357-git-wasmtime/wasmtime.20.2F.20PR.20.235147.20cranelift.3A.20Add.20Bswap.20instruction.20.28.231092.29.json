[
    {
        "content": "<p>11evan opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5147\">PR #5147</a> from <code>bswap</code> to <code>main</code>:</p>\n<blockquote>\n<p>Adds Bswap to the Cranelift IR. Implements the Bswap instruction in the x64 and aarch64 codegen backends. Cranelift users can now:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">builder</span><span class=\"p\">.</span><span class=\"n\">ins</span><span class=\"p\">().</span><span class=\"n\">bswap</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n<p>to get a native byteswap instruction.</p>\n<ul>\n<li>x64: implements the 32- and 64-bit bswap instruction, following the pattern set by similar unary instrutions (Neg and Not) - it only operates on a dst register, but is parameterized with both a src and dst which are expected to be the same register.</li>\n</ul>\n<p>As x64 bswap instruction is only for 32- or 64-bit registers, the 16-bit swap is implemented as a rotate left by 8.</p>\n<ul>\n<li>\n<p>aarch64: Bswap gets emitted as aarch64 rev16, rev32, or rev64 instruction as appropriate.</p>\n</li>\n<li>\n<p>s390x: Bswap not implemented</p>\n</li>\n<li>\n<p>For completeness, added bswap to the interpreter as well.</p>\n</li>\n</ul>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 306516332,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666896751
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5147#discussion_r1007265582\">PR review comment</a>:</p>\n<blockquote>\n<p>Likewise here as above</p>\n</blockquote>",
        "id": 306520582,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666898204
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5147#pullrequestreview-1158914543\">PR review</a>.</p>",
        "id": 306520583,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666898204
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5147#pullrequestreview-1158914543\">PR review</a>.</p>",
        "id": 306520584,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666898204
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5147#discussion_r1007263823\">PR review comment</a>:</p>\n<blockquote>\n<p>The little-endian bit literal here is kind of confusing (it's little-endian but MSB first); if we need an explanatory comment can we convert the above to a u32 (<code>0xdac00562</code>) or maybe just remove this comment?</p>\n</blockquote>",
        "id": 306520585,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666898205
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5147#discussion_r1007268841\">PR review comment</a>:</p>\n<blockquote>\n<p>No need for the blank line and comment here, I think...</p>\n</blockquote>",
        "id": 306520586,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666898205
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5147#discussion_r1007267517\">PR review comment</a>:</p>\n<blockquote>\n<p>Can we use <code>RexFlags</code> here?</p>\n</blockquote>",
        "id": 306520587,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666898205
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5147#pullrequestreview-1158931164\">PR review</a>.</p>",
        "id": 306523721,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666899265
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5147#pullrequestreview-1158931164\">PR review</a>.</p>",
        "id": 306523722,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666899265
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5147#discussion_r1007278586\">PR review comment</a>:</p>\n<blockquote>\n<p>I'm wondering if we should exclude 8-bit integers for this instruction. There's no sensible implementation of byte-swapping when there's only one byte.</p>\n</blockquote>",
        "id": 306523723,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666899265
    },
    {
        "content": "<p>11evan updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5147\">PR #5147</a> from <code>bswap</code> to <code>main</code>.</p>",
        "id": 306765637,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666999352
    },
    {
        "content": "<p>11evan submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5147#pullrequestreview-1160844994\">PR review</a>.</p>",
        "id": 306765803,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666999466
    },
    {
        "content": "<p>11evan created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5147#discussion_r1008575677\">PR review comment</a>:</p>\n<blockquote>\n<p>These comments were just to help me out when writing the test cases; I've removed them now</p>\n</blockquote>",
        "id": 306765804,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666999466
    },
    {
        "content": "<p>11evan submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5147#pullrequestreview-1160845426\">PR review</a>.</p>",
        "id": 306765899,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666999550
    },
    {
        "content": "<p>11evan created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5147#discussion_r1008576049\">PR review comment</a>:</p>\n<blockquote>\n<p>Yeah good idea, changed to use <code>RexFlags</code> in update, and gave it a new <code>emit_one_op</code> fn to go along with the existing <code>emit_two_op</code> and <code>emit_three_op</code></p>\n</blockquote>",
        "id": 306765900,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666999550
    },
    {
        "content": "<p>11evan created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5147#discussion_r1008576238\">PR review comment</a>:</p>\n<blockquote>\n<p>Good idea, excluded 8-bit and also 128-bit since the latter is unimplemented for now</p>\n</blockquote>",
        "id": 306765968,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666999586
    },
    {
        "content": "<p>11evan submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5147#pullrequestreview-1160845629\">PR review</a>.</p>",
        "id": 306765969,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666999587
    },
    {
        "content": "<p>11evan updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5147\">PR #5147</a> from <code>bswap</code> to <code>main</code>.</p>",
        "id": 306766494,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666999931
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5147#discussion_r1008581661\">PR review comment</a>:</p>\n<blockquote>\n<p>Thanks for removing the 8-bit case! We've generally kept support for types which make sense even if there's no backend support, though, so I would put the 128-bit case back in. If nothing else, that lets us have a <code>runtests/i128-bswap.clif</code> that validates the interpreter (<code>test interpret</code>) even though we can't yet do <code>test run</code> on any target.</p>\n<p>There are quite a few instructions that don't have 128-bit support on some backends yet, but it's good to have things in place to show what those instructions are expected to do for whenever somebody gets around to implementing them.</p>\n</blockquote>",
        "id": 306767705,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667000884
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5147#pullrequestreview-1160852486\">PR review</a>.</p>",
        "id": 306767707,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667000884
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5147#pullrequestreview-1160961034\">PR review</a>.</p>",
        "id": 306817225,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667039401
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5147#pullrequestreview-1160961034\">PR review</a>.</p>",
        "id": 306849616,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667054967
    },
    {
        "content": "<p>11evan updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5147\">PR #5147</a> from <code>bswap</code> to <code>main</code>.</p>",
        "id": 307146097,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667233259
    },
    {
        "content": "<p>11evan submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5147#pullrequestreview-1162172502\">PR review</a>.</p>",
        "id": 307146759,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667233441
    },
    {
        "content": "<p>11evan created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5147#discussion_r1009615887\">PR review comment</a>:</p>\n<blockquote>\n<p>Ok sounds good! Added back 128-bit and created an interpreter test. I didn't actually implement any 128-bit swaps in the backends, left that for the future.</p>\n</blockquote>",
        "id": 307146761,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667233441
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5147#pullrequestreview-1162266428\">PR review</a>.</p>",
        "id": 307160895,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667237227
    },
    {
        "content": "<p>jameysharp has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5147\">PR #5147</a>.</p>",
        "id": 307161137,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667237293
    },
    {
        "content": "<p>jameysharp merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5147\">PR #5147</a>.</p>",
        "id": 307185274,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667244602
    }
]