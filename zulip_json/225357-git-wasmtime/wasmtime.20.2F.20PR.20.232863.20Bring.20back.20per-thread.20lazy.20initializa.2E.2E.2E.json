[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2863\">PR #2863</a> from <code>more-tls</code> to <code>main</code>:</p>\n<blockquote>\n<p>Platforms Wasmtime supports may have per-thread initialization that<br>\nneeds to run before WebAssembly. For example Unix needs to setup a<br>\nsigaltstack and macOS needs to set up mach ports. In #2757 this<br>\nper-thread setup was moved out of the invocation of a wasm function,<br>\nrelying on the lack of Send for Store to initialize the thread at Store<br>\ncreation time and never worry about it later.</p>\n<p>This conflicted with <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2812\">wasmtime's desired multithreading\nstory</a> so a new<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/pull/2822\"><code>Store::notify_switched_thread</code> was\nadded</a> to<br>\nexplicitly indicate a Store has moved to another thread (if it unsafely<br>\ndid so).</p>\n<p>It turns out though that it's not always easy to determine when a<br>\n<code>Store</code> moves to a new thread. For example the Go bindings for Wasmtime<br>\nare generally unaware when a goroutine switches OS threads. This led to<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime-go/issues/74\">https://github.com/bytecodealliance/wasmtime-go/issues/74</a> where a SIGILL<br>\nwas left uncaught, making it appear that traps aren't working properly.</p>\n<p>This commit revisits the decision in #2757 and moves per-thread<br>\ninitialization back into the path of calling into WebAssembly. This is<br>\ndifferently from before, though, where there's still only one TLS access<br>\non the path of calling into WebAssembly, unlike before where it was a<br>\nseparate access. This allows us to get the speed benefits of #2757 as<br>\nwell as the flexibility benefits of not having to explicitly move a<br>\nstore between threads.</p>\n<p>With this new ability this commit deletes the recently added<br>\n<code>Store::notify_switched_thread</code> method since it's no longer necessary.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 236432909,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1619570702
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2863\">PR #2863</a> from <code>more-tls</code> to <code>main</code>.</p>",
        "id": 236516063,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1619620060
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2863#pullrequestreview-647290786\">PR Review</a>.</p>",
        "id": 236539410,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1619627929
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2863\">PR #2863</a>.</p>",
        "id": 236543793,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1619629709
    }
]