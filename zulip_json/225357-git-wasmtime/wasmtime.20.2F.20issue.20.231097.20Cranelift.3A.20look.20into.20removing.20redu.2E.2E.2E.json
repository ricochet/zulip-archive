[
    {
        "content": "<p>cfallin edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1097\">issue #1097</a>:</p>\n<blockquote>\n<p>@sunfishcode, we were discussing redundant SSA parameters.  Here's a simple example.  It's possible that the return block is a special case and that this is not what you were thinking about when you said redundant parameters should not occur.</p>\n<p>Using the SpiderMonkey embedding here.  Wat source:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(</span><span class=\"n\">module</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"s\">\"f\"</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">param</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"n\">div_s</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">local</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">local</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">))))</span><span class=\"w\"></span>\n</code></pre></div>\n<p>IR code:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">RUST_LOG</span><span class=\"o\">=</span><span class=\"n\">debug</span><span class=\"w\"> </span><span class=\"n\">dist</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">js</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">wasm</span><span class=\"o\">-</span><span class=\"n\">compiler</span><span class=\"o\">=</span><span class=\"n\">cranelift</span><span class=\"w\"> </span><span class=\"o\">~/</span><span class=\"n\">moz</span><span class=\"o\">/</span><span class=\"n\">manyparam</span><span class=\"p\">.</span><span class=\"n\">js</span><span class=\"w\"></span>\n<span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">u0</span>:<span class=\"mi\">0</span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">vmctx</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i32</span> <span class=\"nc\">uext</span><span class=\"w\"> </span><span class=\"n\">baldrdash</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                                </span><span class=\"n\">ebb0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v3</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v4</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v5</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v6</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v7</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v8</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v9</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v10</span>: <span class=\"kt\">i64</span><span class=\"p\">)</span>:\n<span class=\"o\">@</span><span class=\"mi\">0041</span><span class=\"w\">                               </span><span class=\"n\">v12</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">sdiv</span><span class=\"w\"> </span><span class=\"n\">v5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"o\">@</span><span class=\"mi\">0042</span><span class=\"w\">                               </span><span class=\"n\">jump</span><span class=\"w\"> </span><span class=\"n\">ebb1</span><span class=\"p\">(</span><span class=\"n\">v12</span><span class=\"p\">)</span><span class=\"w\"></span>\n\n<span class=\"w\">                                </span><span class=\"n\">ebb1</span><span class=\"p\">(</span><span class=\"n\">v11</span>: <span class=\"kt\">i32</span><span class=\"p\">)</span>:\n<span class=\"o\">@</span><span class=\"mi\">0042</span><span class=\"w\">                               </span><span class=\"n\">fallthrough_return</span><span class=\"w\"> </span><span class=\"n\">v11</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>(Will look for additional examples.)<br>\n</p>\n</blockquote>",
        "id": 281217736,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1651697508
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1097#issuecomment-1117928906\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1097\">issue #1097</a>:</p>\n<blockquote>\n<p>Renaming this to a slightly more general topic (remove redundant SSA parameters); this might be an interesting pass to have eventually. It looks like right now the specific case above -- the return arg -- is still generated. In general we don't have an invariant that we keep minimal SSA, so this is a potential enhancement rather than bug (to be explicitly clear about it); labeling as such.</p>\n</blockquote>",
        "id": 281217892,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1651697586
    }
]