[
    {
        "content": "<p><a href=\"https://github.com/kaivol\">kaivol</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8269\">Issue #8269</a>.</p>",
        "id": 430435205,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711849327
    },
    {
        "content": "<p>kaivol opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8269\">issue #8269</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p>Call <code>wasi::http::outgoing_handler::handle</code> with an invalid argument (e.g., <code>path_with_query</code> not set):</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasi</span>::<span class=\"n\">http</span>::<span class=\"n\">outgoing_handler</span>::<span class=\"p\">{</span><span class=\"n\">handle</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">OutgoingRequest</span><span class=\"p\">};</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasi</span>::<span class=\"n\">http</span>::<span class=\"n\">types</span>::<span class=\"p\">{</span><span class=\"n\">Fields</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Method</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Scheme</span><span class=\"p\">};</span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">fields</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Fields</span>::<span class=\"n\">new</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">req</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">OutgoingRequest</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">fields</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">req</span><span class=\"p\">.</span><span class=\"n\">set_method</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">Method</span>::<span class=\"n\">Get</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">req</span><span class=\"p\">.</span><span class=\"n\">set_scheme</span><span class=\"p\">(</span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">Scheme</span>::<span class=\"n\">Https</span><span class=\"p\">)).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">req</span><span class=\"p\">.</span><span class=\"n\">set_authority</span><span class=\"p\">(</span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"s\">\"example.com\"</span><span class=\"p\">)).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"c1\">// Don't set path/query</span>\n<span class=\"w\">    </span><span class=\"c1\">// req.set_path_with_query(Some(\"/\")).unwrap();</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">res</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">handle</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">None</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"{res:?}\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<ul>\n<li>Compile the example into a WASM component </li>\n<li>Run using <code>wasmtime -W component-model -S http=true</code></li>\n</ul>\n<h3>Expected Results</h3>\n<p><code>handle</code> should return an error, which then gets printed by the WASM component.</p>\n<h3>Actual Results</h3>\n<p><code>handle</code> crashes the wasmtime runtime immediately, and the component code doesn't get a chance to handle the error:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Error</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"p\">.</span><span class=\"err\">\\</span><span class=\"n\">target</span><span class=\"err\">\\</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"err\">\\</span><span class=\"n\">debug</span><span class=\"err\">\\</span><span class=\"n\">wasmtime_demo</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"err\">`</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"mi\">0</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">invoke</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">run</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">function</span>\n<span class=\"w\">    </span><span class=\"mi\">1</span>: <span class=\"nc\">error</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">executing</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">backtrace</span>:\n           <span class=\"mi\">0</span>: <span class=\"mh\">0x291982</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">component</span>:<span class=\"nc\">shim</span><span class=\"o\">!</span><span class=\"n\">indirect</span><span class=\"o\">-</span><span class=\"n\">wasi</span>:<span class=\"nc\">http</span><span class=\"o\">/</span><span class=\"n\">outgoing</span><span class=\"o\">-</span><span class=\"n\">handler</span><span class=\"o\">@</span><span class=\"mf\">0.2.0</span><span class=\"o\">-</span><span class=\"n\">handle</span>\n<span class=\"w\">           </span><span class=\"mi\">1</span>: <span class=\"mh\">0x5c27</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">wasi</span>::<span class=\"n\">bindings</span>::<span class=\"n\">wasi</span>::<span class=\"n\">http</span>::<span class=\"n\">outgoing_handler</span>::<span class=\"n\">handle</span>::<span class=\"n\">h243762d529a071e2</span>\n<span class=\"w\">           </span><span class=\"mi\">2</span>: <span class=\"mh\">0x2287</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">wasmtime_demo</span>::<span class=\"n\">main</span>::<span class=\"n\">h6a3dfdd89fcbbb62</span>\n<span class=\"w\">           </span><span class=\"mi\">3</span>: <span class=\"mh\">0x1e9a</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">core</span>::<span class=\"n\">ops</span>::<span class=\"n\">function</span>::<span class=\"nb\">FnOnce</span>::<span class=\"n\">call_once</span>::<span class=\"n\">hef7075ed4fc37c5f</span>\n<span class=\"w\">           </span><span class=\"mi\">4</span>: <span class=\"mh\">0x18ff</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">std</span>::<span class=\"n\">sys_common</span>::<span class=\"n\">backtrace</span>::<span class=\"n\">__rust_begin_short_backtrace</span>::<span class=\"n\">ha7ad02d581d2e631</span>\n<span class=\"w\">           </span><span class=\"mi\">5</span>: <span class=\"mh\">0x1878</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">std</span>::<span class=\"n\">rt</span>::<span class=\"n\">lang_start</span>::<span class=\"p\">{{</span><span class=\"n\">closure</span><span class=\"p\">}}</span>::<span class=\"n\">h298ac82840374e7e</span>\n<span class=\"w\">           </span><span class=\"mi\">6</span>: <span class=\"mh\">0xf239</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">std</span>::<span class=\"n\">rt</span>::<span class=\"n\">lang_start_internal</span>::<span class=\"n\">h11043ae9961d0df9</span>\n<span class=\"w\">           </span><span class=\"mi\">7</span>: <span class=\"mh\">0x1814</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">std</span>::<span class=\"n\">rt</span>::<span class=\"n\">lang_start</span>::<span class=\"n\">ha68b6582d347d4c9</span>\n<span class=\"w\">           </span><span class=\"mi\">8</span>: <span class=\"mh\">0x2384</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">__main_void</span>\n<span class=\"w\">           </span><span class=\"mi\">9</span>: <span class=\"mh\">0x16d6</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">_start</span>\n<span class=\"w\">          </span><span class=\"mi\">10</span>: <span class=\"mh\">0x28dae9</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">component</span>:<span class=\"nc\">adapter</span>:<span class=\"nc\">wasi_snapshot_preview1</span><span class=\"o\">!</span><span class=\"n\">wasi</span>:<span class=\"nc\">cli</span><span class=\"o\">/</span><span class=\"n\">run</span><span class=\"o\">@</span><span class=\"mf\">0.2.0</span>#<span class=\"n\">run</span>\n<span class=\"w\">       </span><span class=\"n\">note</span>: <span class=\"nc\">using</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">WASMTIME_BACKTRACE_DETAILS</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">show</span><span class=\"w\"> </span><span class=\"n\">more</span><span class=\"w\"> </span><span class=\"n\">debugging</span><span class=\"w\"> </span><span class=\"n\">information</span>\n<span class=\"w\">    </span><span class=\"mi\">2</span>: <span class=\"nc\">ErrorCode</span>::<span class=\"n\">HttpProtocolError</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 19.0.0</p>\n<p>Operating system: Windows 11</p>\n<p>Architecture: x64<br>\n</p>\n</blockquote>",
        "id": 430435206,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711849328
    },
    {
        "content": "<p>elliottt closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8269\">issue #8269</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p>Call <code>wasi::http::outgoing_handler::handle</code> with an invalid argument (e.g., <code>path_with_query</code> not set):</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasi</span>::<span class=\"n\">http</span>::<span class=\"n\">outgoing_handler</span>::<span class=\"p\">{</span><span class=\"n\">handle</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">OutgoingRequest</span><span class=\"p\">};</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasi</span>::<span class=\"n\">http</span>::<span class=\"n\">types</span>::<span class=\"p\">{</span><span class=\"n\">Fields</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Method</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Scheme</span><span class=\"p\">};</span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">fields</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Fields</span>::<span class=\"n\">new</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">req</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">OutgoingRequest</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">fields</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">req</span><span class=\"p\">.</span><span class=\"n\">set_method</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">Method</span>::<span class=\"n\">Get</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">req</span><span class=\"p\">.</span><span class=\"n\">set_scheme</span><span class=\"p\">(</span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">Scheme</span>::<span class=\"n\">Https</span><span class=\"p\">)).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">req</span><span class=\"p\">.</span><span class=\"n\">set_authority</span><span class=\"p\">(</span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"s\">\"example.com\"</span><span class=\"p\">)).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"c1\">// Don't set path/query</span>\n<span class=\"w\">    </span><span class=\"c1\">// req.set_path_with_query(Some(\"/\")).unwrap();</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">res</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">handle</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">None</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"{res:?}\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<ul>\n<li>Compile the example into a WASM component </li>\n<li>Run using <code>wasmtime -W component-model -S http=true</code></li>\n</ul>\n<h3>Expected Results</h3>\n<p><code>handle</code> should return an error, which then gets printed by the WASM component.</p>\n<h3>Actual Results</h3>\n<p><code>handle</code> crashes the wasmtime runtime immediately, and the component code doesn't get a chance to handle the error:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Error</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"p\">.</span><span class=\"err\">\\</span><span class=\"n\">target</span><span class=\"err\">\\</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"err\">\\</span><span class=\"n\">debug</span><span class=\"err\">\\</span><span class=\"n\">wasmtime_demo</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"err\">`</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"mi\">0</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">invoke</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">run</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">function</span>\n<span class=\"w\">    </span><span class=\"mi\">1</span>: <span class=\"nc\">error</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">executing</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">backtrace</span>:\n           <span class=\"mi\">0</span>: <span class=\"mh\">0x291982</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">component</span>:<span class=\"nc\">shim</span><span class=\"o\">!</span><span class=\"n\">indirect</span><span class=\"o\">-</span><span class=\"n\">wasi</span>:<span class=\"nc\">http</span><span class=\"o\">/</span><span class=\"n\">outgoing</span><span class=\"o\">-</span><span class=\"n\">handler</span><span class=\"o\">@</span><span class=\"mf\">0.2.0</span><span class=\"o\">-</span><span class=\"n\">handle</span>\n<span class=\"w\">           </span><span class=\"mi\">1</span>: <span class=\"mh\">0x5c27</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">wasi</span>::<span class=\"n\">bindings</span>::<span class=\"n\">wasi</span>::<span class=\"n\">http</span>::<span class=\"n\">outgoing_handler</span>::<span class=\"n\">handle</span>::<span class=\"n\">h243762d529a071e2</span>\n<span class=\"w\">           </span><span class=\"mi\">2</span>: <span class=\"mh\">0x2287</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">wasmtime_demo</span>::<span class=\"n\">main</span>::<span class=\"n\">h6a3dfdd89fcbbb62</span>\n<span class=\"w\">           </span><span class=\"mi\">3</span>: <span class=\"mh\">0x1e9a</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">core</span>::<span class=\"n\">ops</span>::<span class=\"n\">function</span>::<span class=\"nb\">FnOnce</span>::<span class=\"n\">call_once</span>::<span class=\"n\">hef7075ed4fc37c5f</span>\n<span class=\"w\">           </span><span class=\"mi\">4</span>: <span class=\"mh\">0x18ff</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">std</span>::<span class=\"n\">sys_common</span>::<span class=\"n\">backtrace</span>::<span class=\"n\">__rust_begin_short_backtrace</span>::<span class=\"n\">ha7ad02d581d2e631</span>\n<span class=\"w\">           </span><span class=\"mi\">5</span>: <span class=\"mh\">0x1878</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">std</span>::<span class=\"n\">rt</span>::<span class=\"n\">lang_start</span>::<span class=\"p\">{{</span><span class=\"n\">closure</span><span class=\"p\">}}</span>::<span class=\"n\">h298ac82840374e7e</span>\n<span class=\"w\">           </span><span class=\"mi\">6</span>: <span class=\"mh\">0xf239</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">std</span>::<span class=\"n\">rt</span>::<span class=\"n\">lang_start_internal</span>::<span class=\"n\">h11043ae9961d0df9</span>\n<span class=\"w\">           </span><span class=\"mi\">7</span>: <span class=\"mh\">0x1814</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">std</span>::<span class=\"n\">rt</span>::<span class=\"n\">lang_start</span>::<span class=\"n\">ha68b6582d347d4c9</span>\n<span class=\"w\">           </span><span class=\"mi\">8</span>: <span class=\"mh\">0x2384</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">__main_void</span>\n<span class=\"w\">           </span><span class=\"mi\">9</span>: <span class=\"mh\">0x16d6</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">_start</span>\n<span class=\"w\">          </span><span class=\"mi\">10</span>: <span class=\"mh\">0x28dae9</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">component</span>:<span class=\"nc\">adapter</span>:<span class=\"nc\">wasi_snapshot_preview1</span><span class=\"o\">!</span><span class=\"n\">wasi</span>:<span class=\"nc\">cli</span><span class=\"o\">/</span><span class=\"n\">run</span><span class=\"o\">@</span><span class=\"mf\">0.2.0</span>#<span class=\"n\">run</span>\n<span class=\"w\">       </span><span class=\"n\">note</span>: <span class=\"nc\">using</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">WASMTIME_BACKTRACE_DETAILS</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">show</span><span class=\"w\"> </span><span class=\"n\">more</span><span class=\"w\"> </span><span class=\"n\">debugging</span><span class=\"w\"> </span><span class=\"n\">information</span>\n<span class=\"w\">    </span><span class=\"mi\">2</span>: <span class=\"nc\">ErrorCode</span>::<span class=\"n\">HttpProtocolError</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 19.0.0</p>\n<p>Operating system: Windows 11</p>\n<p>Architecture: x64<br>\n</p>\n</blockquote>",
        "id": 431205268,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712194161
    }
]