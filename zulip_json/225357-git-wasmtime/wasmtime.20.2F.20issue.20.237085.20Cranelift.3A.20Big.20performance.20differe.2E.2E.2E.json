[
    {
        "content": "<p>hungryzzz opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085\">issue #7085</a>:</p>\n<blockquote>\n<p>Hi, I use the <code>Emscripten</code> to compile the attached test case(<code>flops.fast.c</code>) and run it on Wasmtime. And then I do a very small change(<code>flops.slow.c</code>, only move the location of two <code>printf</code> statements) in this case which don't affect the program semantics. However, the execution time of <code>flops.slow.c</code> is almost 4 slower than that of <code>flops.fast.c</code> (measured by <code>time</code> tool).</p>\n<ul>\n<li><code>flops.fast.c</code>: 0.615s</li>\n<li><code>flops.slow.c</code>: 2.395s</li>\n</ul>\n<p>![image](<a href=\"https://github.com/bytecodealliance/wasmtime/assets/32137313/b6ba42cc-d2e7-4bda-83a9-245a4c20c1b8\">https://github.com/bytecodealliance/wasmtime/assets/32137313/b6ba42cc-d2e7-4bda-83a9-245a4c20c1b8</a>)</p>\n<p>And then I run these two cases in <code>WasmEdge</code> and <code>Wamr</code> with AOT mode, and there is almost not difference between the execution time, so I think this bug is not caused by <code>Emscripten</code>.</p>\n<h4>WasmEdge</h4>\n<ul>\n<li><code>flops.fast.c</code>: 0.43s</li>\n<li><code>flops.slow.c</code>: 0.43s</li>\n</ul>\n<h4>Wamr</h4>\n<ul>\n<li><code>flops.fast.c</code>: 0.42s</li>\n<li><code>flops.slow.c</code>: 0.42s</li>\n</ul>\n<h3>Try to Debug</h3>\n<p>I try to increase the number of iterations (the case only contains one loop) from <code>156250000</code> to <code>1562500000</code>, and I find that the execution time will also increase by the same multiple(10), so I guess such small changes will affect the execution time of the loop.</p>\n<p>Since <code>Wasmtime</code> will compile the wasm code to binary using <code>Cranelift</code> before execution, I dump the binary using <code>wasmtime compile flops.fast.wasm -o flops.fast.o</code> and check the difference of the loop between such two binary code but I don't find any semantics difference in my eyes.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code>#<span class=\"w\"> </span><span class=\"n\">flops</span><span class=\"p\">.</span><span class=\"n\">fast</span><span class=\"p\">.</span><span class=\"n\">c</span>\n<span class=\"mi\">2</span><span class=\"n\">f2</span>:    <span class=\"mi\">8</span><span class=\"n\">d</span><span class=\"w\"> </span><span class=\"mi\">71</span><span class=\"w\"> </span><span class=\"mi\">01</span><span class=\"w\">                </span><span class=\"n\">lea</span><span class=\"w\">    </span><span class=\"n\">esi</span><span class=\"p\">,[</span><span class=\"n\">rcx</span><span class=\"o\">+</span><span class=\"mh\">0x1</span><span class=\"p\">]</span>\n<span class=\"mi\">2</span><span class=\"n\">f5</span>:    <span class=\"nc\">c5</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">59</span><span class=\"w\"> </span><span class=\"mi\">25</span><span class=\"w\"> </span><span class=\"mi\">73</span><span class=\"w\"> </span><span class=\"mi\">04</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">    </span><span class=\"n\">vmulsd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm6</span><span class=\"p\">,</span><span class=\"n\">QWORD</span><span class=\"w\"> </span><span class=\"n\">PTR</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">rip</span><span class=\"o\">+</span><span class=\"mh\">0x473</span><span class=\"p\">]</span><span class=\"w\">        </span>#<span class=\"w\"> </span><span class=\"mi\">770</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">wasm</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>::<span class=\"n\">function</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">+</span><span class=\"mh\">0x730</span><span class=\"o\">&gt;</span>\n<span class=\"mi\">2</span><span class=\"n\">fc</span>:    <span class=\"mi\">00</span>\n<span class=\"mi\">2</span><span class=\"n\">fd</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">53</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"n\">e</span><span class=\"w\"> </span><span class=\"n\">fc</span><span class=\"w\">          </span><span class=\"n\">vdivsd</span><span class=\"w\"> </span><span class=\"n\">xmm15</span><span class=\"p\">,</span><span class=\"n\">xmm5</span><span class=\"p\">,</span><span class=\"n\">xmm12</span>\n<span class=\"mi\">302</span>:    <span class=\"nc\">c5</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">e1</span><span class=\"w\">             </span><span class=\"n\">vcvtsi2sd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">ecx</span>\n<span class=\"mi\">306</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">03</span><span class=\"w\"> </span><span class=\"mi\">59</span><span class=\"w\"> </span><span class=\"n\">e4</span><span class=\"w\">          </span><span class=\"n\">vmulsd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm15</span><span class=\"p\">,</span><span class=\"n\">xmm12</span>\n<span class=\"mi\">30</span><span class=\"n\">b</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"n\">c1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">59</span><span class=\"w\"> </span><span class=\"n\">fc</span><span class=\"w\">          </span><span class=\"n\">vmulsd</span><span class=\"w\"> </span><span class=\"n\">xmm7</span><span class=\"p\">,</span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm12</span>\n<span class=\"mi\">310</span>:    <span class=\"nc\">c5</span><span class=\"w\"> </span><span class=\"mi\">63</span><span class=\"w\"> </span><span class=\"mi\">59</span><span class=\"w\"> </span><span class=\"n\">e7</span><span class=\"w\">             </span><span class=\"n\">vmulsd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm3</span><span class=\"p\">,</span><span class=\"n\">xmm7</span>\n<span class=\"mi\">314</span>:    <span class=\"nc\">c5</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">58</span><span class=\"w\"> </span><span class=\"n\">e2</span><span class=\"w\">             </span><span class=\"n\">vaddsd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm2</span>\n<span class=\"mi\">318</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">43</span><span class=\"w\"> </span><span class=\"mi\">59</span><span class=\"w\"> </span><span class=\"n\">e4</span><span class=\"w\">          </span><span class=\"n\">vmulsd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm7</span><span class=\"p\">,</span><span class=\"n\">xmm12</span>\n<span class=\"mi\">31</span><span class=\"n\">d</span>:    <span class=\"nc\">c5</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">58</span><span class=\"w\"> </span><span class=\"n\">e0</span><span class=\"w\">             </span><span class=\"n\">vaddsd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm0</span>\n<span class=\"mi\">321</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">43</span><span class=\"w\"> </span><span class=\"mi\">59</span><span class=\"w\"> </span><span class=\"n\">e4</span><span class=\"w\">          </span><span class=\"n\">vmulsd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm7</span><span class=\"p\">,</span><span class=\"n\">xmm12</span>\n<span class=\"mi\">326</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">58</span><span class=\"w\"> </span><span class=\"n\">e6</span><span class=\"w\">          </span><span class=\"n\">vaddsd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm14</span>\n<span class=\"mi\">32</span><span class=\"n\">b</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">43</span><span class=\"w\"> </span><span class=\"mi\">59</span><span class=\"w\"> </span><span class=\"n\">e4</span><span class=\"w\">          </span><span class=\"n\">vmulsd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm7</span><span class=\"p\">,</span><span class=\"n\">xmm12</span>\n<span class=\"mi\">330</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">58</span><span class=\"w\"> </span><span class=\"n\">e5</span><span class=\"w\">          </span><span class=\"n\">vaddsd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm13</span>\n<span class=\"mi\">335</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">43</span><span class=\"w\"> </span><span class=\"mi\">59</span><span class=\"w\"> </span><span class=\"n\">e4</span><span class=\"w\">          </span><span class=\"n\">vmulsd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm7</span><span class=\"p\">,</span><span class=\"n\">xmm12</span>\n<span class=\"mi\">33</span><span class=\"n\">a</span>:    <span class=\"nc\">f3</span><span class=\"w\"> </span><span class=\"mi\">44</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"mi\">44</span><span class=\"w\"> </span><span class=\"mi\">24</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"w\">    </span><span class=\"n\">movdqu</span><span class=\"w\"> </span><span class=\"n\">xmm8</span><span class=\"p\">,</span><span class=\"n\">XMMWORD</span><span class=\"w\"> </span><span class=\"n\">PTR</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">rsp</span><span class=\"o\">+</span><span class=\"mh\">0x10</span><span class=\"p\">]</span>\n<span class=\"mi\">341</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">58</span><span class=\"w\"> </span><span class=\"n\">e0</span><span class=\"w\">          </span><span class=\"n\">vaddsd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm8</span>\n<span class=\"mi\">346</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">43</span><span class=\"w\"> </span><span class=\"mi\">59</span><span class=\"w\"> </span><span class=\"n\">e4</span><span class=\"w\">          </span><span class=\"n\">vmulsd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm7</span><span class=\"p\">,</span><span class=\"n\">xmm12</span>\n<span class=\"mi\">34</span><span class=\"n\">b</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">58</span><span class=\"w\"> </span><span class=\"n\">e1</span><span class=\"w\">          </span><span class=\"n\">vaddsd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm9</span>\n<span class=\"mi\">350</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">23</span><span class=\"w\"> </span><span class=\"mi\">58</span><span class=\"w\"> </span><span class=\"n\">cc</span><span class=\"w\">          </span><span class=\"n\">vaddsd</span><span class=\"w\"> </span><span class=\"n\">xmm9</span><span class=\"p\">,</span><span class=\"n\">xmm11</span><span class=\"p\">,</span><span class=\"n\">xmm12</span>\n<span class=\"mi\">355</span>:    <span class=\"mi\">81</span><span class=\"w\"> </span><span class=\"n\">fe</span><span class=\"w\"> </span><span class=\"mi\">90</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"mi\">50</span><span class=\"w\"> </span><span class=\"mi\">09</span><span class=\"w\">       </span><span class=\"n\">cmp</span><span class=\"w\">    </span><span class=\"n\">esi</span><span class=\"p\">,</span><span class=\"mh\">0x9502f90</span>\n<span class=\"mi\">35</span><span class=\"n\">b</span>:    <span class=\"mi\">0</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"mi\">84</span><span class=\"w\"> </span><span class=\"mi\">08</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">       </span><span class=\"n\">je</span><span class=\"w\">     </span><span class=\"mi\">369</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">wasm</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>::<span class=\"n\">function</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">+</span><span class=\"mh\">0x329</span><span class=\"o\">&gt;</span>\n<span class=\"mi\">361</span>:    <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">f1</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">    </span><span class=\"n\">rcx</span><span class=\"p\">,</span><span class=\"n\">rsi</span>\n<span class=\"mi\">364</span>:    <span class=\"nc\">e9</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">ff</span><span class=\"w\"> </span><span class=\"n\">ff</span><span class=\"w\"> </span><span class=\"n\">ff</span><span class=\"w\">          </span><span class=\"n\">jmp</span><span class=\"w\">    </span><span class=\"mi\">2</span><span class=\"n\">f2</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">wasm</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>::<span class=\"n\">function</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">+</span><span class=\"mh\">0x2b2</span><span class=\"o\">&gt;</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code>#<span class=\"w\"> </span><span class=\"n\">flops</span><span class=\"p\">.</span><span class=\"n\">slow</span><span class=\"p\">.</span><span class=\"n\">c</span>\n<span class=\"mi\">2</span><span class=\"n\">c5</span>:    <span class=\"mi\">8</span><span class=\"n\">d</span><span class=\"w\"> </span><span class=\"mi\">7</span><span class=\"n\">e</span><span class=\"w\"> </span><span class=\"mi\">01</span><span class=\"w\">                </span><span class=\"n\">lea</span><span class=\"w\">    </span><span class=\"n\">edi</span><span class=\"p\">,[</span><span class=\"n\">rsi</span><span class=\"o\">+</span><span class=\"mh\">0x1</span><span class=\"p\">]</span>\n<span class=\"mi\">2</span><span class=\"n\">c8</span>:    <span class=\"nc\">c5</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">e6</span><span class=\"w\">             </span><span class=\"n\">vcvtsi2sd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">esi</span>\n<span class=\"mi\">2</span><span class=\"n\">cc</span>:    <span class=\"nc\">c5</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">59</span><span class=\"w\"> </span><span class=\"mi\">25</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"mi\">04</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">    </span><span class=\"n\">vmulsd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">QWORD</span><span class=\"w\"> </span><span class=\"n\">PTR</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">rip</span><span class=\"o\">+</span><span class=\"mh\">0x48c</span><span class=\"p\">]</span><span class=\"w\">        </span>#<span class=\"w\"> </span><span class=\"mi\">760</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">wasm</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>::<span class=\"n\">function</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">+</span><span class=\"mh\">0x720</span><span class=\"o\">&gt;</span>\n<span class=\"mi\">2</span><span class=\"n\">d3</span>:    <span class=\"mi\">00</span>\n<span class=\"mi\">2</span><span class=\"n\">d4</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">59</span><span class=\"w\"> </span><span class=\"n\">e4</span><span class=\"w\">          </span><span class=\"n\">vmulsd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm12</span>\n<span class=\"mi\">2</span><span class=\"n\">d9</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">33</span><span class=\"w\"> </span><span class=\"mi\">59</span><span class=\"w\"> </span><span class=\"n\">ec</span><span class=\"w\">          </span><span class=\"n\">vmulsd</span><span class=\"w\"> </span><span class=\"n\">xmm13</span><span class=\"p\">,</span><span class=\"n\">xmm9</span><span class=\"p\">,</span><span class=\"n\">xmm12</span>\n<span class=\"mi\">2</span><span class=\"n\">de</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">13</span><span class=\"w\"> </span><span class=\"mi\">58</span><span class=\"w\"> </span><span class=\"n\">e8</span><span class=\"w\">          </span><span class=\"n\">vaddsd</span><span class=\"w\"> </span><span class=\"n\">xmm13</span><span class=\"p\">,</span><span class=\"n\">xmm13</span><span class=\"p\">,</span><span class=\"n\">xmm8</span>\n<span class=\"mf\">2e3</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">59</span><span class=\"w\"> </span><span class=\"n\">ed</span><span class=\"w\">          </span><span class=\"n\">vmulsd</span><span class=\"w\"> </span><span class=\"n\">xmm13</span><span class=\"p\">,</span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm13</span>\n<span class=\"mf\">2e8</span>:    <span class=\"nc\">c5</span><span class=\"w\"> </span><span class=\"mi\">13</span><span class=\"w\"> </span><span class=\"mi\">58</span><span class=\"w\"> </span><span class=\"n\">ee</span><span class=\"w\">             </span><span class=\"n\">vaddsd</span><span class=\"w\"> </span><span class=\"n\">xmm13</span><span class=\"p\">,</span><span class=\"n\">xmm13</span><span class=\"p\">,</span><span class=\"n\">xmm6</span>\n<span class=\"mi\">2</span><span class=\"n\">ec</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">59</span><span class=\"w\"> </span><span class=\"n\">ed</span><span class=\"w\">          </span><span class=\"n\">vmulsd</span><span class=\"w\"> </span><span class=\"n\">xmm13</span><span class=\"p\">,</span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm13</span>\n<span class=\"mi\">2</span><span class=\"n\">f1</span>:    <span class=\"nc\">c5</span><span class=\"w\"> </span><span class=\"mi\">13</span><span class=\"w\"> </span><span class=\"mi\">58</span><span class=\"w\"> </span><span class=\"n\">ed</span><span class=\"w\">             </span><span class=\"n\">vaddsd</span><span class=\"w\"> </span><span class=\"n\">xmm13</span><span class=\"p\">,</span><span class=\"n\">xmm13</span><span class=\"p\">,</span><span class=\"n\">xmm5</span>\n<span class=\"mi\">2</span><span class=\"n\">f5</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">59</span><span class=\"w\"> </span><span class=\"n\">ed</span><span class=\"w\">          </span><span class=\"n\">vmulsd</span><span class=\"w\"> </span><span class=\"n\">xmm13</span><span class=\"p\">,</span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm13</span>\n<span class=\"mi\">2</span><span class=\"n\">fa</span>:    <span class=\"nc\">c5</span><span class=\"w\"> </span><span class=\"mi\">13</span><span class=\"w\"> </span><span class=\"mi\">58</span><span class=\"w\"> </span><span class=\"n\">ec</span><span class=\"w\">             </span><span class=\"n\">vaddsd</span><span class=\"w\"> </span><span class=\"n\">xmm13</span><span class=\"p\">,</span><span class=\"n\">xmm13</span><span class=\"p\">,</span><span class=\"n\">xmm4</span>\n<span class=\"mi\">2</span><span class=\"n\">fe</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">59</span><span class=\"w\"> </span><span class=\"n\">ed</span><span class=\"w\">          </span><span class=\"n\">vmulsd</span><span class=\"w\"> </span><span class=\"n\">xmm13</span><span class=\"p\">,</span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm13</span>\n<span class=\"mi\">303</span>:    <span class=\"nc\">c5</span><span class=\"w\"> </span><span class=\"mi\">13</span><span class=\"w\"> </span><span class=\"mi\">58</span><span class=\"w\"> </span><span class=\"n\">eb</span><span class=\"w\">             </span><span class=\"n\">vaddsd</span><span class=\"w\"> </span><span class=\"n\">xmm13</span><span class=\"p\">,</span><span class=\"n\">xmm13</span><span class=\"p\">,</span><span class=\"n\">xmm3</span>\n<span class=\"mi\">307</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">59</span><span class=\"w\"> </span><span class=\"n\">e5</span><span class=\"w\">          </span><span class=\"n\">vmulsd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm13</span>\n<span class=\"mi\">30</span><span class=\"n\">c</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">58</span><span class=\"w\"> </span><span class=\"n\">d2</span><span class=\"w\">          </span><span class=\"n\">vaddsd</span><span class=\"w\"> </span><span class=\"n\">xmm10</span><span class=\"p\">,</span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm10</span>\n<span class=\"mi\">311</span>:    <span class=\"nc\">c5</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">58</span><span class=\"w\"> </span><span class=\"mi\">15</span><span class=\"w\"> </span><span class=\"mi\">57</span><span class=\"w\"> </span><span class=\"mi\">04</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">    </span><span class=\"n\">vaddsd</span><span class=\"w\"> </span><span class=\"n\">xmm10</span><span class=\"p\">,</span><span class=\"n\">xmm10</span><span class=\"p\">,</span><span class=\"n\">QWORD</span><span class=\"w\"> </span><span class=\"n\">PTR</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">rip</span><span class=\"o\">+</span><span class=\"mh\">0x457</span><span class=\"p\">]</span><span class=\"w\">        </span>#<span class=\"w\"> </span><span class=\"mi\">770</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">wasm</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>::<span class=\"n\">function</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">+</span><span class=\"mh\">0x730</span><span class=\"o\">&gt;</span>\n<span class=\"mi\">318</span>:    <span class=\"mi\">00</span>\n<span class=\"mi\">319</span>:    <span class=\"mi\">81</span><span class=\"w\"> </span><span class=\"n\">ff</span><span class=\"w\"> </span><span class=\"mi\">90</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"mi\">50</span><span class=\"w\"> </span><span class=\"mi\">09</span><span class=\"w\">       </span><span class=\"n\">cmp</span><span class=\"w\">    </span><span class=\"n\">edi</span><span class=\"p\">,</span><span class=\"mh\">0x9502f90</span>\n<span class=\"mi\">31</span><span class=\"n\">f</span>:    <span class=\"mi\">0</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"mi\">84</span><span class=\"w\"> </span><span class=\"mi\">08</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">       </span><span class=\"n\">je</span><span class=\"w\">     </span><span class=\"mi\">32</span><span class=\"n\">d</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">wasm</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>::<span class=\"n\">function</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">+</span><span class=\"mh\">0x2ed</span><span class=\"o\">&gt;</span>\n<span class=\"mi\">325</span>:    <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">fe</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">    </span><span class=\"n\">rsi</span><span class=\"p\">,</span><span class=\"n\">rdi</span>\n<span class=\"mi\">328</span>:    <span class=\"nc\">e9</span><span class=\"w\"> </span><span class=\"mi\">98</span><span class=\"w\"> </span><span class=\"n\">ff</span><span class=\"w\"> </span><span class=\"n\">ff</span><span class=\"w\"> </span><span class=\"n\">ff</span><span class=\"w\">          </span><span class=\"n\">jmp</span><span class=\"w\">    </span><span class=\"mi\">2</span><span class=\"n\">c5</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">wasm</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>::<span class=\"n\">function</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">+</span><span class=\"mh\">0x285</span><span class=\"o\">&gt;</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<ol>\n<li>\n<p>Compile the two C cases into Wasm: <br>\n<code>\n    emcc  -O2 -s WASM=1 -s TOTAL_MEMORY=512MB flops.fast.c -o flops.fast.wasm\n    emcc  -O2 -s WASM=1 -s TOTAL_MEMORY=512MB flops.slow.c -o flops.slow.wasm\n  </code></p>\n</li>\n<li>\n<p>Run wasm in <code>Wasmtime</code> and collect execution time using <code>time</code><br>\n<code>\n   time wasmtime flops.fast.wasm\n   time wasmtime flops.slow.wasm\n  </code></p>\n</li>\n</ol>\n<h3>Versions and Environment</h3>\n<ul>\n<li><code>Wasmtime</code>: f10d665bb9cacceee6051989e99c0934c542ad84</li>\n<li><code>WasmEdge</code>: 777d8b4ba50567b3b39aa8c9d81a6dfade355af8</li>\n<li><code>Wamr</code>: 1ff41ebdc257b45c9f574d8d1f7ee6df4be79645</li>\n<li>\n<p><code>Emscripten</code>:<br>\n  emcc (Emscripten gcc/clang-like replacement + linker emulating GNU ld) 3.1.45 (ef3e4e3b044de98e1811546e0bc605c65d3412f4)<br>\nclang version 18.0.0 (<a href=\"https://github.com/llvm/llvm-project\">https://github.com/llvm/llvm-project</a> d1e685df45dc5944b43d2547d0138cd4a3ee4efe)<br>\nTarget: wasm32-unknown-emscripten<br>\nThread model: posix<br>\nInstalledDir: /home/ringzzz/emsdk/upstream/bin</p>\n</li>\n<li>\n<p>kernel version: Linux 5.15.0-83-generic</p>\n</li>\n</ul>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/files/12718355/code.zip\">code.zip</a><br>\n</p>\n</blockquote>",
        "id": 393082926,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695666707
    },
    {
        "content": "<p><a href=\"https://github.com/hungryzzz\">hungryzzz</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085\">Issue #7085</a>.</p>",
        "id": 393082927,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695666707
    },
    {
        "content": "<p><a href=\"https://github.com/hungryzzz\">hungryzzz</a> added the cranelift label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085\">Issue #7085</a>.</p>",
        "id": 393082928,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695666707
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085#issuecomment-1734324209\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085\">issue #7085</a>:</p>\n<blockquote>\n<p>I notice that the first loop has a divide instruction (<code>vdivsd</code>) in it, while the second doesn't. That could explain a large difference in performance. Surprisingly, the first loop is actually supposedly the <em>fast</em> case.</p>\n<p>A few questions (I don't have Emscripten installed and don't have the bandwidth to try to reproduce locally, but want to guide exploration here):</p>\n<ul>\n<li>Can you check that the loop in the Wasm bytecode is identical, except that the printfs are moved?</li>\n<li>Can you try to deduce why the divide instruction is appearing in only one loop and not the other?</li>\n<li>Can you obtain some performance-counter stats from the runs? Number of retired instructions, number of cache misses, number of branch mispredicts, that sort of thing. This could uncover something else going on (e.g. if instruction-retired count is much higher than we expect, there may be a difference elsewhere).</li>\n</ul>\n</blockquote>",
        "id": 393090980,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695669390
    },
    {
        "content": "<p>hungryzzz <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085#issuecomment-1734992791\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085\">issue #7085</a>:</p>\n<blockquote>\n<p>@cfallin Thank you very much for your quick reply, I also attach the corresponding Wasm files so you can run it in <code>Wasmtime</code> without <code>Emscripten</code> if you like.</p>\n<h3>Question 1</h3>\n<p>I've checked the corresponding <code>wat</code> file and I found that the movement of <code>printf</code> statements will actually affect the <code>Emscripten</code> to produce the different Wasm bytecode except that the printfs are moved. Specifically, the Wasm bytecode of the loop followed by the <code>printf</code> statements are slightly different. <br>\nThe difference is related to the variable <code>x</code> in the source code. In the fast version, variable <code>x</code> will be calculated in every beginning of the loop even though <code>x</code> is a constant. While in the slow version, variable <code>x</code> is regarded as a constant.(<code>f64.const 0x1.cc8ff6689d97dp-28</code>) So it is very surprising that the number of the instructions in fast version is more than that in slow version but the execution time is the opposite.<br>\n![截屏2023-09-26 15 19 54](<a href=\"https://github.com/bytecodealliance/wasmtime/assets/32137313/1d75c95d-cc1f-49ad-9e38-7192308d6309\">https://github.com/bytecodealliance/wasmtime/assets/32137313/1d75c95d-cc1f-49ad-9e38-7192308d6309</a>)</p>\n<p>![截屏2023-09-26 15 17 21](<a href=\"https://github.com/bytecodealliance/wasmtime/assets/32137313/2465bc24-2d83-48ab-b2bf-a34daed2266f\">https://github.com/bytecodealliance/wasmtime/assets/32137313/2465bc24-2d83-48ab-b2bf-a34daed2266f</a>)</p>\n<h3>Question 2</h3>\n<p>Based on the answer of question 1, the following instructions(<code>vmulsd</code> <code>vdivsd</code>) are to calculate the variable <code>x</code>. (<code>x = piref / ( three * (double)m );</code>)</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code>#<span class=\"w\"> </span><span class=\"n\">flops</span><span class=\"p\">.</span><span class=\"n\">fast</span><span class=\"p\">.</span><span class=\"n\">c</span>\n<span class=\"mi\">2</span><span class=\"n\">f5</span>:    <span class=\"nc\">c5</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">59</span><span class=\"w\"> </span><span class=\"mi\">25</span><span class=\"w\"> </span><span class=\"mi\">73</span><span class=\"w\"> </span><span class=\"mi\">04</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">    </span><span class=\"n\">vmulsd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm6</span><span class=\"p\">,</span><span class=\"n\">QWORD</span><span class=\"w\"> </span><span class=\"n\">PTR</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">rip</span><span class=\"o\">+</span><span class=\"mh\">0x473</span><span class=\"p\">]</span><span class=\"w\">        </span>#<span class=\"w\"> </span><span class=\"mi\">770</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">wasm</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>::<span class=\"n\">function</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">+</span><span class=\"mh\">0x730</span><span class=\"o\">&gt;</span>\n<span class=\"mi\">2</span><span class=\"n\">fc</span>:    <span class=\"mi\">00</span>\n<span class=\"mi\">2</span><span class=\"n\">fd</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">53</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"n\">e</span><span class=\"w\"> </span><span class=\"n\">fc</span><span class=\"w\">          </span><span class=\"n\">vdivsd</span><span class=\"w\"> </span><span class=\"n\">xmm15</span><span class=\"p\">,</span><span class=\"n\">xmm5</span><span class=\"p\">,</span><span class=\"n\">xmm12</span>\n</code></pre></div>\n<p>As for the question 3, I am still doing it.</p>\n</blockquote>",
        "id": 393178715,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695713802
    },
    {
        "content": "<p>hungryzzz edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085#issuecomment-1734992791\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085\">issue #7085</a>:</p>\n<blockquote>\n<p>@cfallin Thank you very much for your quick reply, I also attach the corresponding Wasm files so you can run it in <code>Wasmtime</code> without <code>Emscripten</code> if you like.</p>\n<h3>Question 1</h3>\n<p>I've checked the corresponding <code>wat</code> file and I found that the movement of <code>printf</code> statements will actually affect the <code>Emscripten</code> to produce the different Wasm bytecode except that the printfs are moved. Specifically, the Wasm bytecode of the loop followed by the <code>printf</code> statements are slightly different. <br>\nThe difference is related to the variable <code>x</code> in the source code. In the fast version, variable <code>x</code> will be calculated in every beginning of the loop even though <code>x</code> is a constant. While in the slow version, variable <code>x</code> is regarded as a constant.(<code>f64.const 0x1.cc8ff6689d97dp-28</code>) So it is very surprising that the number of the instructions in fast version is more than that in slow version but the execution time is the opposite.<br>\nHowever, even though the Wasm files are slightly different, their execution times in <code>WasmEdge</code> and <code>Wamr</code> are the same. So I think it is the fault of <code>Wasmtime</code>.<br>\n![截屏2023-09-26 15 19 54](<a href=\"https://github.com/bytecodealliance/wasmtime/assets/32137313/1d75c95d-cc1f-49ad-9e38-7192308d6309\">https://github.com/bytecodealliance/wasmtime/assets/32137313/1d75c95d-cc1f-49ad-9e38-7192308d6309</a>)</p>\n<p>![截屏2023-09-26 15 17 21](<a href=\"https://github.com/bytecodealliance/wasmtime/assets/32137313/2465bc24-2d83-48ab-b2bf-a34daed2266f\">https://github.com/bytecodealliance/wasmtime/assets/32137313/2465bc24-2d83-48ab-b2bf-a34daed2266f</a>)</p>\n<h3>Question 2</h3>\n<p>Based on the answer of question 1, the following instructions(<code>vmulsd</code> <code>vdivsd</code>) are to calculate the variable <code>x</code>. (<code>x = piref / ( three * (double)m );</code>)</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code>#<span class=\"w\"> </span><span class=\"n\">flops</span><span class=\"p\">.</span><span class=\"n\">fast</span><span class=\"p\">.</span><span class=\"n\">c</span>\n<span class=\"mi\">2</span><span class=\"n\">f5</span>:    <span class=\"nc\">c5</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">59</span><span class=\"w\"> </span><span class=\"mi\">25</span><span class=\"w\"> </span><span class=\"mi\">73</span><span class=\"w\"> </span><span class=\"mi\">04</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">    </span><span class=\"n\">vmulsd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm6</span><span class=\"p\">,</span><span class=\"n\">QWORD</span><span class=\"w\"> </span><span class=\"n\">PTR</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">rip</span><span class=\"o\">+</span><span class=\"mh\">0x473</span><span class=\"p\">]</span><span class=\"w\">        </span>#<span class=\"w\"> </span><span class=\"mi\">770</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">wasm</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>::<span class=\"n\">function</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">+</span><span class=\"mh\">0x730</span><span class=\"o\">&gt;</span>\n<span class=\"mi\">2</span><span class=\"n\">fc</span>:    <span class=\"mi\">00</span>\n<span class=\"mi\">2</span><span class=\"n\">fd</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">53</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"n\">e</span><span class=\"w\"> </span><span class=\"n\">fc</span><span class=\"w\">          </span><span class=\"n\">vdivsd</span><span class=\"w\"> </span><span class=\"n\">xmm15</span><span class=\"p\">,</span><span class=\"n\">xmm5</span><span class=\"p\">,</span><span class=\"n\">xmm12</span>\n</code></pre></div>\n<p>As for the question 3, I am still doing it.</p>\n</blockquote>",
        "id": 393179794,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695714304
    },
    {
        "content": "<p>hungryzzz edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085#issuecomment-1734992791\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085\">issue #7085</a>:</p>\n<blockquote>\n<p>@cfallin Thank you very much for your quick reply, I also attach the corresponding Wasm files so you can run it in <code>Wasmtime</code> without <code>Emscripten</code> if you like.</p>\n<h3>Question 1</h3>\n<p>I've checked the corresponding <code>wat</code> file and I found that the movement of <code>printf</code> statements will actually affect the <code>Emscripten</code> to produce the different Wasm bytecode except that the printfs are moved. Specifically, the Wasm bytecode of the loop followed by the <code>printf</code> statements are slightly different. <br>\nThe difference is related to the variable <code>x</code> in the source code. In the fast version, variable <code>x</code> will be calculated in every beginning of the loop even though <code>x</code> is a constant. While in the slow version, variable <code>x</code> is regarded as a constant.(<code>f64.const 0x1.cc8ff6689d97dp-28</code>) So it is very surprising that the number of the instructions in fast version is more than that in slow version but the execution time is the opposite.<br>\nHowever, even though the Wasm files are slightly different, their execution times in <code>WasmEdge</code> and <code>Wamr</code> are the same. So I think it is the fault of <code>Wasmtime</code>.<br>\n![截屏2023-09-26 15 19 54](<a href=\"https://github.com/bytecodealliance/wasmtime/assets/32137313/1d75c95d-cc1f-49ad-9e38-7192308d6309\">https://github.com/bytecodealliance/wasmtime/assets/32137313/1d75c95d-cc1f-49ad-9e38-7192308d6309</a>)</p>\n<p>![截屏2023-09-26 15 17 21](<a href=\"https://github.com/bytecodealliance/wasmtime/assets/32137313/2465bc24-2d83-48ab-b2bf-a34daed2266f\">https://github.com/bytecodealliance/wasmtime/assets/32137313/2465bc24-2d83-48ab-b2bf-a34daed2266f</a>)</p>\n<h3>Question 2</h3>\n<p>Based on the answer of question 1, the following instructions(<code>vmulsd</code> <code>vdivsd</code>) are to calculate the variable <code>x</code>. (<code>x = piref / ( three * (double)m );</code>)</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code>#<span class=\"w\"> </span><span class=\"n\">flops</span><span class=\"p\">.</span><span class=\"n\">fast</span><span class=\"p\">.</span><span class=\"n\">c</span>\n<span class=\"mi\">2</span><span class=\"n\">f5</span>:    <span class=\"nc\">c5</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">59</span><span class=\"w\"> </span><span class=\"mi\">25</span><span class=\"w\"> </span><span class=\"mi\">73</span><span class=\"w\"> </span><span class=\"mi\">04</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">    </span><span class=\"n\">vmulsd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm6</span><span class=\"p\">,</span><span class=\"n\">QWORD</span><span class=\"w\"> </span><span class=\"n\">PTR</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">rip</span><span class=\"o\">+</span><span class=\"mh\">0x473</span><span class=\"p\">]</span><span class=\"w\">        </span>#<span class=\"w\"> </span><span class=\"mi\">770</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">wasm</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>::<span class=\"n\">function</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">+</span><span class=\"mh\">0x730</span><span class=\"o\">&gt;</span>\n<span class=\"mi\">2</span><span class=\"n\">fc</span>:    <span class=\"mi\">00</span>\n<span class=\"mi\">2</span><span class=\"n\">fd</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">53</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"n\">e</span><span class=\"w\"> </span><span class=\"n\">fc</span><span class=\"w\">          </span><span class=\"n\">vdivsd</span><span class=\"w\"> </span><span class=\"n\">xmm15</span><span class=\"p\">,</span><span class=\"n\">xmm5</span><span class=\"p\">,</span><span class=\"n\">xmm12</span>\n</code></pre></div>\n<p>As for the question 3, I am still doing it.</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/files/12724597/flops.fast.wat.txt\">flops.fast.wat.txt</a><br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/files/12724598/flops.slow.wat.txt\">flops.slow.wat.txt</a><br>\n</p>\n</blockquote>",
        "id": 393180100,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695714444
    },
    {
        "content": "<p>hungryzzz edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085#issuecomment-1734992791\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085\">issue #7085</a>:</p>\n<blockquote>\n<p>@cfallin Thank you very much for your quick reply, I also attach the corresponding Wasm files so you can run it in <code>Wasmtime</code> without <code>Emscripten</code> if you like.</p>\n<h3>Question 1</h3>\n<p>I've checked the corresponding <code>wat</code> file and I found that the movement of <code>printf</code> statements will actually affect the <code>Emscripten</code> to produce the different Wasm bytecode except that the printfs are moved. Specifically, the Wasm bytecode of the loop followed by the <code>printf</code> statements are slightly different. <br>\nThe difference is related to the variable <code>x</code> in the source code. In the fast version, variable <code>x</code> will be calculated in every beginning of the loop even though <code>x</code> is a constant. While in the slow version, variable <code>x</code> is regarded as a constant.(<code>f64.const 0x1.cc8ff6689d97dp-28</code>) So it is very surprising that the number of the instructions in fast version is more than that in slow version but the execution time is the opposite.<br>\nHowever, even though the Wasm files are slightly different, their execution times in <code>WasmEdge</code> and <code>Wamr</code> are the same. So I think it is the fault of <code>Wasmtime</code>.<br>\n![截屏2023-09-26 15 19 54](<a href=\"https://github.com/bytecodealliance/wasmtime/assets/32137313/1d75c95d-cc1f-49ad-9e38-7192308d6309\">https://github.com/bytecodealliance/wasmtime/assets/32137313/1d75c95d-cc1f-49ad-9e38-7192308d6309</a>)</p>\n<p>![截屏2023-09-26 15 17 21](<a href=\"https://github.com/bytecodealliance/wasmtime/assets/32137313/2465bc24-2d83-48ab-b2bf-a34daed2266f\">https://github.com/bytecodealliance/wasmtime/assets/32137313/2465bc24-2d83-48ab-b2bf-a34daed2266f</a>)</p>\n<h3>Question 2</h3>\n<p>Based on the answer of question 1, the following instructions(<code>vmulsd</code> <code>vdivsd</code>) are to calculate the variable <code>x</code>. (<code>x = piref / ( three * (double)m );</code>)</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code>#<span class=\"w\"> </span><span class=\"n\">flops</span><span class=\"p\">.</span><span class=\"n\">fast</span><span class=\"p\">.</span><span class=\"n\">c</span>\n<span class=\"mi\">2</span><span class=\"n\">f5</span>:    <span class=\"nc\">c5</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">59</span><span class=\"w\"> </span><span class=\"mi\">25</span><span class=\"w\"> </span><span class=\"mi\">73</span><span class=\"w\"> </span><span class=\"mi\">04</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">    </span><span class=\"n\">vmulsd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm6</span><span class=\"p\">,</span><span class=\"n\">QWORD</span><span class=\"w\"> </span><span class=\"n\">PTR</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">rip</span><span class=\"o\">+</span><span class=\"mh\">0x473</span><span class=\"p\">]</span><span class=\"w\">        </span>#<span class=\"w\"> </span><span class=\"mi\">770</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">wasm</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>::<span class=\"n\">function</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">+</span><span class=\"mh\">0x730</span><span class=\"o\">&gt;</span>\n<span class=\"mi\">2</span><span class=\"n\">fc</span>:    <span class=\"mi\">00</span>\n<span class=\"mi\">2</span><span class=\"n\">fd</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">53</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"n\">e</span><span class=\"w\"> </span><span class=\"n\">fc</span><span class=\"w\">          </span><span class=\"n\">vdivsd</span><span class=\"w\"> </span><span class=\"n\">xmm15</span><span class=\"p\">,</span><span class=\"n\">xmm5</span><span class=\"p\">,</span><span class=\"n\">xmm12</span>\n</code></pre></div>\n<h3>Question 3</h3>\n<p>I use <code>perf</code> to profile and collect the performance counters and the results are as followed. </p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>&gt;<span class=\"w\"> </span>sudo<span class=\"w\"> </span>perf<span class=\"w\"> </span>stat<span class=\"w\"> </span>-d<span class=\"w\"> </span>wasmtime<span class=\"w\"> </span>flops.fast.wasm\n\n<span class=\"w\">   </span>FLOPS<span class=\"w\"> </span>C<span class=\"w\"> </span>Program<span class=\"w\"> </span><span class=\"o\">(</span>Double<span class=\"w\"> </span>Precision<span class=\"o\">)</span>,<span class=\"w\"> </span>V2.0<span class=\"w\"> </span><span class=\"m\">18</span><span class=\"w\"> </span>Dec<span class=\"w\"> </span><span class=\"m\">1992</span>\n\n<span class=\"w\">   </span>Module<span class=\"w\">     </span>Error<span class=\"w\">        </span>RunTime<span class=\"w\">      </span>MFLOPS\n<span class=\"w\">                            </span><span class=\"o\">(</span>usec<span class=\"o\">)</span>\n<span class=\"w\">     </span><span class=\"m\">4</span><span class=\"w\">          </span><span class=\"m\">0</span>.0000<span class=\"w\">      </span><span class=\"m\">0</span>.0000<span class=\"w\">      </span><span class=\"m\">0</span>.0000\n\n<span class=\"w\"> </span>Performance<span class=\"w\"> </span>counter<span class=\"w\"> </span>stats<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"s1\">'wasmtime flops.fast.wasm'</span>:\n\n<span class=\"w\">            </span><span class=\"m\">624</span>.93<span class=\"w\"> </span>msec<span class=\"w\"> </span>task-clock<span class=\"w\">                </span><span class=\"c1\">#    1.000 CPUs utilized</span>\n<span class=\"w\">                </span><span class=\"m\">12</span><span class=\"w\">      </span>context-switches<span class=\"w\">          </span><span class=\"c1\">#   19.202 /sec</span>\n<span class=\"w\">                 </span><span class=\"m\">0</span><span class=\"w\">      </span>cpu-migrations<span class=\"w\">            </span><span class=\"c1\">#    0.000 /sec</span>\n<span class=\"w\">               </span><span class=\"m\">851</span><span class=\"w\">      </span>page-faults<span class=\"w\">               </span><span class=\"c1\">#    1.362 K/sec</span>\n<span class=\"w\">     </span><span class=\"m\">2</span>,286,312,939<span class=\"w\">      </span>cycles<span class=\"w\">                    </span><span class=\"c1\">#    3.659 GHz</span>\n<span class=\"w\">     </span><span class=\"m\">3</span>,766,795,833<span class=\"w\">      </span>instructions<span class=\"w\">              </span><span class=\"c1\">#    1.65  insn per cycle</span>\n<span class=\"w\">       </span><span class=\"m\">315</span>,471,390<span class=\"w\">      </span>branches<span class=\"w\">                  </span><span class=\"c1\">#  504.811 M/sec</span>\n<span class=\"w\">            </span><span class=\"m\">85</span>,240<span class=\"w\">      </span>branch-misses<span class=\"w\">             </span><span class=\"c1\">#    0.03% of all branches</span>\n<span class=\"w\">       </span><span class=\"m\">316</span>,824,991<span class=\"w\">      </span>L1-dcache-loads<span class=\"w\">           </span><span class=\"c1\">#  506.977 M/sec</span>\n<span class=\"w\">           </span><span class=\"m\">294</span>,058<span class=\"w\">      </span>L1-dcache-load-misses<span class=\"w\">     </span><span class=\"c1\">#    0.09% of all L1-dcache accesses</span>\n<span class=\"w\">            </span><span class=\"m\">69</span>,425<span class=\"w\">      </span>LLC-loads<span class=\"w\">                 </span><span class=\"c1\">#  111.093 K/sec</span>\n<span class=\"w\">            </span><span class=\"m\">23</span>,580<span class=\"w\">      </span>LLC-load-misses<span class=\"w\">           </span><span class=\"c1\">#   33.96% of all LL-cache accesses</span>\n\n<span class=\"w\">       </span><span class=\"m\">0</span>.625042358<span class=\"w\"> </span>seconds<span class=\"w\"> </span><span class=\"nb\">time</span><span class=\"w\"> </span>elapsed\n\n<span class=\"w\">       </span><span class=\"m\">0</span>.625360000<span class=\"w\"> </span>seconds<span class=\"w\"> </span>user\n<span class=\"w\">       </span><span class=\"m\">0</span>.000000000<span class=\"w\"> </span>seconds<span class=\"w\"> </span>sys\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>&gt;<span class=\"w\"> </span>sudo<span class=\"w\"> </span>perf<span class=\"w\"> </span>stat<span class=\"w\"> </span>-d<span class=\"w\"> </span>wasmtime<span class=\"w\"> </span>flops.slow.wasm\n\n<span class=\"w\">   </span>FLOPS<span class=\"w\"> </span>C<span class=\"w\"> </span>Program<span class=\"w\"> </span><span class=\"o\">(</span>Double<span class=\"w\"> </span>Precision<span class=\"o\">)</span>,<span class=\"w\"> </span>V2.0<span class=\"w\"> </span><span class=\"m\">18</span><span class=\"w\"> </span>Dec<span class=\"w\"> </span><span class=\"m\">1992</span>\n\n<span class=\"w\">   </span>Module<span class=\"w\">     </span>Error<span class=\"w\">        </span>RunTime<span class=\"w\">      </span>MFLOPS\n<span class=\"w\">                            </span><span class=\"o\">(</span>usec<span class=\"o\">)</span>\n<span class=\"w\">     </span><span class=\"m\">4</span><span class=\"w\">          </span><span class=\"m\">0</span>.0000<span class=\"w\">      </span><span class=\"m\">0</span>.0000<span class=\"w\">      </span><span class=\"m\">0</span>.0000\n\n<span class=\"w\"> </span>Performance<span class=\"w\"> </span>counter<span class=\"w\"> </span>stats<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"s1\">'wasmtime flops.slow.wasm'</span>:\n\n<span class=\"w\">          </span><span class=\"m\">2</span>,390.93<span class=\"w\"> </span>msec<span class=\"w\"> </span>task-clock<span class=\"w\">                </span><span class=\"c1\">#    1.000 CPUs utilized</span>\n<span class=\"w\">                </span><span class=\"m\">19</span><span class=\"w\">      </span>context-switches<span class=\"w\">          </span><span class=\"c1\">#    7.947 /sec</span>\n<span class=\"w\">                 </span><span class=\"m\">1</span><span class=\"w\">      </span>cpu-migrations<span class=\"w\">            </span><span class=\"c1\">#    0.418 /sec</span>\n<span class=\"w\">               </span><span class=\"m\">852</span><span class=\"w\">      </span>page-faults<span class=\"w\">               </span><span class=\"c1\">#  356.347 /sec</span>\n<span class=\"w\">     </span><span class=\"m\">8</span>,797,759,453<span class=\"w\">      </span>cycles<span class=\"w\">                    </span><span class=\"c1\">#    3.680 GHz</span>\n<span class=\"w\">     </span><span class=\"m\">3</span>,299,916,619<span class=\"w\">      </span>instructions<span class=\"w\">              </span><span class=\"c1\">#    0.38  insn per cycle</span>\n<span class=\"w\">       </span><span class=\"m\">315</span>,808,198<span class=\"w\">      </span>branches<span class=\"w\">                  </span><span class=\"c1\">#  132.086 M/sec</span>\n<span class=\"w\">            </span><span class=\"m\">94</span>,853<span class=\"w\">      </span>branch-misses<span class=\"w\">             </span><span class=\"c1\">#    0.03% of all branches</span>\n<span class=\"w\">       </span><span class=\"m\">317</span>,397,865<span class=\"w\">      </span>L1-dcache-loads<span class=\"w\">           </span><span class=\"c1\">#  132.751 M/sec</span>\n<span class=\"w\">           </span><span class=\"m\">295</span>,131<span class=\"w\">      </span>L1-dcache-load-misses<span class=\"w\">     </span><span class=\"c1\">#    0.09% of all L1-dcache accesses</span>\n<span class=\"w\">            </span><span class=\"m\">67</span>,453<span class=\"w\">      </span>LLC-loads<span class=\"w\">                 </span><span class=\"c1\">#   28.212 K/sec</span>\n<span class=\"w\">            </span><span class=\"m\">22</span>,840<span class=\"w\">      </span>LLC-load-misses<span class=\"w\">           </span><span class=\"c1\">#   33.86% of all LL-cache accesses</span>\n\n<span class=\"w\">       </span><span class=\"m\">2</span>.391182093<span class=\"w\"> </span>seconds<span class=\"w\"> </span><span class=\"nb\">time</span><span class=\"w\"> </span>elapsed\n\n<span class=\"w\">       </span><span class=\"m\">2</span>.391560000<span class=\"w\"> </span>seconds<span class=\"w\"> </span>user\n<span class=\"w\">       </span><span class=\"m\">0</span>.000000000<span class=\"w\"> </span>seconds<span class=\"w\"> </span>sys\n</code></pre></div>\n<p>Actually I try to only profile the JITed code execution process instead of the whole <code>Wasmtime</code> process but I don't know how to do that. But I find that the execution time of the JITed binary accounted for 98% of the total execution time under the instruction of <a href=\"https://docs.wasmtime.dev/examples-profiling-perf.html#profiling-with-perfmap\">Profiling with perfmap</a>. So I think maybe the above results are almost accurate to represent the JITed code execution process. </p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/files/12724597/flops.fast.wat.txt\">flops.fast.wat.txt</a><br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/files/12724598/flops.slow.wat.txt\">flops.slow.wat.txt</a><br>\n</p>\n</blockquote>",
        "id": 393189482,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695718147
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085#issuecomment-1735625644\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085\">issue #7085</a>:</p>\n<blockquote>\n<p>I dug into this with @fitzgen yesterday and we were extremely surprised by everything going on here. Ultimately our investigation bore no fruit but I wanted to summarize and write down what we tried out anyway.</p>\n<p>I was able to confirm everything that @hungryzzz is seeing (thanks for the detailed bug and putting in the effort here!). This alone was surprising:</p>\n<ul>\n<li>The loop with <code>fdiv</code> was faster</li>\n<li>The \"bigger loop\" was faster (<code>flops.fast.wasm</code> has larger loop instruction-encoding-wise than <code>flops.slow.wasm</code>)</li>\n</ul>\n<p>The two wasms are indeed different, so there's not like a correctness bug in Cranelift, but there is still seemingly performance left on the table because the two source programs are semantically the same yet perform so different. As for the source-level differences causing differences in wasm, my assumption is that LLVM on the wasm target assumes that <code>printf</code> may modify all local variables. This means that in the \"fast\" program the prints are below some constants but aren't considered constant in the loop. In the \"slow\" program the values are all constant for the loop and are hoisted out. (this isn't a mistake in my writing I understand how weird this sounds).</p>\n<p>Nick and I experimented with a few changes to Cranelift to try to see what was going on:</p>\n<h3>Don't load constants from memory</h3>\n<p>In the \"slow\" program constants in floating-point operations are sunk into the constant pool and are memory operands in instructions, for example:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"mi\">2</span><span class=\"n\">cc</span>:    <span class=\"nc\">c5</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">59</span><span class=\"w\"> </span><span class=\"mi\">25</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"mi\">04</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">    </span><span class=\"n\">vmulsd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">QWORD</span><span class=\"w\"> </span><span class=\"n\">PTR</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">rip</span><span class=\"o\">+</span><span class=\"mh\">0x48c</span><span class=\"p\">]</span><span class=\"w\">        </span>#<span class=\"w\"> </span><span class=\"mi\">760</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">wasm</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>::<span class=\"n\">function</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">+</span><span class=\"mh\">0x720</span><span class=\"o\">&gt;</span>\n<span class=\"o\">..</span><span class=\"p\">.</span>\n<span class=\"mi\">311</span>:    <span class=\"nc\">c5</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">58</span><span class=\"w\"> </span><span class=\"mi\">15</span><span class=\"w\"> </span><span class=\"mi\">57</span><span class=\"w\"> </span><span class=\"mi\">04</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">    </span><span class=\"n\">vaddsd</span><span class=\"w\"> </span><span class=\"n\">xmm10</span><span class=\"p\">,</span><span class=\"n\">xmm10</span><span class=\"p\">,</span><span class=\"n\">QWORD</span><span class=\"w\"> </span><span class=\"n\">PTR</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">rip</span><span class=\"o\">+</span><span class=\"mh\">0x457</span><span class=\"p\">]</span><span class=\"w\">        </span>#<span class=\"w\"> </span><span class=\"mi\">770</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">wasm</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>::<span class=\"n\">function</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">+</span><span class=\"mh\">0x730</span><span class=\"o\">&gt;</span>\n<span class=\"mi\">318</span>:    <span class=\"mi\">00</span>\n</code></pre></div>\n<p>We tried not doing this and instead forcing materialization of the constant. This was a <code>movq</code> of a 64-bit value into a general-purpose register followed by <code>vmovd</code> of that register into an <code>xmm</code> register, followed by use of the <code>xmm</code> register.</p>\n<p>This improved performance of the \"slow\" program to being faster than the \"fast\" program, as one would expect with a loop not having <code>fdiv</code> being faster than the other loop. Additionally this approached the performance of the native program compiled with <code>-Os</code> (to thwart vectorization)</p>\n<h3>Don't rematerialize float constants</h3>\n<p>Next we thought to improve the \"fast\" loop to hoist out its recalculation of the <code>x</code> constant each time the loop turns. We removed the explicit rematerializatoin of floating-point-constants. This, surprisingly, slowed down both programs. Both programs were then just as slow as the original \"slow\" program. Both source changes resulted in the same loop:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">  </span><span class=\"mf\">1.63</span><span class=\"w\"> </span><span class=\"err\">│</span><span class=\"mi\">2</span><span class=\"n\">ad</span>:<span class=\"err\">┌─→</span><span class=\"n\">lea</span><span class=\"w\">       </span><span class=\"mh\">0x1</span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rdi</span><span class=\"p\">),</span><span class=\"o\">%</span><span class=\"n\">esi</span><span class=\"w\">                                                                                                                                                                                                                                                                                        </span><span class=\"err\">▒</span>\n<span class=\"w\">       </span><span class=\"err\">│</span><span class=\"w\">    </span><span class=\"err\">│</span><span class=\"w\">  </span><span class=\"n\">vcvtsi2sd</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">edi</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">xmm2</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">xmm2</span><span class=\"w\">                                                                                                                                                                                                                                                                                      </span><span class=\"err\">▒</span>\n<span class=\"w\">  </span><span class=\"mf\">6.14</span><span class=\"w\"> </span><span class=\"err\">│</span><span class=\"w\">    </span><span class=\"err\">│</span><span class=\"w\">  </span><span class=\"n\">vmulsd</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">xmm5</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">xmm2</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">xmm2</span><span class=\"w\">                                                                                                                                                                                                                                                                                     </span><span class=\"err\">◆</span>\n<span class=\"w\">  </span><span class=\"mf\">6.71</span><span class=\"w\"> </span><span class=\"err\">│</span><span class=\"w\">    </span><span class=\"err\">│</span><span class=\"w\">  </span><span class=\"n\">vmulsd</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">xmm2</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">xmm2</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">xmm13</span><span class=\"w\">                                                                                                                                                                                                                                                                                    </span><span class=\"err\">▒</span>\n<span class=\"w\">  </span><span class=\"mf\">6.32</span><span class=\"w\"> </span><span class=\"err\">│</span><span class=\"w\">    </span><span class=\"err\">│</span><span class=\"w\">  </span><span class=\"n\">vmulsd</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">xmm13</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">xmm11</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">xmm2</span><span class=\"w\">                                                                                                                                                                                                                                                                                   </span><span class=\"err\">▒</span>\n<span class=\"w\">  </span><span class=\"mf\">6.53</span><span class=\"w\"> </span><span class=\"err\">│</span><span class=\"w\">    </span><span class=\"err\">│</span><span class=\"w\">  </span><span class=\"n\">vaddsd</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">xmm1</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">xmm2</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">xmm2</span><span class=\"w\">                                                                                                                                                                                                                                                                                     </span><span class=\"err\">▒</span>\n<span class=\"w\">  </span><span class=\"mf\">7.39</span><span class=\"w\"> </span><span class=\"err\">│</span><span class=\"w\">    </span><span class=\"err\">│</span><span class=\"w\">  </span><span class=\"n\">vmulsd</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">xmm2</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">xmm13</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">xmm2</span><span class=\"w\">                                                                                                                                                                                                                                                                                    </span><span class=\"err\">▒</span>\n<span class=\"w\">  </span><span class=\"mf\">6.92</span><span class=\"w\"> </span><span class=\"err\">│</span><span class=\"w\">    </span><span class=\"err\">│</span><span class=\"w\">  </span><span class=\"n\">vaddsd</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">xmm7</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">xmm2</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">xmm2</span><span class=\"w\">                                                                                                                                                                                                                                                                                     </span><span class=\"err\">▒</span>\n<span class=\"w\">  </span><span class=\"mf\">6.68</span><span class=\"w\"> </span><span class=\"err\">│</span><span class=\"w\">    </span><span class=\"err\">│</span><span class=\"w\">  </span><span class=\"n\">vmulsd</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">xmm2</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">xmm13</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">xmm2</span><span class=\"w\">                                                                                                                                                                                                                                                                                    </span><span class=\"err\">▒</span>\n<span class=\"w\">  </span><span class=\"mf\">6.79</span><span class=\"w\"> </span><span class=\"err\">│</span><span class=\"w\">    </span><span class=\"err\">│</span><span class=\"w\">  </span><span class=\"n\">vaddsd</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">xmm6</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">xmm2</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">xmm2</span><span class=\"w\">                                                                                                                                                                                                                                                                                     </span><span class=\"err\">▒</span>\n<span class=\"w\">  </span><span class=\"mf\">6.05</span><span class=\"w\"> </span><span class=\"err\">│</span><span class=\"w\">    </span><span class=\"err\">│</span><span class=\"w\">  </span><span class=\"n\">vmulsd</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">xmm2</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">xmm13</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">xmm2</span><span class=\"w\">                                                                                                                                                                                                                                                                                    </span><span class=\"err\">▒</span>\n<span class=\"w\">  </span><span class=\"mf\">6.54</span><span class=\"w\"> </span><span class=\"err\">│</span><span class=\"w\">    </span><span class=\"err\">│</span><span class=\"w\">  </span><span class=\"n\">vaddsd</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">xmm4</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">xmm2</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">xmm2</span><span class=\"w\">                                                                                                                                                                                                                                                                                     </span><span class=\"err\">▒</span>\n<span class=\"w\">  </span><span class=\"mf\">6.00</span><span class=\"w\"> </span><span class=\"err\">│</span><span class=\"w\">    </span><span class=\"err\">│</span><span class=\"w\">  </span><span class=\"n\">vmulsd</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">xmm2</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">xmm13</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">xmm2</span><span class=\"w\">                                                                                                                                                                                                                                                                                    </span><span class=\"err\">▒</span>\n<span class=\"w\">  </span><span class=\"mf\">6.90</span><span class=\"w\"> </span><span class=\"err\">│</span><span class=\"w\">    </span><span class=\"err\">│</span><span class=\"w\">  </span><span class=\"n\">vaddsd</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">xmm3</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">xmm2</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">xmm2</span><span class=\"w\">                                                                                                                                                                                                                                                                                     </span><span class=\"err\">▒</span>\n<span class=\"w\">  </span><span class=\"mf\">6.23</span><span class=\"w\"> </span><span class=\"err\">│</span><span class=\"w\">    </span><span class=\"err\">│</span><span class=\"w\">  </span><span class=\"n\">vmulsd</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">xmm2</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">xmm13</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">xmm2</span><span class=\"w\">                                                                                                                                                                                                                                                                                    </span><span class=\"err\">▒</span>\n<span class=\"w\">  </span><span class=\"mf\">6.88</span><span class=\"w\"> </span><span class=\"err\">│</span><span class=\"w\">    </span><span class=\"err\">│</span><span class=\"w\">  </span><span class=\"n\">vaddsd</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">xmm14</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">xmm2</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">xmm2</span><span class=\"w\">                                                                                                                                                                                                                                                                                    </span><span class=\"err\">▒</span>\n<span class=\"w\">  </span><span class=\"mf\">6.29</span><span class=\"w\"> </span><span class=\"err\">│</span><span class=\"w\">    </span><span class=\"err\">│</span><span class=\"w\">  </span><span class=\"n\">vaddsd</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">xmm0</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">xmm2</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">xmm14</span><span class=\"w\">                                                                                                                                                                                                                                                                                    </span><span class=\"err\">▒</span>\n<span class=\"w\">       </span><span class=\"err\">│</span><span class=\"w\">    </span><span class=\"err\">│</span><span class=\"w\">  </span><span class=\"n\">cmp</span><span class=\"w\">       </span><span class=\"cp\">$</span><span class=\"mh\">0x9502f90</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">esi</span><span class=\"w\">                                                                                                                                                                                                                                                                                       </span><span class=\"err\">▒</span>\n<span class=\"w\">       </span><span class=\"err\">│</span><span class=\"w\">    </span><span class=\"err\">│↓</span><span class=\"w\"> </span><span class=\"n\">je</span><span class=\"w\">        </span><span class=\"mi\">306</span><span class=\"w\">                                                                                                                                                                                                                                                                                                   </span><span class=\"err\">▒</span>\n<span class=\"w\">       </span><span class=\"err\">│</span><span class=\"w\">    </span><span class=\"err\">│</span><span class=\"w\">  </span><span class=\"n\">mov</span><span class=\"w\">       </span><span class=\"o\">%</span><span class=\"n\">rsi</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">rdi</span><span class=\"w\">                                                                                                                                                                                                                                                                                             </span><span class=\"err\">▒</span>\n<span class=\"w\">       </span><span class=\"err\">│</span><span class=\"w\">    </span><span class=\"err\">└──</span><span class=\"n\">jmpq</span><span class=\"w\">      </span><span class=\"mi\">2</span><span class=\"n\">ad</span><span class=\"w\">                                                                                                                                                                                                                                                                                                   </span><span class=\"err\">▒</span>\n<span class=\"w\">       </span><span class=\"err\">│</span><span class=\"mi\">306</span>:   <span class=\"nc\">mov</span><span class=\"w\">       </span><span class=\"mh\">0x20</span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rsp</span><span class=\"p\">),</span><span class=\"o\">%</span><span class=\"n\">rcx</span><span class=\"w\">                                                                                                                                                                                                                                                                                       </span><span class=\"err\">▒</span>\n</code></pre></div>\n<p>What was extremely surprisin<br>\n[message truncated]</p>\n</blockquote>",
        "id": 393242861,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695737505
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085#issuecomment-1735628240\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085\">issue #7085</a>:</p>\n<blockquote>\n<p>Oh I should also say we never bottomed out why Cranelift would sink the calculation of <code>x</code> into the loop. In the source program this isn't in the loop, so somehow Cranelift ended up putting the calculation into the loop, and we never fully bottomed that out. The reason we didn't try to take a look was that the program which sunk the calculation into the loop was faster (counter-intuitively). This is probably an independent bug, however.</p>\n</blockquote>",
        "id": 393243167,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695737584
    },
    {
        "content": "<p>hungryzzz <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085#issuecomment-1736088429\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085\">issue #7085</a>:</p>\n<blockquote>\n<p>@alexcrichton @cfallin Hi, I extract the loop code snippet from the whole binary and wrap them using inline assembly. I find <br>\nthere exists execution time differences between the two binary snippets. I think it will more convenient to do the further experiment on this one so I paste it.</p>\n<ul>\n<li><code>test_quick()</code>: 0.61s</li>\n<li><code>test_slow()</code>: 2.38s</li>\n</ul>\n<p><div class=\"codehilite\" data-code-language=\"C\"><pre><span></span><code><span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;stdint.h&gt;</span>\n\n<span class=\"kt\">double</span><span class=\"w\"> </span><span class=\"n\">three</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">3.0</span><span class=\"p\">;</span>\n<span class=\"kt\">double</span><span class=\"w\"> </span><span class=\"n\">one</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">1.0</span><span class=\"p\">;</span>\n<span class=\"kt\">double</span><span class=\"w\"> </span><span class=\"n\">B1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">-0.4999999999982</span><span class=\"p\">;</span>\n<span class=\"kt\">double</span><span class=\"w\"> </span><span class=\"n\">B2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">0.4166666664651E-1</span><span class=\"p\">;</span>\n<span class=\"kt\">double</span><span class=\"w\"> </span><span class=\"n\">B3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">-0.1388888805755E-2</span><span class=\"p\">;</span>\n<span class=\"kt\">double</span><span class=\"w\"> </span><span class=\"n\">B4</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">0.24801428034E-4</span><span class=\"p\">;</span>\n<span class=\"kt\">double</span><span class=\"w\"> </span><span class=\"n\">B5</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">-0.2754213324E-6</span><span class=\"p\">;</span>\n<span class=\"kt\">double</span><span class=\"w\"> </span><span class=\"n\">B6</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">0.20189405E-8</span><span class=\"p\">;</span>\n<span class=\"kt\">double</span><span class=\"w\"> </span><span class=\"n\">piref</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">3.14159265358979324</span><span class=\"p\">;</span>\n<span class=\"kt\">double</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">156250000</span><span class=\"p\">;</span>\n<span class=\"kt\">double</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">6.70206E-9</span><span class=\"p\">;</span>\n<span class=\"kt\">double</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">1000.0</span><span class=\"p\">;</span>\n\n<span class=\"kt\">uint64_t</span><span class=\"w\"> </span><span class=\"nf\">test_quick</span><span class=\"p\">(){</span>\n<span class=\"w\">  </span><span class=\"n\">__asm__</span><span class=\"w\"> </span><span class=\"n\">__volatile__</span><span class=\"p\">(</span>\n<span class=\"s\">\"vmovsd %0,%%xmm5</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\"> </span><span class=\"c1\">// piref</span>\n<span class=\"s\">\"vmovsd %1,%%xmm6</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\"> </span><span class=\"c1\">// m</span>\n<span class=\"s\">\"vmovsd %2,%%xmm13</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\">  </span><span class=\"c1\">// B2</span>\n<span class=\"s\">\"vmovsd %3,%%xmm14</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\">  </span><span class=\"c1\">// B3</span>\n<span class=\"s\">\"vmovsd %4,%%xmm0</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\">   </span><span class=\"c1\">// B4</span>\n<span class=\"s\">\"vmovsd %5,%%xmm2</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\">   </span><span class=\"c1\">// B5</span>\n<span class=\"s\">\"vmovsd %6,%%xmm3</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\">   </span><span class=\"c1\">// B6</span>\n<span class=\"s\">\"vmovsd %7,%%xmm9</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\">   </span><span class=\"c1\">// s</span>\n<span class=\"s\">\"mov $1,%%rcx</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"START:</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"lea    0x1(%%rcx),%%esi</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vmulsd %8,%%xmm6,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\">  </span><span class=\"c1\">// three</span>\n<span class=\"s\">\"vdivsd %%xmm12,%%xmm5,%%xmm15</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vcvtsi2sd %%ecx,%%xmm12,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vmulsd %%xmm12,%%xmm15,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vmulsd %%xmm12,%%xmm12,%%xmm7</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vmulsd %%xmm7,%%xmm3,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vaddsd %%xmm2,%%xmm12,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vmulsd %%xmm12,%%xmm7,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vaddsd %%xmm0,%%xmm12,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vmulsd %%xmm12,%%xmm7,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vaddsd %%xmm14,%%xmm12,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vmulsd %%xmm12,%%xmm7,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vaddsd %%xmm13,%%xmm12,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vmulsd %%xmm12,%%xmm7,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"movdqu %9,%%xmm8</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\">   </span><span class=\"c1\">// B1</span>\n<span class=\"s\">\"vaddsd %%xmm8,%%xmm12,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vmulsd %%xmm12,%%xmm7,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vaddsd %%xmm9,%%xmm12,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vaddsd %%xmm12,%%xmm11,%%xmm9</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"cmp    $0x9502f90,%%esi</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"je     EXIT</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"mov    %%rsi,%%rcx</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"jmp   START</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"EXIT:</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"o\">:</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">piref</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">B2</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">B3</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">B4</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">B5</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">B6</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">three</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">B1</span><span class=\"p\">)</span><span class=\"o\">:</span>\n<span class=\"w\">            </span><span class=\"o\">:</span><span class=\"s\">\"rcx\"</span><span class=\"p\">,</span><span class=\"s\">\"rsi\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">uint64_t</span><span class=\"w\"> </span><span class=\"nf\">test_quick_mod</span><span class=\"p\">(){</span>\n<span class=\"w\">  </span><span class=\"n\">__asm__</span><span class=\"w\"> </span><span class=\"n\">__volatile__</span><span class=\"p\">(</span>\n<span class=\"s\">\"vmovsd %0,%%xmm5</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\"> </span><span class=\"c1\">// piref</span>\n<span class=\"s\">\"vmovsd %1,%%xmm6</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\"> </span><span class=\"c1\">// m</span>\n<span class=\"s\">\"vmovsd %2,%%xmm13</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\">  </span><span class=\"c1\">// B2</span>\n<span class=\"s\">\"vmovsd %3,%%xmm14</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\">  </span><span class=\"c1\">// B3</span>\n<span class=\"s\">\"vmovsd %4,%%xmm0</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\">   </span><span class=\"c1\">// B4</span>\n<span class=\"s\">\"vmovsd %5,%%xmm2</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\">   </span><span class=\"c1\">// B5</span>\n<span class=\"s\">\"vmovsd %6,%%xmm3</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\">   </span><span class=\"c1\">// B6</span>\n<span class=\"s\">\"vmovsd %7,%%xmm9</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\">   </span><span class=\"c1\">// s</span>\n<span class=\"s\">\"mov $1,%%rcx</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"START1:</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"lea    0x1(%%rcx),%%esi</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vmulsd %8,%%xmm6,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\">  </span><span class=\"c1\">// three</span>\n<span class=\"s\">\"vdivsd %%xmm12,%%xmm5,%%xmm15</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vcvtsi2sd %%ecx,%%xmm12,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vmulsd %%xmm12,%%xmm15,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vmulsd %%xmm12,%%xmm12,%%xmm7</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vmulsd %%xmm7,%%xmm3,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vaddsd %%xmm2,%%xmm12,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vmulsd %%xmm12,%%xmm7,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vaddsd %%xmm0,%%xmm12,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vmulsd %%xmm12,%%xmm7,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vaddsd %%xmm14,%%xmm12,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vmulsd %%xmm12,%%xmm7,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vaddsd %%xmm13,%%xmm12,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vmulsd %%xmm12,%%xmm7,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"movdqu %9,%%xmm8</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\">   </span><span class=\"c1\">// B1</span>\n<span class=\"s\">\"vaddsd %%xmm8,%%xmm12,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vmulsd %%xmm12,%%xmm7,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vaddsd %%xmm9,%%xmm12,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vaddsd %%xmm12,%%xmm11,%%xmm9</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"cmp    $0x9502f90,%%esi</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"je     EXIT1</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"mov    %%rsi,%%rcx</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"jmp   START1</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"EXIT1:</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"o\">:</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">piref</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">B2</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">B3</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">B4</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">B5</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">B6</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">three</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">B1</span><span class=\"p\">)</span><span class=\"o\">:</span>\n<span class=\"w\">            </span><span class=\"o\">:</span><span class=\"s\">\"rcx\"</span><span class=\"p\">,</span><span class=\"s\">\"rsi\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">uint64_t</span><span class=\"w\"> </span><span class=\"nf\">test_slow</span><span class=\"p\">(){</span>\n<span class=\"w\">    </span><span class=\"n\">__asm__</span><span class=\"w\"> </span><span class=\"n\">__volatile__</span><span class=\"p\">(</span>\n<span class=\"s\">\"vmovsd %0,%%xmm3</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\">  </span><span class=\"c1\">// B1</span>\n<span class=\"s\">\"vmovsd %1,%%xmm4</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\">  </span><span class=\"c1\">// B2</span>\n<span class=\"s\">\"vmovsd %2,%%xmm5</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\">  </span><span class=\"c1\">// B3</span>\n<span class=\"s\">\"vmovsd %3,%%xmm6</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\">  </span><span class=\"c1\">// B4</span>\n<span class=\"s\">\"vmovsd %4,%%xmm8</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\">  </span><span class=\"c1\">// B5</span>\n<span class=\"s\">\"vmovsd %5,%%xmm9</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\">  </span><span class=\"c1\">// B6</span>\n<span class=\"s\">\"vmovsd %6,%%xmm10</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"mov $1,%%rsi</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"START2:</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"lea    0x1(%%rsi),%%edi</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vcvtsi2sd %%esi,%%xmm12,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vmulsd %7,%%xmm12,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\">     </span><span class=\"c1\">// x</span>\n<span class=\"s\">\"vmulsd %%xmm12,%%xmm12,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vmulsd %%xmm12,%%xmm9,%%xmm13</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vaddsd %%xmm8,%%xmm13,%%xmm13</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vmulsd %%xmm13,%%xmm12,%%xmm13</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vaddsd %%xmm6,%%xmm13,%%xmm13</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vmulsd %%xmm13,%%xmm12,%%xmm13</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vaddsd %%xmm5,%%xmm13,%%xmm13</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vmulsd %%xmm13,%%xmm12,%%xmm13</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vaddsd %%xmm4,%%xmm13,%%xmm13</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vmulsd %%xmm13,%%xmm12,%%xmm13</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vaddsd %%xmm3,%%xmm13,%%xmm13</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vmulsd %%xmm13,%%xmm12,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vaddsd %%xmm10,%%xmm12,%%xmm10</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vaddsd %8,%%xmm10,%%xmm10</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"cmp    $0x9502f90,%%edi</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"je     EXIT2</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"mov    %%rdi,%%rsi</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"jmp    START2</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"EXIT2:</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"o\">:</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">B1</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">B2</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">B3</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">B4</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">B5</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">B6</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">one</span><span class=\"p\">)</span><span class=\"o\">:</span>\n<span class=\"w\">            </span><span class=\"o\">:</span><span class=\"s\">\"rsi\"</span><span class=\"p\">,</span><span class=\"s\">\"rdi\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n\n<span class=\"w\">  </span><span class=\"c1\">// test_quick();</span>\n<span class=\"w\">  </span><span class=\"n\">test_slow</span><span class=\"p\">();</span>\n\n<span class=\"w\">  </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 393303272,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695753757
    },
    {
        "content": "<p>hungryzzz edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085#issuecomment-1736088429\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085\">issue #7085</a>:</p>\n<blockquote>\n<p>@alexcrichton @cfallin Hi, I extract the loop code snippet from the whole binary and wrap them using inline assembly. I find <br>\nthere exists execution time differences between the two binary snippets. I think it will more convenient to do the further experiment on this one so I paste it.</p>\n<ul>\n<li><code>test_quick()</code>: 0.61s</li>\n<li><code>test_slow()</code>: 2.38s</li>\n</ul>\n<p><div class=\"codehilite\" data-code-language=\"C\"><pre><span></span><code><span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;stdint.h&gt;</span>\n\n<span class=\"kt\">double</span><span class=\"w\"> </span><span class=\"n\">three</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">3.0</span><span class=\"p\">;</span>\n<span class=\"kt\">double</span><span class=\"w\"> </span><span class=\"n\">one</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">1.0</span><span class=\"p\">;</span>\n<span class=\"kt\">double</span><span class=\"w\"> </span><span class=\"n\">B1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">-0.4999999999982</span><span class=\"p\">;</span>\n<span class=\"kt\">double</span><span class=\"w\"> </span><span class=\"n\">B2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">0.4166666664651E-1</span><span class=\"p\">;</span>\n<span class=\"kt\">double</span><span class=\"w\"> </span><span class=\"n\">B3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">-0.1388888805755E-2</span><span class=\"p\">;</span>\n<span class=\"kt\">double</span><span class=\"w\"> </span><span class=\"n\">B4</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">0.24801428034E-4</span><span class=\"p\">;</span>\n<span class=\"kt\">double</span><span class=\"w\"> </span><span class=\"n\">B5</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">-0.2754213324E-6</span><span class=\"p\">;</span>\n<span class=\"kt\">double</span><span class=\"w\"> </span><span class=\"n\">B6</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">0.20189405E-8</span><span class=\"p\">;</span>\n<span class=\"kt\">double</span><span class=\"w\"> </span><span class=\"n\">piref</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">3.14159265358979324</span><span class=\"p\">;</span>\n<span class=\"kt\">double</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">156250000</span><span class=\"p\">;</span>\n<span class=\"kt\">double</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">6.70206E-9</span><span class=\"p\">;</span>\n<span class=\"kt\">double</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">1000.0</span><span class=\"p\">;</span>\n\n<span class=\"kt\">uint64_t</span><span class=\"w\"> </span><span class=\"nf\">test_quick</span><span class=\"p\">(){</span>\n<span class=\"w\">  </span><span class=\"n\">__asm__</span><span class=\"w\"> </span><span class=\"n\">__volatile__</span><span class=\"p\">(</span>\n<span class=\"s\">\"vmovsd %0,%%xmm5</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\"> </span><span class=\"c1\">// piref</span>\n<span class=\"s\">\"vmovsd %1,%%xmm6</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\"> </span><span class=\"c1\">// m</span>\n<span class=\"s\">\"vmovsd %2,%%xmm13</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\">  </span><span class=\"c1\">// B2</span>\n<span class=\"s\">\"vmovsd %3,%%xmm14</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\">  </span><span class=\"c1\">// B3</span>\n<span class=\"s\">\"vmovsd %4,%%xmm0</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\">   </span><span class=\"c1\">// B4</span>\n<span class=\"s\">\"vmovsd %5,%%xmm2</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\">   </span><span class=\"c1\">// B5</span>\n<span class=\"s\">\"vmovsd %6,%%xmm3</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\">   </span><span class=\"c1\">// B6</span>\n<span class=\"s\">\"vmovsd %7,%%xmm9</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\">   </span><span class=\"c1\">// s</span>\n<span class=\"s\">\"mov $1,%%rcx</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"START:</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"lea    0x1(%%rcx),%%esi</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vmulsd %8,%%xmm6,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\">  </span><span class=\"c1\">// three</span>\n<span class=\"s\">\"vdivsd %%xmm12,%%xmm5,%%xmm15</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vcvtsi2sd %%ecx,%%xmm12,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vmulsd %%xmm12,%%xmm15,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vmulsd %%xmm12,%%xmm12,%%xmm7</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vmulsd %%xmm7,%%xmm3,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vaddsd %%xmm2,%%xmm12,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vmulsd %%xmm12,%%xmm7,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vaddsd %%xmm0,%%xmm12,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vmulsd %%xmm12,%%xmm7,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vaddsd %%xmm14,%%xmm12,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vmulsd %%xmm12,%%xmm7,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vaddsd %%xmm13,%%xmm12,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vmulsd %%xmm12,%%xmm7,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"movdqu %9,%%xmm8</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\">   </span><span class=\"c1\">// B1</span>\n<span class=\"s\">\"vaddsd %%xmm8,%%xmm12,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vmulsd %%xmm12,%%xmm7,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vaddsd %%xmm9,%%xmm12,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vaddsd %%xmm12,%%xmm11,%%xmm9</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"cmp    $0x9502f90,%%esi</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"je     EXIT</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"mov    %%rsi,%%rcx</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"jmp   START</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"EXIT:</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"o\">:</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">piref</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">B2</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">B3</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">B4</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">B5</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">B6</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">three</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">B1</span><span class=\"p\">)</span><span class=\"o\">:</span>\n<span class=\"w\">            </span><span class=\"o\">:</span><span class=\"s\">\"rcx\"</span><span class=\"p\">,</span><span class=\"s\">\"rsi\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">uint64_t</span><span class=\"w\"> </span><span class=\"nf\">test_slow</span><span class=\"p\">(){</span>\n<span class=\"w\">    </span><span class=\"n\">__asm__</span><span class=\"w\"> </span><span class=\"n\">__volatile__</span><span class=\"p\">(</span>\n<span class=\"s\">\"vmovsd %0,%%xmm3</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\">  </span><span class=\"c1\">// B1</span>\n<span class=\"s\">\"vmovsd %1,%%xmm4</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\">  </span><span class=\"c1\">// B2</span>\n<span class=\"s\">\"vmovsd %2,%%xmm5</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\">  </span><span class=\"c1\">// B3</span>\n<span class=\"s\">\"vmovsd %3,%%xmm6</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\">  </span><span class=\"c1\">// B4</span>\n<span class=\"s\">\"vmovsd %4,%%xmm8</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\">  </span><span class=\"c1\">// B5</span>\n<span class=\"s\">\"vmovsd %5,%%xmm9</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\">  </span><span class=\"c1\">// B6</span>\n<span class=\"s\">\"vmovsd %6,%%xmm10</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"mov $1,%%rsi</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"START2:</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"lea    0x1(%%rsi),%%edi</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vcvtsi2sd %%esi,%%xmm12,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vmulsd %7,%%xmm12,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"w\">     </span><span class=\"c1\">// x</span>\n<span class=\"s\">\"vmulsd %%xmm12,%%xmm12,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vmulsd %%xmm12,%%xmm9,%%xmm13</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vaddsd %%xmm8,%%xmm13,%%xmm13</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vmulsd %%xmm13,%%xmm12,%%xmm13</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vaddsd %%xmm6,%%xmm13,%%xmm13</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vmulsd %%xmm13,%%xmm12,%%xmm13</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vaddsd %%xmm5,%%xmm13,%%xmm13</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vmulsd %%xmm13,%%xmm12,%%xmm13</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vaddsd %%xmm4,%%xmm13,%%xmm13</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vmulsd %%xmm13,%%xmm12,%%xmm13</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vaddsd %%xmm3,%%xmm13,%%xmm13</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vmulsd %%xmm13,%%xmm12,%%xmm12</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vaddsd %%xmm10,%%xmm12,%%xmm10</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"vaddsd %8,%%xmm10,%%xmm10</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"cmp    $0x9502f90,%%edi</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"je     EXIT2</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"mov    %%rdi,%%rsi</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"jmp    START2</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span>\n<span class=\"s\">\"EXIT2:</span><span class=\"se\">\\n\\t</span><span class=\"s\">\"</span><span class=\"o\">:</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">B1</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">B2</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">B3</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">B4</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">B5</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">B6</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">),</span><span class=\"s\">\"=m\"</span><span class=\"p\">(</span><span class=\"n\">one</span><span class=\"p\">)</span><span class=\"o\">:</span>\n<span class=\"w\">            </span><span class=\"o\">:</span><span class=\"s\">\"rsi\"</span><span class=\"p\">,</span><span class=\"s\">\"rdi\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n\n<span class=\"w\">  </span><span class=\"c1\">// test_quick();</span>\n<span class=\"w\">  </span><span class=\"n\">test_slow</span><span class=\"p\">();</span>\n\n<span class=\"w\">  </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 393303388,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695753802
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085#issuecomment-1736188367\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085\">issue #7085</a>:</p>\n<blockquote>\n<p>Oh wow that's super helpful, thank you so much for that!</p>\n</blockquote>",
        "id": 393314663,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695757714
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085#issuecomment-1736396415\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085\">issue #7085</a>:</p>\n<blockquote>\n<p>Aha we have a fix! Turns out this is a false dependency issue where <code>vcvtsi2sd</code> is preserving the upper bits of one of its registers when we don't actually want it to. That created a dependency when it shouldn't have to the previous iteration of the loop which slowed down everything. Inserting a <code>vxorps</code> in front of <code>vcvtsi2sd</code> fixes the issue.</p>\n<p>With all the above learnings I'll look to send more PRs in the near future!</p>\n</blockquote>",
        "id": 393341593,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695767792
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085#issuecomment-1736403679\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085\">issue #7085</a>:</p>\n<blockquote>\n<p>AKA we are <a href=\"https://searchfox.org/mozilla-central/source/js/src/jit/x86-shared/MacroAssembler-x86-shared.h#188-194\">missing this</a> (similar code from spidermonkey)</p>\n</blockquote>",
        "id": 393342318,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695768202
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085#issuecomment-1736412384\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085\">issue #7085</a>:</p>\n<blockquote>\n<p>Wow, that's devious -- thank you @alexcrichton for working that out (and @fitzgen too)!</p>\n</blockquote>",
        "id": 393343442,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695768861
    },
    {
        "content": "<p>hungryzzz <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085#issuecomment-1736854873\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085\">issue #7085</a>:</p>\n<blockquote>\n<p>@alexcrichton Thank you very much for your quick reply! I have a question about the above solution. I also dump the loop binary generated by <code>WasmEdge</code> and <code>Wamr</code>(they are the same, all depend on LLVM). I find <code>vcvtsi2sd</code> is used alone, but the execution time of them are quick. So actually, I am still confused about when should we insert a <code>vxorps </code> in front of  <code>vcvtsi2sd</code>? Or when will the slowing down be triggered. Thanks again!</p>\n<p><div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"c1\"># The loop binary generated by Wamr. Loop expansion optimization is performed.</span>\n<span class=\"m\">410</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>9b<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c4<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm4,%xmm12,%xmm0\n<span class=\"m\">414</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c0<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm0,%xmm0,%xmm0\n<span class=\"m\">418</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>cb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c8<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm0,%xmm6,%xmm1\n41c:<span class=\"w\">    </span>c5<span class=\"w\"> </span>f3<span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span><span class=\"nb\">cd</span><span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm5,%xmm1,%xmm1\n<span class=\"m\">420</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c9<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm1,%xmm0,%xmm1\n<span class=\"m\">424</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>f3<span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span>cb<span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm3,%xmm1,%xmm1\n<span class=\"m\">428</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c9<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm1,%xmm0,%xmm1\n42c:<span class=\"w\">    </span>c5<span class=\"w\"> </span>f3<span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span>ca<span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm2,%xmm1,%xmm1\n<span class=\"m\">430</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c9<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm1,%xmm0,%xmm1\n<span class=\"m\">434</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>8b<span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span>c9<span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm1,%xmm14,%xmm1\n<span class=\"m\">438</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c9<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm1,%xmm0,%xmm1\n43c:<span class=\"w\">    </span>c5<span class=\"w\"> </span><span class=\"m\">93</span><span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span>c9<span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm1,%xmm13,%xmm1\n<span class=\"m\">440</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c1<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm1,%xmm0,%xmm0\n<span class=\"m\">444</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span>c7<span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm7,%xmm0,%xmm0\n<span class=\"m\">448</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>a3<span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span>f8<span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm0,%xmm11,%xmm7\n44c:<span class=\"w\">    </span>3d<span class=\"w\"> </span><span class=\"m\">90</span><span class=\"w\"> </span>2f<span class=\"w\"> </span><span class=\"m\">50</span><span class=\"w\"> </span><span class=\"m\">09</span><span class=\"w\">          </span>cmp<span class=\"w\">    </span><span class=\"nv\">$0</span>x9502f90,%eax\n<span class=\"m\">451</span>:<span class=\"w\">    </span><span class=\"m\">74</span><span class=\"w\"> </span>4c<span class=\"w\">                   </span>je<span class=\"w\">     </span>49f<span class=\"w\"> </span>&lt;aot_func#1+0x47f&gt;\n<span class=\"m\">453</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span><span class=\"m\">83</span><span class=\"w\"> </span>2a<span class=\"w\"> </span>c0<span class=\"w\">             </span>vcvtsi2sd<span class=\"w\"> </span>%eax,%xmm15,%xmm0\n<span class=\"m\">457</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>9b<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c0<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm0,%xmm12,%xmm0\n45b:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c0<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm0,%xmm0,%xmm0\n45f:<span class=\"w\">    </span>c5<span class=\"w\"> </span>cb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c8<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm0,%xmm6,%xmm1\n<span class=\"m\">463</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>f3<span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span><span class=\"nb\">cd</span><span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm5,%xmm1,%xmm1\n<span class=\"m\">467</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c9<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm1,%xmm0,%xmm1\n46b:<span class=\"w\">    </span>c5<span class=\"w\"> </span>f3<span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span>cb<span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm3,%xmm1,%xmm1\n46f:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c9<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm1,%xmm0,%xmm1\n<span class=\"m\">473</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>f3<span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span>ca<span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm2,%xmm1,%xmm1\n<span class=\"m\">477</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c9<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm1,%xmm0,%xmm1\n47b:<span class=\"w\">    </span>c5<span class=\"w\"> </span>8b<span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span>c9<span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm1,%xmm14,%xmm1\n47f:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c9<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm1,%xmm0,%xmm1\n<span class=\"m\">483</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span><span class=\"m\">93</span><span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span>c9<span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm1,%xmm13,%xmm1\n<span class=\"m\">487</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c1<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm1,%xmm0,%xmm0\n48b:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span>c7<span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm7,%xmm0,%xmm0\n48f:<span class=\"w\">    </span>c5<span class=\"w\"> </span>a3<span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span>f8<span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm0,%xmm11,%xmm7\n<span class=\"m\">493</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>ab<span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span>e4<span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm4,%xmm10,%xmm4\n<span class=\"m\">497</span>:<span class=\"w\">    </span><span class=\"m\">83</span><span class=\"w\"> </span>c0<span class=\"w\"> </span><span class=\"m\">02</span><span class=\"w\">                </span>add<span class=\"w\">    </span><span class=\"nv\">$0</span>x2,%eax\n49a:<span class=\"w\">    </span>e9<span class=\"w\"> </span><span class=\"m\">71</span><span class=\"w\"> </span>ff<span class=\"w\"> </span>ff<span class=\"w\"> </span>ff<span class=\"w\">          </span>jmpq<span class=\"w\">   </span><span class=\"m\">410</span><span class=\"w\"> </span>&lt;aot_func#1+0x3f0&gt;\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 393413106,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695799809
    },
    {
        "content": "<p>hungryzzz edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085#issuecomment-1736854873\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085\">issue #7085</a>:</p>\n<blockquote>\n<p>@alexcrichton Thank you very much for your quick reply! I have a question about the above solution. I also dump the loop binary generated by <code>WasmEdge</code> and <code>Wamr</code>(results are the same, all depend on LLVM). I find <code>vcvtsi2sd</code> is used alone, but the execution time of them are quick. So actually, I am still confused about when should we insert a <code>vxorps </code> in front of  <code>vcvtsi2sd</code>? Or when will the slowing down be triggered. Thanks again!</p>\n<p><div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"c1\"># The loop binary generated by Wamr. Loop expansion optimization is performed.</span>\n<span class=\"m\">410</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>9b<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c4<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm4,%xmm12,%xmm0\n<span class=\"m\">414</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c0<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm0,%xmm0,%xmm0\n<span class=\"m\">418</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>cb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c8<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm0,%xmm6,%xmm1\n41c:<span class=\"w\">    </span>c5<span class=\"w\"> </span>f3<span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span><span class=\"nb\">cd</span><span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm5,%xmm1,%xmm1\n<span class=\"m\">420</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c9<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm1,%xmm0,%xmm1\n<span class=\"m\">424</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>f3<span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span>cb<span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm3,%xmm1,%xmm1\n<span class=\"m\">428</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c9<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm1,%xmm0,%xmm1\n42c:<span class=\"w\">    </span>c5<span class=\"w\"> </span>f3<span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span>ca<span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm2,%xmm1,%xmm1\n<span class=\"m\">430</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c9<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm1,%xmm0,%xmm1\n<span class=\"m\">434</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>8b<span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span>c9<span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm1,%xmm14,%xmm1\n<span class=\"m\">438</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c9<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm1,%xmm0,%xmm1\n43c:<span class=\"w\">    </span>c5<span class=\"w\"> </span><span class=\"m\">93</span><span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span>c9<span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm1,%xmm13,%xmm1\n<span class=\"m\">440</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c1<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm1,%xmm0,%xmm0\n<span class=\"m\">444</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span>c7<span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm7,%xmm0,%xmm0\n<span class=\"m\">448</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>a3<span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span>f8<span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm0,%xmm11,%xmm7\n44c:<span class=\"w\">    </span>3d<span class=\"w\"> </span><span class=\"m\">90</span><span class=\"w\"> </span>2f<span class=\"w\"> </span><span class=\"m\">50</span><span class=\"w\"> </span><span class=\"m\">09</span><span class=\"w\">          </span>cmp<span class=\"w\">    </span><span class=\"nv\">$0</span>x9502f90,%eax\n<span class=\"m\">451</span>:<span class=\"w\">    </span><span class=\"m\">74</span><span class=\"w\"> </span>4c<span class=\"w\">                   </span>je<span class=\"w\">     </span>49f<span class=\"w\"> </span>&lt;aot_func#1+0x47f&gt;\n<span class=\"m\">453</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span><span class=\"m\">83</span><span class=\"w\"> </span>2a<span class=\"w\"> </span>c0<span class=\"w\">             </span>vcvtsi2sd<span class=\"w\"> </span>%eax,%xmm15,%xmm0\n<span class=\"m\">457</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>9b<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c0<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm0,%xmm12,%xmm0\n45b:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c0<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm0,%xmm0,%xmm0\n45f:<span class=\"w\">    </span>c5<span class=\"w\"> </span>cb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c8<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm0,%xmm6,%xmm1\n<span class=\"m\">463</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>f3<span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span><span class=\"nb\">cd</span><span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm5,%xmm1,%xmm1\n<span class=\"m\">467</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c9<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm1,%xmm0,%xmm1\n46b:<span class=\"w\">    </span>c5<span class=\"w\"> </span>f3<span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span>cb<span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm3,%xmm1,%xmm1\n46f:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c9<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm1,%xmm0,%xmm1\n<span class=\"m\">473</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>f3<span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span>ca<span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm2,%xmm1,%xmm1\n<span class=\"m\">477</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c9<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm1,%xmm0,%xmm1\n47b:<span class=\"w\">    </span>c5<span class=\"w\"> </span>8b<span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span>c9<span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm1,%xmm14,%xmm1\n47f:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c9<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm1,%xmm0,%xmm1\n<span class=\"m\">483</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span><span class=\"m\">93</span><span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span>c9<span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm1,%xmm13,%xmm1\n<span class=\"m\">487</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c1<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm1,%xmm0,%xmm0\n48b:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span>c7<span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm7,%xmm0,%xmm0\n48f:<span class=\"w\">    </span>c5<span class=\"w\"> </span>a3<span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span>f8<span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm0,%xmm11,%xmm7\n<span class=\"m\">493</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>ab<span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span>e4<span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm4,%xmm10,%xmm4\n<span class=\"m\">497</span>:<span class=\"w\">    </span><span class=\"m\">83</span><span class=\"w\"> </span>c0<span class=\"w\"> </span><span class=\"m\">02</span><span class=\"w\">                </span>add<span class=\"w\">    </span><span class=\"nv\">$0</span>x2,%eax\n49a:<span class=\"w\">    </span>e9<span class=\"w\"> </span><span class=\"m\">71</span><span class=\"w\"> </span>ff<span class=\"w\"> </span>ff<span class=\"w\"> </span>ff<span class=\"w\">          </span>jmpq<span class=\"w\">   </span><span class=\"m\">410</span><span class=\"w\"> </span>&lt;aot_func#1+0x3f0&gt;\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 393413199,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695799837
    },
    {
        "content": "<p>hungryzzz edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085#issuecomment-1736854873\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085\">issue #7085</a>:</p>\n<blockquote>\n<p>@alexcrichton Thank you very much for your quick reply! I have a question about the above solution. I also dump the loop binary generated by <code>WasmEdge</code> and <code>Wamr</code>(results are the same, all depend on LLVM). I find <code>vcvtsi2sd</code> is used alone, but the execution time of them are quick. So actually, I am still confused about when should we insert a <code>vxorps</code> in front of  <code>vcvtsi2sd</code>? Or when will the slowing down be triggered. Thanks again!</p>\n<p><div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"c1\"># The loop binary generated by Wamr. Loop expansion optimization is performed.</span>\n<span class=\"m\">410</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>9b<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c4<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm4,%xmm12,%xmm0\n<span class=\"m\">414</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c0<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm0,%xmm0,%xmm0\n<span class=\"m\">418</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>cb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c8<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm0,%xmm6,%xmm1\n41c:<span class=\"w\">    </span>c5<span class=\"w\"> </span>f3<span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span><span class=\"nb\">cd</span><span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm5,%xmm1,%xmm1\n<span class=\"m\">420</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c9<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm1,%xmm0,%xmm1\n<span class=\"m\">424</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>f3<span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span>cb<span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm3,%xmm1,%xmm1\n<span class=\"m\">428</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c9<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm1,%xmm0,%xmm1\n42c:<span class=\"w\">    </span>c5<span class=\"w\"> </span>f3<span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span>ca<span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm2,%xmm1,%xmm1\n<span class=\"m\">430</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c9<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm1,%xmm0,%xmm1\n<span class=\"m\">434</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>8b<span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span>c9<span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm1,%xmm14,%xmm1\n<span class=\"m\">438</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c9<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm1,%xmm0,%xmm1\n43c:<span class=\"w\">    </span>c5<span class=\"w\"> </span><span class=\"m\">93</span><span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span>c9<span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm1,%xmm13,%xmm1\n<span class=\"m\">440</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c1<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm1,%xmm0,%xmm0\n<span class=\"m\">444</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span>c7<span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm7,%xmm0,%xmm0\n<span class=\"m\">448</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>a3<span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span>f8<span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm0,%xmm11,%xmm7\n44c:<span class=\"w\">    </span>3d<span class=\"w\"> </span><span class=\"m\">90</span><span class=\"w\"> </span>2f<span class=\"w\"> </span><span class=\"m\">50</span><span class=\"w\"> </span><span class=\"m\">09</span><span class=\"w\">          </span>cmp<span class=\"w\">    </span><span class=\"nv\">$0</span>x9502f90,%eax\n<span class=\"m\">451</span>:<span class=\"w\">    </span><span class=\"m\">74</span><span class=\"w\"> </span>4c<span class=\"w\">                   </span>je<span class=\"w\">     </span>49f<span class=\"w\"> </span>&lt;aot_func#1+0x47f&gt;\n<span class=\"m\">453</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span><span class=\"m\">83</span><span class=\"w\"> </span>2a<span class=\"w\"> </span>c0<span class=\"w\">             </span>vcvtsi2sd<span class=\"w\"> </span>%eax,%xmm15,%xmm0\n<span class=\"m\">457</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>9b<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c0<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm0,%xmm12,%xmm0\n45b:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c0<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm0,%xmm0,%xmm0\n45f:<span class=\"w\">    </span>c5<span class=\"w\"> </span>cb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c8<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm0,%xmm6,%xmm1\n<span class=\"m\">463</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>f3<span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span><span class=\"nb\">cd</span><span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm5,%xmm1,%xmm1\n<span class=\"m\">467</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c9<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm1,%xmm0,%xmm1\n46b:<span class=\"w\">    </span>c5<span class=\"w\"> </span>f3<span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span>cb<span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm3,%xmm1,%xmm1\n46f:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c9<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm1,%xmm0,%xmm1\n<span class=\"m\">473</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>f3<span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span>ca<span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm2,%xmm1,%xmm1\n<span class=\"m\">477</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c9<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm1,%xmm0,%xmm1\n47b:<span class=\"w\">    </span>c5<span class=\"w\"> </span>8b<span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span>c9<span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm1,%xmm14,%xmm1\n47f:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c9<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm1,%xmm0,%xmm1\n<span class=\"m\">483</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span><span class=\"m\">93</span><span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span>c9<span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm1,%xmm13,%xmm1\n<span class=\"m\">487</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">59</span><span class=\"w\"> </span>c1<span class=\"w\">             </span>vmulsd<span class=\"w\"> </span>%xmm1,%xmm0,%xmm0\n48b:<span class=\"w\">    </span>c5<span class=\"w\"> </span>fb<span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span>c7<span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm7,%xmm0,%xmm0\n48f:<span class=\"w\">    </span>c5<span class=\"w\"> </span>a3<span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span>f8<span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm0,%xmm11,%xmm7\n<span class=\"m\">493</span>:<span class=\"w\">    </span>c5<span class=\"w\"> </span>ab<span class=\"w\"> </span><span class=\"m\">58</span><span class=\"w\"> </span>e4<span class=\"w\">             </span>vaddsd<span class=\"w\"> </span>%xmm4,%xmm10,%xmm4\n<span class=\"m\">497</span>:<span class=\"w\">    </span><span class=\"m\">83</span><span class=\"w\"> </span>c0<span class=\"w\"> </span><span class=\"m\">02</span><span class=\"w\">                </span>add<span class=\"w\">    </span><span class=\"nv\">$0</span>x2,%eax\n49a:<span class=\"w\">    </span>e9<span class=\"w\"> </span><span class=\"m\">71</span><span class=\"w\"> </span>ff<span class=\"w\"> </span>ff<span class=\"w\"> </span>ff<span class=\"w\">          </span>jmpq<span class=\"w\">   </span><span class=\"m\">410</span><span class=\"w\"> </span>&lt;aot_func#1+0x3f0&gt;\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 393413286,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695799869
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085#issuecomment-1737528952\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085\">issue #7085</a>:</p>\n<blockquote>\n<p>Good question! It turns out that LLVM is quite clever about this. The semantics of <code>vcvtsi2sd %eax,%xmm15,%xmm0</code> is that it converts the 32-bit value in <code>%eax</code> into a 64-bit double and places it in the lower bits of <code>%xmm0</code>. The upper 64-bits of the <code>%xmm15</code> register are additionally copied to the upper bits of <code>%xmm0</code>. This means that <code>vcvtsi2sd</code> depends on two registers, where the int-to-float operation is typically instead considered a unary operation as only depending on <code>%eax</code>. That's the bug in Cranelift, we don't consider the <code>%xmm15</code> dependency and filled in <code>%xmm0</code> there, meaning the instruction depends on something we didn't intend.</p>\n<p>LLVM, however, already knows this, and outside the loop you'll find a <code>vxorps</code> (or something similar) to zero out the <code>%xmm15</code> register. Because <code>%xmm15</code> isn't written by the loop that means it's zero for the entire loop and the zeroing operation was hoisted out of the loop. Effectively LLVM set aside a dependency chain for the entire loop which is loop invariant for <code>vcvtsi2sd</code> to use.</p>\n<p>In Cranelift we're not really positioned to be quite so clever, so our solution is going to be to use <code>vxorps</code> before all int-to-float instructions.</p>\n</blockquote>",
        "id": 393507116,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695825334
    },
    {
        "content": "<p>hungryzzz <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085#issuecomment-1737599204\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085\">issue #7085</a>:</p>\n<blockquote>\n<blockquote>\n<p>Good question! It turns out that LLVM is quite clever about this. The semantics of <code>vcvtsi2sd %eax,%xmm15,%xmm0</code> is that it converts the 32-bit value in <code>%eax</code> into a 64-bit double and places it in the lower bits of <code>%xmm0</code>. The upper 64-bits of the <code>%xmm15</code> register are additionally copied to the upper bits of <code>%xmm0</code>. This means that <code>vcvtsi2sd</code> depends on two registers, where the int-to-float operation is typically instead considered a unary operation as only depending on <code>%eax</code>. That's the bug in Cranelift, we don't consider the <code>%xmm15</code> dependency and filled in <code>%xmm0</code> there, meaning the instruction depends on something we didn't intend.</p>\n<p>LLVM, however, already knows this, and outside the loop you'll find a <code>vxorps</code> (or something similar) to zero out the <code>%xmm15</code> register. Because <code>%xmm15</code> isn't written by the loop that means it's zero for the entire loop and the zeroing operation was hoisted out of the loop. Effectively LLVM set aside a dependency chain for the entire loop which is loop invariant for <code>vcvtsi2sd</code> to use.</p>\n<p>In Cranelift we're not really positioned to be quite so clever, so our solution is going to be to use <code>vxorps</code> before all int-to-float instructions.</p>\n</blockquote>\n<p>Hi, I try to find the instruction out of the loop to zero out the <code>%xmm15</code> register but I find nothing. So I guess maybe the tricks of using <code>vcvtsi2sd</code> is related to the register allocation algorithm in LLVM?</p>\n<p>![截屏2023-09-27 23 11 12](<a href=\"https://github.com/bytecodealliance/wasmtime/assets/32137313/cbf54a77-22cc-46e7-a037-bbb416622f23\">https://github.com/bytecodealliance/wasmtime/assets/32137313/cbf54a77-22cc-46e7-a037-bbb416622f23</a>)</p>\n</blockquote>",
        "id": 393515204,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695827505
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085#issuecomment-1737612393\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085\">issue #7085</a>:</p>\n<blockquote>\n<p>Ah your above snippet didn't have the code before the loop and I don't see the loop in your screenshot there, so I can't say for sure. In the native LLVM output, which I suspect is similar to what you're seeing, the vxorps of xmm15 ahead of the loop is what I was seeing. Regardless though xmm15 isn't used during the loop, so there's no dependency chain that the cpu needs to worry about anyway. Technically vxorps for xmm15 isn't necessary given the duration of this loop anyway.</p>\n</blockquote>",
        "id": 393516654,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695827945
    },
    {
        "content": "<p>hungryzzz <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085#issuecomment-1737649089\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085\">issue #7085</a>:</p>\n<blockquote>\n<p>Hi, the whole binary file generated by <code>Wamr</code> is attached, I find that there is not instruction out of the loop to zero out the %xmm15 register. As you can see I can find only one <code>xmm15</code>(<code>vcvtsi2sd %eax,%xmm15,%xmm0</code>) in this file. So I just consider in which stage does LLVM handle such special instruction?<br>\nIn my understanding, the solution in SpiderMonkey(insert <code>vxorps</code> in front of every <code>vcvtsi2sd</code>) occurs in code emit(maybe?). I just wonder whether this register dependency problem could be solved during register allocation?<br>\nThanks again! (I really hope that my questions would not take up too much of your time...)</p>\n<p>![截屏2023-09-27 23 25 49](<a href=\"https://github.com/bytecodealliance/wasmtime/assets/32137313/9971a87b-bb9c-43e0-a1e5-2ce771c7c5c1\">https://github.com/bytecodealliance/wasmtime/assets/32137313/9971a87b-bb9c-43e0-a1e5-2ce771c7c5c1</a>)<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/files/12740470/wamr.slow.log\">wamr.slow.binary</a></p>\n</blockquote>",
        "id": 393521044,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695829248
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085#issuecomment-1737658887\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085\">issue #7085</a>:</p>\n<blockquote>\n<p>No worries! Indeed you're right in that the entire file doesn't touch xmm15 except for that instruction. From a register-dependency perspective that's ok. The SpiderMonkey solution is a simple \"I have no context but want to break dependencies\" solution where LLVM is taking a more complicated \"I have total context and want to break the dependency\" perspective. This can theoretically be solved with register allocation but our register allocator isn't built for that sort of constraint.</p>\n<p>Basically there's really low-level details in play for why this is slow in Cranelift and fast in LLVM. I can only guess what heuristics and optimizations are in LLVM, I'm not familiar with LLVM's source code myself. In Cranelift we're likely to take a simple approach of feeding a xorps into <code>cvtsi2s{s,d}</code> to break dependency chains. This is suboptimal since, as LLVM shows, it's not strictly necessary in 100% of cases. That being said it does additionally break 100% of dependency chains, so this issue won't resurface. The follow-on problem perhaps is that icache will be hit slightly but that's hopefully not a 4x difference like you're seeing here.</p>\n</blockquote>",
        "id": 393522099,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695829604
    },
    {
        "content": "<p>hungryzzz <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085#issuecomment-1737668763\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085\">issue #7085</a>:</p>\n<blockquote>\n<p>Got it! Really really thank you @alexcrichton very much!</p>\n</blockquote>",
        "id": 393523161,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695829967
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085#issuecomment-1737875147\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085\">issue #7085</a>:</p>\n<blockquote>\n<p>I've confirmed that locally at least <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7098\">https://github.com/bytecodealliance/wasmtime/pull/7098</a> fixes the performance here.</p>\n<p>Thanks again for reporting this issue @hungryzzz!</p>\n</blockquote>",
        "id": 393547438,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695838898
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7085\">issue #7085</a>:</p>\n<blockquote>\n<p>Hi, I use the <code>Emscripten</code> to compile the attached test case(<code>flops.fast.c</code>) and run it on Wasmtime. And then I do a very small change(<code>flops.slow.c</code>, only move the location of two <code>printf</code> statements) in this case which don't affect the program semantics. However, the execution time of <code>flops.slow.c</code> is almost 4 slower than that of <code>flops.fast.c</code> (measured by <code>time</code> tool).</p>\n<ul>\n<li><code>flops.fast.c</code>: 0.615s</li>\n<li><code>flops.slow.c</code>: 2.395s</li>\n</ul>\n<p>![image](<a href=\"https://github.com/bytecodealliance/wasmtime/assets/32137313/b6ba42cc-d2e7-4bda-83a9-245a4c20c1b8\">https://github.com/bytecodealliance/wasmtime/assets/32137313/b6ba42cc-d2e7-4bda-83a9-245a4c20c1b8</a>)</p>\n<p>And then I run these two cases in <code>WasmEdge</code> and <code>Wamr</code> with AOT mode, and there is almost not difference between the execution time, so I think this bug is not caused by <code>Emscripten</code>.</p>\n<h4>WasmEdge</h4>\n<ul>\n<li><code>flops.fast.c</code>: 0.43s</li>\n<li><code>flops.slow.c</code>: 0.43s</li>\n</ul>\n<h4>Wamr</h4>\n<ul>\n<li><code>flops.fast.c</code>: 0.42s</li>\n<li><code>flops.slow.c</code>: 0.42s</li>\n</ul>\n<h3>Try to Debug</h3>\n<p>I try to increase the number of iterations (the case only contains one loop) from <code>156250000</code> to <code>1562500000</code>, and I find that the execution time will also increase by the same multiple(10), so I guess such small changes will affect the execution time of the loop.</p>\n<p>Since <code>Wasmtime</code> will compile the wasm code to binary using <code>Cranelift</code> before execution, I dump the binary using <code>wasmtime compile flops.fast.wasm -o flops.fast.o</code> and check the difference of the loop between such two binary code but I don't find any semantics difference in my eyes.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code>#<span class=\"w\"> </span><span class=\"n\">flops</span><span class=\"p\">.</span><span class=\"n\">fast</span><span class=\"p\">.</span><span class=\"n\">c</span>\n<span class=\"mi\">2</span><span class=\"n\">f2</span>:    <span class=\"mi\">8</span><span class=\"n\">d</span><span class=\"w\"> </span><span class=\"mi\">71</span><span class=\"w\"> </span><span class=\"mi\">01</span><span class=\"w\">                </span><span class=\"n\">lea</span><span class=\"w\">    </span><span class=\"n\">esi</span><span class=\"p\">,[</span><span class=\"n\">rcx</span><span class=\"o\">+</span><span class=\"mh\">0x1</span><span class=\"p\">]</span>\n<span class=\"mi\">2</span><span class=\"n\">f5</span>:    <span class=\"nc\">c5</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">59</span><span class=\"w\"> </span><span class=\"mi\">25</span><span class=\"w\"> </span><span class=\"mi\">73</span><span class=\"w\"> </span><span class=\"mi\">04</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">    </span><span class=\"n\">vmulsd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm6</span><span class=\"p\">,</span><span class=\"n\">QWORD</span><span class=\"w\"> </span><span class=\"n\">PTR</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">rip</span><span class=\"o\">+</span><span class=\"mh\">0x473</span><span class=\"p\">]</span><span class=\"w\">        </span>#<span class=\"w\"> </span><span class=\"mi\">770</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">wasm</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>::<span class=\"n\">function</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">+</span><span class=\"mh\">0x730</span><span class=\"o\">&gt;</span>\n<span class=\"mi\">2</span><span class=\"n\">fc</span>:    <span class=\"mi\">00</span>\n<span class=\"mi\">2</span><span class=\"n\">fd</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">53</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"n\">e</span><span class=\"w\"> </span><span class=\"n\">fc</span><span class=\"w\">          </span><span class=\"n\">vdivsd</span><span class=\"w\"> </span><span class=\"n\">xmm15</span><span class=\"p\">,</span><span class=\"n\">xmm5</span><span class=\"p\">,</span><span class=\"n\">xmm12</span>\n<span class=\"mi\">302</span>:    <span class=\"nc\">c5</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">e1</span><span class=\"w\">             </span><span class=\"n\">vcvtsi2sd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">ecx</span>\n<span class=\"mi\">306</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">03</span><span class=\"w\"> </span><span class=\"mi\">59</span><span class=\"w\"> </span><span class=\"n\">e4</span><span class=\"w\">          </span><span class=\"n\">vmulsd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm15</span><span class=\"p\">,</span><span class=\"n\">xmm12</span>\n<span class=\"mi\">30</span><span class=\"n\">b</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"n\">c1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">59</span><span class=\"w\"> </span><span class=\"n\">fc</span><span class=\"w\">          </span><span class=\"n\">vmulsd</span><span class=\"w\"> </span><span class=\"n\">xmm7</span><span class=\"p\">,</span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm12</span>\n<span class=\"mi\">310</span>:    <span class=\"nc\">c5</span><span class=\"w\"> </span><span class=\"mi\">63</span><span class=\"w\"> </span><span class=\"mi\">59</span><span class=\"w\"> </span><span class=\"n\">e7</span><span class=\"w\">             </span><span class=\"n\">vmulsd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm3</span><span class=\"p\">,</span><span class=\"n\">xmm7</span>\n<span class=\"mi\">314</span>:    <span class=\"nc\">c5</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">58</span><span class=\"w\"> </span><span class=\"n\">e2</span><span class=\"w\">             </span><span class=\"n\">vaddsd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm2</span>\n<span class=\"mi\">318</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">43</span><span class=\"w\"> </span><span class=\"mi\">59</span><span class=\"w\"> </span><span class=\"n\">e4</span><span class=\"w\">          </span><span class=\"n\">vmulsd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm7</span><span class=\"p\">,</span><span class=\"n\">xmm12</span>\n<span class=\"mi\">31</span><span class=\"n\">d</span>:    <span class=\"nc\">c5</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">58</span><span class=\"w\"> </span><span class=\"n\">e0</span><span class=\"w\">             </span><span class=\"n\">vaddsd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm0</span>\n<span class=\"mi\">321</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">43</span><span class=\"w\"> </span><span class=\"mi\">59</span><span class=\"w\"> </span><span class=\"n\">e4</span><span class=\"w\">          </span><span class=\"n\">vmulsd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm7</span><span class=\"p\">,</span><span class=\"n\">xmm12</span>\n<span class=\"mi\">326</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">58</span><span class=\"w\"> </span><span class=\"n\">e6</span><span class=\"w\">          </span><span class=\"n\">vaddsd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm14</span>\n<span class=\"mi\">32</span><span class=\"n\">b</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">43</span><span class=\"w\"> </span><span class=\"mi\">59</span><span class=\"w\"> </span><span class=\"n\">e4</span><span class=\"w\">          </span><span class=\"n\">vmulsd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm7</span><span class=\"p\">,</span><span class=\"n\">xmm12</span>\n<span class=\"mi\">330</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">58</span><span class=\"w\"> </span><span class=\"n\">e5</span><span class=\"w\">          </span><span class=\"n\">vaddsd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm13</span>\n<span class=\"mi\">335</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">43</span><span class=\"w\"> </span><span class=\"mi\">59</span><span class=\"w\"> </span><span class=\"n\">e4</span><span class=\"w\">          </span><span class=\"n\">vmulsd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm7</span><span class=\"p\">,</span><span class=\"n\">xmm12</span>\n<span class=\"mi\">33</span><span class=\"n\">a</span>:    <span class=\"nc\">f3</span><span class=\"w\"> </span><span class=\"mi\">44</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"mi\">44</span><span class=\"w\"> </span><span class=\"mi\">24</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"w\">    </span><span class=\"n\">movdqu</span><span class=\"w\"> </span><span class=\"n\">xmm8</span><span class=\"p\">,</span><span class=\"n\">XMMWORD</span><span class=\"w\"> </span><span class=\"n\">PTR</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">rsp</span><span class=\"o\">+</span><span class=\"mh\">0x10</span><span class=\"p\">]</span>\n<span class=\"mi\">341</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">58</span><span class=\"w\"> </span><span class=\"n\">e0</span><span class=\"w\">          </span><span class=\"n\">vaddsd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm8</span>\n<span class=\"mi\">346</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">43</span><span class=\"w\"> </span><span class=\"mi\">59</span><span class=\"w\"> </span><span class=\"n\">e4</span><span class=\"w\">          </span><span class=\"n\">vmulsd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm7</span><span class=\"p\">,</span><span class=\"n\">xmm12</span>\n<span class=\"mi\">34</span><span class=\"n\">b</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">58</span><span class=\"w\"> </span><span class=\"n\">e1</span><span class=\"w\">          </span><span class=\"n\">vaddsd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm9</span>\n<span class=\"mi\">350</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">23</span><span class=\"w\"> </span><span class=\"mi\">58</span><span class=\"w\"> </span><span class=\"n\">cc</span><span class=\"w\">          </span><span class=\"n\">vaddsd</span><span class=\"w\"> </span><span class=\"n\">xmm9</span><span class=\"p\">,</span><span class=\"n\">xmm11</span><span class=\"p\">,</span><span class=\"n\">xmm12</span>\n<span class=\"mi\">355</span>:    <span class=\"mi\">81</span><span class=\"w\"> </span><span class=\"n\">fe</span><span class=\"w\"> </span><span class=\"mi\">90</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"mi\">50</span><span class=\"w\"> </span><span class=\"mi\">09</span><span class=\"w\">       </span><span class=\"n\">cmp</span><span class=\"w\">    </span><span class=\"n\">esi</span><span class=\"p\">,</span><span class=\"mh\">0x9502f90</span>\n<span class=\"mi\">35</span><span class=\"n\">b</span>:    <span class=\"mi\">0</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"mi\">84</span><span class=\"w\"> </span><span class=\"mi\">08</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">       </span><span class=\"n\">je</span><span class=\"w\">     </span><span class=\"mi\">369</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">wasm</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>::<span class=\"n\">function</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">+</span><span class=\"mh\">0x329</span><span class=\"o\">&gt;</span>\n<span class=\"mi\">361</span>:    <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">f1</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">    </span><span class=\"n\">rcx</span><span class=\"p\">,</span><span class=\"n\">rsi</span>\n<span class=\"mi\">364</span>:    <span class=\"nc\">e9</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">ff</span><span class=\"w\"> </span><span class=\"n\">ff</span><span class=\"w\"> </span><span class=\"n\">ff</span><span class=\"w\">          </span><span class=\"n\">jmp</span><span class=\"w\">    </span><span class=\"mi\">2</span><span class=\"n\">f2</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">wasm</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>::<span class=\"n\">function</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">+</span><span class=\"mh\">0x2b2</span><span class=\"o\">&gt;</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code>#<span class=\"w\"> </span><span class=\"n\">flops</span><span class=\"p\">.</span><span class=\"n\">slow</span><span class=\"p\">.</span><span class=\"n\">c</span>\n<span class=\"mi\">2</span><span class=\"n\">c5</span>:    <span class=\"mi\">8</span><span class=\"n\">d</span><span class=\"w\"> </span><span class=\"mi\">7</span><span class=\"n\">e</span><span class=\"w\"> </span><span class=\"mi\">01</span><span class=\"w\">                </span><span class=\"n\">lea</span><span class=\"w\">    </span><span class=\"n\">edi</span><span class=\"p\">,[</span><span class=\"n\">rsi</span><span class=\"o\">+</span><span class=\"mh\">0x1</span><span class=\"p\">]</span>\n<span class=\"mi\">2</span><span class=\"n\">c8</span>:    <span class=\"nc\">c5</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">e6</span><span class=\"w\">             </span><span class=\"n\">vcvtsi2sd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">esi</span>\n<span class=\"mi\">2</span><span class=\"n\">cc</span>:    <span class=\"nc\">c5</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">59</span><span class=\"w\"> </span><span class=\"mi\">25</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"mi\">04</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">    </span><span class=\"n\">vmulsd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">QWORD</span><span class=\"w\"> </span><span class=\"n\">PTR</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">rip</span><span class=\"o\">+</span><span class=\"mh\">0x48c</span><span class=\"p\">]</span><span class=\"w\">        </span>#<span class=\"w\"> </span><span class=\"mi\">760</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">wasm</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>::<span class=\"n\">function</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">+</span><span class=\"mh\">0x720</span><span class=\"o\">&gt;</span>\n<span class=\"mi\">2</span><span class=\"n\">d3</span>:    <span class=\"mi\">00</span>\n<span class=\"mi\">2</span><span class=\"n\">d4</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">59</span><span class=\"w\"> </span><span class=\"n\">e4</span><span class=\"w\">          </span><span class=\"n\">vmulsd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm12</span>\n<span class=\"mi\">2</span><span class=\"n\">d9</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">33</span><span class=\"w\"> </span><span class=\"mi\">59</span><span class=\"w\"> </span><span class=\"n\">ec</span><span class=\"w\">          </span><span class=\"n\">vmulsd</span><span class=\"w\"> </span><span class=\"n\">xmm13</span><span class=\"p\">,</span><span class=\"n\">xmm9</span><span class=\"p\">,</span><span class=\"n\">xmm12</span>\n<span class=\"mi\">2</span><span class=\"n\">de</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">13</span><span class=\"w\"> </span><span class=\"mi\">58</span><span class=\"w\"> </span><span class=\"n\">e8</span><span class=\"w\">          </span><span class=\"n\">vaddsd</span><span class=\"w\"> </span><span class=\"n\">xmm13</span><span class=\"p\">,</span><span class=\"n\">xmm13</span><span class=\"p\">,</span><span class=\"n\">xmm8</span>\n<span class=\"mf\">2e3</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">59</span><span class=\"w\"> </span><span class=\"n\">ed</span><span class=\"w\">          </span><span class=\"n\">vmulsd</span><span class=\"w\"> </span><span class=\"n\">xmm13</span><span class=\"p\">,</span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm13</span>\n<span class=\"mf\">2e8</span>:    <span class=\"nc\">c5</span><span class=\"w\"> </span><span class=\"mi\">13</span><span class=\"w\"> </span><span class=\"mi\">58</span><span class=\"w\"> </span><span class=\"n\">ee</span><span class=\"w\">             </span><span class=\"n\">vaddsd</span><span class=\"w\"> </span><span class=\"n\">xmm13</span><span class=\"p\">,</span><span class=\"n\">xmm13</span><span class=\"p\">,</span><span class=\"n\">xmm6</span>\n<span class=\"mi\">2</span><span class=\"n\">ec</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">59</span><span class=\"w\"> </span><span class=\"n\">ed</span><span class=\"w\">          </span><span class=\"n\">vmulsd</span><span class=\"w\"> </span><span class=\"n\">xmm13</span><span class=\"p\">,</span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm13</span>\n<span class=\"mi\">2</span><span class=\"n\">f1</span>:    <span class=\"nc\">c5</span><span class=\"w\"> </span><span class=\"mi\">13</span><span class=\"w\"> </span><span class=\"mi\">58</span><span class=\"w\"> </span><span class=\"n\">ed</span><span class=\"w\">             </span><span class=\"n\">vaddsd</span><span class=\"w\"> </span><span class=\"n\">xmm13</span><span class=\"p\">,</span><span class=\"n\">xmm13</span><span class=\"p\">,</span><span class=\"n\">xmm5</span>\n<span class=\"mi\">2</span><span class=\"n\">f5</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">59</span><span class=\"w\"> </span><span class=\"n\">ed</span><span class=\"w\">          </span><span class=\"n\">vmulsd</span><span class=\"w\"> </span><span class=\"n\">xmm13</span><span class=\"p\">,</span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm13</span>\n<span class=\"mi\">2</span><span class=\"n\">fa</span>:    <span class=\"nc\">c5</span><span class=\"w\"> </span><span class=\"mi\">13</span><span class=\"w\"> </span><span class=\"mi\">58</span><span class=\"w\"> </span><span class=\"n\">ec</span><span class=\"w\">             </span><span class=\"n\">vaddsd</span><span class=\"w\"> </span><span class=\"n\">xmm13</span><span class=\"p\">,</span><span class=\"n\">xmm13</span><span class=\"p\">,</span><span class=\"n\">xmm4</span>\n<span class=\"mi\">2</span><span class=\"n\">fe</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">59</span><span class=\"w\"> </span><span class=\"n\">ed</span><span class=\"w\">          </span><span class=\"n\">vmulsd</span><span class=\"w\"> </span><span class=\"n\">xmm13</span><span class=\"p\">,</span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm13</span>\n<span class=\"mi\">303</span>:    <span class=\"nc\">c5</span><span class=\"w\"> </span><span class=\"mi\">13</span><span class=\"w\"> </span><span class=\"mi\">58</span><span class=\"w\"> </span><span class=\"n\">eb</span><span class=\"w\">             </span><span class=\"n\">vaddsd</span><span class=\"w\"> </span><span class=\"n\">xmm13</span><span class=\"p\">,</span><span class=\"n\">xmm13</span><span class=\"p\">,</span><span class=\"n\">xmm3</span>\n<span class=\"mi\">307</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">59</span><span class=\"w\"> </span><span class=\"n\">e5</span><span class=\"w\">          </span><span class=\"n\">vmulsd</span><span class=\"w\"> </span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm13</span>\n<span class=\"mi\">30</span><span class=\"n\">c</span>:    <span class=\"nc\">c4</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">58</span><span class=\"w\"> </span><span class=\"n\">d2</span><span class=\"w\">          </span><span class=\"n\">vaddsd</span><span class=\"w\"> </span><span class=\"n\">xmm10</span><span class=\"p\">,</span><span class=\"n\">xmm12</span><span class=\"p\">,</span><span class=\"n\">xmm10</span>\n<span class=\"mi\">311</span>:    <span class=\"nc\">c5</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">58</span><span class=\"w\"> </span><span class=\"mi\">15</span><span class=\"w\"> </span><span class=\"mi\">57</span><span class=\"w\"> </span><span class=\"mi\">04</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">    </span><span class=\"n\">vaddsd</span><span class=\"w\"> </span><span class=\"n\">xmm10</span><span class=\"p\">,</span><span class=\"n\">xmm10</span><span class=\"p\">,</span><span class=\"n\">QWORD</span><span class=\"w\"> </span><span class=\"n\">PTR</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">rip</span><span class=\"o\">+</span><span class=\"mh\">0x457</span><span class=\"p\">]</span><span class=\"w\">        </span>#<span class=\"w\"> </span><span class=\"mi\">770</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">wasm</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>::<span class=\"n\">function</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">+</span><span class=\"mh\">0x730</span><span class=\"o\">&gt;</span>\n<span class=\"mi\">318</span>:    <span class=\"mi\">00</span>\n<span class=\"mi\">319</span>:    <span class=\"mi\">81</span><span class=\"w\"> </span><span class=\"n\">ff</span><span class=\"w\"> </span><span class=\"mi\">90</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"mi\">50</span><span class=\"w\"> </span><span class=\"mi\">09</span><span class=\"w\">       </span><span class=\"n\">cmp</span><span class=\"w\">    </span><span class=\"n\">edi</span><span class=\"p\">,</span><span class=\"mh\">0x9502f90</span>\n<span class=\"mi\">31</span><span class=\"n\">f</span>:    <span class=\"mi\">0</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"mi\">84</span><span class=\"w\"> </span><span class=\"mi\">08</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">       </span><span class=\"n\">je</span><span class=\"w\">     </span><span class=\"mi\">32</span><span class=\"n\">d</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">wasm</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>::<span class=\"n\">function</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">+</span><span class=\"mh\">0x2ed</span><span class=\"o\">&gt;</span>\n<span class=\"mi\">325</span>:    <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">fe</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">    </span><span class=\"n\">rsi</span><span class=\"p\">,</span><span class=\"n\">rdi</span>\n<span class=\"mi\">328</span>:    <span class=\"nc\">e9</span><span class=\"w\"> </span><span class=\"mi\">98</span><span class=\"w\"> </span><span class=\"n\">ff</span><span class=\"w\"> </span><span class=\"n\">ff</span><span class=\"w\"> </span><span class=\"n\">ff</span><span class=\"w\">          </span><span class=\"n\">jmp</span><span class=\"w\">    </span><span class=\"mi\">2</span><span class=\"n\">c5</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">wasm</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>::<span class=\"n\">function</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">+</span><span class=\"mh\">0x285</span><span class=\"o\">&gt;</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<ol>\n<li>\n<p>Compile the two C cases into Wasm: <br>\n<code>\n    emcc  -O2 -s WASM=1 -s TOTAL_MEMORY=512MB flops.fast.c -o flops.fast.wasm\n    emcc  -O2 -s WASM=1 -s TOTAL_MEMORY=512MB flops.slow.c -o flops.slow.wasm\n  </code></p>\n</li>\n<li>\n<p>Run wasm in <code>Wasmtime</code> and collect execution time using <code>time</code><br>\n<code>\n   time wasmtime flops.fast.wasm\n   time wasmtime flops.slow.wasm\n  </code></p>\n</li>\n</ol>\n<h3>Versions and Environment</h3>\n<ul>\n<li><code>Wasmtime</code>: f10d665bb9cacceee6051989e99c0934c542ad84</li>\n<li><code>WasmEdge</code>: 777d8b4ba50567b3b39aa8c9d81a6dfade355af8</li>\n<li><code>Wamr</code>: 1ff41ebdc257b45c9f574d8d1f7ee6df4be79645</li>\n<li>\n<p><code>Emscripten</code>:<br>\n  emcc (Emscripten gcc/clang-like replacement + linker emulating GNU ld) 3.1.45 (ef3e4e3b044de98e1811546e0bc605c65d3412f4)<br>\nclang version 18.0.0 (<a href=\"https://github.com/llvm/llvm-project\">https://github.com/llvm/llvm-project</a> d1e685df45dc5944b43d2547d0138cd4a3ee4efe)<br>\nTarget: wasm32-unknown-emscripten<br>\nThread model: posix<br>\nInstalledDir: /home/ringzzz/emsdk/upstream/bin</p>\n</li>\n<li>\n<p>kernel version: Linux 5.15.0-83-generic</p>\n</li>\n</ul>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/files/12718355/code.zip\">code.zip</a><br>\n</p>\n</blockquote>",
        "id": 393754473,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695915941
    }
]