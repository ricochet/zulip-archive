[
    {
        "content": "<p>GordonSmith opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6719\">issue #6719</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>I am trying to implement the \"load_string_from_range\" ABI function in c++:</p>\n<div class=\"codehilite\" data-code-language=\"Python\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">load_string_from_range</span><span class=\"p\">(</span><span class=\"n\">cx</span><span class=\"p\">,</span> <span class=\"n\">ptr</span><span class=\"p\">,</span> <span class=\"n\">tagged_code_units</span><span class=\"p\">):</span>\n  <span class=\"k\">match</span> <span class=\"n\">cx</span><span class=\"o\">.</span><span class=\"n\">opts</span><span class=\"o\">.</span><span class=\"n\">string_encoding</span><span class=\"p\">:</span>\n    <span class=\"k\">case</span> <span class=\"s1\">'utf8'</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>\n    <span class=\"k\">case</span> <span class=\"s1\">'utf16'</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>\n    <span class=\"k\">case</span> <span class=\"s1\">'latin1+utf16'</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>\n\n  <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">cx</span><span class=\"o\">.</span><span class=\"n\">opts</span><span class=\"o\">.</span><span class=\"n\">string_encoding</span><span class=\"p\">,</span> <span class=\"n\">tagged_code_units</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>But have been unable to locate anything relating to cx.opts.string_encoding in the c/c++ headers</p>\n<h4>Benefit</h4>\n<p>Avoid potential issues dealing with strings</p>\n<h4>Implementation</h4>\n<h4>Alternatives</h4>\n<p>Assume string type is \"utf8\"?</p>\n</blockquote>",
        "id": 374890734,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1689246601
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6719#issuecomment-1634287229\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6719\">issue #6719</a>:</p>\n<blockquote>\n<p>Thanks for the report, but the component model is not supported in the C API yet. So in that sense it's expected that the string encoding isn't availble.</p>\n<p>It's worth pointing out though that this string encoding isn't even available in the Rust API, though. This is an internal implementation detail of components which embedders shouldn't in theory need to know about (other than optimizing perhaps)</p>\n</blockquote>",
        "id": 374941266,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1689256345
    },
    {
        "content": "<p>GordonSmith <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6719#issuecomment-1634326982\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6719\">issue #6719</a>:</p>\n<blockquote>\n<p>Thanks for the update - also if the \"tagged_code_units\" is meant to represent the string length (and not the buffer length - then the python utf8 case looks wrong to my eye (or is that a question for the spec repo)?</p>\n<p>Ref:  <a href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/canonical-abi/definitions.py#L448C1-L474C57\">https://github.com/WebAssembly/component-model/blob/main/design/mvp/canonical-abi/definitions.py#L448C1-L474C57</a></p>\n</blockquote>",
        "id": 374949850,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1689257793
    },
    {
        "content": "<p>GordonSmith edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6719#issuecomment-1634326982\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6719\">issue #6719</a>:</p>\n<blockquote>\n<p>Thanks for the update - also if the \"tagged_code_units\" is meant to represent the string length (and not the buffer length) - then the python utf8 case looks wrong to my eye (or is that a question for the spec repo)?</p>\n<p>Ref:  <a href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/canonical-abi/definitions.py#L448C1-L474C57\">https://github.com/WebAssembly/component-model/blob/main/design/mvp/canonical-abi/definitions.py#L448C1-L474C57</a></p>\n</blockquote>",
        "id": 374949957,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1689257814
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6719#issuecomment-1634458871\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6719\">issue #6719</a>:</p>\n<blockquote>\n<p>I think that's a question/issue for the spec repo</p>\n</blockquote>",
        "id": 374975055,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1689262429
    },
    {
        "content": "<p>GordonSmith <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6719#issuecomment-1634536826\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6719\">issue #6719</a>:</p>\n<blockquote>\n<p>Thx... closing.</p>\n</blockquote>",
        "id": 374990790,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1689265441
    },
    {
        "content": "<p>GordonSmith closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6719\">issue #6719</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>I am trying to implement the \"load_string_from_range\" ABI function in c++:</p>\n<div class=\"codehilite\" data-code-language=\"Python\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">load_string_from_range</span><span class=\"p\">(</span><span class=\"n\">cx</span><span class=\"p\">,</span> <span class=\"n\">ptr</span><span class=\"p\">,</span> <span class=\"n\">tagged_code_units</span><span class=\"p\">):</span>\n  <span class=\"k\">match</span> <span class=\"n\">cx</span><span class=\"o\">.</span><span class=\"n\">opts</span><span class=\"o\">.</span><span class=\"n\">string_encoding</span><span class=\"p\">:</span>\n    <span class=\"k\">case</span> <span class=\"s1\">'utf8'</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>\n    <span class=\"k\">case</span> <span class=\"s1\">'utf16'</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>\n    <span class=\"k\">case</span> <span class=\"s1\">'latin1+utf16'</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>\n\n  <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">cx</span><span class=\"o\">.</span><span class=\"n\">opts</span><span class=\"o\">.</span><span class=\"n\">string_encoding</span><span class=\"p\">,</span> <span class=\"n\">tagged_code_units</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>But have been unable to locate anything relating to cx.opts.string_encoding in the c/c++ headers</p>\n<h4>Benefit</h4>\n<p>Avoid potential issues dealing with strings</p>\n<h4>Implementation</h4>\n<h4>Alternatives</h4>\n<p>Assume string type is \"utf8\"?</p>\n</blockquote>",
        "id": 374990794,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1689265441
    }
]