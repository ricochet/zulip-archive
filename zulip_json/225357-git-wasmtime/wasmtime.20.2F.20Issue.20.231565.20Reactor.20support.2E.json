[
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1565#issuecomment-617234156\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1565#issuecomment-617234156\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1565\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1565\">Issue #1565</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @kubkon, @peterhuene</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"wasi\", \"wasmtime\", \"wasmtime:api\", \"wasmtime:docs\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>kubkon: wasi</li>\n<li>peterhuene: wasmtime:api</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\" title=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 194814313,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587481140
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1565#issuecomment-630479191\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1565\">Issue #1565</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @peterhuene</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"wasmtime:c-api\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>peterhuene: wasmtime:c-api</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 198006071,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589842957
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1565#issuecomment-631506404\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1565\">Issue #1565</a>:</p>\n<blockquote>\n<p>I do like this approach better myself, but I feel like it's still a bit too heavyweight because it makes <code>NewInstance</code> almost exclusively WASI-focused. I would expect <code>Instance</code> to be neutral with respect to WASI-or-not and users have to opt-in to WASI-specific hooks.</p>\n<p>I realize it can be a small footgun if these methods are added directly to <code>Instance</code>, but I feel that the footgun is worth it in terms of ergonomics. For example if you're reading the documentation of the <code>wasmtime</code> crate all the examples have <code>init_reactor(&amp;[])</code> which is somewhat bizarre if you've never heard of WASI before.</p>\n</blockquote>",
        "id": 198205761,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589984648
    },
    {
        "content": "<p>sunfishcode <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1565#issuecomment-631713238\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1565\">Issue #1565</a>:</p>\n<blockquote>\n<p>They aren't really WASI-specific. I expect that between the linking spec and interface types, the definition of commands and reactors will eventually want to move out of WASI and into one of those other specs. Would it help if we moved the definition into tool-conventions for now? We could then avoid calling these \"WASI\" functions. Would that help avoid confusion?</p>\n<p>I'm also not tied to the name <code>init_reactor</code>. Would <code>.initialize(&amp;[])</code> or something else look less surprising?</p>\n</blockquote>",
        "id": 198254223,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590007112
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1565#issuecomment-631787886\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1565\">Issue #1565</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"fuzzing\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>fitzgen: fuzzing</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 198269382,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590016775
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1565#issuecomment-632112022\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1565\">Issue #1565</a>:</p>\n<blockquote>\n<p>Oh sorry, so I mean to say that the current as-is state of <code>NewInstance</code> feels very WASI-specific. The options you have are:</p>\n<ul>\n<li><code>start</code> - this is actually somewhat unrelated to the wasm <code>start</code> function and classifies every \"normal\" wasm module as a \"reactor\"</li>\n<li><code>run_command</code>, <code>init_reactor</code> - WASI-specific</li>\n</ul>\n<p>There's not really an easy option for \"just give me the <code>Instance</code> I don't care about WASI\". Even with <code>init_reactor</code> you have to pass an array of arguments which can be confusing.</p>\n<p>This is why I still think it's best to return an work with an <code>Instance</code>. The type-level distinction of a <code>NewInstance</code> I don't think is buying us much here. If we really want we could always probe what an <code>Instance</code> looks like and dynamically guard invocations of functions. We could say, for example, that you can't call WASI functions before you call the wasi initialization function which does the command/reactor thing.</p>\n</blockquote>",
        "id": 198325750,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590070681
    },
    {
        "content": "<p>sunfishcode <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1565#issuecomment-632924883\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1565\">Issue #1565</a>:</p>\n<blockquote>\n<p>Ok, I've now gone back to <code>Instance::new</code> not doing any command/reactor stuff. I kept <code>NewInstance</code>, with a <code>start</code> function that now just runs the wasm start function. That also simplifies the C API story, so this patch now has C API updates corresponding to the Rust API updates.</p>\n<p>The new approach now adds a new function <code>Linker::module</code>, which handles instantiating the module, automatically handling command/reactor semantics, which ends up being a lot nicer because we don't need APIs that conditionally consume an <code>Instance</code>. <code>Linker::module</code> avoids the user having to deal with <code>Instance</code>s altogether.</p>\n</blockquote>",
        "id": 198499642,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590184772
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1565#issuecomment-634104591\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1565\">Issue #1565</a>:</p>\n<blockquote>\n<p>Ok this all looks great to me, thanks again for this @sunfishcode! I feel like anything further we can continue to iterate on in-tree if necessary, so I'm gonna merge.</p>\n</blockquote>",
        "id": 198781013,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590507577
    }
]