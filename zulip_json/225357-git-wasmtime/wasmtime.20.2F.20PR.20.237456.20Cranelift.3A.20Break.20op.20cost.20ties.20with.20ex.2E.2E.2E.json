[
    {
        "content": "<p>fitzgen opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7456\">PR #7456</a> from <code>fitzgen:depth-cost</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This means that, when the opcode cost is the same, we prefer shallow and wide<br>\nexpressions to narrow and deep. For example, <code>(a + b) + (c + d)</code> is preferred to<br>\n<code>((a + b) + c) + d</code>. This is beneficial because it exposes more<br>\ninstruction-level parallelism and shortens live ranges.</p>\n<p>Follow up PRs will add rules that take advantage of this.</p>\n</blockquote>",
        "id": 399983050,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698943480
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/elliottt\">elliottt</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7456\">PR #7456</a>.</p>",
        "id": 399983051,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698943480
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7456\">PR #7456</a>.</p>",
        "id": 399983052,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698943480
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7456#pullrequestreview-1710801961\">PR review</a>.</p>",
        "id": 399984269,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698943881
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7456#discussion_r1380467133\">PR review comment</a>:</p>\n<blockquote>\n<p>Drive-by comment here (sorry!): it might be nice to pack this into a single <code>u32</code>; CLIF data structures in general are pretty sensitive to size in memory, or at least that's been my experience. Maybe 8 bits for depth and 24 for cost (since cost has a bit more range with deep trees, potential loop nest multipliers at some point, etc)?</p>\n</blockquote>",
        "id": 399984270,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698943881
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7456\">PR #7456</a>.</p>",
        "id": 400018058,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698958686
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7456#pullrequestreview-1711229763\">PR review</a>:</p>\n<blockquote>\n<p>LGTM to this as well, thanks! Will wait for #7465 to merge and this to rebase on <code>main</code> then we can merge.</p>\n</blockquote>",
        "id": 400018196,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698958765
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7456\">PR #7456</a>:</p>\n<blockquote>\n<p>This means that, when the opcode cost is the same, we prefer shallow and wide<br>\nexpressions to narrow and deep. For example, <code>(a + b) + (c + d)</code> is preferred to<br>\n<code>((a + b) + c) + d</code>. This is beneficial because it exposes more<br>\ninstruction-level parallelism and shortens live ranges.</p>\n<p>Follow up PRs will add rules that take advantage of this.</p>\n<p>Depends on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7465\">https://github.com/bytecodealliance/wasmtime/pull/7465</a></p>\n</blockquote>",
        "id": 400024634,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698962246
    },
    {
        "content": "<p>a1phyr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7456#pullrequestreview-1712209552\">PR review</a>.</p>",
        "id": 400096118,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699004436
    },
    {
        "content": "<p>a1phyr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7456#discussion_r1381401331\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>        iter.fold(Self::zero(), |c, x| c + x)\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 400096121,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699004437
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7456#pullrequestreview-1712964608\">PR review</a>:</p>\n<blockquote>\n<p><span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> </p>\n</blockquote>",
        "id": 400156122,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699025371
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7456#pullrequestreview-1712964608\">PR review</a>:</p>\n<blockquote>\n<p><span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> </p>\n</blockquote>",
        "id": 400156126,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699025371
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7456#discussion_r1381858917\">PR review comment</a>:</p>\n<blockquote>\n<p>Should this be strictly less-than? If the value is equal to <code>MAX_OP_COST</code>, and <code>depth</code> is <code>255</code>, we'll allow constructing the special <code>infinity</code> value.<br>\n</p>\n</blockquote>",
        "id": 400156127,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699025371
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7456#discussion_r1381868119\">PR review comment</a>:</p>\n<blockquote>\n<p>We could skip the mask here, as we're shifting off all the bits that get zeroed by the mask.</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>        self.0 &gt;&gt; Self::DEPTH_BITS\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 400156128,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699025372
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7456#discussion_r1381878031\">PR review comment</a>:</p>\n<blockquote>\n<p>Should we only add <code>1</code> to depth when the <code>operand_costs</code> was non-empty?</p>\n</blockquote>",
        "id": 400156129,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699025372
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7456\">PR #7456</a>.</p>",
        "id": 400160539,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699026637
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7456#pullrequestreview-1713049252\">PR review</a>.</p>",
        "id": 400160984,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699026785
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7456#discussion_r1381912740\">PR review comment</a>:</p>\n<blockquote>\n<p>Oh we could probably have an ISLE rewrite for this too!</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(</span><span class=\"n\">ishl</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">band</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">k1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">k2</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==&gt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">ishl</span><span class=\"w\"> </span><span class=\"n\">k2</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">when</span><span class=\"w\"> </span><span class=\"n\">shift_mask</span><span class=\"p\">(</span><span class=\"n\">k1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">k2</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n</code></pre></div>\n<p>cc @afonso360: maybe I can nerd snipe you :)</p>\n</blockquote>",
        "id": 400160987,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699026785
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7456#discussion_r1381912740\">PR review comment</a>.</p>",
        "id": 400161099,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699026834
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7456#pullrequestreview-1718807411\">PR review</a>.</p>",
        "id": 400818312,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699392316
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7456#discussion_r1385605494\">PR review comment</a>:</p>\n<blockquote>\n<p>I think it is fine to have <code>depth == 1</code> for ops without operands, and only adding <code>1</code> when we have non-empty operands requires avoiding <code>sum()</code> and makes the method look less elegant so I'm not gonna do it.</p>\n</blockquote>",
        "id": 400818313,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699392317
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7456\">PR #7456</a>.</p>",
        "id": 400818477,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699392384
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7456#pullrequestreview-1718887914\">PR review</a>.</p>",
        "id": 400824400,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699395204
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7456#discussion_r1385655341\">PR review comment</a>:</p>\n<blockquote>\n<p>Reworked things a bit to make constructing infinity by accident impossible.</p>\n</blockquote>",
        "id": 400824401,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699395204
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7456\">PR #7456</a>.</p>",
        "id": 400824420,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699395214
    },
    {
        "content": "<p>fitzgen has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7456\">PR #7456</a>.</p>",
        "id": 400824447,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699395227
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7456\">PR #7456</a>.</p>",
        "id": 400831845,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699399006
    }
]