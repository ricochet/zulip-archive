[
    {
        "content": "<p>carlokok opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2049\">Issue #2049</a>:</p>\n<blockquote>\n<p>&lt;!-- Please try to describe precisely what you would like to do in<br>\nCranelift/Wasmtime and/or expect from it. You can answer the questions below if<br>\nthey're relevant and delete this text before submitting. Thanks for opening an<br>\nissue! --&gt;</p>\n<h4>Feature</h4>\n<p>Cranelift currently doesn't support SEH (but has some support for finally I think). This is a feature request to support properly exception (landingpads on Posix, SEH on windows, maybe SLJL for others)</p>\n<h4>Benefit</h4>\n<p>WASM has plans to support exceptions, at which point it's going to be needed. Win64 has partial SEH support (iirc it just emits what's needed, nothing more), this would allow for c++ /java/.net exception support.</p>\n<h4>Implementation</h4>\n<p>Tricky one. I know LLVM has two alternative ways of doing this. I think with that in mind it should be possible to do a single implementation. What's basically needed is a way to say:<br>\nfrom here<br>\n[code]</p>\n<p>till here is a protected block, on exceptions go to X, for finalization go to Y. For the handler itself it should be possible to define the personality to call.</p>\n<p>Throw, Rethrow etc can all probably be done on a library level.</p>\n<h4>Alternatives</h4>\n<p>The only alternative is to not do it.</p>\n</blockquote>",
        "id": 204463009,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595272186
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2049#issuecomment-661283003\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2049\">Issue #2049</a>:</p>\n<blockquote>\n<p>Duplicate of <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1677\">https://github.com/bytecodealliance/wasmtime/issues/1677</a></p>\n</blockquote>",
        "id": 204463918,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595272621
    },
    {
        "content": "<p>carlokok <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2049#issuecomment-661293484\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2049\">Issue #2049</a>:</p>\n<blockquote>\n<p>I agree it's related, but unwind and catch are slightly distinct actions and your issue doesn't cover that?</p>\n</blockquote>",
        "id": 204466535,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595273979
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2049#issuecomment-661323127\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2049\">Issue #2049</a>:</p>\n<blockquote>\n<p>Catch is implemented by returning <code>_URC_HANDLER_FOUND</code> instead of <code>_URC_INSTALL_CONTEXT</code> from the personality function and then jumping from the landing pad to the block handling the catch instead of calling <code>_Unwind_Resume</code> like for cleanup.</p>\n</blockquote>",
        "id": 204473686,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595277827
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2049#issuecomment-772784498\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2049\">Issue #2049</a>:</p>\n<blockquote>\n<p>Given the above comments I think this can be closed as duplicate.</p>\n</blockquote>",
        "id": 225073144,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612382555
    },
    {
        "content": "<p>carlokok <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2049#issuecomment-772789863\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2049\">Issue #2049</a>:</p>\n<blockquote>\n<p>I missed your reply last year but does that cover windows at all? Windows doesn't use personalities? At least not like that?</p>\n</blockquote>",
        "id": 225074366,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612383099
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2049#issuecomment-772794423\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2049\">Issue #2049</a>:</p>\n<blockquote>\n<p>SEH seems to use exception handlers and termination handlers. I think catching an exception instead of doing cleanup is done by using an exception handler instead of termination handler. This is based on a cursory reading of the docs though, so I may be wrong. In any case both catching exceptions and cleanup needs the same codegen handling to support an alternative location to which a call can \"return\".</p>\n</blockquote>",
        "id": 225075170,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612383481
    }
]