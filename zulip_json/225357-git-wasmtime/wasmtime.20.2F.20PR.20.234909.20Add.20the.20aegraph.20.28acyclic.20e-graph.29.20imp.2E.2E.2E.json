[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4909\">PR #4909</a> from <code>aegraph-crate</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR introduces the implementation of the aegraph data structure itself, as a new crate (<code>cranelift-egraph</code>).</p>\n<p>This does not include any of the Cranelift-specific use of the aegraph (language/node definitions, egraph building, and lowering out of the egraph), nor any of the rule-rewriting on the egraph. That will come in subsequent PRs.</p>\n<p>Stacks on top of #4908.</p>\n</blockquote>",
        "id": 298687225,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663116223
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4909\">PR #4909</a>.</p>",
        "id": 298687226,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663116223
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4909\">PR #4909</a> from <code>aegraph-crate</code> to <code>main</code>.</p>",
        "id": 298695010,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663124214
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4909#pullrequestreview-1107995578\">PR review</a>.</p>",
        "id": 298873089,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663194865
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4909#pullrequestreview-1107995578\">PR review</a>.</p>",
        "id": 298873090,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663194865
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4909#discussion_r971150092\">PR review comment</a>:</p>\n<blockquote>\n<p>I don't think <code>NullCtx</code> itself needs to be parameterized by <code>V</code>, just the <code>CtxEq</code> impl block.</p>\n</blockquote>",
        "id": 298873091,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663194865
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4909#discussion_r971300962\">PR review comment</a>:</p>\n<blockquote>\n<p>The thing that still isn't 100% clear to me, and I'd love an example of, is what kinds of expressions ae-graphs fail to fully optimize to the degree that e-graphs can.</p>\n<p>I guess if you initially have this</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">class1</span><span class=\"w\"></span>\n\n<span class=\"o\">+-----------------+</span><span class=\"w\"></span>\n<span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">class</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\">         </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"o\">|</span><span class=\"w\">                 </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">popcnt</span><span class=\"p\">(</span><span class=\"n\">class</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"o\">+-----------------+</span><span class=\"w\"></span>\n\n<span class=\"n\">class</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"w\"></span>\n</code></pre></div>\n<p>and then later add something to class 3 that allows you to realize you can merge it with class 1, that merging won't happen in an ae-graph but would in a traditional e-graph?</p>\n<p>Or is it that the e-classes will still merge into a new, merged e-class, but the <code>popcnt(class 1)</code> node won't be updated to reference <code>union(class 1, class 3)</code> and so any optimization that relied on that (like say if class 3 contained a constant and we could const fold the <code>popcnt</code>) wouldn't trigger?</p>\n</blockquote>",
        "id": 298873092,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663194865
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4909#discussion_r971308986\">PR review comment</a>:</p>\n<blockquote>\n<p>This should probably use a custom macro that we can make a true no-op unless a cargo feature is enabled, similar to what we did elsewhere in cranelift.</p>\n</blockquote>",
        "id": 298873093,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663194865
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4909#discussion_r971350592\">PR review comment</a>:</p>\n<blockquote>\n<p>Are these <code>ListPool</code> changes actually used? I don't see any uses...</p>\n</blockquote>",
        "id": 298873094,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663194865
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4909#discussion_r971312029\">PR review comment</a>:</p>\n<blockquote>\n<p>Can <code>self.parent</code> just be a <code>SecondaryMap</code>?</p>\n</blockquote>",
        "id": 298873095,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663194865
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4909#discussion_r971352318\">PR review comment</a>:</p>\n<blockquote>\n<p>If I'm reading this correctly, then an e-class containing <code>n</code> nodes will have <code>O(n)</code> \"pointer\" chases to enumerate its e-nodes? I suppose that is fine for small e-classes, and maybe most are small, but we might want to investigate those e-node counts in the future and maybe have a variant for when there are a bunch of e-nodes in an e-class that stores them together in a single contiguous region of memory. Or use HAMTs or something.</p>\n</blockquote>",
        "id": 298873096,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663194865
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4909#discussion_r971310493\">PR review comment</a>:</p>\n<blockquote>\n<p>nitpick: Missing <code>[1]</code> definition</p>\n</blockquote>",
        "id": 298873097,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663194865
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4909#discussion_r971311499\">PR review comment</a>:</p>\n<blockquote>\n<p>Also, I kinda feel like the <code>egraph</code> module could just be in this file, since it is nearly empty as-is, and the <code>egraph</code> module's doc comment is much more useful than this one. I think those docs could just supplant these.</p>\n</blockquote>",
        "id": 298873098,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663194865
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4909#discussion_r971351051\">PR review comment</a>:</p>\n<blockquote>\n<p>Should probably be called <code>dedupe</code> to match <code>std::vec::Vec::dedupe</code></p>\n</blockquote>",
        "id": 298873099,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663194865
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4909\">PR #4909</a> from <code>aegraph-crate</code> to <code>main</code>.</p>",
        "id": 299660814,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663629646
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4909#pullrequestreview-1112977970\">PR review</a>.</p>",
        "id": 299660817,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663629650
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4909#discussion_r974760349\">PR review comment</a>:</p>\n<blockquote>\n<p>Updated, thanks!</p>\n</blockquote>",
        "id": 299660818,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663629650
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4909#pullrequestreview-1112978033\">PR review</a>.</p>",
        "id": 299660827,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663629656
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4909#discussion_r974760399\">PR review comment</a>:</p>\n<blockquote>\n<p>I added a section to the doc-comment to address this; but in brief, yep, it's basically the example that you give.</p>\n<p>It's pretty subtle though, as this only matters if the rewrite from class3 to class1 exists <em>and if class3 is cheaper</em>. In other words, if a rewrite takes a cheaper expression and rewrites it into a more expensive expression. Then it may happen to intern with an existing copy of that more expensive expression and union the cheaper version into it. That seems unlikely for the sorts of optimizations we plan to write. In the fullness of time this would still be a good question to investigate further, though!</p>\n</blockquote>",
        "id": 299660828,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663629656
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4909#discussion_r974760437\">PR review comment</a>:</p>\n<blockquote>\n<p>Done!</p>\n</blockquote>",
        "id": 299660837,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663629662
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4909#pullrequestreview-1112978093\">PR review</a>.</p>",
        "id": 299660839,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663629662
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4909#pullrequestreview-1112978129\">PR review</a>.</p>",
        "id": 299660845,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663629666
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4909#discussion_r974760464\">PR review comment</a>:</p>\n<blockquote>\n<p>Done -- everything is in <code>lib.rs</code> now.</p>\n</blockquote>",
        "id": 299660846,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663629666
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4909#pullrequestreview-1112978157\">PR review</a>.</p>",
        "id": 299660850,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663629669
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4909#discussion_r974760486\">PR review comment</a>:</p>\n<blockquote>\n<p>Yep, that makes things a lot cleaner -- thanks!</p>\n</blockquote>",
        "id": 299660851,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663629669
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4909#discussion_r974760501\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah, these changes are actually associated with another patch in the series -- the cranelift-codegen-side egraph glue uses them. I'll pull them out of this patch, thanks.</p>\n</blockquote>",
        "id": 299660856,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663629675
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4909#pullrequestreview-1112978195\">PR review</a>.</p>",
        "id": 299660857,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663629675
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4909#discussion_r974760526\">PR review comment</a>:</p>\n<blockquote>\n<p>(Removed as per above.)</p>\n</blockquote>",
        "id": 299660865,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663629679
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4909#pullrequestreview-1112978239\">PR review</a>.</p>",
        "id": 299660866,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663629679
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4909#pullrequestreview-1112978258\">PR review</a>.</p>",
        "id": 299660867,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663629683
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4909#discussion_r974760545\">PR review comment</a>:</p>\n<blockquote>\n<p>Yep, that's a reasonable optimization, I agree. In practice it didn't seem to matter for the benchmarks I was looking at but it's something to keep an eye on in the future.</p>\n</blockquote>",
        "id": 299660868,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663629683
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4909\">PR #4909</a> from <code>aegraph-crate</code> to <code>main</code>.</p>",
        "id": 299662330,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663630623
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4909\">PR #4909</a> from <code>aegraph-crate</code> to <code>main</code>.</p>",
        "id": 299666564,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663633802
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4909\">PR #4909</a> from <code>aegraph-crate</code> to <code>main</code>.</p>",
        "id": 299667658,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663634757
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4909\">PR #4909</a> from <code>aegraph-crate</code> to <code>main</code>.</p>",
        "id": 300055814,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663803771
    },
    {
        "content": "<p>cfallin has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4909\">PR #4909</a>.</p>",
        "id": 300055854,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663803814
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4909\">PR #4909</a>.</p>",
        "id": 300059703,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663806808
    }
]