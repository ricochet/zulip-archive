[
    {
        "content": "<p>fitzgen opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4536\">PR #4536</a> from <code>reuse-hash-set-in-can-optimize-var-lookup</code> to <code>main</code>:</p>\n<blockquote>\n<p>First, we switch from a <code>BTreeSet</code> to a <code>HashSet</code> because clearing a <code>BTreeSet</code><br>\nwill deallocate the btree's nodes but clearing a <code>HashSet</code> will not deallocate<br>\nthe backing hash table, saving the space to reuse for future insertions.</p>\n<p>Then, we reuse the same set (and therefore the same allocation) across every<br>\ncall to <code>can_optimize_var_lookup</code>.</p>\n<p>This results in a 1.22x to 1.32x speed up on various Sightglass benchmarks:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">compilation</span><span class=\"w\"> </span>:: <span class=\"nc\">nanoseconds</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">pulldown</span><span class=\"o\">-</span><span class=\"n\">cmark</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"err\">Δ</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">39478181.76</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"mf\">3441880.32</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">confidence</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">99</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"mf\">0.75</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"mf\">0.79</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">faster</span><span class=\"w\"> </span><span class=\"n\">than</span><span class=\"w\"> </span><span class=\"n\">reuse</span><span class=\"o\">-</span><span class=\"n\">set</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"o\">!</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">reuse</span><span class=\"o\">-</span><span class=\"n\">set</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"mf\">1.27</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"mf\">1.32</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">faster</span><span class=\"w\"> </span><span class=\"n\">than</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"o\">!</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">160128343</span><span class=\"w\"> </span><span class=\"mf\">172174751.09</span><span class=\"w\"> </span><span class=\"mi\">213325968</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">115055695</span><span class=\"w\"> </span><span class=\"mf\">132696569.33</span><span class=\"w\"> </span><span class=\"mi\">200782128</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">reuse</span><span class=\"o\">-</span><span class=\"n\">set</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n\n<span class=\"n\">compilation</span><span class=\"w\"> </span>:: <span class=\"nc\">nanoseconds</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">bz2</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"err\">Δ</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">22576954.88</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"mf\">1830771.68</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">confidence</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">99</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"mf\">0.77</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"mf\">0.81</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">faster</span><span class=\"w\"> </span><span class=\"n\">than</span><span class=\"w\"> </span><span class=\"n\">reuse</span><span class=\"o\">-</span><span class=\"n\">set</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"o\">!</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">reuse</span><span class=\"o\">-</span><span class=\"n\">set</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"mf\">1.25</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"mf\">1.29</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">faster</span><span class=\"w\"> </span><span class=\"n\">than</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"o\">!</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">100449245</span><span class=\"w\"> </span><span class=\"mf\">106820149.65</span><span class=\"w\"> </span><span class=\"mi\">118628066</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">77039172</span><span class=\"w\"> </span><span class=\"mf\">84243194.77</span><span class=\"w\"> </span><span class=\"mi\">128168647</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">reuse</span><span class=\"o\">-</span><span class=\"n\">set</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n\n<span class=\"n\">compilation</span><span class=\"w\"> </span>:: <span class=\"nc\">nanoseconds</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"err\">Δ</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">664533554.97</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"mf\">22109170.05</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">confidence</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">99</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"mf\">0.81</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"mf\">0.82</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">faster</span><span class=\"w\"> </span><span class=\"n\">than</span><span class=\"w\"> </span><span class=\"n\">reuse</span><span class=\"o\">-</span><span class=\"n\">set</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"o\">!</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">reuse</span><span class=\"o\">-</span><span class=\"n\">set</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"mf\">1.22</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"mf\">1.23</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">faster</span><span class=\"w\"> </span><span class=\"n\">than</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"o\">!</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">3549762523</span><span class=\"w\"> </span><span class=\"mf\">3640587103.35</span><span class=\"w\"> </span><span class=\"mi\">3798662501</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">2793335181</span><span class=\"w\"> </span><span class=\"mf\">2976053548.38</span><span class=\"w\"> </span><span class=\"mi\">3192950484</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">reuse</span><span class=\"o\">-</span><span class=\"n\">set</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n</code></pre></div>\n<p>(Benchmark results for <code>cycles</code>, rather than wall time, are ~identical.)</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 290965909,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658875856
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4536\">PR #4536</a>.</p>",
        "id": 290965910,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658875857
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4536\">PR #4536</a> from <code>reuse-hash-set-in-can-optimize-var-lookup</code> to <code>main</code>.</p>",
        "id": 290968913,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658878162
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/jameysharp\">jameysharp</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4536\">PR #4536</a>.</p>",
        "id": 290968924,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658878173
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4536#pullrequestreview-1051727262\">PR review</a>.</p>",
        "id": 290969610,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658878695
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4536#discussion_r930496547\">PR review comment</a>:</p>\n<blockquote>\n<p>Huh, moving the <code>insert</code> after changing <code>current</code> doesn't seem right. Did you mean to do that?</p>\n<p>A pre-existing nit: <code>insert</code> returns true if <code>contains</code> would have returned false. So assuming you don't want to change the order here those two calls can be collapsed into <code>if !self.visited.insert(current) { ...</code></p>\n</blockquote>",
        "id": 290969611,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658878695
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4536#discussion_r930498588\">PR review comment</a>:</p>\n<blockquote>\n<blockquote>\n<p>Huh, moving the <code>insert</code> after changing <code>current</code> doesn't seem right. Did you mean to do that?</p>\n</blockquote>\n<p>Have to to appease the borrow checker, since <code>predecessors</code> has a shared borrow of <code>self</code>.</p>\n</blockquote>",
        "id": 290969932,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658878963
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4536#pullrequestreview-1051729733\">PR review</a>.</p>",
        "id": 290969933,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658878963
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4536#discussion_r930498838\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah but I did introduce a bug, I see now what you mean, will fix in a sec.</p>\n</blockquote>",
        "id": 290969967,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658879002
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4536#pullrequestreview-1051730048\">PR review</a>.</p>",
        "id": 290969968,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658879002
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4536\">PR #4536</a> from <code>reuse-hash-set-in-can-optimize-var-lookup</code> to <code>main</code>.</p>",
        "id": 290970212,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658879209
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/jameysharp\">jameysharp</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4536\">PR #4536</a>.</p>",
        "id": 290970216,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658879216
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4536#pullrequestreview-1051732609\">PR review</a>.</p>",
        "id": 290970254,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658879273
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4536#discussion_r930500670\">PR review comment</a>:</p>\n<blockquote>\n<p>The simplest fix is to move the <code>visited</code> check before the <code>predecessors.len()</code> checks: if we've visited this block before, it already passed the <code>predecessors.len()</code> checks.</p>\n</blockquote>",
        "id": 290970255,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658879274
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4536#pullrequestreview-1051733700\">PR review</a>.</p>",
        "id": 290970428,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658879407
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4536#pullrequestreview-1051734764\">PR review</a>.</p>",
        "id": 290970579,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658879542
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4536\">PR #4536</a>.</p>",
        "id": 290977467,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658885906
    }
]