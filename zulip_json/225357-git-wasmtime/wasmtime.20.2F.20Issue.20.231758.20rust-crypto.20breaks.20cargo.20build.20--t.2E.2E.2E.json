[
    {
        "content": "<p>MikeCamel opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1758\">Issue #1758</a>:</p>\n<blockquote>\n<p>Following instructions from here:<a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/docs/WASI-tutorial.md\">https://github.com/bytecodealliance/wasmtime/blob/master/docs/WASI-tutorial.md</a></p>\n<ul>\n<li>What are the steps to reproduce the issue?<br>\nAdd the following to Cargo.toml:</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code>[dependencies]\nrust-crypto = &quot;0.2.36&quot;\n</code></pre></div>\n\n\n<ul>\n<li>What do you expect to happen? What does actually happen? Does it panic, and<br>\n  if so, with which assertion?<br>\nI expect a normal compilation (\"cargo build\" works fine with no \"--target\")<br>\nThis is what I get:</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code>[mbursell@redz1 test-n-try]$ cargo build --target wasm32-wasi --verbose\n       Fresh gcc v0.3.55\n       Fresh rand v0.4.6\n   Compiling rustc-serialize v0.3.24\n     Running `rustc --crate-name rustc_serialize /home/mbursell/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.24/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts --crate-type lib --emit=dep-info,metadata,link -C debuginfo=2 -C metadata=81dd7fcdc8fa060f -C extra-filename=-81dd7fcdc8fa060f --out-dir /home/mbursell/work/programming/rust/projects/test-n-try/target/wasm32-wasi/debug/deps --target wasm32-wasi -L dependency=/home/mbursell/work/programming/rust/projects/test-n-try/target/wasm32-wasi/debug/deps -L dependency=/home/mbursell/work/programming/rust/projects/test-n-try/target/debug/deps --cap-lints allow`\n   Compiling rust-crypto v0.2.36\n       Fresh libc v0.2.71\n       Fresh rand v0.3.23\n       Fresh time v0.1.43\n     Running `rustc --crate-name build_script_build /home/mbursell/.cargo/registry/src/github.com-1ecc6299db9ec823/rust-crypto-0.2.36/build.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type bin --emit=dep-info,link -C debuginfo=2 -C metadata=7f2ee95fb96eec39 -C extra-filename=-7f2ee95fb96eec39 --out-dir /home/mbursell/work/programming/rust/projects/test-n-try/target/debug/build/rust-crypto-7f2ee95fb96eec39 -L dependency=/home/mbursell/work/programming/rust/projects/test-n-try/target/debug/deps --extern gcc=/home/mbursell/work/programming/rust/projects/test-n-try/target/debug/deps/libgcc-4bc2c35f0d7340fa.rlib --cap-lints allow`\n     Running `/home/mbursell/work/programming/rust/projects/test-n-try/target/debug/build/rust-crypto-7f2ee95fb96eec39/build-script-build`\nerror[E0046]: not all trait items implemented, missing: `encode`\n    --&gt; /home/mbursell/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.24/src/serialize.rs:1358:1\n     |\n853  |     fn encode&lt;S: Encoder&gt;(&amp;self, s: &amp;mut S) -&gt; Result&lt;(), S::Error&gt;;\n     |     ---------------------------------------------------------------- `encode` from trait\n...\n1358 | impl Encodable for path::Path {\n     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `encode` in implementation\n\nerror[E0046]: not all trait items implemented, missing: `decode`\n    --&gt; /home/mbursell/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.24/src/serialize.rs:1382:1\n     |\n904  |     fn decode&lt;D: Decoder&gt;(d: &amp;mut D) -&gt; Result&lt;Self, D::Error&gt;;\n     |     ----------------------------------------------------------- `decode` from trait\n...\n1382 | impl Decodable for path::PathBuf {\n     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `decode` in implementation\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0046`.\nerror: could not compile `rustc-serialize`.\n\nCaused by:\n  process didn&#39;t exit successfully: `rustc --crate-name rustc_serialize /home/mbursell/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.24/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts --crate-type lib --emit=dep-info,metadata,link -C debuginfo=2 -C metadata=81dd7fcdc8fa060f -C extra-filename=-81dd7fcdc8fa060f --out-dir /home/mbursell/work/programming/rust/projects/test-n-try/target/wasm32-wasi/debug/deps --target wasm32-wasi -L dependency=/home/mbursell/work/programming/rust/projects/test-n-try/target/wasm32-wasi/debug/deps -L dependency=/home/mbursell/work/programming/rust/projects/test-n-try/target/debug/deps --cap-lints allow` (exit code: 1)\n</code></pre></div>\n\n\n<ul>\n<li>Which Wasmtime version / commit hash / branch are you using?</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code>[mbursell@redz1 test-n-try]$ rustup show\nDefault host: x86_64-unknown-linux-gnu\nrustup home:  /home/mbursell/.rustup\n\ninstalled targets for active toolchain\n--------------------------------------\n\nwasm32-wasi\nx86_64-unknown-linux-gnu\n\nactive toolchain\n----------------\n\nstable-x86_64-unknown-linux-gnu (default)\nrustc 1.43.1 (8d69840ab 2020-05-04)\n</code></pre></div>\n\n\n<ul>\n<li>If relevant, can you include some extra information about your environment?<br>\n  (Rust version, operating system, architecture...)</li>\n</ul>\n</blockquote>",
        "id": 198787044,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590510187
    },
    {
        "content": "<p>MikeCamel labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1758\">Issue #1758</a>:</p>\n<blockquote>\n<p>Following instructions from here:<a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/docs/WASI-tutorial.md\">https://github.com/bytecodealliance/wasmtime/blob/master/docs/WASI-tutorial.md</a></p>\n<ul>\n<li>What are the steps to reproduce the issue?<br>\nAdd the following to Cargo.toml:</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code>[dependencies]\nrust-crypto = &quot;0.2.36&quot;\n</code></pre></div>\n\n\n<ul>\n<li>What do you expect to happen? What does actually happen? Does it panic, and<br>\n  if so, with which assertion?<br>\nI expect a normal compilation (\"cargo build\" works fine with no \"--target\")<br>\nThis is what I get:</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code>[mbursell@redz1 test-n-try]$ cargo build --target wasm32-wasi --verbose\n       Fresh gcc v0.3.55\n       Fresh rand v0.4.6\n   Compiling rustc-serialize v0.3.24\n     Running `rustc --crate-name rustc_serialize /home/mbursell/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.24/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts --crate-type lib --emit=dep-info,metadata,link -C debuginfo=2 -C metadata=81dd7fcdc8fa060f -C extra-filename=-81dd7fcdc8fa060f --out-dir /home/mbursell/work/programming/rust/projects/test-n-try/target/wasm32-wasi/debug/deps --target wasm32-wasi -L dependency=/home/mbursell/work/programming/rust/projects/test-n-try/target/wasm32-wasi/debug/deps -L dependency=/home/mbursell/work/programming/rust/projects/test-n-try/target/debug/deps --cap-lints allow`\n   Compiling rust-crypto v0.2.36\n       Fresh libc v0.2.71\n       Fresh rand v0.3.23\n       Fresh time v0.1.43\n     Running `rustc --crate-name build_script_build /home/mbursell/.cargo/registry/src/github.com-1ecc6299db9ec823/rust-crypto-0.2.36/build.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type bin --emit=dep-info,link -C debuginfo=2 -C metadata=7f2ee95fb96eec39 -C extra-filename=-7f2ee95fb96eec39 --out-dir /home/mbursell/work/programming/rust/projects/test-n-try/target/debug/build/rust-crypto-7f2ee95fb96eec39 -L dependency=/home/mbursell/work/programming/rust/projects/test-n-try/target/debug/deps --extern gcc=/home/mbursell/work/programming/rust/projects/test-n-try/target/debug/deps/libgcc-4bc2c35f0d7340fa.rlib --cap-lints allow`\n     Running `/home/mbursell/work/programming/rust/projects/test-n-try/target/debug/build/rust-crypto-7f2ee95fb96eec39/build-script-build`\nerror[E0046]: not all trait items implemented, missing: `encode`\n    --&gt; /home/mbursell/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.24/src/serialize.rs:1358:1\n     |\n853  |     fn encode&lt;S: Encoder&gt;(&amp;self, s: &amp;mut S) -&gt; Result&lt;(), S::Error&gt;;\n     |     ---------------------------------------------------------------- `encode` from trait\n...\n1358 | impl Encodable for path::Path {\n     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `encode` in implementation\n\nerror[E0046]: not all trait items implemented, missing: `decode`\n    --&gt; /home/mbursell/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.24/src/serialize.rs:1382:1\n     |\n904  |     fn decode&lt;D: Decoder&gt;(d: &amp;mut D) -&gt; Result&lt;Self, D::Error&gt;;\n     |     ----------------------------------------------------------- `decode` from trait\n...\n1382 | impl Decodable for path::PathBuf {\n     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `decode` in implementation\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0046`.\nerror: could not compile `rustc-serialize`.\n\nCaused by:\n  process didn&#39;t exit successfully: `rustc --crate-name rustc_serialize /home/mbursell/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.24/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts --crate-type lib --emit=dep-info,metadata,link -C debuginfo=2 -C metadata=81dd7fcdc8fa060f -C extra-filename=-81dd7fcdc8fa060f --out-dir /home/mbursell/work/programming/rust/projects/test-n-try/target/wasm32-wasi/debug/deps --target wasm32-wasi -L dependency=/home/mbursell/work/programming/rust/projects/test-n-try/target/wasm32-wasi/debug/deps -L dependency=/home/mbursell/work/programming/rust/projects/test-n-try/target/debug/deps --cap-lints allow` (exit code: 1)\n</code></pre></div>\n\n\n<ul>\n<li>Which Wasmtime version / commit hash / branch are you using?</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code>[mbursell@redz1 test-n-try]$ rustup show\nDefault host: x86_64-unknown-linux-gnu\nrustup home:  /home/mbursell/.rustup\n\ninstalled targets for active toolchain\n--------------------------------------\n\nwasm32-wasi\nx86_64-unknown-linux-gnu\n\nactive toolchain\n----------------\n\nstable-x86_64-unknown-linux-gnu (default)\nrustc 1.43.1 (8d69840ab 2020-05-04)\n</code></pre></div>\n\n\n<ul>\n<li>If relevant, can you include some extra information about your environment?<br>\n  (Rust version, operating system, architecture...)</li>\n</ul>\n</blockquote>",
        "id": 198787045,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590510187
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1758#issuecomment-634134936\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1758\">Issue #1758</a>:</p>\n<blockquote>\n<p><code>rust-crypto</code> seems to not support wasm: <a href=\"https://github.com/DaGenix/rust-crypto/issues/437#issuecomment-395915033\">https://github.com/DaGenix/rust-crypto/issues/437#issuecomment-395915033</a>. The author of that comment has forked it to add wasm support: <a href=\"https://github.com/buttercup/rust-crypto-wasm\">https://github.com/buttercup/rust-crypto-wasm</a>.</p>\n</blockquote>",
        "id": 198788079,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590510665
    },
    {
        "content": "<p>bjorn3 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1758#issuecomment-634134936\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1758\">Issue #1758</a>:</p>\n<blockquote>\n<p><code>rust-crypto</code> seems to not support wasm: <a href=\"https://github.com/DaGenix/rust-crypto/issues/437#issuecomment-395915033\">https://github.com/DaGenix/rust-crypto/issues/437#issuecomment-395915033</a>. The author of that comment has forked it to add wasm support: <a href=\"https://github.com/buttercup/rust-crypto-wasm\">https://github.com/buttercup/rust-crypto-wasm</a>. Also the last update of <code>rust-crypto</code> was in 2016. The last update of the fork was in 2018. Consider using a different crypto library.</p>\n</blockquote>",
        "id": 198788226,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590510734
    },
    {
        "content": "<p>MikeCamel <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1758#issuecomment-634141791\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1758\">Issue #1758</a>:</p>\n<blockquote>\n<p>I've updated to rust-crypto-wasm v.0.3.1, and all compiles!  Thank you.</p>\n<p>-Mike.</p>\n</blockquote>",
        "id": 198789703,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590511449
    },
    {
        "content": "<p>MikeCamel closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1758\">Issue #1758</a>:</p>\n<blockquote>\n<p>Following instructions from here:<a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/docs/WASI-tutorial.md\">https://github.com/bytecodealliance/wasmtime/blob/master/docs/WASI-tutorial.md</a></p>\n<ul>\n<li>What are the steps to reproduce the issue?<br>\nAdd the following to Cargo.toml:</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code>[dependencies]\nrust-crypto = &quot;0.2.36&quot;\n</code></pre></div>\n\n\n<ul>\n<li>What do you expect to happen? What does actually happen? Does it panic, and<br>\n  if so, with which assertion?<br>\nI expect a normal compilation (\"cargo build\" works fine with no \"--target\")<br>\nThis is what I get:</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code>[mbursell@redz1 test-n-try]$ cargo build --target wasm32-wasi --verbose\n       Fresh gcc v0.3.55\n       Fresh rand v0.4.6\n   Compiling rustc-serialize v0.3.24\n     Running `rustc --crate-name rustc_serialize /home/mbursell/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.24/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts --crate-type lib --emit=dep-info,metadata,link -C debuginfo=2 -C metadata=81dd7fcdc8fa060f -C extra-filename=-81dd7fcdc8fa060f --out-dir /home/mbursell/work/programming/rust/projects/test-n-try/target/wasm32-wasi/debug/deps --target wasm32-wasi -L dependency=/home/mbursell/work/programming/rust/projects/test-n-try/target/wasm32-wasi/debug/deps -L dependency=/home/mbursell/work/programming/rust/projects/test-n-try/target/debug/deps --cap-lints allow`\n   Compiling rust-crypto v0.2.36\n       Fresh libc v0.2.71\n       Fresh rand v0.3.23\n       Fresh time v0.1.43\n     Running `rustc --crate-name build_script_build /home/mbursell/.cargo/registry/src/github.com-1ecc6299db9ec823/rust-crypto-0.2.36/build.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type bin --emit=dep-info,link -C debuginfo=2 -C metadata=7f2ee95fb96eec39 -C extra-filename=-7f2ee95fb96eec39 --out-dir /home/mbursell/work/programming/rust/projects/test-n-try/target/debug/build/rust-crypto-7f2ee95fb96eec39 -L dependency=/home/mbursell/work/programming/rust/projects/test-n-try/target/debug/deps --extern gcc=/home/mbursell/work/programming/rust/projects/test-n-try/target/debug/deps/libgcc-4bc2c35f0d7340fa.rlib --cap-lints allow`\n     Running `/home/mbursell/work/programming/rust/projects/test-n-try/target/debug/build/rust-crypto-7f2ee95fb96eec39/build-script-build`\nerror[E0046]: not all trait items implemented, missing: `encode`\n    --&gt; /home/mbursell/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.24/src/serialize.rs:1358:1\n     |\n853  |     fn encode&lt;S: Encoder&gt;(&amp;self, s: &amp;mut S) -&gt; Result&lt;(), S::Error&gt;;\n     |     ---------------------------------------------------------------- `encode` from trait\n...\n1358 | impl Encodable for path::Path {\n     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `encode` in implementation\n\nerror[E0046]: not all trait items implemented, missing: `decode`\n    --&gt; /home/mbursell/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.24/src/serialize.rs:1382:1\n     |\n904  |     fn decode&lt;D: Decoder&gt;(d: &amp;mut D) -&gt; Result&lt;Self, D::Error&gt;;\n     |     ----------------------------------------------------------- `decode` from trait\n...\n1382 | impl Decodable for path::PathBuf {\n     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `decode` in implementation\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0046`.\nerror: could not compile `rustc-serialize`.\n\nCaused by:\n  process didn&#39;t exit successfully: `rustc --crate-name rustc_serialize /home/mbursell/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.24/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts --crate-type lib --emit=dep-info,metadata,link -C debuginfo=2 -C metadata=81dd7fcdc8fa060f -C extra-filename=-81dd7fcdc8fa060f --out-dir /home/mbursell/work/programming/rust/projects/test-n-try/target/wasm32-wasi/debug/deps --target wasm32-wasi -L dependency=/home/mbursell/work/programming/rust/projects/test-n-try/target/wasm32-wasi/debug/deps -L dependency=/home/mbursell/work/programming/rust/projects/test-n-try/target/debug/deps --cap-lints allow` (exit code: 1)\n</code></pre></div>\n\n\n<ul>\n<li>Which Wasmtime version / commit hash / branch are you using?</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code>[mbursell@redz1 test-n-try]$ rustup show\nDefault host: x86_64-unknown-linux-gnu\nrustup home:  /home/mbursell/.rustup\n\ninstalled targets for active toolchain\n--------------------------------------\n\nwasm32-wasi\nx86_64-unknown-linux-gnu\n\nactive toolchain\n----------------\n\nstable-x86_64-unknown-linux-gnu (default)\nrustc 1.43.1 (8d69840ab 2020-05-04)\n</code></pre></div>\n\n\n<ul>\n<li>If relevant, can you include some extra information about your environment?<br>\n  (Rust version, operating system, architecture...)</li>\n</ul>\n</blockquote>",
        "id": 198789704,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590511449
    },
    {
        "content": "<p>sunfishcode <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1758#issuecomment-634147817\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1758\">Issue #1758</a>:</p>\n<blockquote>\n<p>It should be noted that rust-crypto-wasm uses <a href=\"https://github.com/buttercup/rust-crypto-wasm/commit/26310309cf434d30938a3401e2f0617eabfd129a#diff-d25ef168d08ddcfeaca8453639097a59R60\">compiled implementations of <code>secure_memset</code> and <code>fixed_time_eq</code></a> which when compiled to wasm are not guaranteed to uphold the \"secure\" or \"fixed_time\" parts of their respective names.</p>\n</blockquote>",
        "id": 198790962,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590512072
    }
]