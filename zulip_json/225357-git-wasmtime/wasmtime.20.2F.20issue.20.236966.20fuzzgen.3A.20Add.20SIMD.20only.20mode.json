[
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6966\">issue #6966</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<h4>Feature</h4>\n<p>We should add a SIMD only mode to fuzzgen. Where every input generates at least one vector variable or maybe a vector instruction.</p>\n<h4>Benefit</h4>\n<p>This would have been really useful when developing the RISC-V SIMD backend since I was only really interested in fuzzing the newer SIMD instructions. </p>\n<h4>Implementation</h4>\n<p>An easy way to do this is to check the signature of every function generated by fuzzgen and reject it if it does not contain a vector type.</p>\n<p>I think it would be nice to have this as an environment flag so that it would be usable during development.</p>\n<h4>Alternatives</h4>\n<p>We don't have to do this, fuzzgen will theoretically reach those inputs eventually. But in my experience it takes quite a while to generate the same coverage as doing this would.</p>\n<p>cc: @alexcrichton <br>\n</p>\n</blockquote>",
        "id": 389287489,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693949661
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6966#issuecomment-1707355359\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6966\">issue #6966</a>:</p>\n<blockquote>\n<p>I think this is a great idea personally since the SIMD implementations have been the source of some of the more subtle bugs. One possible way to implement this is what we've done with the <code>differential</code> target where a <code>Unstructured::ratio</code> can be used to more-or-less bias one way or another. This way some of the input could be used to determine the SIMD-only mode flag if an env var isn't otherwise set. That way I think we'd still get good coverage while not needing a whole new fuzzer ideally</p>\n</blockquote>",
        "id": 389289844,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693950681
    }
]