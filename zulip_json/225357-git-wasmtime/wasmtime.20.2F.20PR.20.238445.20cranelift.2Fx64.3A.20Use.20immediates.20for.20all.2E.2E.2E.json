[
    {
        "content": "<p><strong>jameysharp</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8445\">PR #8445</a>.</p>",
        "id": 435015713,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713887618
    },
    {
        "content": "<p><strong>jameysharp</strong> requested <a href=\"https://github.com/elliottt\">elliottt</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8445\">PR #8445</a>.</p>",
        "id": 435015714,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713887618
    },
    {
        "content": "<p>jameysharp opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8445\">PR #8445</a> from <code>jameysharp:x64-32bit-imm</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>On x86-64, instructions which take 32-bit immediate operands in 64-bit mode sign-extend those immediates.</p>\n<p>To accommodate that, we currently only generate an immediate if the 64-bit constant we want is equal to truncating to 32 bits and then sign-extending back to 64 bits. Otherwise we put the 64-bit constant in the constant pool.</p>\n<p>However, if the constant's type is I32, we don't care about its upper 32 bits. In that case it's safe to generate an immediate whether the sign bit is set or not. We should never need to use the constant pool for types smaller than 64 bits on x64.</p>\n</blockquote>",
        "id": 435015715,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713887619
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8445#issuecomment-2072903034\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8445\">PR #8445</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @cfallin, @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\", \"cranelift:area:x64\", \"isle\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>cfallin: isle</li>\n<li>fitzgen: isle</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 435025621,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713890695
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8445#pullrequestreview-2017793981\">PR review</a>:</p>\n<blockquote>\n<p>ha, good find :p</p>\n</blockquote>",
        "id": 435027914,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713891386
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8445\">PR #8445</a>.</p>",
        "id": 435034801,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713893486
    }
]