[
    {
        "content": "<p>yuyang-ok opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4912\">issue #4912</a>:</p>\n<p>Finished test [unoptimized + debuginfo] target(s) in 1m 11s<br>\n     Running tests/host_segfault.rs (/home/yuyang/projects/wasmtime/target/debug/deps/host_segfault-69e695fd58d52fab)<br>\nthread 'main' panicked at '</p>\n<p>expected a stack overflow on <code>hit async stack guard page with pooling allocator</code><br>\ngot status: exit status: 101<br>\nstderr: ----<br>\n    thread 'main' panicked at 'size:6002G memory_size:6144M max_memories:1 max_instances:1000 initial_memory_offset:2048M static_memory_bound:65536', crates/runtime/src/instance/allocator/pooling.rs:726:13<br>\n    note: run with <code>RUST_BACKTRACE=1</code> environment variable to display a backtrace</p>\n<p>', tests/host_segfault.rs:213:13<br>\nnote: run with <code>RUST_BACKTRACE=1</code> environment variable to display a backtrace<br>\nerror: test failed, to rerun pass '--test host_segfault'</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code>\n</code></pre></div>\n<p>let allocation_size = memory_size<br>\n            .checked_mul(max_memories)<br>\n            .and_then(|c| c.checked_mul(max_instances))<br>\n            .and_then(|c| c.checked_add(initial_memory_offset))<br>\n            .ok_or_else(|| {<br>\n                anyhow!(\"total size of memory reservation exceeds addressable memory\")<br>\n            })?;<br>\n        if (allocation_size &gt;&gt; 30) &gt;= 16 {<br>\n            panic!(<br>\n                \"size:{}G memory_size:{}M max_memories:{} max_instances:{} initial_memory_offset:{}M static_memory_bound:{}\",<br>\n                allocation_size &gt;&gt; 30,<br>\n                memory_size &gt;&gt; 20,<br>\n                max_memories,<br>\n                max_instances,<br>\n                initial_memory_offset &gt;&gt; 20,<br>\n                tunables.   static_memory_bound,<br>\n            );<br>\n        }</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code>\n</code></pre></div>",
        "id": 298884331,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663200787
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4912#issuecomment-1247423546\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4912\">issue #4912</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/runtime/src/instance/allocator/pooling.rs#L718\">https://github.com/bytecodealliance/wasmtime/blob/main/crates/runtime/src/instance/allocator/pooling.rs#L718</a></p>\n</blockquote>",
        "id": 298884453,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663200887
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4912#issuecomment-1247460597\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4912\">issue #4912</a>:</p>\n<blockquote>\n<p>You're running these tests in qemu, right? When our GitHub Actions run tests in qemu, they set <code>WASMTIME_TEST_NO_HOG_MEMORY=1</code>. I don't understand exactly what that's for, but maybe it would help you?</p>\n</blockquote>",
        "id": 298888423,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663204825
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4912#issuecomment-1247463561\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4912\">issue #4912</a>:</p>\n<blockquote>\n<p>@jameysharp I am not running in qemu. The number is too big cann't be right.</p>\n</blockquote>",
        "id": 298888758,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663205188
    },
    {
        "content": "<p>yuyang-ok deleted a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4912#issuecomment-1247463561\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4912\">issue #4912</a>:</p>\n<blockquote>\n<p>@jameysharp I am not running in qemu. The number is too big cann't be right.</p>\n</blockquote>",
        "id": 298919140,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663228385
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4912#issuecomment-1247723857\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4912\">issue #4912</a>:</p>\n<blockquote>\n<p>maybe this is related to <code>qemu-riscv64</code> implementation.<br>\nI found that allocation_size on <code>riscv64gc-unknown-linux-gnu</code> is the same as <code>x86_64-unknown-linux-gnu</code>.<br>\nbut target <code>x86_64-unknown-linux-gnu</code> can pass the test <code>host_segment</code>.<br>\non my local mechine <code>qemu-riscv64</code> will exhaust all physical memory.</p>\n<p>@jameysharp  I have <code>WASMTIME_TEST_NO_HOG_MEMORY=1</code>.</p>\n</blockquote>\n<p>Running <code>/home/yuyang/projects/qemu/build/qemu-riscv64 -L /usr/riscv64-linux-gnu -E LD_LIBRARY_PATH=/usr/riscv64-linux-gnu/lib -E WASMTIME_TEST_NO_HOG_MEMORY=1 /home/yuyang/projects/wasmtime/target/riscv64gc-unknown-linux-gnu/debug/deps/host_segfault-0362e2365a90b3f7</code><br>\nthread 'main' panicked at '</p>\n<p>expected a stack overflow on <code>hit async stack guard page with pooling allocator</code><br>\ngot status: exit status: 101<br>\nstderr: ----<br>\n    thread 'main' panicked at 'size:6002G memory_size:6144M max_memories:1 max_instances:1000 initial_memory_offset:2048M static_memory_bound:65536', crates/runtime/src/instance/allocator/pooling.rs:726:13<br>\n    note: run with <code>RUST_BACKTRACE=1</code> environment variable to display a backtrace</p>\n<p>', tests/host_segfault.rs:213:13<br>\nnote: run with <code>RUST_BACKTRACE=1</code> environment variable to display a backtrace<br>\nerror: test failed, to rerun pass '--test host_segfault'</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code>\n</code></pre></div>",
        "id": 298919750,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663228670
    },
    {
        "content": "<p>yuyang-ok edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4912\">issue #4912</a>:</p>\n<p>Finished test [unoptimized + debuginfo] target(s) in 26.99s<br>\n     Running <code>/home/yuyang/projects/qemu/build/qemu-riscv64 -L /usr/riscv64-linux-gnu -E LD_LIBRARY_PATH=/usr/riscv64-linux-gnu/lib -E WASMTIME_TEST_NO_HOG_MEMORY=1 /home/yuyang/projects/wasmtime/target/riscv64gc-unknown-linux-gnu/debug/deps/host_segfault-0362e2365a90b3f7</code><br>\nthread 'main' panicked at '</p>\n<p>expected a stack overflow on <code>hit async stack guard page with pooling allocator</code><br>\ngot status: signal: 9 (SIGKILL)</p>\n<p>', tests/host_segfault.rs:213:13<br>\nnote: run with <code>RUST_BACKTRACE=1</code> environment variable to display a backtrace<br>\nerror: test failed, to rerun pass '--test host_segfault'</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code>\n</code></pre></div>",
        "id": 298920464,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663228963
    },
    {
        "content": "<p>yuyang-ok edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4912#issuecomment-1247723857\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4912\">issue #4912</a>:</p>\n<blockquote>\n<p>maybe this is related to <code>qemu-riscv64</code> implementation.<br>\nI found that allocation_size on <code>riscv64gc-unknown-linux-gnu</code> is the same as <code>x86_64-unknown-linux-gnu</code>.<br>\nbut target <code>x86_64-unknown-linux-gnu</code> can pass the test <code>host_segment</code>.<br>\non my local mechine <code>qemu-riscv64</code> will exhaust all physical memory.</p>\n<p>@jameysharp  I have <code>WASMTIME_TEST_NO_HOG_MEMORY=1</code>.</p>\n</blockquote>",
        "id": 298920532,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663228994
    }
]