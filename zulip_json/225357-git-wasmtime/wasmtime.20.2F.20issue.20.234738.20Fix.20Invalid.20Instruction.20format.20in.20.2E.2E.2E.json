[
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4738#issuecomment-1221035799\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4738\">issue #4738</a>:</p>\n<blockquote>\n<blockquote>\n<p>Is there ever a case where someone should be allowed to use a different instruction-format constructor than the standard format for an opcode?</p>\n</blockquote>\n<p>That should never happen. Would break our ISLE extractors for matching clif instructions, at the very least. But a ton of helpers only look for certain opcodes in certain formats, etc.</p>\n</blockquote>",
        "id": 294350962,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660938032
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4738#issuecomment-1221038367\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4738\">issue #4738</a>:</p>\n<blockquote>\n<blockquote>\n<p>That should never happen. Would break our ISLE extractors for matching clif instructions, at the very least. But a ton of helpers only look for certain opcodes in certain formats, etc.</p>\n</blockquote>\n<p>Just to be clear: If it should never happen, then a runtime assertion that it never happens is a good idea, right?</p>\n</blockquote>",
        "id": 294351503,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660938256
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4738#issuecomment-1221042761\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4738\">issue #4738</a>:</p>\n<blockquote>\n<p>Yeah, probably a debug assertion. (I haven't looked at this patch at all)</p>\n</blockquote>",
        "id": 294352306,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660938641
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4738#issuecomment-1221044126\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4738\">issue #4738</a>:</p>\n<blockquote>\n<p>Indeed it should never happen, and this is usually enforced by the generated builder interface's per-instruction methods, but nothing currently stops someone from manually putting the wrong pieces together in the data structure or invoking the per-instruction-format method with an opcode as in the test here. That will break a lot of things (including ISLE matchers as Nick notes). Our best defense is to guard against this at construction time as best we can.</p>\n<p>An assert in the per-instruction-format builder API seems totally reasonable, but let's make it a <code>debug_assert</code> rather than <code>assert</code> so that we don't have any runtime impact (the debug assert will still be tested in the fuzzing configuration).</p>\n</blockquote>",
        "id": 294352544,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660938741
    }
]