[
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/elliottt\">elliottt</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8360\">PR #8360</a>.</p>",
        "id": 433043551,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713011635
    },
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8360\">PR #8360</a>.</p>",
        "id": 433043552,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713011635
    },
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8360\">PR #8360</a> from <code>afonso360:fuzzgen-use-correct-target-isa</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>cranelift-fuzzgen unconditionally runs the NaN Canonicalization pass on all functions that it generates. This is so that we can ensure that when running in the interpreter vs natively we get the same bitpattern for all NaN's.</p>\n<p>Until now we just picked a random ISA (the host ISA), disabled the verifier and ran the pass with that. This was because the ISA didn't really matter for the passes that we wanted to run.</p>\n<p>In #8313 the ISA now drives some codegen decisions for the NaN Canonicalization pass. Namely, if the ISA supports Vectors, it tries to use that.</p>\n<p>In #8359 a fuzz bug was reported where fuzzgen generated vector code for RISC-V without the <code>has_v</code> flag, something that should <em>never</em> happen, because we simply cannot compile that code.</p>\n<p>It turns out that fuzzgen did not generate vector code itself. But since we were passing the host ISA to the NaN canonicalization pass, it assumed that it could use vectors and did so. But the actual target ISA did not support vectors.</p>\n<p>To fix this, we now correctly pass the target ISA that we are building a function for.</p>\n<p>Fixes #8359 </p>\n</blockquote>",
        "id": 433043553,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713011635
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8360#pullrequestreview-1999320492\">PR review</a>:</p>\n<blockquote>\n<p>Looks good to me!</p>\n</blockquote>",
        "id": 433063534,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713029387
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8360\">PR #8360</a>.</p>",
        "id": 433070336,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713034683
    }
]