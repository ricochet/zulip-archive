[
    {
        "content": "<p>saulecabrera opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4907\">PR #4907</a> from <code>winch-skeleton</code> to <code>main</code>:</p>\n<blockquote>\n<p>Ref: <a href=\"https://github.com/bytecodealliance/rfcs/pull/28\">https://github.com/bytecodealliance/rfcs/pull/28</a></p>\n<hr>\n<p>This change introduces the initial skeleton for Winch, the \"baseline\" compiler.</p>\n<p>This skeleton contains mostly setup code for the ISA, ABI, registers, and compilation environment abstractions. It also includes the calculation of function local slots.</p>\n<p>As of the first commit, the structure of these abstractions looks like the following:</p>\n<div class=\"codehilite\"><pre><span></span><code>                    +------------------------+\n                    |                        v\n +----------+     +-----+     +-----------+-----+-----------------+\n | Compiler | --&gt; | ISA | --&gt; | Registers | ABI | Compilation Env |\n +----------+     +-----+     +-----------+-----+-----------------+\n                    |                              ^\n                    +------------------------------+\n</code></pre></div>\n\n<hr>\n<p>I'm opening this as a draft, since there are several items that I'd like to finish before continuing to iterate in-tree, namely:</p>\n<ul>\n<li>[ ] Prologue</li>\n<li>[ ] Function body with (<strong>debug</strong>) <code>i32.add</code> support</li>\n<li>[ ] Epilogue</li>\n<li>[ ] Initial skeleton of a (<strong>debug</strong>) Assembler interface</li>\n<li>[ ] Increase test coverage and include unit tests in CI</li>\n</ul>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 298627213,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663088134
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4907\">PR #4907</a> from <code>winch-skeleton</code> to <code>main</code>.</p>",
        "id": 298627409,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663088197
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4907\">PR #4907</a> from <code>winch-skeleton</code> to <code>main</code>.</p>",
        "id": 300257151,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663885001
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4907#discussion_r978501022\">PR review comment</a>:</p>\n<blockquote>\n<p>This should probably replaced with features on winch that enable the respective feature of cranelift-codegen and additionally enabling the target architecture if no architecture is selected, just like for cranelift-codegen.</p>\n</blockquote>",
        "id": 300333709,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663929660
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4907#pullrequestreview-1118248825\">PR review</a>.</p>",
        "id": 300333710,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663929660
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4907\">PR #4907</a> from <code>winch-skeleton</code> to <code>main</code>.</p>",
        "id": 300444349,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663964389
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4907\">PR #4907</a> from <code>winch-skeleton</code> to <code>main</code>.</p>",
        "id": 300444605,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663964486
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4907\">PR #4907</a> from <code>winch-skeleton</code> to <code>main</code>.</p>",
        "id": 300914531,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664234380
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4907\">PR #4907</a> from <code>winch-skeleton</code> to <code>main</code>.</p>",
        "id": 301035162,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664292154
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4907\">PR #4907</a> from <code>winch-skeleton</code> to <code>main</code>.</p>",
        "id": 301727715,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664569168
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4907\">PR #4907</a> from <code>winch-skeleton</code> to <code>main</code>.</p>",
        "id": 301727760,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664569195
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4907\">PR #4907</a> from <code>winch-skeleton</code> to <code>main</code>.</p>",
        "id": 301747993,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664579127
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4907\">PR #4907</a> from <code>winch-skeleton</code> to <code>main</code>.</p>",
        "id": 302822024,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665139331
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4907\">PR #4907</a> from <code>winch-skeleton</code> to <code>main</code>.</p>",
        "id": 302822190,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665139421
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4907\">PR #4907</a> from <code>winch-skeleton</code> to <code>main</code>.</p>",
        "id": 302861642,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665152198
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4907\">PR #4907</a> from <code>winch-skeleton</code> to <code>main</code>.</p>",
        "id": 302897770,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665162718
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4907\">PR #4907</a> from <code>winch-skeleton</code> to <code>main</code>.</p>",
        "id": 303595123,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665568915
    },
    {
        "content": "<p>saulecabrera edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4907\">PR #4907</a> from <code>winch-skeleton</code> to <code>main</code>:</p>\n<blockquote>\n<p>Ref: <a href=\"https://github.com/bytecodealliance/rfcs/pull/28\">https://github.com/bytecodealliance/rfcs/pull/28</a></p>\n<hr>\n<p>This change introduces the initial skeleton for Winch, the \"baseline\" compiler.</p>\n<p>This skeleton contains mostly setup code for the ISA, ABI, registers, and compilation environment abstractions. It also includes the calculation of function local slots.</p>\n<p>As of the first commit, the structure of these abstractions looks like the following:</p>\n<div class=\"codehilite\"><pre><span></span><code>                    +------------------------+\n                    |                        v\n +----------+     +-----+     +-----------+-----+-----------------+\n | Compiler | --&gt; | ISA | --&gt; | Registers | ABI | Compilation Env |\n +----------+     +-----+     +-----------+-----+-----------------+\n                    |                              ^\n                    +------------------------------+\n</code></pre></div>\n\n<hr>\n<p>I'm opening this as a draft, since there are several items that I'd like to finish before continuing to iterate in-tree, namely:</p>\n<ul>\n<li>[x] Prologue</li>\n<li>[ ] Function body with (<strong>debug</strong>) <code>i32.add</code> support</li>\n<li>[ ] Epilogue</li>\n<li>[ ] Initial skeleton of a (<strong>debug</strong>) Assembler interface</li>\n<li>[ ] Increase test coverage and include unit tests in CI</li>\n</ul>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 303595214,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665568937
    },
    {
        "content": "<p>saulecabrera edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4907\">PR #4907</a> from <code>winch-skeleton</code> to <code>main</code>:</p>\n<blockquote>\n<p>Ref: <a href=\"https://github.com/bytecodealliance/rfcs/pull/28\">https://github.com/bytecodealliance/rfcs/pull/28</a></p>\n<hr>\n<p>This change introduces the initial skeleton for Winch, the \"baseline\" compiler.</p>\n<p>This skeleton contains mostly setup code for the ISA, ABI, registers, and compilation environment abstractions. It also includes the calculation of function local slots.</p>\n<p>As of the first commit, the structure of these abstractions looks like the following:</p>\n<div class=\"codehilite\"><pre><span></span><code>                    +------------------------+\n                    |                        v\n +----------+     +-----+     +-----------+-----+-----------------+\n | Compiler | --&gt; | ISA | --&gt; | Registers | ABI | Compilation Env |\n +----------+     +-----+     +-----------+-----+-----------------+\n                    |                              ^\n                    +------------------------------+\n</code></pre></div>\n\n<hr>\n<p>I'm opening this as a draft, since there are several items that I'd like to finish before continuing to iterate in-tree, namely:</p>\n<ul>\n<li>[x] Prologue</li>\n<li>[x] Function body with (<strong>debug</strong>) <code>i32.add</code> support</li>\n<li>[ ] Epilogue</li>\n<li>[ ] Initial skeleton of a (<strong>debug</strong>) Assembler interface</li>\n<li>[ ] Increase test coverage and include unit tests in CI</li>\n</ul>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 303595228,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665568940
    },
    {
        "content": "<p>saulecabrera edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4907\">PR #4907</a> from <code>winch-skeleton</code> to <code>main</code>:</p>\n<blockquote>\n<p>Ref: <a href=\"https://github.com/bytecodealliance/rfcs/pull/28\">https://github.com/bytecodealliance/rfcs/pull/28</a></p>\n<hr>\n<p>This change introduces the initial skeleton for Winch, the \"baseline\" compiler.</p>\n<p>This skeleton contains mostly setup code for the ISA, ABI, registers, and compilation environment abstractions. It also includes the calculation of function local slots.</p>\n<p>As of the first commit, the structure of these abstractions looks like the following:</p>\n<div class=\"codehilite\"><pre><span></span><code>                    +------------------------+\n                    |                        v\n +----------+     +-----+     +-----------+-----+-----------------+\n | Compiler | --&gt; | ISA | --&gt; | Registers | ABI | Compilation Env |\n +----------+     +-----+     +-----------+-----+-----------------+\n                    |                              ^\n                    +------------------------------+\n</code></pre></div>\n\n<hr>\n<p>I'm opening this as a draft, since there are several items that I'd like to finish before continuing to iterate in-tree, namely:</p>\n<ul>\n<li>[x] Prologue</li>\n<li>[x] Function body with (<strong>debug</strong>) <code>i32.add</code> support</li>\n<li>[x] Epilogue</li>\n<li>[ ] Initial skeleton of a (<strong>debug</strong>) Assembler interface</li>\n<li>[ ] Increase test coverage and include unit tests in CI</li>\n</ul>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 303595230,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665568942
    },
    {
        "content": "<p>saulecabrera edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4907\">PR #4907</a> from <code>winch-skeleton</code> to <code>main</code>:</p>\n<blockquote>\n<p>Ref: <a href=\"https://github.com/bytecodealliance/rfcs/pull/28\">https://github.com/bytecodealliance/rfcs/pull/28</a></p>\n<hr>\n<p>This change introduces the initial skeleton for Winch, the \"baseline\" compiler.</p>\n<p>This skeleton contains mostly setup code for the ISA, ABI, registers, and compilation environment abstractions. It also includes the calculation of function local slots.</p>\n<p>As of the first commit, the structure of these abstractions looks like the following:</p>\n<div class=\"codehilite\"><pre><span></span><code>                    +------------------------+\n                    |                        v\n +----------+     +-----+     +-----------+-----+-----------------+\n | Compiler | --&gt; | ISA | --&gt; | Registers | ABI | Compilation Env |\n +----------+     +-----+     +-----------+-----+-----------------+\n                    |                              ^\n                    +------------------------------+\n</code></pre></div>\n\n<hr>\n<p>I'm opening this as a draft, since there are several items that I'd like to finish before continuing to iterate in-tree, namely:</p>\n<ul>\n<li>[x] Prologue</li>\n<li>[x] Function body with (<strong>debug</strong>) <code>i32.add</code> support</li>\n<li>[x] Epilogue</li>\n<li>[x] Initial skeleton of a (<strong>debug</strong>) Assembler interface</li>\n<li>[ ] Increase test coverage and include unit tests in CI</li>\n</ul>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 303595233,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665568943
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4907\">PR #4907</a> from <code>winch-skeleton</code> to <code>main</code>.</p>",
        "id": 303595694,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665569136
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4907\">PR #4907</a> from <code>winch-skeleton</code> to <code>main</code>.</p>",
        "id": 304591121,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666055765
    },
    {
        "content": "<p>saulecabrera edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4907\">PR #4907</a> from <code>winch-skeleton</code> to <code>main</code>:</p>\n<blockquote>\n<p>Ref: <a href=\"https://github.com/bytecodealliance/rfcs/pull/28\">https://github.com/bytecodealliance/rfcs/pull/28</a></p>\n<hr>\n<p>This change introduces the initial skeleton for Winch, the \"baseline\" compiler.</p>\n<p>This skeleton contains mostly setup code for the ISA, ABI, registers, and compilation environment abstractions. It also includes the calculation of function local slots.</p>\n<p>As of the first commit, the structure of these abstractions looks like the following:</p>\n<div class=\"codehilite\"><pre><span></span><code>                    +------------------------+\n                    |                        v\n +----------+     +-----+     +-----------+-----+-----------------+\n | Compiler | --&gt; | ISA | --&gt; | Registers | ABI | Compilation Env |\n +----------+     +-----+     +-----------+-----+-----------------+\n                    |                              ^\n                    +------------------------------+\n</code></pre></div>\n\n<hr>\n<p>I'm opening this as a draft, since there are several items that I'd like to finish before continuing to iterate in-tree, namely:</p>\n<ul>\n<li>[x] Prologue</li>\n<li>[x] Function body with (<strong>debug</strong>) <code>i32.add</code> support</li>\n<li>[x] Epilogue</li>\n<li>[x] Initial skeleton of a (<strong>debug</strong>) Assembler interface<br>\n&lt;!--</li>\n</ul>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 304591249,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666055879
    },
    {
        "content": "<p>saulecabrera edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4907\">PR #4907</a> from <code>winch-skeleton</code> to <code>main</code>:</p>\n<blockquote>\n<p>Ref: <a href=\"https://github.com/bytecodealliance/rfcs/pull/28\">https://github.com/bytecodealliance/rfcs/pull/28</a></p>\n<hr>\n<p>This change introduces the initial skeleton for Winch, the \"baseline\" compiler.</p>\n<p>This skeleton contains mostly setup code for the ISA, ABI, registers, and compilation environment abstractions. It also includes the calculation of function local slots.</p>\n<p>As of the first commit, the structure of these abstractions looks like the following:</p>\n<div class=\"codehilite\"><pre><span></span><code>                    +------------------------+\n                    |                        v\n +----------+     +-----+     +-----------+-----+-----------------+\n | Compiler | --&gt; | ISA | --&gt; | Registers | ABI | Compilation Env |\n +----------+     +-----+     +-----------+-----+-----------------+\n                    |                              ^\n                    +------------------------------+\n</code></pre></div>\n\n<hr>\n<p>I'm opening this as a draft, since there are several items that I'd like to finish before continuing to iterate in-tree, namely:</p>\n<ul>\n<li>[x] Prologue</li>\n<li>[x] Function body with (<strong>debug</strong>) <code>i32.add</code>, <code>local.get</code> and <code>local.set</code> support</li>\n<li>[x] Epilogue</li>\n<li>[x] Initial skeleton of a (<strong>debug</strong>) MacroAssembler and Assembler (x64) interface<br>\n&lt;!--</li>\n</ul>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 304591385,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666055977
    },
    {
        "content": "<p>saulecabrera edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4907\">PR #4907</a> from <code>winch-skeleton</code> to <code>main</code>:</p>\n<blockquote>\n<p>This change introduces the initial skeleton for Winch, the \"baseline\" compiler, discussed <a href=\"https://github.com/bytecodealliance/rfcs/pull/28\">https://github.com/bytecodealliance/rfcs/pull/28</a></p>\n<p>The skeleton contains the just the necessary code for the main abstractions to support the following:</p>\n<ul>\n<li>Function prologue and epilogue (excluding stack checks)</li>\n<li>Calculation of local slots</li>\n<li>An initial pass on a generic MacroAssembler interface</li>\n<li>An initial pass on a x64 Assembler</li>\n<li>A simple CLI tools to compile WebAssembly programs (<code>crates/winch/src/main.rs</code>)</li>\n<li>String based emission for programs that use the following WebAssembly instructions: <code>i32.add</code>, <code>local.get</code>, <code>local.set</code></li>\n</ul>\n<p>As of this change, the high-level structure of the compiler is as follows:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">      </span><span class=\"o\">+-----------------------+</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"o\">|</span><span class=\"w\">                       </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"o\">|</span><span class=\"w\">  </span><span class=\"o\">+-----------+</span><span class=\"w\">      </span><span class=\"o\">+---------------------+</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"o\">|</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">Compiler</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">--</span>-&gt; <span class=\"o\">|</span><span class=\"w\">         </span><span class=\"n\">ISA</span><span class=\"w\">         </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">---------------------------------------------------------------+</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"o\">|</span><span class=\"w\">  </span><span class=\"o\">+-----------+</span><span class=\"w\">      </span><span class=\"o\">+---------------------+</span><span class=\"w\">                                                                </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"o\">|</span><span class=\"w\">                       </span><span class=\"o\">|</span><span class=\"w\">                                                                                    </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"o\">|</span><span class=\"w\">                       </span><span class=\"o\">|</span><span class=\"w\">                                                                                    </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"o\">|</span><span class=\"w\">                       </span><span class=\"n\">v</span><span class=\"w\">                                                                                    </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"o\">|</span><span class=\"w\">  </span><span class=\"o\">+-----------+-----+----------------------+</span><span class=\"w\">     </span><span class=\"o\">+----------------+</span><span class=\"w\">     </span><span class=\"o\">+-------+----------------+-------+</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"o\">+&gt;</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">Registers</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">ABI</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">        </span><span class=\"n\">CodeGen</span><span class=\"w\">       </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">-</span>-&gt; <span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">CodeGenContext</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">-</span>-&gt; <span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">Frame</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">MacroAssembler</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">Stack</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">          </span><span class=\"o\">+-----------+-----+----------------------+</span><span class=\"w\">     </span><span class=\"o\">+----------------+</span><span class=\"w\">     </span><span class=\"o\">+-------+----------------+-------+</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">                         </span><span class=\"o\">^</span><span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\">                                                                                    </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">                         </span><span class=\"o\">+-----+------------------------------------------------------------------------------------+</span><span class=\"w\"></span>\n<span class=\"w\">                               </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">                               </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">                               </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">                               </span><span class=\"n\">v</span><span class=\"w\"></span>\n<span class=\"w\">                             </span><span class=\"o\">+---------------------+</span><span class=\"w\"></span>\n<span class=\"w\">                             </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">Register</span><span class=\"w\"> </span><span class=\"n\">Allocation</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">                             </span><span class=\"o\">+---------------------+</span><span class=\"w\"></span>\n</code></pre></div>\n<hr>\n<p><strong>Next steps</strong></p>\n<p>As mentioned above, this change doesn't use any of Cranelift's backends for code emission, yet. These are the immediate next steps after landing this change:</p>\n<ul>\n<li>Extract the relevant Cranelift pieces into the <code>cranelift_asm</code> crate, which will be used by Winch</li>\n<li>Swap the string based implementation of the x64 assembler and use the assembler provided by <code>cranelift_asm</code></li>\n<li>Add initial support for arm64 through <code>cranelift_asm</code></li>\n<li>Increase test coverage</li>\n</ul>\n<hr>\n<p><strong>Misc</strong> </p>\n<p>Winch's CLI can be used by running `cargo run -- path/to/file.wat --target=&lt;target&gt;</p>\n<p>Here's a set of WebAssembly programs and their corresponding x64 output:<br>\n&lt;details&gt;<br>\n&lt;summary&gt;Basic i32 add&lt;/summary&gt;</p>\n<div class=\"codehilite\" data-code-language=\"WebAssembly\"><pre><span></span><code><span class=\"p\">(</span><span class=\"k\">module</span>\n  <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"main\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"nv\">$main</span><span class=\"p\">))</span>\n\n  <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"nv\">$main</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"kt\">i32</span><span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"nb\">i32.const</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"nb\">i32.const</span> <span class=\"mi\">20</span><span class=\"p\">)</span>\n    <span class=\"nb\">i32.add</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">push</span><span class=\"w\"> </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"nf\">mov</span><span class=\"w\"> </span><span class=\"no\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsp</span><span class=\"w\"></span>\n<span class=\"nf\">mov</span><span class=\"w\"> </span><span class=\"no\">eax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"w\"></span>\n<span class=\"nf\">add</span><span class=\"w\"> </span><span class=\"no\">eax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"w\"></span>\n<span class=\"nf\">pop</span><span class=\"w\"> </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"nf\">ret</span><span class=\"w\"></span>\n</code></pre></div>\n<p>&lt;/details&gt;</p>\n<p>&lt;details&gt;<br>\n&lt;summary&gt; i32 add with local operators &lt;/summary&gt;</p>\n<div class=\"codehilite\" data-code-language=\"WebAssembly\"><pre><span></span><code><span class=\"p\">(</span><span class=\"k\">module</span>\n  <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"main\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"nv\">$main</span><span class=\"p\">))</span>\n\n  <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"nv\">$main</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"kt\">i32</span><span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"k\">local</span> <span class=\"nv\">$foo</span> <span class=\"kt\">i32</span><span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"k\">local</span> <span class=\"nv\">$bar</span> <span class=\"kt\">i32</span><span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"nb\">i32.const</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"nb\">local.set</span> <span class=\"nv\">$foo</span><span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"nb\">i32.const</span> <span class=\"mi\">20</span><span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"nb\">local.set</span> <span class=\"nv\">$bar</span><span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"nb\">local.get</span> <span class=\"nv\">$foo</span><span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"nb\">local.get</span> <span class=\"nv\">$bar</span><span class=\"p\">)</span>\n    <span class=\"nb\">i32.add</span>\n  <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">push</span><span class=\"w\"> </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"nf\">mov</span><span class=\"w\"> </span><span class=\"no\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsp</span><span class=\"w\"></span>\n<span class=\"nf\">sub</span><span class=\"w\"> </span><span class=\"no\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"w\"></span>\n<span class=\"nf\">mov</span><span class=\"w\"> </span><span class=\"no\">qword</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"no\">rsp</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"></span>\n<span class=\"nf\">mov</span><span class=\"w\"> </span><span class=\"no\">eax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"w\"></span>\n<span class=\"nf\">mov</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"no\">rsp</span><span class=\"w\"> </span><span class=\"err\">+</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"no\">eax</span><span class=\"w\"></span>\n<span class=\"nf\">mov</span><span class=\"w\"> </span><span class=\"no\">ecx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"w\"></span>\n<span class=\"nf\">mov</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"no\">rsp</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"no\">ecx</span><span class=\"w\"></span>\n<span class=\"nf\">mov</span><span class=\"w\"> </span><span class=\"no\">eax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"no\">rsp</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"nf\">mov</span><span class=\"w\"> </span><span class=\"no\">edx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"no\">rsp</span><span class=\"w\"> </span><span class=\"err\">+</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"nf\">add</span><span class=\"w\"> </span><span class=\"no\">edx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">eax</span><span class=\"w\"></span>\n<span class=\"nf\">mov</span><span class=\"w\"> </span><span class=\"no\">rax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdx</span><span class=\"w\"></span>\n<span class=\"nf\">add</span><span class=\"w\"> </span><span class=\"no\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"w\"></span>\n<span class=\"nf\">pop</span><span class=\"w\"> </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"nf\">ret</span><span class=\"w\"></span>\n</code></pre></div>\n<p>&lt;/details&gt;</p>\n<p>&lt;details&gt;<br>\n&lt;summary&gt;Basic i32 with function arguments &lt;/summary&gt;</p>\n<div class=\"codehilite\" data-code-language=\"WebAssembly\"><pre><span></span><code><span class=\"p\">(</span><span class=\"k\">module</span>\n  <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"main\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"nv\">$main</span><span class=\"p\">))</span>\n\n  <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"nv\">$main</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i32</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i32</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"kt\">i32</span><span class=\"p\">)</span>\n      <span class=\"p\">(</span><span class=\"nb\">local.get</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n      <span class=\"p\">(</span><span class=\"nb\">local.get</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n      <span class=\"nb\">i32.add</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">push</span><span class=\"w\"> </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"nf\">mov</span><span class=\"w\"> </span><span class=\"no\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsp</span><span class=\"w\"></span>\n<span class=\"nf\">sub</span><span class=\"w\"> </span><span class=\"no\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"w\"></span>\n<span class=\"nf\">mov</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"no\">rsp</span><span class=\"w\"> </span><span class=\"err\">+</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"no\">edi</span><span class=\"w\"></span>\n<span class=\"nf\">mov</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"no\">rsp</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"no\">esi</span><span class=\"w\"></span>\n<span class=\"nf\">mov</span><span class=\"w\"> </span><span class=\"no\">eax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"no\">rsp</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"nf\">mov</span><span class=\"w\"> </span><span class=\"no\">ecx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"no\">rsp</span><span class=\"w\"> </span><span class=\"err\">+</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"nf\">add</span><span class=\"w\"> </span><span class=\"no\">ecx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">eax</span><span class=\"w\"></span>\n<span class=\"nf\">mov</span><span class=\"w\"> </span><span class=\"no\">rax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rcx</span><span class=\"w\"></span>\n<span class=\"nf\">add</span><span class=\"w\"> </span><span class=\"no\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"w\"></span>\n<span class=\"nf\">pop</span><span class=\"w\"> </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"nf\">ret</span><span class=\"w\"></span>\n</code></pre></div>\n<p>&lt;/details&gt;</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</li>\n<li>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</li>\n<li>[ ] This PR contains test cases, if meaningful.</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the <br>\n[message truncated]</li>\n</ul>\n</blockquote>",
        "id": 304595555,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666058646
    }
]