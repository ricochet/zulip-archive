[
    {
        "content": "<p>syrusakbary opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2907\">issue #2907</a>:</p>\n<blockquote>\n<p>Cranelift emits AbsoluteRelocation <code>Reloc::Abs8</code> when <code>is_pic</code> setting is enabled in architecture <code>aarch64</code></p>\n<h3>Steps to Reproduce</h3>\n<div class=\"codehilite\" data-code-language=\"WebAssembly\"><pre><span></span><code><span class=\"p\">(</span><span class=\"k\">module</span>\n  <span class=\"c1\">;; Recursive factorial</span>\n  <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"fac-rec\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i64</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"kt\">i64</span><span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"kt\">i64</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"nb\">i64.eq</span> <span class=\"p\">(</span><span class=\"nb\">local.get</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"nb\">i64.const</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">then</span> <span class=\"p\">(</span><span class=\"nb\">i64.const</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">else</span>\n        <span class=\"p\">(</span><span class=\"nb\">i64.mul</span> <span class=\"p\">(</span><span class=\"nb\">local.get</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"nb\">call</span> <span class=\"mi\">0</span> <span class=\"p\">(</span><span class=\"nb\">i64.sub</span> <span class=\"p\">(</span><span class=\"nb\">local.get</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"nb\">i64.const</span> <span class=\"mi\">1</span><span class=\"p\">))))</span>\n      <span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n  <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">wasm2obj</span><span class=\"w\"> </span><span class=\"n\">fac</span><span class=\"p\">.</span><span class=\"n\">wat</span><span class=\"w\"> </span><span class=\"n\">fac</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Code emitted <code>fac.o</code> has absolute relocations.</p>\n<h3>Expected Results</h3>\n<p>Is expected for Cranelift to emit a relative relocation for aarch64 when <code>is_pic</code> is enabled.</p>\n<h3>Actual Results</h3>\n<p>Code emitted with an absolute relocation.</p>\n<h3>Versions and Environment</h3>\n<p>Cranelift version: <code>cranelift-codegen = \"0.73.0\"</code><br>\nOperating system: Any<br>\nArchitecture: Aarch64</p>\n<h2>Extra info</h2>\n<p>Here's where the wrong code is emitted:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/207da989acf5c6d828dd5d1704c05c0d01b1dead/cranelift/codegen/src/isa/aarch64/inst/emit.rs#L2440-L2462\">https://github.com/bytecodealliance/wasmtime/blob/207da989acf5c6d828dd5d1704c05c0d01b1dead/cranelift/codegen/src/isa/aarch64/inst/emit.rs#L2440-L2462</a></p>\n<p>In the new x86 backend however, the <code>is_pic</code> case is properly handled:</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/e676589b0c6e8228c421e18249d4635eb6c4bbe4/cranelift/codegen/src/isa/x64/inst/emit.rs#L2350-L2387\">https://github.com/bytecodealliance/wasmtime/blob/e676589b0c6e8228c421e18249d4635eb6c4bbe4/cranelift/codegen/src/isa/x64/inst/emit.rs#L2350-L2387</a></p>\n</blockquote>",
        "id": 238868993,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1621054754
    },
    {
        "content": "<p>syrusakbary labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2907\">issue #2907</a>:</p>\n<blockquote>\n<p>Cranelift emits AbsoluteRelocation <code>Reloc::Abs8</code> when <code>is_pic</code> setting is enabled in architecture <code>aarch64</code></p>\n<h3>Steps to Reproduce</h3>\n<div class=\"codehilite\" data-code-language=\"WebAssembly\"><pre><span></span><code><span class=\"p\">(</span><span class=\"k\">module</span>\n  <span class=\"c1\">;; Recursive factorial</span>\n  <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"fac-rec\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i64</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"kt\">i64</span><span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"kt\">i64</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"nb\">i64.eq</span> <span class=\"p\">(</span><span class=\"nb\">local.get</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"nb\">i64.const</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">then</span> <span class=\"p\">(</span><span class=\"nb\">i64.const</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">else</span>\n        <span class=\"p\">(</span><span class=\"nb\">i64.mul</span> <span class=\"p\">(</span><span class=\"nb\">local.get</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"nb\">call</span> <span class=\"mi\">0</span> <span class=\"p\">(</span><span class=\"nb\">i64.sub</span> <span class=\"p\">(</span><span class=\"nb\">local.get</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"nb\">i64.const</span> <span class=\"mi\">1</span><span class=\"p\">))))</span>\n      <span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n  <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">wasm2obj</span><span class=\"w\"> </span><span class=\"n\">fac</span><span class=\"p\">.</span><span class=\"n\">wat</span><span class=\"w\"> </span><span class=\"n\">fac</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Code emitted <code>fac.o</code> has absolute relocations.</p>\n<h3>Expected Results</h3>\n<p>Is expected for Cranelift to emit a relative relocation for aarch64 when <code>is_pic</code> is enabled.</p>\n<h3>Actual Results</h3>\n<p>Code emitted with an absolute relocation.</p>\n<h3>Versions and Environment</h3>\n<p>Cranelift version: <code>cranelift-codegen = \"0.73.0\"</code><br>\nOperating system: Any<br>\nArchitecture: Aarch64</p>\n<h2>Extra info</h2>\n<p>Here's where the wrong code is emitted:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/207da989acf5c6d828dd5d1704c05c0d01b1dead/cranelift/codegen/src/isa/aarch64/inst/emit.rs#L2440-L2462\">https://github.com/bytecodealliance/wasmtime/blob/207da989acf5c6d828dd5d1704c05c0d01b1dead/cranelift/codegen/src/isa/aarch64/inst/emit.rs#L2440-L2462</a></p>\n<p>In the new x86 backend however, the <code>is_pic</code> case is properly handled:</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/e676589b0c6e8228c421e18249d4635eb6c4bbe4/cranelift/codegen/src/isa/x64/inst/emit.rs#L2350-L2387\">https://github.com/bytecodealliance/wasmtime/blob/e676589b0c6e8228c421e18249d4635eb6c4bbe4/cranelift/codegen/src/isa/x64/inst/emit.rs#L2350-L2387</a></p>\n</blockquote>",
        "id": 238868994,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1621054754
    },
    {
        "content": "<p>syrusakbary labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2907\">issue #2907</a>:</p>\n<blockquote>\n<p>Cranelift emits AbsoluteRelocation <code>Reloc::Abs8</code> when <code>is_pic</code> setting is enabled in architecture <code>aarch64</code></p>\n<h3>Steps to Reproduce</h3>\n<div class=\"codehilite\" data-code-language=\"WebAssembly\"><pre><span></span><code><span class=\"p\">(</span><span class=\"k\">module</span>\n  <span class=\"c1\">;; Recursive factorial</span>\n  <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"fac-rec\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i64</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"kt\">i64</span><span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"kt\">i64</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"nb\">i64.eq</span> <span class=\"p\">(</span><span class=\"nb\">local.get</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"nb\">i64.const</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">then</span> <span class=\"p\">(</span><span class=\"nb\">i64.const</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">else</span>\n        <span class=\"p\">(</span><span class=\"nb\">i64.mul</span> <span class=\"p\">(</span><span class=\"nb\">local.get</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"nb\">call</span> <span class=\"mi\">0</span> <span class=\"p\">(</span><span class=\"nb\">i64.sub</span> <span class=\"p\">(</span><span class=\"nb\">local.get</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"nb\">i64.const</span> <span class=\"mi\">1</span><span class=\"p\">))))</span>\n      <span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n  <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">wasm2obj</span><span class=\"w\"> </span><span class=\"n\">fac</span><span class=\"p\">.</span><span class=\"n\">wat</span><span class=\"w\"> </span><span class=\"n\">fac</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Code emitted <code>fac.o</code> has absolute relocations.</p>\n<h3>Expected Results</h3>\n<p>Is expected for Cranelift to emit a relative relocation for aarch64 when <code>is_pic</code> is enabled.</p>\n<h3>Actual Results</h3>\n<p>Code emitted with an absolute relocation.</p>\n<h3>Versions and Environment</h3>\n<p>Cranelift version: <code>cranelift-codegen = \"0.73.0\"</code><br>\nOperating system: Any<br>\nArchitecture: Aarch64</p>\n<h2>Extra info</h2>\n<p>Here's where the wrong code is emitted:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/207da989acf5c6d828dd5d1704c05c0d01b1dead/cranelift/codegen/src/isa/aarch64/inst/emit.rs#L2440-L2462\">https://github.com/bytecodealliance/wasmtime/blob/207da989acf5c6d828dd5d1704c05c0d01b1dead/cranelift/codegen/src/isa/aarch64/inst/emit.rs#L2440-L2462</a></p>\n<p>In the new x86 backend however, the <code>is_pic</code> case is properly handled:</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/e676589b0c6e8228c421e18249d4635eb6c4bbe4/cranelift/codegen/src/isa/x64/inst/emit.rs#L2350-L2387\">https://github.com/bytecodealliance/wasmtime/blob/e676589b0c6e8228c421e18249d4635eb6c4bbe4/cranelift/codegen/src/isa/x64/inst/emit.rs#L2350-L2387</a></p>\n</blockquote>",
        "id": 238868995,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1621054754
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2907#issuecomment-841604620\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2907\">issue #2907</a>:</p>\n<blockquote>\n<p>Thanks for the report @syrusakbary !</p>\n<p>Indeed this is a missing feature in the current aarch64 backend; it hasn't been needed yet but it should certainly be implemented at some point. In the short term it could make sense to assert not-PIC, so at least the failure is correct; but I'd be happy to review a PR, if you would like to take a crack at this. (Otherwise I don't know if anyone currently has the bandwidth to do this offhand, to assign this issue, though @bnjbvr please correct me if you have any plans for PIC as part of the M1 focus!)</p>\n</blockquote>",
        "id": 238870996,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1621056985
    }
]