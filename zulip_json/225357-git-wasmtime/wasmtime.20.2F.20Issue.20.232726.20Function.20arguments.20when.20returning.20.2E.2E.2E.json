[
    {
        "content": "<p>willygroup opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2726\">Issue #2726</a>:</p>\n<blockquote>\n<p>Hi, <br>\nI'm pretty new to the whole rust/wasm world. <br>\nI'm passing to rust host from rust wasm  function that returns a simple struct. <br>\nI'm compiling with cargo and the target wasm32-unknown-unknown.<br>\nI saw that when I check the module exports this function get an extra arguments... making some guessing I find out that is the memory pointer for the return struct...</p>\n<p>I cannot find out some documentation for this behaviour... someone can please address me to the right direction? <br>\nThanks a lot <span aria-label=\"smiling face\" class=\"emoji emoji-263a\" role=\"img\" title=\"smiling face\">:smiling_face:</span> </p>\n</blockquote>",
        "id": 230244370,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1615734734
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2726#issuecomment-798927962\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2726\">Issue #2726</a>:</p>\n<blockquote>\n<blockquote>\n<p>making some guessing I find out that is the memory pointer for the return struct...</p>\n</blockquote>\n<p>Correct</p>\n<blockquote>\n<p>I cannot find out some documentation for this behaviour... someone can please address me to the right direction?</p>\n</blockquote>\n<p>Apart from reading the source of rustc and LLVM there isn't really for wasm32-unknown-unknown. Probably the best description is <a href=\"https://github.com/rust-lang/rust/pull/81388#issuecomment-767438600\">https://github.com/rust-lang/rust/pull/81388#issuecomment-767438600</a>. For wasm32-unknown-emscripten and wasm32-wasi, the official C abi for wasm is followed, but for wasm32-unknown-unknown this is not the case. By accident LLVM was allowed to do it's own abi adjustments and now it can't be changed anymore without breaking wasm-bindgen. (source: I broke it by accident a while ago by doing something that prevented LLVM from doing it's own abi adjustments.)</p>\n</blockquote>",
        "id": 230245640,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1615736103
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2726#issuecomment-799461162\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2726\">Issue #2726</a>:</p>\n<blockquote>\n<p>The C ABI for the wasm32 target is currently documented at <a href=\"https://github.com/WebAssembly/tool-conventions/blob/master/BasicCABI.md\">https://github.com/WebAssembly/tool-conventions/blob/master/BasicCABI.md</a>, although the Rust ABI for wasm32-unknown-unknown differs from Clang for historical reasons. Using the wasm32-wasi target, however, the ABIs will be the same.</p>\n</blockquote>",
        "id": 230352369,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1615818239
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2726\">Issue #2726</a>:</p>\n<blockquote>\n<p>Hi, <br>\nI'm pretty new to the whole rust/wasm world. <br>\nI'm passing to rust host from rust wasm  function that returns a simple struct. <br>\nI'm compiling with cargo and the target wasm32-unknown-unknown.<br>\nI saw that when I check the module exports this function get an extra arguments... making some guessing I find out that is the memory pointer for the return struct...</p>\n<p>I cannot find out some documentation for this behaviour... someone can please address me to the right direction? <br>\nThanks a lot <span aria-label=\"smiling face\" class=\"emoji emoji-263a\" role=\"img\" title=\"smiling face\">:smiling_face:</span> </p>\n</blockquote>",
        "id": 230352370,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1615818239
    },
    {
        "content": "<p>willygroup <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2726#issuecomment-800859338\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2726\">Issue #2726</a>:</p>\n<blockquote>\n<p>Ok!<br>\nThanks a lot for your work!! :-)<br>\n</p>\n</blockquote>",
        "id": 230647896,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1615965873
    }
]