[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8374\">PR #8374</a> from <code>alexcrichton:fix-c-api-and-gc</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This commit changes the <code>wasmtime_val_t::{from_val, to_val}</code> methods to take a <code>RootScope</code> instead of any <code>AsContextMut</code>. This then required a number of refactorings in callers to ensure that a <code>RootScope</code> was created for any function that needed one. This is required to ensure that GC references in the C API aren't forced to live for the entire lifetime of the store.</p>\n<p>This additionally added <code>*_unrooted</code> variants which do the same thing but don't require <code>RootScope</code>. This was needed for when the C API calls out to the embedder through a function call because a new <code>RootScope</code> wouldn't work for return values (they're bound to a scope within the closure when we want them to outlive the closure). In these situations though we know a <code>RootScope</code> is already present at the entrypoint.</p>\n<p>Closes #8367</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 433390376,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713216370
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8374\">PR #8374</a>.</p>",
        "id": 433390377,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713216370
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8374\">PR #8374</a>.</p>",
        "id": 433390379,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713216370
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8374#pullrequestreview-2002215256\">PR review</a>.</p>",
        "id": 433392627,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713217303
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8374#pullrequestreview-2002215256\">PR review</a>.</p>",
        "id": 433392628,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713217303
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8374#discussion_r1566469197\">PR review comment</a>:</p>\n<blockquote>\n<p>Also, the <code>wasmtime_val_t::from_val[_unrooted]</code> constructors never create <code>Rooted</code>s so I don't think we actually need two variants of these ones? Its just creating a <code>Val</code> (which contains a <code>Rooted</code> and means we might be creating a <code>Rooted</code> ourselves) that needs the scoping.</p>\n</blockquote>",
        "id": 433392629,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713217303
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8374#discussion_r1566467759\">PR review comment</a>:</p>\n<blockquote>\n<p>Maybe we can rename this <code>from_val_unscoped</code> or something? \"unrooted\" had me convinced that this was passing around <code>ExternRef::to_raw</code> results and stuff like that potentially across GCs which is not what's going on.</p>\n</blockquote>",
        "id": 433392630,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713217303
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8374#issuecomment-2057863427\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8374\">PR #8374</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @peterhuene</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"wasmtime:c-api\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>peterhuene: wasmtime:c-api</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 433393055,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713217495
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8374#pullrequestreview-2002257178\">PR review</a>.</p>",
        "id": 433395660,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713218659
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8374#discussion_r1566486900\">PR review comment</a>:</p>\n<blockquote>\n<p>Good point about the naming, I'll switch to your suggestion.</p>\n<p>I thought the same for <code>from_val</code> but I ended up realizing that APIs like <code>wasmtime_global_get</code> also will want a <code>RootScope</code> on them. That's only calling <code>from_val</code> but if we forgot a <code>RootScope</code> there the any value coming out of a global would forever-after be attached to the store (since the <code>Rooted</code> coming out has no other scope). That convinced me to leave the <code>from_val{,_unscoped}</code> distinction to continue to encourage the use of <code>RootScope</code> anywhere in the C API that might use it.</p>\n</blockquote>",
        "id": 433395661,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713218659
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8374\">PR #8374</a>.</p>",
        "id": 433395778,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713218719
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8374\">PR #8374</a>.</p>",
        "id": 433395839,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713218749
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8374\">PR #8374</a>.</p>",
        "id": 433401025,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713221009
    }
]