[
    {
        "content": "<p>The wast crate emits bytes. Was there a plan to create a separate crate to do just emitting part?</p>",
        "id": 210895742,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1600791990
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253991\">@Yury Delendik</span> I've always wanted to have one but I never had concrete plans beyond a desire</p>",
        "id": 210896986,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1600792551
    },
    {
        "content": "<p>I was thinking I should pull these bits out of <code>wasm-smith</code> but haven't got around to it</p>",
        "id": 210907976,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1600797378
    },
    {
        "content": "<p><code>wasm-smith</code> supports \"relocations\" of going back and fixing up length prefixes and stuff, which I imagine is valuable for such a crate</p>",
        "id": 210908048,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1600797415
    },
    {
        "content": "<p>its all in this module: <a href=\"https://github.com/fitzgen/wasm-smith/blob/main/src/encode.rs\">https://github.com/fitzgen/wasm-smith/blob/main/src/encode.rs</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/fitzgen/wasm-smith/blob/main/src/encode.rs\" style=\"background-image: url(https://avatars2.githubusercontent.com/u/74571?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/fitzgen/wasm-smith/blob/main/src/encode.rs\" title=\"fitzgen/wasm-smith\">fitzgen/wasm-smith</a></div><div class=\"message_embed_description\">A WebAssembly test case generator. Contribute to fitzgen/wasm-smith development by creating an account on GitHub.</div></div></div>",
        "id": 210908105,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1600797450
    },
    {
        "content": "<p>I imagine that making this a crate would replace all the closure-taking functions with builder structs for ergonomics, and there would be a bunch of different builder/writer structs for each part of wasm (the same way wasmparser has a bunch of different kinds of readers)</p>",
        "id": 210908406,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1600797579
    },
    {
        "content": "<p>basic use case I'm entertaining atm is merging serveral modules (multi-memory and stuff)</p>",
        "id": 210908432,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1600797593
    },
    {
        "content": "<p>so wasmparsers will be reading + some logic to change indices in operators</p>",
        "id": 210908633,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1600797673
    },
    {
        "content": "<p>I was thinking more something at the abstraction level of <code>wasmparser</code>; that is, raw binary encoding/decoding</p>\n<p>for higher level transforms and merging things together, <code>walrus</code> might be a better bet</p>",
        "id": 210919621,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1600802853
    }
]