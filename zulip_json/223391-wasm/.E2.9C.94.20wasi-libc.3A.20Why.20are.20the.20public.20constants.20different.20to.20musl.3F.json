[
    {
        "content": "<p>For example <a href=\"https://github.com/WebAssembly/wasi-libc/blob/ad5133410f66b93a2381db5b542aad5e0964db96/libc-bottom-half/headers/public/__header_fcntl.h#L20\">https://github.com/WebAssembly/wasi-libc/blob/ad5133410f66b93a2381db5b542aad5e0964db96/libc-bottom-half/headers/public/__header_fcntl.h#L20</a>  compared to musl libc  it is <code>#define O_RDONLY  00</code>  Seems like wasm-libc has always been like this, but it would be better if it used the same constants as wasm built with musl libc (e.g. emscripten), cannot be run with wasmtime.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/wasi-libc/blob/ad5133410f66b93a2381db5b542aad5e0964db96/libc-bottom-half/headers/public/__header_fcntl.h#L20\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/5de41fb7622072e10067267deec828bf0d65cac9\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f373534383266333330336363336532623365393563326461373634653565373735656439626239623262643762633730623362393833613666663636316634342f576562417373656d626c792f776173692d6c696263)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/wasi-libc/blob/ad5133410f66b93a2381db5b542aad5e0964db96/libc-bottom-half/headers/public/__header_fcntl.h#L20\" title=\"wasi-libc/__header_fcntl.h at ad5133410f66b93a2381db5b542aad5e0964db96 · WebAssembly/wasi-libc\">wasi-libc/__header_fcntl.h at ad5133410f66b93a2381db5b542aad5e0964db96 · WebAssembly/wasi-libc</a></div><div class=\"message_embed_description\">WASI libc implementation for WebAssembly. Contribute to WebAssembly/wasi-libc development by creating an account on GitHub.</div></div></div>",
        "id": 274612656,
        "sender_full_name": "Scott Waye",
        "timestamp": 1646776306
    },
    {
        "content": "<p>This therefore means that runtimes, like dotnet, need 2 different runtimes depending on what the host is which is not great.</p>",
        "id": 274612799,
        "sender_full_name": "Scott Waye",
        "timestamp": 1646776368
    },
    {
        "content": "<p>The original reason is that cloudlibc did it that way, and the code comes from there.</p>",
        "id": 274612950,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1646776442
    },
    {
        "content": "<p>From a libc maintainer perspective, these values are implementation details. musl only has a single value because musl only supports Linux, where <code>O_RDONLY</code> always has the same value. But across other platforms, it can have different values.</p>",
        "id": 274613247,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1646776595
    },
    {
        "content": "<p>wasi-libc is not ABI-compatible with Emscripten in numerous ways, and no one has ever volunteered to do the work to make it be so.</p>",
        "id": 274613353,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1646776658
    },
    {
        "content": "<p>That said, from a practical perspective, some C / POSIX constants are sufficiently \"well known\" that we do make efforts to align their values with the well-known values. This is somewhat subjective, so whether <code>O_RDONLY</code> should qualify as having a well-known value would come down to how it's used in practice, how you're using it.</p>",
        "id": 274613862,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1646776871
    },
    {
        "content": "<p>Thanks.  Trying to use <code>open</code> from the dotnet runtime to make the wasm runtime similar to the Unix runtime, reducing developer cost.  I suppose the argument is that dotnet should not do that, but go straight to the wasi syscalls where the flags are well defined.</p>",
        "id": 274614537,
        "sender_full_name": "Scott Waye",
        "timestamp": 1646777195
    },
    {
        "content": "<p>Which would be ok in the long run, but emscripten's wasi support is a WIP, whereas it's libc support is good.</p>",
        "id": 274614770,
        "sender_full_name": "Scott Waye",
        "timestamp": 1646777317
    },
    {
        "content": "<p>Not that that helps much.  The only system that is at fault here is the dotnet runtime, I just tried to take the libc route (emscripten and wasi-libc) and came unstuck.</p>",
        "id": 274614976,
        "sender_full_name": "Scott Waye",
        "timestamp": 1646777437
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"395878\">Scott Waye</span> has marked this topic as resolved.</p>",
        "id": 274826233,
        "sender_full_name": "Notification Bot",
        "timestamp": 1646914488
    }
]