[
    {
        "content": "<p>I have an unfinished local branch that adds exception handling lowering to wasm-opt, for the benefit of runtimes like wasmtime where exception handling isn't supported and probably won't be supported for a while. At the moment I have to patch a lot of the software I package to replace <code>__cxa_throw</code> with an abort, which isn't great. I haven't got EH lowering to fully work yet but I think it should definitely be possible.</p>\n<p>I've considered using Asyncify to implement EH but it seems like, while they are conceptually similar, EH can't really be implemented in terms of unmodified Asyncify since Asyncify works on the unit of a function and EH works on the unit of a try/catch block.</p>\n<p>One additional reason I want EH lowering is because <code>wasi_thread_exit</code> doesn't currently exist but it enables certain applications (virtualizing <code>proc_exit</code> in CLI subcommands by denying spawning threads and then using threads as faux-processes). Without runtime support it can only be implemented (in terms of core Wasm functionality) via EH, though I could also write a <code>wasm-opt</code> pass lowering that function specifically. (Ideally it would be EH as otherwise the overhead of the asyncify-style branches will compound.)</p>\n<p>Is there anybody else interested in this functionality? (Possibly enough to sponsor the work?) Do you think it will be accepted in upstream wasm-opt?</p>",
        "id": 417101928,
        "sender_full_name": "Catherine (whitequark)",
        "timestamp": 1705855728
    },
    {
        "content": "<p>found it! I'll pick up the thread on monday</p>",
        "id": 451361636,
        "sender_full_name": "Ralph",
        "timestamp": 1720969380
    }
]