[
    {
        "content": "<p>I am trying to fully understand the wasm module lifecycle and I wonder of there is some canonical and/or popular description of what is needed to happen during a wasm module instantiation. Can I get any pointers to this, please?</p>",
        "id": 360747486,
        "sender_full_name": "Mats Brorsson",
        "timestamp": 1684923739
    },
    {
        "content": "<p>For canonical, there is the <a href=\"https://webassembly.github.io/spec/core/exec/modules.html#exec-instantiation\">definition of instantiation in the core spec</a>.</p>",
        "id": 360775780,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1684931528
    },
    {
        "content": "<p>For popular, I don't know of any references offhand, but it's roughly: given a module and a set of \"exports\" corresponding to the module's imports: validate the module, check that the exports' types match the module's imports' types, create an instance containing memories, tables, globals, functions, and other items specified in the module, link the module's imports to the provided exports, and then run the start function if present.</p>",
        "id": 360777645,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1684932038
    }
]