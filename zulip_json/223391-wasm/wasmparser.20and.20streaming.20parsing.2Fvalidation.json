[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253991\">@Yury Delendik</span> as a heads up, this is a simple sketch of what I'm thinking for wasmparser -- <a href=\"https://gist.github.com/alexcrichton/5cd36abd7bef3b57e4dd4033c7c3345b\">https://gist.github.com/alexcrichton/5cd36abd7bef3b57e4dd4033c7c3345b</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://gist.github.com/alexcrichton/5cd36abd7bef3b57e4dd4033c7c3345b\" style=\"background-image: url(https://github.githubassets.com/images/modules/gists/gist-og-image.png)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://gist.github.com/alexcrichton/5cd36abd7bef3b57e4dd4033c7c3345b\" title=\"a.rs\">a.rs</a></div><div class=\"message_embed_description\">GitHub Gist: instantly share code, notes, and snippets.</div></div></div>",
        "id": 203038909,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1594068464
    },
    {
        "content": "<p>the high-level idea is to remove <code>ModuleReader</code>, <code>Parser</code>, and <code>ValidatingParser</code>. The first two would be replaced by the <code>Parser</code> in that gist, and the latter would be replaced by <code>Validator</code></p>",
        "id": 203038984,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1594068495
    },
    {
        "content": "<p>and at the same time we'd make <code>Parser</code> amenable to incremental parsing (data fed over time), and the validator would be optionally used to feed data into</p>",
        "id": 203039025,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1594068528
    },
    {
        "content": "<p>so validation is on/off based on whether you use <code>Validator</code></p>",
        "id": 203039035,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1594068539
    },
    {
        "content": "<p>overall it should ideally be easier to manage because there's less of a state machine and more \"it's just straight-line code\"</p>",
        "id": 203039069,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1594068563
    },
    {
        "content": "<p>oh the other goal is to enable parallel validation and to be able to reuse the results from validation</p>",
        "id": 203039116,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1594068600
    },
    {
        "content": "<p>so we could, for example, hook up validation directly into cranelift</p>",
        "id": 203039183,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1594068619
    },
    {
        "content": "<p>this'll be needed to implement module linking because a call to a function is somewhat nontrivial to figure out the signature of that call</p>",
        "id": 203039202,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1594068637
    },
    {
        "content": "<p>or, really any type information becomes nontrivial due to aliasing</p>",
        "id": 203039215,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1594068649
    },
    {
        "content": "<p>these are my changes so far (basically just implementing <code>Parser</code>) -- <a href=\"https://github.com/bytecodealliance/wasm-tools/compare/main...alexcrichton:incremental-parser\">https://github.com/bytecodealliance/wasm-tools/compare/main...alexcrichton:incremental-parser</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasm-tools/compare/main...alexcrichton:incremental-parser\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasm-tools/compare/main...alexcrichton:incremental-parser\" title=\"bytecodealliance/wasm-tools\">bytecodealliance/wasm-tools</a></div><div class=\"message_embed_description\">Low level tooling for WebAssembly in Rust. Contribute to bytecodealliance/wasm-tools development by creating an account on GitHub.</div></div></div>",
        "id": 203039301,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1594068709
    },
    {
        "content": "<p>Cool, I need to think about this more. Though it looks similar to what I used in the past -- <a href=\"https://github.com/wasdk/wasmparser/blob/master/src/WasmParser.ts#L1486\">https://github.com/wasdk/wasmparser/blob/master/src/WasmParser.ts#L1486</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/wasdk/wasmparser/blob/master/src/WasmParser.ts#L1486\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/26172967?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/wasdk/wasmparser/blob/master/src/WasmParser.ts#L1486\" title=\"wasdk/wasmparser\">wasdk/wasmparser</a></div><div class=\"message_embed_description\">Simple streamable WebAssembly binary parser. Contribute to wasdk/wasmparser development by creating an account on GitHub.</div></div></div>",
        "id": 203039563,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1594068870
    },
    {
        "content": "<p>It will work</p>",
        "id": 203039908,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1594069100
    }
]