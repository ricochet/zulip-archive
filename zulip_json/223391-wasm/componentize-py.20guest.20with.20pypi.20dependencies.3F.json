[
    {
        "content": "<p>can componentize-py bundle requirements? I'm thinking something along the lines of providing a virtualenv where the pure python packages the guest depends on are installed, but I'm unsure if that would work. Is this currently possible?</p>\n<p>probably a question mainly for Joel :)</p>",
        "id": 360510160,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1684843427
    },
    {
        "content": "<p>Yes, it can!  If you're using <code>pipenv</code> to manage your dependencies, <code>componentize-py</code> should pick them up automatically: <a href=\"https://github.com/dicej/componentize-py/blob/a5437cf203321962df83afe449349e61762021a1/src/command.rs#L126-L153\">https://github.com/dicej/componentize-py/blob/a5437cf203321962df83afe449349e61762021a1/src/command.rs#L126-L153</a>.  For example the <code>toml</code> package is pure Python, so you can <code>pipenv install toml</code> and use it in your app with <code>import toml</code>, and <code>componentize-py</code> should bundle it automatically.    If you're using a different tool to manage dependencies, you'll need to explicitly tell <code>componentize-py</code> where they are on the host filesystem using <code>--python-path</code>.<br>\nBTW, as of yesterday, you can now <code>pip install componentize-py</code>, which hopefully makes it easier to experiment with.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/dicej/componentize-py/blob/a5437cf203321962df83afe449349e61762021a1/src/command.rs#L126-L153\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/97e91b8877b0e288f8f59b152951403a94a34c6c\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f326530646565643366366265663032626639313730656235383033306430643238383533616438666237386335636262373765366237613334313232383537342f646963656a2f636f6d706f6e656e74697a652d7079)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/dicej/componentize-py/blob/a5437cf203321962df83afe449349e61762021a1/src/command.rs#L126-L153\" title=\"componentize-py/command.rs at a5437cf203321962df83afe449349e61762021a1 · dicej/componentize-py\">componentize-py/command.rs at a5437cf203321962df83afe449349e61762021a1 · dicej/componentize-py</a></div><div class=\"message_embed_description\">Contribute to dicej/componentize-py development by creating an account on GitHub.</div></div></div>",
        "id": 360536165,
        "sender_full_name": "Joel Dice",
        "timestamp": 1684849453
    },
    {
        "content": "<p>oh that is good to know, having it on pypi is lowering the burden of entry greatly for my pythonic coworkers who are trying to get their feet wet ;)</p>",
        "id": 360546545,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1684851512
    },
    {
        "content": "<p>thank you, I'll try with pipenv :)</p>",
        "id": 360546724,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1684851546
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"509936\">@Joel Dice</span> I would be careful about hard-coding installation tool support as pipenv is only one of multiple tools in the Python community (and it's not even the most popular).</p>",
        "id": 360651922,
        "sender_full_name": "Brett Cannon",
        "timestamp": 1684882040
    },
    {
        "content": "<p>Would you recommend removing that support or adding support for others (or both)?</p>",
        "id": 360652055,
        "sender_full_name": "Joel Dice",
        "timestamp": 1684882097
    },
    {
        "content": "<p>We can talk about it on Thursday; depends on how much work you want to do and if you want to try and keep up with the Python packaging ecosystem <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 360652145,
        "sender_full_name": "Brett Cannon",
        "timestamp": 1684882143
    }
]