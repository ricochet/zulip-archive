[
    {
        "content": "<p>Using stack-first with an llvm-emitted wasm module, I'm appending some data segments when post-processing the module. I'll thus have to adjust the memory location to be used for heap_base, and I'm wondering if it should be aligned to (a) a page or (b) a multiple of 16 or (c) nothing at all. I wasn't able to answer this myself, I'm afraid :|</p>",
        "id": 246447877,
        "sender_full_name": "Stephan Renatus",
        "timestamp": 1626697647
    },
    {
        "content": "<p>nothing in the module itself uses that exported variable, so unless you've got other tooling relying on it then it should be fine to just remove it.</p>",
        "id": 246458965,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1626703622
    },
    {
        "content": "<p>ah, thanks. we've got a little malloc implementation using it as the starting point for its allocations. so, I guess it doesn't matter then. (if the implementation using it, uhm, doesn't care about alignment...)</p>",
        "id": 246501270,
        "sender_full_name": "Stephan Renatus",
        "timestamp": 1626722671
    },
    {
        "content": "<p>on a related note, using llvm, would you know if the stack pointer (mutable) global is something I could \"move\" a bit back in the start function?</p>",
        "id": 246642142,
        "sender_full_name": "Stephan Renatus",
        "timestamp": 1626811491
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"395326\">@Stephan Renatus</span> by move back do you mean move down? (in that the stack grows down)</p>",
        "id": 246646877,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1626813798
    },
    {
        "content": "<p>if you want more shadow stack, I'd suggest configuring that via linker flags at compile time rather than dynamically nudging it at runtime and potentially overwriting other data</p>",
        "id": 246654355,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1626816897
    },
    {
        "content": "<blockquote>\n<p>by move back do you mean move down?</p>\n</blockquote>\n<p>I was thinking about back as in \"higher up\" so that it gets more space to grow down</p>\n<blockquote>\n<p>I'd suggest configuring that via linker flags at compile time</p>\n</blockquote>\n<p>yeah I'd prefer that <span aria-label=\"smiling face\" class=\"emoji emoji-263a\" role=\"img\" title=\"smiling face\">:smiling_face:</span> but we're messing with the wasm module emitted by llvm, adding further data segments. I believe if we don't adapt the heap_base/sp location, the effectively usable stack (before it's overwriting static data) will be smaller than what we're passing to wasm-ld.</p>",
        "id": 246687100,
        "sender_full_name": "Stephan Renatus",
        "timestamp": 1626852066
    },
    {
        "content": "<p>obviously it would be much cleaner if our compiler emitted a relocatable object instead and we could use wasm-ld from there.... I've never driven llvm from go, though. (and calling an external binary is out of the question)</p>",
        "id": 246687520,
        "sender_full_name": "Stephan Renatus",
        "timestamp": 1626852464
    },
    {
        "content": "<p>hm ok in that case I'd be less certain myself, I don't know enough about LLD's layout and its options to know whether this is safe or not</p>",
        "id": 246750834,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1626888094
    },
    {
        "content": "<p>yeah, we're avoiding this for now. the plan is to keep rolling with the default until we know of a case where it's insufficient... thanks for your inputs! :)</p>",
        "id": 246766667,
        "sender_full_name": "Stephan Renatus",
        "timestamp": 1626895564
    }
]