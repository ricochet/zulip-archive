[
    {
        "content": "<p>\"typically, this involves writing a new crate that depends on your target crate and wasm-bindgen, and uses wasm-bindgen to define an interface for working with the underlying crate\"</p>\n<p>How do you actually do this?</p>\n<p>I took your advice and I'm trying to compile a different crate to WASM at this point. I thought that this code</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasm_bindgen</span>::<span class=\"n\">prelude</span>::<span class=\"o\">*</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">easy_ml</span>::<span class=\"n\">matrices</span>::<span class=\"n\">Matrix</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"cp\">#[wasm_bindgen]</span><span class=\"w\"></span>\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">column</span><span class=\"p\">(</span><span class=\"n\">v</span>: <span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"kt\">isize</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"w\">  </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Matrix</span>::<span class=\"n\">column</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>would allow all the functionality of Matrix to be available to JS in the browser, but instead, only the single function that converts an array to a vector column was available in the browser. I'm sure this is due to my lack of understanding. </p>\n<p>What would I do to make all of easy_ml available in the browser? I'm not understanding how this process actually works.</p>",
        "id": 221243649,
        "sender_full_name": "ender",
        "timestamp": 1609359899
    }
]