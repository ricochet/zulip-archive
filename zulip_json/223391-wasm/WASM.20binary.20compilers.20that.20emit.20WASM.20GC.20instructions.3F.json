[
    {
        "content": "<p>In my current project that uses WASM GC, I'm either writing WASM code myself or generating WASM code from Rust, but basically doing it 1 to 1, so for example <code>WasmInstruction::local_get(\"$foo\")</code> would emit <code>local.get $foo</code>. I'm looking to make that more efficient and I'm wondering if there are any good ways to abstract code that uses proposals like WASM GC. As far as I could find projects using WASM GC usually have a custom implementation, but maybe there is something I missed? Bonus points if there is a tool in Rust that would help with that.</p>",
        "id": 483102591,
        "sender_full_name": "Piotr Sarnacki",
        "timestamp": 1731956811
    },
    {
        "content": "<p>I couldn't find anything, so I wrote my own, here is a thread about the Tarnik project: <a class=\"stream-topic\" data-stream-id=\"206238\" href=\"/#narrow/channel/206238-general/topic/Tarnik.20-.20a.20Rust.20macro.20for.20generating.20WASM.20GC.20code\">#general &gt; Tarnik - a Rust macro for generating WASM GC code</a></p>",
        "id": 484407683,
        "sender_full_name": "Piotr Sarnacki",
        "timestamp": 1732577414
    }
]