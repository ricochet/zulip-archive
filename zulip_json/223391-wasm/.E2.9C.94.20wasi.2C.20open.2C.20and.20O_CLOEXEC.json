[
    {
        "content": "<p>I understand the O_CLOEXEC was for a fork/exec race condition.   If it's specified to <code>open</code> in wasi-sdk, is it just ignored?</p>",
        "id": 270834014,
        "sender_full_name": "Scott Waye",
        "timestamp": 1644076528
    },
    {
        "content": "<p>Yes; <code>O_CLOEXEC</code> is defined to be 0 on WASI.</p>",
        "id": 270834492,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1644076913
    },
    {
        "content": "<p>WASI in the future will gain a way to spawn new programs which will likely need to be different from POSIX fork/exec, and as such, will likely avoid the whole <code>O_CLOEXEC</code> situation. But it's also possible that libc will re-introduce a concept of child \"processes\" inheriting non-<code>O_CLOEXEC</code> file descriptors as compatibility constructs to support existing code.</p>",
        "id": 270834671,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1644077151
    },
    {
        "content": "<p>When that happens, <code>O_CLOEXEC</code> will become significant. But for now, it's ignored.</p>",
        "id": 270834727,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1644077186
    },
    {
        "content": "<p>Ok, thanks.  Emscripten defines it as 0x80000 for some reason so I had a problem mixing emscripten object files with wasi-sdk.  I shouldn't do that.....</p>",
        "id": 270835920,
        "sender_full_name": "Scott Waye",
        "timestamp": 1644078734
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"395878\">Scott Waye</span> has marked this topic as resolved.</p>",
        "id": 270837787,
        "sender_full_name": "Notification Bot",
        "timestamp": 1644080869
    }
]