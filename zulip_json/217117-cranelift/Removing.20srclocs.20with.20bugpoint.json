[
    {
        "content": "<p>Hello everyone, I'm attempting to complete issue <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2827\">https://github.com/bytecodealliance/wasmtime/issues/2827</a>.</p>\n<p>I believe it could be done by creating a struct <code>RemoveSrcLoc</code>, and then implementing the <code>Mutator</code> trait., where <code>RemoveSrcLoc::mutate</code> calls <code>`func.srclocs.clear()</code> on every function. </p>\n<p>However, I don't know how to view the output of <code>bugpoint</code>, when I run <code>cargo run -- bugpoint .\\tests\\bugpoint_test.clif x86_64-pc-windows-gnu</code>, I get the warning <code>Warning: Given function compiled successfully or gave a verifier error</code>. I don't know if this is relevant, or if I'm just being blind, but I'm unable to find the output, if it exists. I can also switch to development on x86 _64 linux or macos (arm) if it would be a better experience.</p>\n<p>I also don't know the best way to obtain a <code>.clif</code> file that includes sourcelocs, so then I can verify that my changes worked.</p>\n<p>Any help would be appreciated, thanks :)</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/issues/2827\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/d71afb1d05e282906376d821eac707cb9e65c26f/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f353832353463623237643032313763353835396230656136663836313862663238313636643066396532353562383661376161623039633339643937376335622f62797465636f6465616c6c69616e63652f7761736d74696d652f6973737565732f32383237&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/issues/2827\" title=\"Bugpoint: Try removing SourceLoc's · Issue #2827 · bytecodealliance/wasmtime\">Bugpoint: Try removing SourceLoc's · Issue #2827 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Feature When using bugpoint to reduce clif ir turn something like function u0:0() system_v { block0: @000c v0 = iconst.i32 0 @000c trap user0 } into function u0:0() system_v { block0: v0 = iconst.i...</div></div></div>",
        "id": 446358343,
        "sender_full_name": "James Boehme",
        "timestamp": 1719110871
    },
    {
        "content": "<blockquote>\n<p>I believe it could be done by creating a struct <code>RemoveSrcLoc</code>, and then implementing the <code>Mutator</code> trait., where <code>RemoveSrcLoc::mutate</code> calls <code> `func.srclocs.clear() </code> on every function.</p>\n</blockquote>\n<p>I hadn't noticed you asked here, but I posted something that should help with on the relevant issue.</p>\n<blockquote>\n<p>I also don't know the best way to obtain a <code>.clif</code> file that includes sourcelocs, so then I can verify that my changes worked.</p>\n</blockquote>\n<p>In the text format they are represented as things like <code>@0001</code> before the instruction they are associated with. So for example <code>@0001 v2 = iadd.i32 v0, v1</code>.</p>\n<blockquote>\n<p>However, I don't know how to view the output of <code>bugpoint</code>, when I run <code>cargo run -- bugpoint .\\tests\\bugpoint_test.clif x86_64-pc-windows-gnu</code>, I get the warning <code>Warning: Given function compiled successfully or gave a verifier error</code>. I don't know if this is relevant, or if I'm just being blind, but I'm unable to find the output, if it exists. I can also switch to development on x86 _64 linux or macos (arm) if it would be a better experience.</p>\n</blockquote>\n<p>Bugpoint is designed to reduce test cases that cause Cranelift to crash. As such if you give it any random function it should not output anything beyond that warning. There are a couple of tests at <a href=\"https://github.com/bytecodealliance/wasmtime/blob/81efaa738419c6e2078e4ad6d14df1e1461d415f/cranelift/src/bugpoint.rs#L1051-L1106\">https://github.com/bytecodealliance/wasmtime/blob/81efaa738419c6e2078e4ad6d14df1e1461d415f/cranelift/src/bugpoint.rs#L1051-L1106</a> which work by having bugpoint pretend that Cranelift crashes when there is any call instruction present. To test it I would suggest adding source locs to some of the calls in <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/tests/bugpoint_test.clif\">https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/tests/bugpoint_test.clif</a> and then running the tests using I think <code>cargo test -p cranelift-tools</code>. By leaving the test expectation unchanged, this will check that the source locs are deleted.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/81efaa738419c6e2078e4ad6d14df1e1461d415f/cranelift/src/bugpoint.rs#L1051-L1106\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/c6c7eb793a7934d026d7cf7cbe804c3308c40ea2/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f333262393935383362613764393237366139626565376235303039313031633962333462626563393766376165656264646465363938303633626638336136382f62797465636f6465616c6c69616e63652f7761736d74696d65&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/81efaa738419c6e2078e4ad6d14df1e1461d415f/cranelift/src/bugpoint.rs#L1051-L1106\" title=\"wasmtime/cranelift/src/bugpoint.rs at 81efaa738419c6e2078e4ad6d14df1e1461d415f · bytecodealliance/wasmtime\">wasmtime/cranelift/src/bugpoint.rs at 81efaa738419c6e2078e4ad6d14df1e1461d415f · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A fast and secure runtime for WebAssembly. Contribute to bytecodealliance/wasmtime development by creating an account on GitHub.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/tests/bugpoint_test.clif\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/c6c7eb793a7934d026d7cf7cbe804c3308c40ea2/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f333262393935383362613764393237366139626565376235303039313031633962333462626563393766376165656264646465363938303633626638336136382f62797465636f6465616c6c69616e63652f7761736d74696d65&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/tests/bugpoint_test.clif\" title=\"wasmtime/cranelift/tests/bugpoint_test.clif at main · bytecodealliance/wasmtime\">wasmtime/cranelift/tests/bugpoint_test.clif at main · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A fast and secure runtime for WebAssembly. Contribute to bytecodealliance/wasmtime development by creating an account on GitHub.</div></div></div>",
        "id": 446402990,
        "sender_full_name": "bjorn3",
        "timestamp": 1719139073
    }
]