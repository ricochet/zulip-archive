[
    {
        "content": "<p>Hi all -- I've just posted blog post 3 of 3 on Cranelift: this one about the regalloc checker: <a href=\"https://cfallin.org/blog/2021/03/15/cranelift-isel-3/\">https://cfallin.org/blog/2021/03/15/cranelift-isel-3/</a></p>",
        "id": 230401241,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1615835219
    },
    {
        "content": "<p>Please feel free to share and/or give feedback and/or ask questions :-)</p>",
        "id": 230401272,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1615835232
    },
    {
        "content": "<blockquote>\n<p>Is this a hard problem, and if so, why? In fact, it is NP-complete</p>\n</blockquote>\n<p>This reads a bit awkward.</p>",
        "id": 230420483,
        "sender_full_name": "bjorn3",
        "timestamp": 1615843210
    },
    {
        "content": "<p>In the \"Checking the Register Allocator\" section it would be nice to consistently place \"machine code\" relative to \"register allocator\" in the diagram.</p>",
        "id": 230421200,
        "sender_full_name": "bjorn3",
        "timestamp": 1615843531
    },
    {
        "content": "<p>Nice post!</p>",
        "id": 230422848,
        "sender_full_name": "bjorn3",
        "timestamp": 1615844391
    },
    {
        "content": "<p>Thanks! I tweaked the wording there; also added some more detail about lattices, and other bits, from some feedback on Reddit.</p>",
        "id": 230457255,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1615867631
    },
    {
        "content": "<p>lol the footnotes have footnotes <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 230555164,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1615915318
    },
    {
        "content": "<p>tweeted it out for you, as usual: <a href=\"https://twitter.com/fitzgen/status/1371872683772628994\">https://twitter.com/fitzgen/status/1371872683772628994</a> <span aria-label=\"stuck out tongue wink\" class=\"emoji emoji-1f61c\" role=\"img\" title=\"stuck out tongue wink\">:stuck_out_tongue_wink:</span></p>\n<div class=\"inline-preview-twitter\"><div class=\"twitter-tweet\"><a href=\"https://twitter.com/fitzgen/status/1371872683772628994\"><img class=\"twitter-avatar\" src=\"https://pbs.twimg.com/profile_images/964574996386398209/SF2y-pJB_normal.jpg\"></a><p>Correctness in Register Allocation\n\nnew blog post by Chris Fallin on the symbolic checker and fuzzing set up we have for Cranelift's regalloc\n\n<a href=\"https://t.co/2uoBXNFfpg\">https://cfallin.org/blog/2021/03/15/cranelift-isel-3/</a></p><span>- fitzgen (@fitzgen)</span></div></div>",
        "id": 230555271,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1615915341
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 230558198,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1615916310
    },
    {
        "content": "<p>I may have been a bit exuberant with the footnotes, but there's just so much interesting stuff to say...</p>",
        "id": 230558235,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1615916327
    },
    {
        "content": "<p>you didn't even touch on the fact that the fuzz inputs are driven by libfuzzer and the <code>arbitrary</code> crate, which let us get coverage guided fuzzing with structured inputs :-p</p>",
        "id": 230561825,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1615917527
    },
    {
        "content": "<p>it just adds one more layer of niceness onto the whole approach</p>",
        "id": 230561899,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1615917550
    },
    {
        "content": "<p>Oh, yes, the whole \"fuzzing is fantastic\" discussion could fill a blog post of its own</p>",
        "id": 230562342,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1615917674
    },
    {
        "content": "<p>Nice post! Tbh, register allocators have never been the greatest source of bugs for doing the correctness analysis on for me - that's if you dealt with swaps and the lost copy problems properly. It feels like the meet condition is, \"don't allocate the same register twice,\" which is pretty common-sensical.</p>",
        "id": 231118939,
        "sender_full_name": "Ian Rogers",
        "timestamp": 1616212198
    },
    {
        "content": "<p>I should say, don't allocate two values to the same register if they are live at the same time.</p>",
        "id": 231119357,
        "sender_full_name": "Ian Rogers",
        "timestamp": 1616212759
    }
]