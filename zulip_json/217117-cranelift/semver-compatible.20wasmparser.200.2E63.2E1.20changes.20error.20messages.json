[
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span> et al -- quick note that wasmparser 0.63.1 is potentially an issue for Firefox as it changes error messages slightly, but is semver-compatible with cranelift-codegen's \"0.63\" dep; so when we develop locally (not against the wasmparser version that is vendored into the mozilla-central repo) we have non-passing tests that pass otherwise</p>",
        "id": 212589228,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1602090409
    },
    {
        "content": "<p>Could we have a policy of semver-bumping when we change error messages?</p>",
        "id": 212589254,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1602090421
    },
    {
        "content": "<p>oh hm, so typically semver-bumps are generally about APIs as in \"your code keeps compiling and probably keeps working\"</p>",
        "id": 212596051,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1602093609
    },
    {
        "content": "<p>\"keeps working\" is sorta vague, though, and typically things like error messages don't fall under that category</p>",
        "id": 212596066,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1602093620
    },
    {
        "content": "<p>if it's causing issues though I can yank it and publish as 0.64.0</p>",
        "id": 212596089,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1602093628
    },
    {
        "content": "<p>ideally making error messages better though wouldn't cause too much process to get engaged</p>",
        "id": 212596120,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1602093643
    },
    {
        "content": "<p>I don't think a yank is necessary, probably, it'll just need some updating in the tests next time someone vendors Cranelift</p>",
        "id": 212596660,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1602093897
    },
    {
        "content": "<p>(... which may be me, today or tomorrow)</p>",
        "id": 212596680,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1602093907
    },
    {
        "content": "<p>in any case I don't want SM to be a drag on improving error messages :-) ideally if things are somewhat stable then this will mostly be a non-issue. And longer-term we should find a better strategy for asserting specific errors</p>",
        "id": 212596881,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1602094006
    },
    {
        "content": "<p>in <code>build.rs</code>-generated tests we only check that the spec test expected error messages are a prefix of the actual error messages, so we have some wiggle room. is SM testing full messages? is there a way we could relax it a bit like we do in <code>build.rs</code>?</p>",
        "id": 212711600,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1602172759
    },
    {
        "content": "<p>Yep, it's matching on full messages, or at least more of the text than the prefix (e.g., it wants to assert specific types in type-mismatch messages)</p>",
        "id": 212711689,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1602172798
    },
    {
        "content": "<p>I suppose it could be relaxed, but that's more of a question for Lars over in SpiderMonkey-land (we can certainly bring it up!)</p>",
        "id": 212711804,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1602172830
    },
    {
        "content": "<p>yeah it's a trade off</p>",
        "id": 212711837,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1602172844
    }
]