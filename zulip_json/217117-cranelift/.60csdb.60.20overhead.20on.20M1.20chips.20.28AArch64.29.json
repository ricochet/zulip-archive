[
    {
        "content": "<p>(Not sure if this is the right channel to post this)</p>\n<p>I've done a few experiments on an M1 Mac Mini and found some pretty high-performance overheads caused by the <code>csdb</code> instructions generated when lowering <code>select_spectre_guard</code>.<br>\nThis overhead only exists on the performance cores, not on the efficiency ones. I believe the reason for this is the efficiency cores don't speculate nearly as much (or even not at all?) as the performance ones do, but then I am also by no means an expert. :)</p>\n<p>I found it pretty surprising that the difference is that large, and since I didn't find anything else about this on the internet, I thought I'd share my findings. If there is an issue with how I ran these benchmarks, please let me know!</p>\n<p>I've benchmarked an unmodified build (commit <code>270e92225</code>) against one with the following diff applied:</p>\n<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"gh\">diff --git a/cranelift/codegen/src/isa/aarch64/inst/emit.rs b/cranelift/codegen/src/isa/aarch64/inst/emit.rs</span>\n<span class=\"gh\">index 43bdd4a3e..c2519885e 100644</span>\n<span class=\"gd\">--- a/cranelift/codegen/src/isa/aarch64/inst/emit.rs</span>\n<span class=\"gi\">+++ b/cranelift/codegen/src/isa/aarch64/inst/emit.rs</span>\n<span class=\"gu\">@@ -1820,7 +1820,7 @@ impl MachInstEmit for Inst {</span>\n<span class=\"w\"> </span>                sink.put4(enc_dmb_ish()); // dmb ish\n<span class=\"w\"> </span>            }\n<span class=\"w\"> </span>            &amp;Inst::Csdb {} =&gt; {\n<span class=\"gd\">-                sink.put4(0xd503229f);</span>\n<span class=\"gi\">+                //sink.put4(0xd503229f);</span>\n<span class=\"w\"> </span>            }\n<span class=\"w\"> </span>            &amp;Inst::FpuMove64 { rd, rn } =&gt; {\n<span class=\"w\"> </span>                let rd = allocs.next_writable(rd);\n</code></pre></div>\n<p>The tests were run on a Mac Mini with a M1 chip running Asahi Linux. I can also check if there is a difference when running the same thing on macOS, but I believe there shouldn't be.<br>\nBefore running the tests, I set the governor to performance to force all cores to their maximum frequency.</p>\n<p>Performance cores:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">taskset</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">cpu</span><span class=\"o\">-</span><span class=\"n\">list</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"o\">-</span><span class=\"mi\">7</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"n\">benchmark</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">iterations</span><span class=\"o\">-</span><span class=\"n\">per</span><span class=\"o\">-</span><span class=\"n\">process</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">../</span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">../</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"o\">-</span><span class=\"n\">flags</span><span class=\"o\">=</span><span class=\"s\">\"\"</span><span class=\"w\"> </span><span class=\"n\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"n\">warning</span>: <span class=\"nc\">some</span><span class=\"w\"> </span><span class=\"n\">crates</span><span class=\"w\"> </span><span class=\"n\">are</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">edition</span><span class=\"w\"> </span><span class=\"mi\">2021</span><span class=\"w\"> </span><span class=\"n\">which</span><span class=\"w\"> </span><span class=\"n\">defaults</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">resolver</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"2\"</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">but</span><span class=\"w\"> </span><span class=\"kr\">virtual</span><span class=\"w\"> </span><span class=\"n\">workspaces</span><span class=\"w\"> </span><span class=\"n\">default</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">resolver</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"1\"</span><span class=\"err\">`</span>\n<span class=\"n\">note</span>: <span class=\"nc\">to</span><span class=\"w\"> </span><span class=\"n\">keep</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">current</span><span class=\"w\"> </span><span class=\"n\">resolver</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">specify</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">workspace</span><span class=\"p\">.</span><span class=\"n\">resolver</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"1\"</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">workspace</span><span class=\"w\"> </span><span class=\"n\">root</span><span class=\"o\">'</span><span class=\"na\">s</span><span class=\"w\"> </span><span class=\"n\">manifest</span>\n<span class=\"n\">note</span>: <span class=\"nc\">to</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">edition</span><span class=\"w\"> </span><span class=\"mi\">2021</span><span class=\"w\"> </span><span class=\"n\">resolver</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">specify</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">workspace</span><span class=\"p\">.</span><span class=\"n\">resolver</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"2\"</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">workspace</span><span class=\"w\"> </span><span class=\"n\">root</span><span class=\"o\">'</span><span class=\"na\">s</span><span class=\"w\"> </span><span class=\"n\">manifest</span>\n<span class=\"w\">    </span><span class=\"n\">Finished</span><span class=\"w\"> </span><span class=\"n\">dev</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">unoptimized</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">debuginfo</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mf\">0.04</span><span class=\"n\">s</span>\n<span class=\"w\">     </span><span class=\"n\">Running</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">sightglass</span><span class=\"o\">-</span><span class=\"n\">cli</span><span class=\"w\"> </span><span class=\"n\">benchmark</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">iterations</span><span class=\"o\">-</span><span class=\"n\">per</span><span class=\"o\">-</span><span class=\"n\">process</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">../</span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">../</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"o\">-</span><span class=\"n\">flags</span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"err\">`</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n\n<span class=\"n\">execution</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n\n<span class=\"w\">  </span><span class=\"err\">Δ</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">8027785.90</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"mf\">160961.98</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">confidence</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">99</span><span class=\"o\">%</span><span class=\"p\">)</span>\n\n<span class=\"w\">  </span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"mf\">3.16</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"mf\">3.25</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">faster</span><span class=\"w\"> </span><span class=\"n\">than</span><span class=\"w\"> </span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"o\">!</span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">11320025</span><span class=\"w\"> </span><span class=\"mf\">11663170.40</span><span class=\"w\"> </span><span class=\"mi\">12242229</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">3526618</span><span class=\"w\"> </span><span class=\"mf\">3635384.50</span><span class=\"w\"> </span><span class=\"mi\">3832395</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span>\n\n<span class=\"n\">instantiation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">2084</span><span class=\"w\"> </span><span class=\"mf\">2519.50</span><span class=\"w\"> </span><span class=\"mi\">3329</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">2054</span><span class=\"w\"> </span><span class=\"mf\">2389.60</span><span class=\"w\"> </span><span class=\"mi\">3090</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span>\n\n<span class=\"n\">compilation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">50306278</span><span class=\"w\"> </span><span class=\"mf\">52021344.65</span><span class=\"w\"> </span><span class=\"mi\">55069141</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">50669042</span><span class=\"w\"> </span><span class=\"mf\">52032507.05</span><span class=\"w\"> </span><span class=\"mi\">54383128</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span>\n</code></pre></div>\n<p>On the efficiency cores, there is no difference:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">taskset</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">cpu</span><span class=\"o\">-</span><span class=\"n\">list</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"n\">benchmark</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">iterations</span><span class=\"o\">-</span><span class=\"n\">per</span><span class=\"o\">-</span><span class=\"n\">process</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">../</span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">../</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"o\">-</span><span class=\"n\">flags</span><span class=\"o\">=</span><span class=\"s\">\"\"</span><span class=\"w\"> </span><span class=\"n\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"n\">warning</span>: <span class=\"nc\">some</span><span class=\"w\"> </span><span class=\"n\">crates</span><span class=\"w\"> </span><span class=\"n\">are</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">edition</span><span class=\"w\"> </span><span class=\"mi\">2021</span><span class=\"w\"> </span><span class=\"n\">which</span><span class=\"w\"> </span><span class=\"n\">defaults</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">resolver</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"2\"</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">but</span><span class=\"w\"> </span><span class=\"kr\">virtual</span><span class=\"w\"> </span><span class=\"n\">workspaces</span><span class=\"w\"> </span><span class=\"n\">default</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">resolver</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"1\"</span><span class=\"err\">`</span>\n<span class=\"n\">note</span>: <span class=\"nc\">to</span><span class=\"w\"> </span><span class=\"n\">keep</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">current</span><span class=\"w\"> </span><span class=\"n\">resolver</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">specify</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">workspace</span><span class=\"p\">.</span><span class=\"n\">resolver</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"1\"</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">workspace</span><span class=\"w\"> </span><span class=\"n\">root</span><span class=\"o\">'</span><span class=\"na\">s</span><span class=\"w\"> </span><span class=\"n\">manifest</span>\n<span class=\"n\">note</span>: <span class=\"nc\">to</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">edition</span><span class=\"w\"> </span><span class=\"mi\">2021</span><span class=\"w\"> </span><span class=\"n\">resolver</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">specify</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">workspace</span><span class=\"p\">.</span><span class=\"n\">resolver</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"2\"</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">workspace</span><span class=\"w\"> </span><span class=\"n\">root</span><span class=\"o\">'</span><span class=\"na\">s</span><span class=\"w\"> </span><span class=\"n\">manifest</span>\n<span class=\"w\">    </span><span class=\"n\">Finished</span><span class=\"w\"> </span><span class=\"n\">dev</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">unoptimized</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">debuginfo</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mf\">0.11</span><span class=\"n\">s</span>\n<span class=\"w\">     </span><span class=\"n\">Running</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">sightglass</span><span class=\"o\">-</span><span class=\"n\">cli</span><span class=\"w\"> </span><span class=\"n\">benchmark</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">iterations</span><span class=\"o\">-</span><span class=\"n\">per</span><span class=\"o\">-</span><span class=\"n\">process</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">../</span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">../</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"o\">-</span><span class=\"n\">flags</span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"err\">`</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n\n<span class=\"n\">instantiation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">5216</span><span class=\"w\"> </span><span class=\"mf\">6214.50</span><span class=\"w\"> </span><span class=\"mi\">9408</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">5274</span><span class=\"w\"> </span><span class=\"mf\">6807.20</span><span class=\"w\"> </span><span class=\"mi\">10777</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span>\n\n<span class=\"n\">compilation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">107328450</span><span class=\"w\"> </span><span class=\"mf\">109423075.40</span><span class=\"w\"> </span><span class=\"mi\">114775754</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">108226908</span><span class=\"w\"> </span><span class=\"mf\">110536060.70</span><span class=\"w\"> </span><span class=\"mi\">113376486</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span>\n\n<span class=\"n\">execution</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">12505682</span><span class=\"w\"> </span><span class=\"mf\">12657196.70</span><span class=\"w\"> </span><span class=\"mi\">12765194</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">12477426</span><span class=\"w\"> </span><span class=\"mf\">12666983.30</span><span class=\"w\"> </span><span class=\"mi\">12849489</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span>\n</code></pre></div>\n<p>With dynamic bounds checks, the overhead is even bigger:</p>\n<p>Performance cores:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">taskset</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">cpu</span><span class=\"o\">-</span><span class=\"n\">list</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"o\">-</span><span class=\"mi\">7</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"n\">benchmark</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">iterations</span><span class=\"o\">-</span><span class=\"n\">per</span><span class=\"o\">-</span><span class=\"n\">process</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">../</span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">../</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"o\">-</span><span class=\"n\">flags</span><span class=\"o\">=</span><span class=\"s\">\"-O dynamic-memory-guard-size=0 -O static-memory-guard-size=0 -O static-memory-maximum-size=0\"</span><span class=\"w\"> </span><span class=\"n\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"n\">warning</span>: <span class=\"nc\">some</span><span class=\"w\"> </span><span class=\"n\">crates</span><span class=\"w\"> </span><span class=\"n\">are</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">edition</span><span class=\"w\"> </span><span class=\"mi\">2021</span><span class=\"w\"> </span><span class=\"n\">which</span><span class=\"w\"> </span><span class=\"n\">defaults</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">resolver</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"2\"</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">but</span><span class=\"w\"> </span><span class=\"kr\">virtual</span><span class=\"w\"> </span><span class=\"n\">workspaces</span><span class=\"w\"> </span><span class=\"n\">default</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">resolver</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"1\"</span><span class=\"err\">`</span>\n<span class=\"n\">note</span>: <span class=\"nc\">to</span><span class=\"w\"> </span><span class=\"n\">keep</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">current</span><span class=\"w\"> </span><span class=\"n\">resolver</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">specify</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">workspace</span><span class=\"p\">.</span><span class=\"n\">resolver</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"1\"</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">workspace</span><span class=\"w\"> </span><span class=\"n\">root</span><span class=\"o\">'</span><span class=\"na\">s</span><span class=\"w\"> </span><span class=\"n\">manifest</span>\n<span class=\"n\">note</span>: <span class=\"nc\">to</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">edition</span><span class=\"w\"> </span><span class=\"mi\">2021</span><span class=\"w\"> </span><span class=\"n\">resolver</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">specify</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">workspace</span><span class=\"p\">.</span><span class=\"n\">resolver</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"2\"</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">workspace</span><span class=\"w\"> </span><span class=\"n\">root</span><span class=\"o\">'</span><span class=\"na\">s</span><span class=\"w\"> </span><span class=\"n\">manifest</span>\n<span class=\"w\">    </span><span class=\"n\">Finished</span><span class=\"w\"> </span><span class=\"n\">dev</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">unoptimized</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">debuginfo</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mf\">0.04</span><span class=\"n\">s</span>\n<span class=\"w\">     </span><span class=\"n\">Running</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">sightglass</span><span class=\"o\">-</span><span class=\"n\">cli</span><span class=\"w\"> </span><span class=\"n\">benchmark</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">iterations</span><span class=\"o\">-</span><span class=\"n\">per</span><span class=\"o\">-</span><span class=\"n\">process</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">../</span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">../</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"o\">'--</span><span class=\"n\">engine</span><span class=\"o\">-</span><span class=\"n\">flags</span><span class=\"o\">=-</span><span class=\"n\">O</span><span class=\"w\"> </span><span class=\"n\">dynamic</span><span class=\"o\">-</span><span class=\"n\">memory</span><span class=\"o\">-</span><span class=\"n\">guard</span><span class=\"o\">-</span><span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">O</span><span class=\"w\"> </span><span class=\"k\">static</span><span class=\"o\">-</span><span class=\"n\">memory</span><span class=\"o\">-</span><span class=\"n\">guard</span><span class=\"o\">-</span><span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">O</span><span class=\"w\"> </span><span class=\"k\">static</span><span class=\"o\">-</span><span class=\"n\">memory</span><span class=\"o\">-</span><span class=\"n\">maximum</span><span class=\"o\">-</span><span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"err\">`</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n\n<span class=\"n\">execution</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n\n<span class=\"w\">  </span><span class=\"err\">Δ</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">101879699.00</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"mf\">1141736.09</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">confidence</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">99</span><span class=\"o\">%</span><span class=\"p\">)</span>\n\n<span class=\"w\">  </span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"mf\">16.46</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"mf\">16.81</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">faster</span><span class=\"w\"> </span><span class=\"n\">than</span><span class=\"w\"> </span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"o\">!</span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">107106675</span><span class=\"w\"> </span><span class=\"mf\">108397620.75</span><span class=\"w\"> </span><span class=\"mi\">112636143</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">6452171</span><span class=\"w\"> </span><span class=\"mf\">6517921.75</span><span class=\"w\"> </span><span class=\"mi\">6757069</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span>\n\n<span class=\"n\">compilation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n\n<span class=\"w\">  </span><span class=\"err\">Δ</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">2268916.25</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"mf\">1358278.96</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">confidence</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">99</span><span class=\"o\">%</span><span class=\"p\">)</span>\n\n<span class=\"w\">  </span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"mf\">1.02</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"mf\">1.06</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">faster</span><span class=\"w\"> </span><span class=\"n\">than</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"o\">!</span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">57228321</span><span class=\"w\"> </span><span class=\"mf\">59363510.15</span><span class=\"w\"> </span><span class=\"mi\">62661925</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">58325815</span><span class=\"w\"> </span><span class=\"mf\">61632426.40</span><span class=\"w\"> </span><span class=\"mi\">64403315</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span>\n\n<span class=\"n\">instantiation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">2214</span><span class=\"w\"> </span><span class=\"mf\">2592.80</span><span class=\"w\"> </span><span class=\"mi\">3968</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">2162</span><span class=\"w\"> </span><span class=\"mf\">2441.25</span><span class=\"w\"> </span><span class=\"mi\">3405</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span>\n</code></pre></div>\n<p>Efficiency cores:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">taskset</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">cpu</span><span class=\"o\">-</span><span class=\"n\">list</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"n\">benchmark</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">iterations</span><span class=\"o\">-</span><span class=\"n\">per</span><span class=\"o\">-</span><span class=\"n\">process</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">../</span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">../</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"o\">-</span><span class=\"n\">flags</span><span class=\"o\">=</span><span class=\"s\">\"-O dynamic-memory-guard-size=0 -O static-memory-guard-size=0 -O static-memory-maximum-size=0\"</span><span class=\"w\"> </span><span class=\"n\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"n\">warning</span>: <span class=\"nc\">some</span><span class=\"w\"> </span><span class=\"n\">crates</span><span class=\"w\"> </span><span class=\"n\">are</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">edition</span><span class=\"w\"> </span><span class=\"mi\">2021</span><span class=\"w\"> </span><span class=\"n\">which</span><span class=\"w\"> </span><span class=\"n\">defaults</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">resolver</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"2\"</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">but</span><span class=\"w\"> </span><span class=\"kr\">virtual</span><span class=\"w\"> </span><span class=\"n\">workspaces</span><span class=\"w\"> </span><span class=\"n\">default</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">resolver</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"1\"</span><span class=\"err\">`</span>\n<span class=\"n\">note</span>: <span class=\"nc\">to</span><span class=\"w\"> </span><span class=\"n\">keep</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">current</span><span class=\"w\"> </span><span class=\"n\">resolver</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">specify</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">workspace</span><span class=\"p\">.</span><span class=\"n\">resolver</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"1\"</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">workspace</span><span class=\"w\"> </span><span class=\"n\">root</span><span class=\"o\">'</span><span class=\"na\">s</span><span class=\"w\"> </span><span class=\"n\">manifest</span>\n<span class=\"n\">note</span>: <span class=\"nc\">to</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">edition</span><span class=\"w\"> </span><span class=\"mi\">2021</span><span class=\"w\"> </span><span class=\"n\">resolver</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">specify</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">workspace</span><span class=\"p\">.</span><span class=\"n\">resolver</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"2\"</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">workspace</span><span class=\"w\"> </span><span class=\"n\">root</span><span class=\"o\">'</span><span class=\"na\">s</span><span class=\"w\"> </span><span class=\"n\">manifest</span>\n<span class=\"w\">    </span><span class=\"n\">Finished</span><span class=\"w\"> </span><span class=\"n\">dev</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">unoptimized</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">debuginfo</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mf\">0.11</span><span class=\"n\">s</span>\n<span class=\"w\">     </span><span class=\"n\">Running</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">sightglass</span><span class=\"o\">-</span><span class=\"n\">cli</span><span class=\"w\"> </span><span class=\"n\">benchmark</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">iterations</span><span class=\"o\">-</span><span class=\"n\">per</span><span class=\"o\">-</span><span class=\"n\">process</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">../</span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">../</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"o\">'--</span><span class=\"n\">engine</span><span class=\"o\">-</span><span class=\"n\">flags</span><span class=\"o\">=-</span><span class=\"n\">O</span><span class=\"w\"> </span><span class=\"n\">dynamic</span><span class=\"o\">-</span><span class=\"n\">memory</span><span class=\"o\">-</span><span class=\"n\">guard</span><span class=\"o\">-</span><span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">O</span><span class=\"w\"> </span><span class=\"k\">static</span><span class=\"o\">-</span><span class=\"n\">memory</span><span class=\"o\">-</span><span class=\"n\">guard</span><span class=\"o\">-</span><span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">O</span><span class=\"w\"> </span><span class=\"k\">static</span><span class=\"o\">-</span><span class=\"n\">memory</span><span class=\"o\">-</span><span class=\"n\">maximum</span><span class=\"o\">-</span><span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"err\">`</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n\n<span class=\"n\">execution</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n\n<span class=\"w\">  </span><span class=\"err\">Δ</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">489379.55</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"mf\">43314.03</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">confidence</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">99</span><span class=\"o\">%</span><span class=\"p\">)</span>\n\n<span class=\"w\">  </span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"mf\">1.02</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"mf\">1.02</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">faster</span><span class=\"w\"> </span><span class=\"n\">than</span><span class=\"w\"> </span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"o\">!</span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">23615521</span><span class=\"w\"> </span><span class=\"mf\">23708462.10</span><span class=\"w\"> </span><span class=\"mi\">23789488</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">23161583</span><span class=\"w\"> </span><span class=\"mf\">23219082.55</span><span class=\"w\"> </span><span class=\"mi\">23330794</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span>\n\n<span class=\"n\">compilation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">127294091</span><span class=\"w\"> </span><span class=\"mf\">131666671.05</span><span class=\"w\"> </span><span class=\"mi\">137908998</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">129037489</span><span class=\"w\"> </span><span class=\"mf\">133240513.70</span><span class=\"w\"> </span><span class=\"mi\">137623006</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span>\n\n<span class=\"n\">instantiation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">5316</span><span class=\"w\"> </span><span class=\"mf\">6323.80</span><span class=\"w\"> </span><span class=\"mi\">10262</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">5516</span><span class=\"w\"> </span><span class=\"mf\">6326.45</span><span class=\"w\"> </span><span class=\"mi\">9558</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">so</span>\n</code></pre></div>",
        "id": 398472333,
        "sender_full_name": "Martin Fink",
        "timestamp": 1698236097
    },
    {
        "content": "<p>Fascinating! Thanks for taking the time to collect these numbers and test here.</p>\n<p>I dug a bit and found some background information on csdb <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1032#issuecomment-1122751761\">here</a> and <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4555\">here</a>. I'm not spectre or aarch64 expert myself though so all I can be is a go-between with those.</p>\n<p>In 4555 though it looked like at the time performance was concluded to not be affected much, but that was likely not performed on an M1 chip which may be exhibiting different performance characteristics.</p>\n<p>One thing I've personally found a bit odd is that what you're probably running into here (in default mode) is the spectre guards for table bounds checks (and presumably spidermonkey has a lot of <code>call_indirect</code>). Our table bounds checks have both an explicit bounds check leading to a trap plus a select_spectre_guard. While this probably achieves spectre-hardening it also feels a bit overkill IMO and is possibly something we could improve.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/issues/1032#issuecomment-1122751761\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/ecf8eb8292c025fc16d1ce0f65c77652f896b64d\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f343261663038313139313237306633386330613338613637633832656562643939336437663534353931373161333038333434316437653961366131343233642f62797465636f6465616c6c69616e63652f7761736d74696d652f6973737565732f31303332)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/issues/1032#issuecomment-1122751761\" title=\"Mitigating Spectre attacks · Issue #1032 · bytecodealliance/wasmtime\">Mitigating Spectre attacks · Issue #1032 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Hello, You are probably well aware, but some mainstream compilers are emitting retpolines to help mitigate Spectre variant 2 attacks. Do you have any plans to add a similar capability to the creton...</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/4555\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/8f4497d600a9bb34b86669fd79471e6b6b6464fa\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f323264616563343032653838626236343336316337643465343536343264313936373039353532323033383464373130353739666633303031373032346433612f62797465636f6465616c6c69616e63652f7761736d74696d652f70756c6c2f34353535)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/4555\" title=\"Cranelift AArch64: Harden the Spectre mitigations by akirilov-arm · Pull Request #4555 · bytecodealliance/wasmtime\">Cranelift AArch64: Harden the Spectre mitigations by akirilov-arm · Pull Request #4555 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">As discussed in issue #1032, use the CSDB instruction.</div></div></div>",
        "id": 398507870,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1698246761
    },
    {
        "content": "<p>Also I'm curious, where did you get <code>taskset</code> from on macos? I've got an M2 and am curious to see if the situation is any better with that or if it's the same</p>",
        "id": 398509206,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1698247140
    },
    {
        "content": "<p>Running sightglass locally yields:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">execution</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n\n<span class=\"w\">  </span><span class=\"err\">Δ</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">282449.80</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"mf\">76316.41</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">confidence</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">99</span><span class=\"o\">%</span><span class=\"p\">)</span>\n\n<span class=\"w\">  </span><span class=\"n\">no</span><span class=\"o\">-</span><span class=\"n\">csdb</span><span class=\"p\">.</span><span class=\"n\">dylib</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"mf\">1.02</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"mf\">1.03</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">faster</span><span class=\"w\"> </span><span class=\"n\">than</span><span class=\"w\"> </span><span class=\"n\">csdb</span><span class=\"p\">.</span><span class=\"n\">dylib</span><span class=\"o\">!</span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">10772130</span><span class=\"w\"> </span><span class=\"mf\">10871102.65</span><span class=\"w\"> </span><span class=\"mi\">11116720</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">csdb</span><span class=\"p\">.</span><span class=\"n\">dylib</span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">10483782</span><span class=\"w\"> </span><span class=\"mf\">10588652.85</span><span class=\"w\"> </span><span class=\"mi\">10753478</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">no</span><span class=\"o\">-</span><span class=\"n\">csdb</span><span class=\"p\">.</span><span class=\"n\">dylib</span>\n</code></pre></div>\n<p>although this isn't using <code>taskset</code> for pinning. I'm not sure if it would by default put everything on the performance cores.</p>",
        "id": 398510257,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1698247394
    },
    {
        "content": "<p>Wow, that's a wild perf delta, <span class=\"user-mention\" data-user-id=\"662020\">@Martin Fink</span> ! I was indeed worried about this when the original PR came up; <span class=\"user-mention\" data-user-id=\"300050\">@Anton Kirilov</span> benchmarked on an Ampere Altra and found no impact</p>",
        "id": 398520419,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1698250359
    },
    {
        "content": "<p>re: <code>taskset</code>, I wonder, are you running Linux (Asahi or whatever) on your M1 by chance? could that have an impact (different system config register settings, etc)?</p>",
        "id": 398520477,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1698250382
    },
    {
        "content": "<p>In retrospect I should have worded my statement in issue #1032 a bit better, though in pull request #4555 I got it right, I think. Also, just to be clear, I am unable to comment on any microarchitectural details of any processor that has not been designed by Arm (beyond any publicly accessible documentation, if any exists), including how susceptible it is to Spectre-style attacks.</p>",
        "id": 398527389,
        "sender_full_name": "Anton Kirilov",
        "timestamp": 1698253007
    },
    {
        "content": "<p>Hi! yes, this was running on Asahi. I just tried the same benchmark again on my personal Macbook (M1 Pro; this time with macOS) and got essentially the same results.<br>\nAFAIK, you can't pin a process to the performance cores, but you can pin it to the efficiency cores using <code>taskset -c background command args...</code>. The macOS scheduler should prefer the performance cores for this kind of workload anyways I believe.</p>\n<p>Without <code>taskpolicy</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"n\">benchmark</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">iterations</span><span class=\"o\">-</span><span class=\"n\">per</span><span class=\"o\">-</span><span class=\"n\">process</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">../</span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">dylib</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">../</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">dylib</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"o\">-</span><span class=\"n\">flags</span><span class=\"o\">=</span><span class=\"s\">\"\"</span><span class=\"w\"> </span><span class=\"n\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"n\">warning</span>: <span class=\"nc\">some</span><span class=\"w\"> </span><span class=\"n\">crates</span><span class=\"w\"> </span><span class=\"n\">are</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">edition</span><span class=\"w\"> </span><span class=\"mi\">2021</span><span class=\"w\"> </span><span class=\"n\">which</span><span class=\"w\"> </span><span class=\"n\">defaults</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">resolver</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"2\"</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">but</span><span class=\"w\"> </span><span class=\"kr\">virtual</span><span class=\"w\"> </span><span class=\"n\">workspaces</span><span class=\"w\"> </span><span class=\"n\">default</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">resolver</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"1\"</span><span class=\"err\">`</span>\n<span class=\"n\">note</span>: <span class=\"nc\">to</span><span class=\"w\"> </span><span class=\"n\">keep</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">current</span><span class=\"w\"> </span><span class=\"n\">resolver</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">specify</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">workspace</span><span class=\"p\">.</span><span class=\"n\">resolver</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"1\"</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">workspace</span><span class=\"w\"> </span><span class=\"n\">root</span><span class=\"o\">'</span><span class=\"na\">s</span><span class=\"w\"> </span><span class=\"n\">manifest</span>\n<span class=\"n\">note</span>: <span class=\"nc\">to</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">edition</span><span class=\"w\"> </span><span class=\"mi\">2021</span><span class=\"w\"> </span><span class=\"n\">resolver</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">specify</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">workspace</span><span class=\"p\">.</span><span class=\"n\">resolver</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"2\"</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">workspace</span><span class=\"w\"> </span><span class=\"n\">root</span><span class=\"o\">'</span><span class=\"na\">s</span><span class=\"w\"> </span><span class=\"n\">manifest</span>\n<span class=\"w\">    </span><span class=\"n\">Finished</span><span class=\"w\"> </span><span class=\"n\">dev</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">unoptimized</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">debuginfo</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mf\">0.10</span><span class=\"n\">s</span>\n<span class=\"w\">     </span><span class=\"n\">Running</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">sightglass</span><span class=\"o\">-</span><span class=\"n\">cli</span><span class=\"w\"> </span><span class=\"n\">benchmark</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">iterations</span><span class=\"o\">-</span><span class=\"n\">per</span><span class=\"o\">-</span><span class=\"n\">process</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">../</span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">dylib</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">../</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">dylib</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"o\">-</span><span class=\"n\">flags</span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"err\">`</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n\n<span class=\"n\">execution</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n\n<span class=\"w\">  </span><span class=\"err\">Δ</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">7875436.90</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"mf\">76393.16</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">confidence</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">99</span><span class=\"o\">%</span><span class=\"p\">)</span>\n\n<span class=\"w\">  </span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">dylib</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"mf\">3.15</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"mf\">3.20</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">faster</span><span class=\"w\"> </span><span class=\"n\">than</span><span class=\"w\"> </span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">dylib</span><span class=\"o\">!</span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">11307195</span><span class=\"w\"> </span><span class=\"mf\">11495795.05</span><span class=\"w\"> </span><span class=\"mi\">11729345</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">dylib</span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">3532096</span><span class=\"w\"> </span><span class=\"mf\">3620358.15</span><span class=\"w\"> </span><span class=\"mi\">3726905</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">dylib</span>\n\n<span class=\"n\">instantiation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">2262</span><span class=\"w\"> </span><span class=\"mf\">2763.85</span><span class=\"w\"> </span><span class=\"mi\">4202</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">dylib</span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">2274</span><span class=\"w\"> </span><span class=\"mf\">2556.15</span><span class=\"w\"> </span><span class=\"mi\">3046</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">dylib</span>\n\n<span class=\"n\">compilation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">147601278</span><span class=\"w\"> </span><span class=\"mf\">149324679.95</span><span class=\"w\"> </span><span class=\"mi\">151225801</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">dylib</span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">146173673</span><span class=\"w\"> </span><span class=\"mf\">149144740.10</span><span class=\"w\"> </span><span class=\"mi\">155132568</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">dylib</span>\n</code></pre></div>\n<p>With <code>taskpolicy</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">taskpolicy</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"n\">background</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"n\">benchmark</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">iterations</span><span class=\"o\">-</span><span class=\"n\">per</span><span class=\"o\">-</span><span class=\"n\">process</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">../</span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">dylib</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">../</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">dylib</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"o\">-</span><span class=\"n\">flags</span><span class=\"o\">=</span><span class=\"s\">\"\"</span><span class=\"w\"> </span><span class=\"n\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"n\">warning</span>: <span class=\"nc\">some</span><span class=\"w\"> </span><span class=\"n\">crates</span><span class=\"w\"> </span><span class=\"n\">are</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">edition</span><span class=\"w\"> </span><span class=\"mi\">2021</span><span class=\"w\"> </span><span class=\"n\">which</span><span class=\"w\"> </span><span class=\"n\">defaults</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">resolver</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"2\"</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">but</span><span class=\"w\"> </span><span class=\"kr\">virtual</span><span class=\"w\"> </span><span class=\"n\">workspaces</span><span class=\"w\"> </span><span class=\"n\">default</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">resolver</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"1\"</span><span class=\"err\">`</span>\n<span class=\"n\">note</span>: <span class=\"nc\">to</span><span class=\"w\"> </span><span class=\"n\">keep</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">current</span><span class=\"w\"> </span><span class=\"n\">resolver</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">specify</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">workspace</span><span class=\"p\">.</span><span class=\"n\">resolver</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"1\"</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">workspace</span><span class=\"w\"> </span><span class=\"n\">root</span><span class=\"o\">'</span><span class=\"na\">s</span><span class=\"w\"> </span><span class=\"n\">manifest</span>\n<span class=\"n\">note</span>: <span class=\"nc\">to</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">edition</span><span class=\"w\"> </span><span class=\"mi\">2021</span><span class=\"w\"> </span><span class=\"n\">resolver</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">specify</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">workspace</span><span class=\"p\">.</span><span class=\"n\">resolver</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"2\"</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">workspace</span><span class=\"w\"> </span><span class=\"n\">root</span><span class=\"o\">'</span><span class=\"na\">s</span><span class=\"w\"> </span><span class=\"n\">manifest</span>\n<span class=\"w\">    </span><span class=\"n\">Finished</span><span class=\"w\"> </span><span class=\"n\">dev</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">unoptimized</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">debuginfo</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mf\">2.16</span><span class=\"n\">s</span>\n<span class=\"w\">     </span><span class=\"n\">Running</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">sightglass</span><span class=\"o\">-</span><span class=\"n\">cli</span><span class=\"w\"> </span><span class=\"n\">benchmark</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">iterations</span><span class=\"o\">-</span><span class=\"n\">per</span><span class=\"o\">-</span><span class=\"n\">process</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">../</span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">dylib</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">../</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">dylib</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"o\">-</span><span class=\"n\">flags</span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"err\">`</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n\n<span class=\"n\">instantiation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">6124</span><span class=\"w\"> </span><span class=\"mf\">27213.70</span><span class=\"w\"> </span><span class=\"mi\">111028</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">dylib</span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">5381</span><span class=\"w\"> </span><span class=\"mf\">40362.40</span><span class=\"w\"> </span><span class=\"mi\">295461</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">dylib</span>\n\n<span class=\"n\">execution</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">23995605</span><span class=\"w\"> </span><span class=\"mf\">30439809.15</span><span class=\"w\"> </span><span class=\"mi\">38672919</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">dylib</span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">24360364</span><span class=\"w\"> </span><span class=\"mf\">28723230.40</span><span class=\"w\"> </span><span class=\"mi\">36000666</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">dylib</span>\n\n<span class=\"n\">compilation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">401455183</span><span class=\"w\"> </span><span class=\"mf\">549387423.20</span><span class=\"w\"> </span><span class=\"mi\">1355357035</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">dylib</span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">394497975</span><span class=\"w\"> </span><span class=\"mf\">538719528.60</span><span class=\"w\"> </span><span class=\"mi\">858583052</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">libwasmtime_bench_api</span><span class=\"p\">.</span><span class=\"n\">dylib</span>\n</code></pre></div>",
        "id": 398550580,
        "sender_full_name": "Martin Fink",
        "timestamp": 1698263017
    },
    {
        "content": "<p>Whoa! Without <code>taskpolicy</code> you're showing a 3x slowdown on M1, but on an M2 I got a 2% slowdown, so now I'm curious if someone can reproduce that and if this is perhaps something that was updated for the M2</p>",
        "id": 398550816,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1698263132
    },
    {
        "content": "<p>Yes, and if I turn on dynamic bounds checks the slowdown gets worse (as there is way more spectre guards)</p>",
        "id": 398550932,
        "sender_full_name": "Martin Fink",
        "timestamp": 1698263172
    },
    {
        "content": "<p>yeah that part definitely makes sense</p>",
        "id": 398551169,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1698263317
    },
    {
        "content": "<p>FWIW this wasm:</p>\n<div class=\"codehilite\" data-code-language=\"wasm\"><pre><span></span><code>(module\n  (table 1 funcref)\n  (func (param i32)\n    (call_indirect (local.get 0))\n  )\n)\n</code></pre></div>\n<p>has this codegen for me locally (annotated)</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">                        </span><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">frame</span><span class=\"w\"> </span><span class=\"n\">setup</span>\n<span class=\"w\">       </span><span class=\"mi\">0</span>: <span class=\"nc\">d503237f</span><span class=\"w\">      </span><span class=\"n\">pacibsp</span>\n<span class=\"w\">       </span><span class=\"mi\">4</span>: <span class=\"nc\">a9bf7bfd</span><span class=\"w\">      </span><span class=\"n\">stp</span><span class=\"w\">     </span><span class=\"n\">x29</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x30</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">sp</span><span class=\"p\">,</span><span class=\"w\"> </span>#<span class=\"o\">-</span><span class=\"mh\">0x10</span><span class=\"p\">]</span><span class=\"o\">!</span>\n<span class=\"w\">       </span><span class=\"mi\">8</span>: <span class=\"mi\">910003</span><span class=\"n\">fd</span><span class=\"w\">      </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">x29</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">sp</span>\n<span class=\"w\">                        </span><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">stack</span><span class=\"w\"> </span><span class=\"n\">overflow</span><span class=\"w\"> </span><span class=\"n\">check</span>\n<span class=\"w\">       </span><span class=\"n\">c</span>: <span class=\"nc\">f8408010</span><span class=\"w\">      </span><span class=\"n\">ldur</span><span class=\"w\">    </span><span class=\"n\">x16</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">x0</span><span class=\"p\">,</span><span class=\"w\"> </span>#<span class=\"mh\">0x8</span><span class=\"p\">]</span>\n<span class=\"w\">      </span><span class=\"mi\">10</span>: <span class=\"nc\">f8400210</span><span class=\"w\">      </span><span class=\"n\">ldur</span><span class=\"w\">    </span><span class=\"n\">x16</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">x16</span><span class=\"p\">]</span>\n<span class=\"w\">      </span><span class=\"mi\">14</span>: <span class=\"nc\">eb3063ff</span><span class=\"w\">      </span><span class=\"n\">cmp</span><span class=\"w\">     </span><span class=\"n\">sp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x16</span>\n<span class=\"w\">      </span><span class=\"mi\">18</span>: <span class=\"mi\">54000543</span><span class=\"w\">      </span><span class=\"n\">b</span><span class=\"p\">.</span><span class=\"n\">lo</span><span class=\"w\">    </span><span class=\"mh\">0xc0</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">wasm</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>::<span class=\"n\">function</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">+</span><span class=\"mh\">0xc0</span><span class=\"o\">&gt;</span>\n<span class=\"w\">                        </span><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">register</span><span class=\"w\"> </span><span class=\"n\">spills</span>\n<span class=\"w\">      </span><span class=\"mi\">1</span><span class=\"n\">c</span>: <span class=\"nc\">f81f0ff3</span><span class=\"w\">      </span><span class=\"kt\">str</span><span class=\"w\">     </span><span class=\"n\">x19</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">sp</span><span class=\"p\">,</span><span class=\"w\"> </span>#<span class=\"o\">-</span><span class=\"mh\">0x10</span><span class=\"p\">]</span><span class=\"o\">!</span>\n<span class=\"w\">                        </span><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">branch</span><span class=\"o\">-</span><span class=\"n\">to</span><span class=\"o\">-</span><span class=\"n\">trap</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">table</span><span class=\"w\"> </span><span class=\"n\">index</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">out</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">bounds</span>\n<span class=\"w\">      </span><span class=\"mi\">20</span>: <span class=\"nc\">aa0003e6</span><span class=\"w\">      </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">x6</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x0</span>\n<span class=\"w\">      </span><span class=\"mi\">24</span>: <span class=\"nc\">b9405005</span><span class=\"w\">      </span><span class=\"n\">ldr</span><span class=\"w\">     </span><span class=\"n\">w5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">x0</span><span class=\"p\">,</span><span class=\"w\"> </span>#<span class=\"mh\">0x50</span><span class=\"p\">]</span>\n<span class=\"w\">      </span><span class=\"mi\">28</span>: <span class=\"mi\">6</span><span class=\"n\">b05005f</span><span class=\"w\">      </span><span class=\"n\">cmp</span><span class=\"w\">     </span><span class=\"n\">w2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">w5</span>\n<span class=\"w\">      </span><span class=\"mi\">2</span><span class=\"n\">c</span>: <span class=\"mi\">54000482</span><span class=\"w\">      </span><span class=\"n\">b</span><span class=\"p\">.</span><span class=\"n\">hs</span><span class=\"w\">    </span><span class=\"mh\">0xbc</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">wasm</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>::<span class=\"n\">function</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">+</span><span class=\"mh\">0xbc</span><span class=\"o\">&gt;</span>\n<span class=\"w\">                        </span><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">calculate</span><span class=\"w\"> </span><span class=\"n\">table</span><span class=\"w\"> </span><span class=\"n\">element</span><span class=\"w\"> </span><span class=\"n\">address</span>\n<span class=\"w\">      </span><span class=\"mi\">30</span>: <span class=\"nc\">aa0603e0</span><span class=\"w\">      </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">x0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x6</span>\n<span class=\"w\">      </span><span class=\"mi\">34</span>: <span class=\"nc\">f9402407</span><span class=\"w\">      </span><span class=\"n\">ldr</span><span class=\"w\">     </span><span class=\"n\">x7</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">x0</span><span class=\"p\">,</span><span class=\"w\"> </span>#<span class=\"mh\">0x48</span><span class=\"p\">]</span>\n<span class=\"w\">      </span><span class=\"mi\">38</span>: <span class=\"mi\">2</span><span class=\"n\">a0203e8</span><span class=\"w\">      </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">w8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">w2</span>\n<span class=\"w\">      </span><span class=\"mi\">3</span><span class=\"n\">c</span>: <span class=\"mi\">8</span><span class=\"n\">b080ce8</span><span class=\"w\">      </span><span class=\"n\">add</span><span class=\"w\">     </span><span class=\"n\">x8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x7</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">lsl</span><span class=\"w\"> </span>#<span class=\"mi\">3</span>\n<span class=\"w\">                        </span><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">spectre</span><span class=\"w\"> </span><span class=\"n\">guard</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">table</span><span class=\"w\"> </span><span class=\"n\">address</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">table</span><span class=\"w\"> </span><span class=\"n\">base</span>\n<span class=\"w\">      </span><span class=\"mi\">40</span>: <span class=\"mi\">6</span><span class=\"n\">b05005f</span><span class=\"w\">      </span><span class=\"n\">cmp</span><span class=\"w\">     </span><span class=\"n\">w2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">w5</span>\n<span class=\"w\">      </span><span class=\"mi\">44</span>: <span class=\"mi\">9</span><span class=\"n\">a8820e8</span><span class=\"w\">      </span><span class=\"n\">csel</span><span class=\"w\">    </span><span class=\"n\">x8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x7</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">hs</span>\n<span class=\"w\">      </span><span class=\"mi\">48</span>: <span class=\"nc\">d503229f</span><span class=\"w\">      </span><span class=\"n\">csdb</span>\n<span class=\"w\">                        </span><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">table</span><span class=\"w\"> </span><span class=\"n\">element</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">branch</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">init</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">it</span><span class=\"o\">'</span><span class=\"na\">s</span><span class=\"w\"> </span><span class=\"n\">not</span>\n<span class=\"w\">                        </span><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">already</span><span class=\"w\"> </span><span class=\"n\">initialized</span>\n<span class=\"w\">      </span><span class=\"mi\">4</span><span class=\"n\">c</span>: <span class=\"nc\">f9400109</span><span class=\"w\">      </span><span class=\"n\">ldr</span><span class=\"w\">     </span><span class=\"n\">x9</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">x8</span><span class=\"p\">]</span>\n<span class=\"w\">      </span><span class=\"mi\">50</span>: <span class=\"mi\">927</span><span class=\"n\">ff920</span><span class=\"w\">      </span><span class=\"n\">and</span><span class=\"w\">     </span><span class=\"n\">x0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x9</span><span class=\"p\">,</span><span class=\"w\"> </span>#<span class=\"mh\">0xfffffffffffffffe</span>\n<span class=\"w\">      </span><span class=\"mi\">54</span>: <span class=\"nc\">b4000209</span><span class=\"w\">      </span><span class=\"n\">cbz</span><span class=\"w\">     </span><span class=\"n\">x9</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x94</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">wasm</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>::<span class=\"n\">function</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">+</span><span class=\"mh\">0x94</span><span class=\"o\">&gt;</span>\n<span class=\"w\">      </span><span class=\"mi\">58</span>: <span class=\"nc\">aa0603f3</span><span class=\"w\">      </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">x19</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x6</span>\n<span class=\"w\">                        </span><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">check</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">table</span><span class=\"w\"> </span><span class=\"n\">element</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">null</span>\n<span class=\"w\">      </span><span class=\"mi\">5</span><span class=\"n\">c</span>: <span class=\"nc\">b40002c0</span><span class=\"w\">      </span><span class=\"n\">cbz</span><span class=\"w\">     </span><span class=\"n\">x0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0xb4</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">wasm</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>::<span class=\"n\">function</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">+</span><span class=\"mh\">0xb4</span><span class=\"o\">&gt;</span>\n<span class=\"w\">                        </span><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"w\"> </span><span class=\"n\">metadata</span><span class=\"w\"> </span><span class=\"n\">from</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">table</span>\n<span class=\"w\">      </span><span class=\"mi\">60</span>: <span class=\"nc\">b940180d</span><span class=\"w\">      </span><span class=\"n\">ldr</span><span class=\"w\">     </span><span class=\"n\">w13</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">x0</span><span class=\"p\">,</span><span class=\"w\"> </span>#<span class=\"mh\">0x18</span><span class=\"p\">]</span>\n<span class=\"w\">      </span><span class=\"mi\">64</span>: <span class=\"nc\">f940226e</span><span class=\"w\">      </span><span class=\"n\">ldr</span><span class=\"w\">     </span><span class=\"n\">x14</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">x19</span><span class=\"p\">,</span><span class=\"w\"> </span>#<span class=\"mh\">0x40</span><span class=\"p\">]</span>\n<span class=\"w\">      </span><span class=\"mi\">68</span>: <span class=\"nc\">aa1303e6</span><span class=\"w\">      </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">x6</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x19</span>\n<span class=\"w\">                        </span><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"k\">type</span><span class=\"o\">-</span><span class=\"n\">check</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">trap</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">doesn</span><span class=\"o\">'</span><span class=\"na\">t</span><span class=\"w\"> </span><span class=\"n\">have</span><span class=\"w\"> </span><span class=\"n\">the</span>\n<span class=\"w\">                        </span><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">desired</span><span class=\"w\"> </span><span class=\"k\">type</span>\n      <span class=\"mi\">6</span><span class=\"n\">c</span>: <span class=\"nc\">b94005ce</span><span class=\"w\">      </span><span class=\"n\">ldr</span><span class=\"w\">     </span><span class=\"n\">w14</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">x14</span><span class=\"p\">,</span><span class=\"w\"> </span>#<span class=\"mh\">0x4</span><span class=\"p\">]</span>\n<span class=\"w\">      </span><span class=\"mi\">70</span>: <span class=\"mi\">6</span><span class=\"n\">b0e01bf</span><span class=\"w\">      </span><span class=\"n\">cmp</span><span class=\"w\">     </span><span class=\"n\">w13</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">w14</span>\n<span class=\"w\">      </span><span class=\"mi\">74</span>: <span class=\"mi\">54000221</span><span class=\"w\">      </span><span class=\"n\">b</span><span class=\"p\">.</span><span class=\"n\">ne</span><span class=\"w\">    </span><span class=\"mh\">0xb8</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">wasm</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>::<span class=\"n\">function</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">+</span><span class=\"mh\">0xb8</span><span class=\"o\">&gt;</span>\n<span class=\"w\">                        </span><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">perform</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">actual</span><span class=\"w\"> </span><span class=\"n\">call</span>\n<span class=\"w\">      </span><span class=\"mi\">78</span>: <span class=\"nc\">f9400802</span><span class=\"w\">      </span><span class=\"n\">ldr</span><span class=\"w\">     </span><span class=\"n\">x2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">x0</span><span class=\"p\">,</span><span class=\"w\"> </span>#<span class=\"mh\">0x10</span><span class=\"p\">]</span>\n<span class=\"w\">      </span><span class=\"mi\">7</span><span class=\"n\">c</span>: <span class=\"nc\">f9401000</span><span class=\"w\">      </span><span class=\"n\">ldr</span><span class=\"w\">     </span><span class=\"n\">x0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">x0</span><span class=\"p\">,</span><span class=\"w\"> </span>#<span class=\"mh\">0x20</span><span class=\"p\">]</span>\n<span class=\"w\">      </span><span class=\"mi\">80</span>: <span class=\"nc\">aa0603e1</span><span class=\"w\">      </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">x1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x6</span>\n<span class=\"w\">      </span><span class=\"mi\">84</span>: <span class=\"nc\">d63f0040</span><span class=\"w\">      </span><span class=\"n\">blr</span><span class=\"w\">     </span><span class=\"n\">x2</span>\n<span class=\"w\">                        </span><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"k\">return</span>\n<span class=\"w\">      </span><span class=\"mi\">88</span>: <span class=\"nc\">f84107f3</span><span class=\"w\">      </span><span class=\"n\">ldr</span><span class=\"w\">     </span><span class=\"n\">x19</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">sp</span><span class=\"p\">],</span><span class=\"w\"> </span>#<span class=\"mh\">0x10</span>\n<span class=\"w\">      </span><span class=\"mi\">8</span><span class=\"n\">c</span>: <span class=\"nc\">a8c17bfd</span><span class=\"w\">      </span><span class=\"n\">ldp</span><span class=\"w\">     </span><span class=\"n\">x29</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x30</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">sp</span><span class=\"p\">],</span><span class=\"w\"> </span>#<span class=\"mh\">0x10</span>\n<span class=\"w\">      </span><span class=\"mi\">90</span>: <span class=\"nc\">d65f0fff</span><span class=\"w\">      </span><span class=\"n\">retab</span>\n\n<span class=\"w\">                        </span><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">lazy</span><span class=\"w\"> </span><span class=\"n\">initialization</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">table</span><span class=\"w\"> </span><span class=\"n\">entries</span>\n<span class=\"w\">      </span><span class=\"mi\">94</span>: <span class=\"nc\">aa0603e0</span><span class=\"w\">      </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">x0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x6</span>\n<span class=\"w\">      </span><span class=\"mi\">98</span>: <span class=\"nc\">f9401c0a</span><span class=\"w\">      </span><span class=\"n\">ldr</span><span class=\"w\">     </span><span class=\"n\">x10</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">x0</span><span class=\"p\">,</span><span class=\"w\"> </span>#<span class=\"mh\">0x38</span><span class=\"p\">]</span>\n<span class=\"w\">      </span><span class=\"mi\">9</span><span class=\"n\">c</span>: <span class=\"nc\">f940254a</span><span class=\"w\">      </span><span class=\"n\">ldr</span><span class=\"w\">     </span><span class=\"n\">x10</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">x10</span><span class=\"p\">,</span><span class=\"w\"> </span>#<span class=\"mh\">0x48</span><span class=\"p\">]</span>\n<span class=\"w\">      </span><span class=\"n\">a0</span>: <span class=\"mi\">52800001</span><span class=\"w\">      </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">w1</span><span class=\"p\">,</span><span class=\"w\"> </span>#<span class=\"mh\">0x0</span><span class=\"w\">                </span><span class=\"c1\">// =0</span>\n<span class=\"w\">      </span><span class=\"n\">a4</span>: <span class=\"nc\">aa0603f3</span><span class=\"w\">      </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">x19</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x6</span>\n<span class=\"w\">      </span><span class=\"n\">a8</span>: <span class=\"nc\">aa1303e0</span><span class=\"w\">      </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">x0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x19</span>\n<span class=\"w\">      </span><span class=\"n\">ac</span>: <span class=\"nc\">d63f0140</span><span class=\"w\">      </span><span class=\"n\">blr</span><span class=\"w\">     </span><span class=\"n\">x10</span>\n<span class=\"w\">      </span><span class=\"n\">b0</span>: <span class=\"mi\">17</span><span class=\"n\">ffffeb</span><span class=\"w\">      </span><span class=\"n\">b</span><span class=\"w\">       </span><span class=\"mh\">0x5c</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">wasm</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>::<span class=\"n\">function</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">+</span><span class=\"mh\">0x5c</span><span class=\"o\">&gt;</span>\n\n<span class=\"w\">                        </span><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">various</span><span class=\"w\"> </span><span class=\"n\">traps</span>\n<span class=\"w\">      </span><span class=\"n\">b4</span>: <span class=\"mi\">0000</span><span class=\"n\">c11f</span><span class=\"w\">      </span><span class=\"n\">udf</span><span class=\"w\">     </span>#<span class=\"mh\">0xc11f</span>\n<span class=\"w\">      </span><span class=\"n\">b8</span>: <span class=\"mi\">0000</span><span class=\"n\">c11f</span><span class=\"w\">      </span><span class=\"n\">udf</span><span class=\"w\">     </span>#<span class=\"mh\">0xc11f</span>\n<span class=\"w\">      </span><span class=\"n\">bc</span>: <span class=\"mi\">0000</span><span class=\"n\">c11f</span><span class=\"w\">      </span><span class=\"n\">udf</span><span class=\"w\">     </span>#<span class=\"mh\">0xc11f</span>\n<span class=\"w\">      </span><span class=\"n\">c0</span>: <span class=\"mi\">0000</span><span class=\"n\">c11f</span><span class=\"w\">      </span><span class=\"n\">udf</span><span class=\"w\">     </span>#<span class=\"mh\">0xc11f</span>\n</code></pre></div>",
        "id": 398551922,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1698263693
    },
    {
        "content": "<p>so you can see our <code>call_indirect</code> is not exactly the most optimal as-is and generates a lot of code</p>",
        "id": 398551976,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1698263719
    },
    {
        "content": "<p>but it's a bit odd to me that there's two length comparisons where we should probably only have one with spectre things enabled</p>",
        "id": 398552032,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1698263745
    },
    {
        "content": "<p>Yeah that's how I found this oddity -- I was trying to look at the <code>indirect_call</code> code and looking for a possibility to optimize it. But then even when removing the signature check completely, there was no performance difference (because <code>csdb</code> ate all performance gains one might gain from completely removing signature checks).</p>",
        "id": 398552653,
        "sender_full_name": "Martin Fink",
        "timestamp": 1698264018
    },
    {
        "content": "<p>if you haven't already found it, <code>-Ccranelift-enable_table_access_spectre_mitigation=n</code> will disable the <code>csdb</code> bits</p>",
        "id": 398552838,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1698264084
    },
    {
        "content": "<p>basically disabling the <code>enable_table_access_spectre_mitigation</code> setting in Cranelift</p>",
        "id": 398552875,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1698264096
    },
    {
        "content": "<p>Yes, with that I don't have the slowdown</p>",
        "id": 398552894,
        "sender_full_name": "Martin Fink",
        "timestamp": 1698264102
    },
    {
        "content": "<p>you may also be interested in <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5532\">this issue</a> which is probably a good starting point for optimizing this</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/issues/5532\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/6e8611fb2a92f860222aa212cbdc98529111823f\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f666536616338326432613830656163333362343161336632313265333135363933383466343262373165326135623735303766393565643533643738613932302f62797465636f6465616c6c69616e63652f7761736d74696d652f6973737565732f35353332)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/issues/5532\" title=\"Cranelift: Remove `table_addr` and tables from CLIF, move them into `cranelift-wasm`'s Wasm -&gt; CLIF lowering · Issue #5532 · bytecodealliance/wasmtime\">Cranelift: Remove `table_addr` and tables from CLIF, move them into `cranelift-wasm`'s Wasm -&gt; CLIF lowering · Issue #5532 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Similar to what we did with heaps in #5283</div></div></div>",
        "id": 398553012,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1698264132
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"253994\">Alex Crichton</span> <a href=\"#narrow/stream/217117-cranelift/topic/.60csdb.60.20overhead.20on.20M1.20chips.20.28AArch64.29/near/398552032\">said</a>:</p>\n<blockquote>\n<p>but it's a bit odd to me that there's two length comparisons where we should probably only have one with spectre things enabled</p>\n</blockquote>\n<p>we did the optimization to dedupe bounds checks and spectre guards for memories, but never did that for tables</p>",
        "id": 398553057,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1698264148
    },
    {
        "content": "<p>since some of the optimizations are best done at the producer level rather than in CLIF, for example we know when a table has a min/max size that's the same we could avoid a dynamic load of the table's length since it's statically known</p>",
        "id": 398553121,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1698264171
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"253990\">fitzgen (he/him)</span> <a href=\"#narrow/stream/217117-cranelift/topic/.60csdb.60.20overhead.20on.20M1.20chips.20.28AArch64.29/near/398553057\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"253994\">Alex Crichton</span> <a href=\"#narrow/stream/217117-cranelift/topic/.60csdb.60.20overhead.20on.20M1.20chips.20.28AArch64.29/near/398552032\">said</a>:</p>\n<blockquote>\n<p>but it's a bit odd to me that there's two length comparisons where we should probably only have one with spectre things enabled</p>\n</blockquote>\n<p>we did the optimization to dedupe bounds checks and spectre guards for memories, but never did that for tables</p>\n</blockquote>\n<p>oh right!</p>",
        "id": 398553156,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1698264186
    },
    {
        "content": "<p>ah yeah that issue would be a pre-req for doing the same optimization for table accesses</p>",
        "id": 398553201,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1698264202
    },
    {
        "content": "<p>If you don't mind, I might have some free time in the coming days/weeks to look at this, since it sounds like an interesting issue. (And I'm a bit familiar with the pieces that compute indirect calls and table addresses now :) )</p>",
        "id": 398553508,
        "sender_full_name": "Martin Fink",
        "timestamp": 1698264316
    },
    {
        "content": "<p>that'd be great! Many of us can help out with the issue so don't hesistate to ask questions here or on github or similar</p>",
        "id": 398553746,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1698264453
    },
    {
        "content": "<p>I think this conversation may be getting a bit sidetracked by the above -- the main slowdown is the <code>csdb</code>, so we should work out a way to avoid that if we can, right?</p>",
        "id": 398553992,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1698264568
    },
    {
        "content": "<p>I just confirmed on my M1 on macOS that I see a ~2x speedup on spidermonkey.wasm when removing <code>csdb</code></p>",
        "id": 398554014,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1698264584
    },
    {
        "content": "<p>so my guess is that it's doing a full pipeline flush / barrier</p>",
        "id": 398554023,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1698264591
    },
    {
        "content": "<p>I know the aarch64 spec says that in theory we need to future-proof against value speculation with <code>csdb</code> but if it carries this much penalty on M1, maybe we should reconsider...</p>",
        "id": 398554141,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1698264639
    },
    {
        "content": "<p>oh sorry yeah I didn't mean to sidetrack too much, but wanted to pull on the thread of \"let's optimize call_indirect\" a bit</p>",
        "id": 398554406,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1698264773
    },
    {
        "content": "<p>given the data on M2 it may mean that we could consider a possible M1-specific rule along these lines</p>",
        "id": 398554431,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1698264788
    },
    {
        "content": "<p>it seems that a concrete change could be: put the use of the instruction under another flag, call it <code>spectre_aarch64_value_speculation_barrier</code> or something similar, and have it off by default</p>",
        "id": 398554459,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1698264805
    },
    {
        "content": "<p>although with <a href=\"https://ileakage.com/\">this just coming out today</a> we should probably be somewhat certain heh</p>",
        "id": 398554465,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1698264809
    },
    {
        "content": "<p>if this only affects M1 though should it be off-by-default?</p>",
        "id": 398554512,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1698264834
    },
    {
        "content": "<p>or on-by-default, the thing I was about to say is we should then have an allowlist (or denylist, depending) of uarches</p>",
        "id": 398554621,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1698264872
    },
    {
        "content": "<p>if we know it's slow just on M1, let's turn it off on M1, with the reasoning that we suspect M1 doesn't do value speculation</p>",
        "id": 398554665,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1698264891
    },
    {
        "content": "<p>(linked paper seems to be about timer resolution, that's orthogonal to speculation kinds I guess?)</p>",
        "id": 398554706,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1698264914
    },
    {
        "content": "<p>oh no it's all about speculation, they showed that without low-resolution timers they successfully launched spectre stuff on all macOS M1/M2 devices</p>",
        "id": 398554831,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1698264978
    },
    {
        "content": "<p>they achieved an arbitrary read of any 64-bit address within the process via speculation</p>",
        "id": 398554885,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1698265011
    },
    {
        "content": "<p>right, the key contribution seems to be about timer resolution afaict though</p>",
        "id": 398554917,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1698265029
    },
    {
        "content": "<p>(it's already known that m1/m2/... speculate since they're OoO, they seem to measure the depth but it was already known they have big OoO windows e.g. M1 is I think 512 insts in the ROB)</p>",
        "id": 398555053,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1698265088
    },
    {
        "content": "<p>dougallj's uarch tables seem to confirm that CSDB is a full fence: 27-cycle latency (<a href=\"https://dougallj.github.io/applecpu/firestorm-int.html\">https://dougallj.github.io/applecpu/firestorm-int.html</a>)</p>",
        "id": 398555241,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1698265194
    },
    {
        "content": "<p>I'm not able to find anything that documents better what the limits of value speculation are in M1. The specific guarantee we'd need to be 100% sure about this is that M1 doesn't speculate flag values on the result of the compare that feed into the <code>csel</code>. What I do know is (i) value speculation has historically been considered extremely difficult and complex, and not likely to be deployed; (ii) in cases where it would be, it would likely be used to predict the result of a long-latency op, like a cache-miss load, early (at least that was the original academic paper's proposal); but the address we're bounds-checking is usually not that</p>",
        "id": 398556125,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1698265602
    },
    {
        "content": "<p>again normally I'd say we should follow ISA spec to the letter, but a 2x slowdown on SpiderMonkey for a theoretical issue that likely doesn't exist on this uarch is... hard to accept :-)</p>",
        "id": 398556331,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1698265699
    },
    {
        "content": "<p>to make sure I understand, the worry is that <code>csel</code> speculates the result not based on the actual inputs but on something conjured out of thin air?</p>",
        "id": 398556651,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1698265868
    },
    {
        "content": "<p>e.g. it may not speculate based on the two possible inputs, but actually something totally different?</p>",
        "id": 398556672,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1698265883
    },
    {
        "content": "<p>(I'm naive and know very little about mitigating spectre apart from the high-level bits)</p>",
        "id": 398556695,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1698265901
    },
    {
        "content": "<p>right, say that there is a value predictor that fires when an instruction's inputs are not ready; it says \"execute this csel as if the flags are &lt;no overflow&gt;\", and the load speculatively executes and we affect the cache. The value speculation idea is that we could do that, remember what we speculated, and when the real input resolves, keep the work we did if we got it right</p>",
        "id": 398556979,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1698266054
    },
    {
        "content": "<p>the original paper on value speculation was in iirc 1996, it's a neat idea, but afaik no one has actually built it</p>",
        "id": 398557011,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1698266069
    },
    {
        "content": "<p>csdb is described as \"future proofing\", which reading between the lines a bit (opinion follows!) tells me the ISA folks want it in software now so they have the freedom to do these tricks later</p>",
        "id": 398557065,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1698266102
    },
    {
        "content": "<p>wow that's wild</p>",
        "id": 398557106,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1698266127
    },
    {
        "content": "<p>it definitely makes sense to me then at the very least that if it's purely future-proofing then we can probably safely say no new M1s will ever be designed so we can disable it there</p>",
        "id": 398557198,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1698266169
    },
    {
        "content": "<p>at least on x86, everyone has seemed to just tacitly accept that it's not done, at least for cmov's (or maybe there was a statement about this from Intel that I missed?), so we can use a cmp+cmov as a mask on the misspeculated path</p>",
        "id": 398557243,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1698266198
    },
    {
        "content": "<p>rephrased: disabling on M1 makes sense if we know M1 doesn't do value speculation, disabling elsewhere is still somewhat iffy but perhaps not necessary if it's not much of a perf impact</p>",
        "id": 398557253,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1698266206
    },
    {
        "content": "<p>interesting yeah</p>",
        "id": 398557274,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1698266218
    },
    {
        "content": "<p>do js engines use csdb do you know?</p>",
        "id": 398557293,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1698266231
    },
    {
        "content": "<p>and, right, the extra evidence I'd offer is that the barrier needed to protect against it is expensive, so they didn't optimize it, so it probably isn't needed</p>",
        "id": 398557302,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1698266236
    },
    {
        "content": "<p>b/c if they don't I doubt that us doing so would really move the needle</p>",
        "id": 398557312,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1698266242
    },
    {
        "content": "<p>interesting Q, I was gonna check that next! apparently SM recently removed <em>all</em> spectre hardening because they just put trust domains in separate processes now (FF finished Project Fission)</p>",
        "id": 398557345,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1698266263
    },
    {
        "content": "<p>but historically...</p>",
        "id": 398557351,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1698266268
    },
    {
        "content": "<p>oh damn</p>",
        "id": 398557355,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1698266273
    },
    {
        "content": "<p>I wonder if we should disable spectre stuff by defaut then and document accordingly?</p>",
        "id": 398557435,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1698266301
    },
    {
        "content": "<p>anyone who runs multi-tenant in a single process probably still cares!</p>",
        "id": 398557466,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1698266329
    },
    {
        "content": "<p>it is a valid question for the CLI though</p>",
        "id": 398557475,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1698266333
    },
    {
        "content": "<p>(and I guess there are interesting questions around component model + multi-module too -- if you run mutually mistrusting modules in a component you probably still want the hardening)</p>",
        "id": 398557536,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1698266364
    },
    {
        "content": "<p>good point yeah</p>",
        "id": 398557729,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1698266469
    },
    {
        "content": "<p>I suppose this means that we basically can't use browsers as \"prior art\" if they're removing spectre things</p>",
        "id": 398557751,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1698266494
    },
    {
        "content": "<p>so I'm looking through SM's Wasm implementation prior to their removal of spectre-protection-by-default (bug 1837602, Jun 23 of this year, commit <code>b7d1824da842b37c4e0089ded35f9fb7b089fa60</code> in the <a href=\"http://github.com/mozilla/gecko-dev\">github.com/mozilla/gecko-dev</a> mercurial mirror)</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"http://github.com/mozilla/gecko-dev\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/dc074c7bbd492d3c40653fdcdb5e2c60f45fc046\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f656563636339363566303163623931336233353334386266303765323938636337653965633664323039616461303661646661366638633432326135303937642f6d6f7a696c6c612f6765636b6f2d646576)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"http://github.com/mozilla/gecko-dev\" title=\"GitHub - mozilla/gecko-dev: Read-only Git mirror of the Mercurial gecko repositories at https://hg.mozilla.org. How to contribute: https://firefox-source-docs.mozilla.org/contributing/contribution_quickref.html\">GitHub - mozilla/gecko-dev: Read-only Git mirror of the Mercurial gecko repositories at https://hg.mozilla.org. How to contribute: https://firefox-source-docs.mozilla.org/contributing/contribution_quickref.html</a></div><div class=\"message_embed_description\">Read-only Git mirror of the Mercurial gecko repositories at https://hg.mozilla.org. How to contribute: https://firefox-source-docs.mozilla.org/contributing/contribution_quickref.html - GitHub - moz...</div></div></div>",
        "id": 398558409,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1698266860
    },
    {
        "content": "<p>and... surprisingly enough, I'm not able to find anything, at least in <code>WasmBaselineCompile.cpp</code></p>",
        "id": 398558438,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1698266876
    },
    {
        "content": "<p>(<code>masm.speculationBarrier()</code> is the magical incantation that gives <code>csdb</code> on aarch64; it's still there in some hostcalls)</p>",
        "id": 398558524,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1698266898
    },
    {
        "content": "<p>Would something like what <span class=\"user-mention\" data-user-id=\"300050\">@Anton Kirilov</span>  <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1032#issuecomment-1249736886\">mentioned in #1032</a> also solve this? Setting a software context id when transitioning to the guest, and removing the <code>csdb</code>?</p>\n<p>(I'm not sure if they solve the same spectre issue, or if it's a different one. I'm not too familiar with any of this)</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/issues/1032#issuecomment-1249736886\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/ecf8eb8292c025fc16d1ce0f65c77652f896b64d\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f343261663038313139313237306633386330613338613637633832656562643939336437663534353931373161333038333434316437653961366131343233642f62797465636f6465616c6c69616e63652f7761736d74696d652f6973737565732f31303332)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/issues/1032#issuecomment-1249736886\" title=\"Mitigating Spectre attacks · Issue #1032 · bytecodealliance/wasmtime\">Mitigating Spectre attacks · Issue #1032 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Hello, You are probably well aware, but some mainstream compilers are emitting retpolines to help mitigate Spectre variant 2 attacks. Do you have any plans to add a similar capability to the creton...</div></div></div>",
        "id": 398558761,
        "sender_full_name": "Afonso Bordado",
        "timestamp": 1698267024
    },
    {
        "content": "<p>that's a useful feature (separate predictor contexts) but unfortunately looks like it relies on an ISA extension that's fairly recent...</p>",
        "id": 398559217,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1698267275
    },
    {
        "content": "<p>given that I'm not finding this in FF's codebase, I'd support removing <code>csdb</code> on M1 on that basis</p>",
        "id": 398559289,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1698267322
    },
    {
        "content": "<p>if it's cheap/free as it is on M2, why not, we can future-proof</p>",
        "id": 398559309,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1698267332
    },
    {
        "content": "<p>(about to start another run of meetings so there's my time-boxed investigation result :-) )</p>",
        "id": 398559338,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1698267348
    },
    {
        "content": "<blockquote>\n<p>if it's cheap/free as it is on M2, why not, we can future-proof</p>\n</blockquote>\n<p>I guess a question is how high the risk is of other Aarch64 implementations behaving like M1 does here, instead of M2. If there's some amount of risk that more CPUs are negatively affected like M1 is, then I think we should disable this by default, and only enable it on CPUs that we know to be ok.</p>",
        "id": 398655806,
        "sender_full_name": "Till Schneidereit",
        "timestamp": 1698314711
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"410955\">@Afonso Bordado</span> The software context number is a mitigation for a different Spectre variant (Spectre-V2 instead of Spectre-V1), which in the Wasm case would involve cross-module instance attacks, I think. In this case any potential attack happens within a single module, so the context ID would stay the same. And yes, it requires hardware support, but crucially kernel support as well.</p>",
        "id": 398665383,
        "sender_full_name": "Anton Kirilov",
        "timestamp": 1698318449
    },
    {
        "content": "<p>Also, to play devil's advocate - if the <code>CSDB</code> instruction is expensive on a certain microarchitecture, perhaps it is actually necessary? Unless your threat model allows you to avoid it, of course, as in the browser case where different security contexts are isolated in their own processes.</p>",
        "id": 398667168,
        "sender_full_name": "Anton Kirilov",
        "timestamp": 1698319234
    },
    {
        "content": "<p>Hmm, yeah; fwiw <code>csdb</code> was not used by Firefox for Wasm indirect calls even prior to their multiprocess split, as far as I can tell. Perhaps that was a missing mitigation, I dunno</p>",
        "id": 398720459,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1698335961
    },
    {
        "content": "<p>if anyone has time to dig around in the Safari (JavaScriptCore) source to see what's done, that would be an interesting data point too...</p>",
        "id": 398720602,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1698336006
    }
]