[
    {
        "content": "<p>Hey! Here is a small question: I am having trouble understanding what nominal SP is, is there a good place I could read about it? I can't find where it's used and its purpose is not very clear to me.</p>",
        "id": 309369959,
        "sender_full_name": "Th√©o Degioanni",
        "timestamp": 1668275477
    },
    {
        "content": "<p>Probably the value stack pointer outside of the prologue and epilogue.</p>",
        "id": 309586409,
        "sender_full_name": "bjorn3",
        "timestamp": 1668428440
    },
    {
        "content": "<p>I see comments like the following in some of Cranelift's backends; does that help?</p>\n<blockquote>\n<div class=\"codehilite\"><pre><span></span><code>    ;; Offset from the &quot;nominal stack pointer&quot;, which is where the real SP is\n    ;; just after stack and spill slots are allocated in the function prologue.\n    ;; At emission time, this is converted to `SPOffset` with a fixup added to\n    ;; the offset constant. The fixup is a running value that is tracked as\n    ;; emission iterates through instructions in linear order, and can be\n    ;; adjusted up and down with [Inst::VirtualSPOffsetAdj].\n    ;;\n    ;; The standard ABI is in charge of handling this (by emitting the\n    ;; adjustment meta-instructions). It maintains the invariant that &quot;nominal\n    ;; SP&quot; is where the actual SP is after the function prologue and before\n    ;; clobber pushes. See the diagram in the documentation for\n    ;; [crate::isa::aarch64::abi](the ABI module) for more details.\n</code></pre></div>\n\n</blockquote>",
        "id": 309903709,
        "sender_full_name": "Jamey Sharp",
        "timestamp": 1668444642
    }
]