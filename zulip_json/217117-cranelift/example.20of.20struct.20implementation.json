[
    {
        "content": "<p>Is there any example code (using cranelift) which lowers struct declarations to data section + appropriate offset computations (?) Struct types are obviously not provided by cranelift, but I'm curious if there is a good bit of reference code to learn from.</p>",
        "id": 285069756,
        "sender_full_name": "McCoy",
        "timestamp": 1654483400
    },
    {
        "content": "<p>I started poking around <a href=\"https://github.com/bjorn3/rustc_codegen_cranelift\">https://github.com/bjorn3/rustc_codegen_cranelift</a> -- but I haven't figure out the right places to look yet.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bjorn3/rustc_codegen_cranelift\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/917165d3adbc7dffdc3d152487e602749a38d272\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f383161653931646262306638393831666132663338623536343633626139636239663738653466373165333839376535386266636438643861383266396437352f626a6f726e332f72757374635f636f646567656e5f6372616e656c696674)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bjorn3/rustc_codegen_cranelift\" title=\"GitHub - bjorn3/rustc_codegen_cranelift: Cranelift based backend for rustc\">GitHub - bjorn3/rustc_codegen_cranelift: Cranelift based backend for rustc</a></div><div class=\"message_embed_description\">Cranelift based backend for rustc. Contribute to bjorn3/rustc_codegen_cranelift development by creating an account on GitHub.</div></div></div>",
        "id": 285069836,
        "sender_full_name": "McCoy",
        "timestamp": 1654483515
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"449589\">@McCoy</span> -- I think that rustc_codegen_cranelift mainly deals with struct layout questions by way of rustc ABI helpers; e.g. here: <a href=\"https://github.com/bjorn3/rustc_codegen_cranelift/blob/d628444e480c0c62350a34cf8b26370f92238b6a/src/value_and_place.rs#L14\">https://github.com/bjorn3/rustc_codegen_cranelift/blob/d628444e480c0c62350a34cf8b26370f92238b6a/src/value_and_place.rs#L14</a></p>\n<p>that's probably a bit more complex than you're looking for; but actually struct layout can be pretty simple. What's the context for your question -- are you trying to write a thing that generates C ABI-compatible code? Or are you implementing structs in your own language (for which you have the freedom to decide layout details)?</p>\n<p>If you're deciding on your own layout, the basic steps are: iterate through fields, determine the alignment for each, align the current offset to that, and save offset. Then look up the type/field when it's accessed and add the offset to the load/store you generate (these instructions take an <code>Offset32</code> which is a type wrapper around an <code>i32</code>)</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bjorn3/rustc_codegen_cranelift/blob/d628444e480c0c62350a34cf8b26370f92238b6a/src/value_and_place.rs#L14\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/917165d3adbc7dffdc3d152487e602749a38d272\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f383161653931646262306638393831666132663338623536343633626139636239663738653466373165333839376535386266636438643861383266396437352f626a6f726e332f72757374635f636f646567656e5f6372616e656c696674)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bjorn3/rustc_codegen_cranelift/blob/d628444e480c0c62350a34cf8b26370f92238b6a/src/value_and_place.rs#L14\" title=\"rustc_codegen_cranelift/value_and_place.rs at d628444e480c0c62350a34cf8b26370f92238b6a · bjorn3/rustc_codegen_cranelift\">rustc_codegen_cranelift/value_and_place.rs at d628444e480c0c62350a34cf8b26370f92238b6a · bjorn3/rustc_codegen_cranelift</a></div><div class=\"message_embed_description\">Cranelift based backend for rustc. Contribute to bjorn3/rustc_codegen_cranelift development by creating an account on GitHub.</div></div></div>",
        "id": 285077291,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1654493229
    }
]