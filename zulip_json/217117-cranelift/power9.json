[
    {
        "content": "<p>I'm new to cranelift - but not new to Rust. I have some experience writing POWER64 assembly am wondering about where I should start poking if I wanted to add the ability to emit power64 to cranelift?</p>",
        "id": 278506331,
        "sender_full_name": "Yehowshua Immanuel",
        "timestamp": 1649649392
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"493446\">@Yehowshua Immanuel</span> -- adding a ppc64 backend would be fantastic and we'd be happy to give any help we can!</p>\n<p>Eventually we want to write a \"how to write a backend\" tutorial but for now the best reference is the other backends, I think. The s390x backend is probably the simplest right now, and covers some other issues you'll hit too I think (big endian?). If you start by looking at <code>cranelift/codegen/src/isa/s390x</code> and duplicate what's there (and the various other places you see <code>s390x</code> in the codebase, around buildscripts and Cargo features at least) that should get you on the right track, at least. To get wasmtime running on top of Cranelift will be a bit more work (the fibers library, trap handling) but Cranelift itself can be exercised with runtests at least.</p>\n<p>Let me know if you have any other questions!</p>",
        "id": 278579551,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1649694451
    },
    {
        "content": "<p>Thanks. I'm sure I'll have more questions soon!</p>",
        "id": 278635385,
        "sender_full_name": "Yehowshua Immanuel",
        "timestamp": 1649724562
    },
    {
        "content": "<p>I'm starting to wonder where on earth you guys were able to test an s390x!!</p>",
        "id": 278635484,
        "sender_full_name": "Yehowshua Immanuel",
        "timestamp": 1649724640
    },
    {
        "content": "<p>On second thought, I'm wondering if I were to loan out a POWER desktop to somebody - would they be interested in writing a backend for POWER64</p>",
        "id": 278635516,
        "sender_full_name": "Yehowshua Immanuel",
        "timestamp": 1649724686
    },
    {
        "content": "<blockquote>\n<p>The s390x backend is probably the simplest right now, and covers some other issues you'll hit too I think (big endian?). </p>\n</blockquote>\n<p>In practice - I don't think anybody actually uses big endian on POWER64...</p>",
        "id": 278635670,
        "sender_full_name": "Yehowshua Immanuel",
        "timestamp": 1649724836
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"493446\">Yehowshua Immanuel</span> <a href=\"#narrow/stream/217117-cranelift/topic/power9/near/278635484\">said</a>:</p>\n<blockquote>\n<p>I'm starting to wonder where on earth you guys were able to test an s390x!!</p>\n</blockquote>\n<p>Well, that work has been done mostly by <span class=\"user-mention\" data-user-id=\"268749\">@Ulrich Weigand</span> who, being at IBM, presumably has access to hardware <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span>. The rest of us just runs QEMU.</p>",
        "id": 278693880,
        "sender_full_name": "Anton Kirilov",
        "timestamp": 1649770859
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"300050\">@Anton Kirilov</span> <span class=\"user-mention\" data-user-id=\"493446\">@Yehowshua Immanuel</span>  If you would like to have access to real s390x hardware, that's available free of charge (for the purpose of open-source development) via the IBM LinuxONE Community Cloud hosted at Marist College: <a href=\"https://linuxone.cloud.marist.edu\">https://linuxone.cloud.marist.edu</a></p>",
        "id": 278713364,
        "sender_full_name": "Ulrich Weigand",
        "timestamp": 1649779076
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"493446\">@Yehowshua Immanuel</span> How's the Power9 progress?</p>",
        "id": 291766137,
        "sender_full_name": "Richard Zak",
        "timestamp": 1659472959
    },
    {
        "content": "<p>heh - well I haven't yet gotten around to making much progress on it - besides - I sold my POWER9 machine.<br>\nPlus I've been working on this - <a href=\"https://github.com/ThePerfectComputer/FastWave\">https://github.com/ThePerfectComputer/FastWave</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/ThePerfectComputer/FastWave\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/7090585f8e7a0e2bffb2a48c17fe478b187a55ac\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f646361363763333734663730343838306333383330373965343966373630313666306162313262386664663363396363396664633336393032363061393430662f54686550657266656374436f6d70757465722f4661737457617665)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/ThePerfectComputer/FastWave\" title=\"GitHub - ThePerfectComputer/FastWave: A Rust VCD parser intended to be the backend of a Waveform Viewer(built in egui) that supports dynamically loaded rust plugins.\">GitHub - ThePerfectComputer/FastWave: A Rust VCD parser intended to be the backend of a Waveform Viewer(built in egui) that supports dynamically loaded rust plugins.</a></div><div class=\"message_embed_description\">A Rust VCD parser intended to be the backend of a Waveform Viewer(built in egui) that supports dynamically loaded rust plugins. - GitHub - ThePerfectComputer/FastWave: A Rust VCD parser intended to...</div></div></div>",
        "id": 291767052,
        "sender_full_name": "Yehowshua Immanuel",
        "timestamp": 1659473415
    },
    {
        "content": "<p>But I think I'll get back to cranelift when that's done. <span class=\"user-mention\" data-user-id=\"506027\">@Richard Zak</span> - are you interested in POWER9 for crane lift?</p>",
        "id": 291767119,
        "sender_full_name": "Yehowshua Immanuel",
        "timestamp": 1659473457
    },
    {
        "content": "<p>I am interested, and was thinking about getting a Raptor Talos II. What machine did you have?</p>",
        "id": 291767703,
        "sender_full_name": "Richard Zak",
        "timestamp": 1659473764
    },
    {
        "content": "<p>I had a Talos - I just sold it two weeks ago - I would have totally sold it to you too</p>",
        "id": 291770875,
        "sender_full_name": "Yehowshua Immanuel",
        "timestamp": 1659475559
    },
    {
        "content": "<p>Just keep in mind that the Talos doesn't have a sleep mode - and if you want a WiFi adapter with reasonable range - you'll need to build this: <a href=\"https://github.com/BracketMaster/rtl8821cu-5.12.0-void-linux-ppc\">https://github.com/BracketMaster/rtl8821cu-5.12.0-void-linux-ppc</a></p>\n<p>Couldn't find any modern WiFi drivers that support PowerPC on linux</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/BracketMaster/rtl8821cu-5.12.0-void-linux-ppc\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/5f8c4acaa19ce95c90c4b41a0d49f60222351bed\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f616431616336393236633739656464313466376430303832623239663239363733343037663334383431653231343266656236313334633663306165313965622f427261636b65744d61737465722f72746c3838323163752d352e31322e302d766f69642d6c696e75782d707063)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/BracketMaster/rtl8821cu-5.12.0-void-linux-ppc\" title=\"GitHub - BracketMaster/rtl8821cu-5.12.0-void-linux-ppc: In case you need to use a BrosTrend 650Mbps Linux WiFi Adapter with your POWER9 machine.\">GitHub - BracketMaster/rtl8821cu-5.12.0-void-linux-ppc: In case you need to use a BrosTrend 650Mbps Linux WiFi Adapter with your POWER9 machine.</a></div><div class=\"message_embed_description\">In case you need to use a BrosTrend 650Mbps Linux WiFi Adapter with your POWER9 machine. - GitHub - BracketMaster/rtl8821cu-5.12.0-void-linux-ppc: In case you need to use a BrosTrend 650Mbps Linux ...</div></div></div>",
        "id": 291771100,
        "sender_full_name": "Yehowshua Immanuel",
        "timestamp": 1659475677
    },
    {
        "content": "<p>I'll be using Ethernet, and having the Talos replace my current desktop. How was using it as a desktop? Void seems to be the best bet due to graphics drivers. Did you get any code written for cranelift?</p>",
        "id": 291771472,
        "sender_full_name": "Richard Zak",
        "timestamp": 1659475863
    },
    {
        "content": "<p>I didn't write any code. Yes - void is basically the only usable linux distro in terms of the graphics capabilities and sane boot times.</p>",
        "id": 291775878,
        "sender_full_name": "Yehowshua Immanuel",
        "timestamp": 1659478435
    },
    {
        "content": "<p>As far as using it as a desktop goes - the BMC is what invokes the CPU to boot - which is weird - and there's a firmware bug that occasionally drops cores when NVIDIA cards make invalid PCI-e accesses - didn't have the issue with AMD cards however</p>",
        "id": 291776061,
        "sender_full_name": "Yehowshua Immanuel",
        "timestamp": 1659478547
    },
    {
        "content": "<p>Lastly, for the 4 core version, the power consumption to performance ratio is pretty abysmal relative to my iPhone - which is about as fast as the Talos and clearly uses less power. 4c version is about 27W at idle and 90W at full speed -and keep in mind it doesn't have a sleep mode - so either you turn it off when not in use or do 24H*27W to compute your new minimum energy bill</p>",
        "id": 291776277,
        "sender_full_name": "Yehowshua Immanuel",
        "timestamp": 1659478676
    },
    {
        "content": "<p>I'm thinking about getting the dual 8-core. I have my current machine on all the time, and running Boinc workloads, so I'm not too worried about it (except for maybe heat).</p>",
        "id": 291778998,
        "sender_full_name": "Richard Zak",
        "timestamp": 1659480461
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"493446\">@Yehowshua Immanuel</span> any thoughts on how to create the <code>inst.isle</code> and <code>lower.isle</code> files? Seems each is about 3k lines for s390x and x86.</p>",
        "id": 292217023,
        "sender_full_name": "Richard Zak",
        "timestamp": 1659740289
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"506027\">@Richard Zak</span> that's the essence of the porting effort -- these two files together are most of the compiler backend. \"How to create\" is more or less to follow what the other backends do, unfortunately</p>",
        "id": 292218840,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1659742257
    },
    {
        "content": "<p>on my todo list is \"write a guide for adding a new compiler backend\", but unfortunately I haven't had time to get to this yet; we're very much stretched thin and still building a bunch of things</p>",
        "id": 292218860,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1659742281
    },
    {
        "content": "<p>so as a contributor adding a new backend, you're very welcome and we'll try to help, but you're also very much on the bleeding edge</p>",
        "id": 292218871,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1659742304
    },
    {
        "content": "<p>I would recommend starting with the assembler layer first: define an instruction type, write the emission and pretty-printing code</p>",
        "id": 292218957,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1659742385
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"506027\">@Richard Zak</span> , link to file?</p>",
        "id": 292219438,
        "sender_full_name": "Yehowshua Immanuel",
        "timestamp": 1659742955
    },
    {
        "content": "<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/codegen/src/isa/s390x/inst.isle\">https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/codegen/src/isa/s390x/inst.isle</a>, <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/codegen/src/isa/s390x/lower.isle\">https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/codegen/src/isa/s390x/lower.isle</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/codegen/src/isa/s390x/inst.isle\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/7b271c1a0dc567f1dc6aa222f07b88693c0f1cb8\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f616665613631306238336632396163663964366263383537376263343735643934353539626637356263653065363439393939306231356365663133396332612f62797465636f6465616c6c69616e63652f7761736d74696d65)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/codegen/src/isa/s390x/inst.isle\" title=\"wasmtime/inst.isle at main · bytecodealliance/wasmtime\">wasmtime/inst.isle at main · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A standalone runtime for WebAssembly. Contribute to bytecodealliance/wasmtime development by creating an account on GitHub.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/codegen/src/isa/s390x/lower.isle\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/7b271c1a0dc567f1dc6aa222f07b88693c0f1cb8\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f616665613631306238336632396163663964366263383537376263343735643934353539626637356263653065363439393939306231356365663133396332612f62797465636f6465616c6c69616e63652f7761736d74696d65)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/codegen/src/isa/s390x/lower.isle\" title=\"wasmtime/lower.isle at main · bytecodealliance/wasmtime\">wasmtime/lower.isle at main · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A standalone runtime for WebAssembly. Contribute to bytecodealliance/wasmtime development by creating an account on GitHub.</div></div></div>",
        "id": 292219557,
        "sender_full_name": "Richard Zak",
        "timestamp": 1659743113
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"254389\">@Chris Fallin</span> What's in those files? I want to say they look like instructions and parameters, but it somehow seems more than that. And does it need all instructions or a subset? It looks like it also has to handle register flags.</p>",
        "id": 292219742,
        "sender_full_name": "Richard Zak",
        "timestamp": 1659743379
    },
    {
        "content": "<p>looks lisp like</p>",
        "id": 292220148,
        "sender_full_name": "Yehowshua Immanuel",
        "timestamp": 1659743900
    },
    {
        "content": "<p>Looks like everything is in here, starting at page 55 <a href=\"https://ibm.ent.box.com/s/1hzcwkwf8rbju5h9iyf44wm94amnlcrv\">https://ibm.ent.box.com/s/1hzcwkwf8rbju5h9iyf44wm94amnlcrv</a></p>",
        "id": 292220760,
        "sender_full_name": "Richard Zak",
        "timestamp": 1659744478
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"506027\">@Richard Zak</span> that's our DSL for describing pattern-matching backends. I'd recommend starting with the docs at cranelift/isle/docs/language-reference.md</p>",
        "id": 292221683,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1659745469
    },
    {
        "content": "<p>As I mentioned there's very little documentation on how to actually use it to write a backend; my apologies but again we're hard at work actually building the thing still and so haven't managed to fill out a bunch of info on how to come up to speed quickly; you'll need to dig in and read the other backends to learn how things work</p>",
        "id": 292221729,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1659745526
    },
    {
        "content": "<p>we're happy to answer questions you have on the way of course! but I'd start with the doc above and read it thoroughly</p>",
        "id": 292221785,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1659745575
    },
    {
        "content": "<p>Awesome, thank you.</p>",
        "id": 292221888,
        "sender_full_name": "Richard Zak",
        "timestamp": 1659745728
    },
    {
        "content": "<p>I’ve just gotten my Power9 system up and running and intend to take a closer look at cranelift and isle</p>",
        "id": 299379592,
        "sender_full_name": "Richard Zak",
        "timestamp": 1663466617
    }
]