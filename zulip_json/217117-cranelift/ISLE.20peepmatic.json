[
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"253990\">@fitzgen (he/him)</span> <br>\nSorry if this is a silly question, as I didn't look at the peepmatic files before ISLE landed, but I take it that peepmatic hasn't been ported to ISLE? The syntax looks similar enough, but judging by the file extension, it's not ISLE.</p>",
        "id": 280503032,
        "sender_full_name": "Sam Parker",
        "timestamp": 1651156526
    },
    {
        "content": "<p>peepmatic is similar to ISLE in that it is s-expressions and based on term rewriting, but the implementation was fairly different and it wasn't really a full fledged language the way that ISLE is.</p>\n<p>also, peepmatic was clif to clif, so porting the preopt-in-peepmatic stuff would require building the ISLE infrastructure to go clif to clif instead of clif to mach inst. this is something <span class=\"user-mention\" data-user-id=\"254389\">@Chris Fallin</span> and I have been talking about as part of the mid end work that is coming up. we want to be able to not just port peepholes over to ISLE but also use ISLE for data flow analyses and transformations based on them (sort of similar to hoopl: <a href=\"https://www.microsoft.com/en-us/research/wp-content/uploads/2016/07/hoopl-haskell10.pdf\">https://www.microsoft.com/en-us/research/wp-content/uploads/2016/07/hoopl-haskell10.pdf</a>)</p>\n<p>lots of details to still figure out here and most likely eventually an RFC too</p>",
        "id": 280517374,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1651162153
    },
    {
        "content": "<p>Yep, the goal is to be able to translate all of the peephole patterns, and potentially reuse a lot of the infra that Nick built to harvest patterns and get their rewrites from dedicated offline tools (e.g. Souper), in the long run</p>",
        "id": 280525240,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1651165488
    },
    {
        "content": "<p>(the cool thing about having all of this in one language with the backend lowering as well is that there is potential for fusion later; we can play with the runtime/compilation strategy underlying everything when it's all \"just term-rewriting\"; and this will integrate with the verification work going on as well)</p>",
        "id": 280525346,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1651165535
    },
    {
        "content": "<p>Okay, thanks, sounds good! I was asking because I was thinking about canonicalization before isel, and I'm assuming that peepmatic is/was the place to do it?</p>",
        "id": 280988068,
        "sender_full_name": "Sam Parker",
        "timestamp": 1651570832
    },
    {
        "content": "<p>Yes, and the plan is to have something similar soon-ish with ISLE! I'm currently sketching out a bit more about what a CLIF-to-CLIF pass in ISLE would look like, as a means to write legalizations but also other optimizations</p>",
        "id": 281035557,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1651593717
    }
]