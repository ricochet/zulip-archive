[
    {
        "content": "<p>Does cranelift have some low level docs on how the different passes and subsystems work?</p>",
        "id": 427488194,
        "sender_full_name": "Carlo Kok",
        "timestamp": 1710769664
    },
    {
        "content": "<p>on the level of first we do dce whichh identifies callers and removes dead code</p>",
        "id": 427488537,
        "sender_full_name": "Carlo Kok",
        "timestamp": 1710769749
    },
    {
        "content": "<p>in a case of excellent timing, LWN just published an article on Cranelift today that explains this at a high level: <a href=\"https://lwn.net/SubscriberLink/964735/8b795f23495af1d4/\">https://lwn.net/SubscriberLink/964735/8b795f23495af1d4/</a></p>",
        "id": 427497607,
        "sender_full_name": "Till Schneidereit",
        "timestamp": 1710772063
    },
    {
        "content": "<p>(not low-level as you asked, but it answers at least the fundamental question of how passes work)</p>",
        "id": 427497728,
        "sender_full_name": "Till Schneidereit",
        "timestamp": 1710772088
    },
    {
        "content": "<p>for actually low-level details, <span class=\"user-mention\" data-user-id=\"254389\">@Chris Fallin</span> wrote a blog post going into quite some detail on how the compiler uses ISLE to implement optimization passes: <a href=\"https://cfallin.org/blog/2023/01/20/cranelift-isle/\">https://cfallin.org/blog/2023/01/20/cranelift-isle/</a></p>",
        "id": 427497970,
        "sender_full_name": "Till Schneidereit",
        "timestamp": 1710772165
    },
    {
        "content": "<p>Perfect..thanks</p>",
        "id": 427500205,
        "sender_full_name": "Carlo Kok",
        "timestamp": 1710772748
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"295546\">@Carlo Kok</span> earlier blog posts in that series also go over various bits, and the module-level doc-comments try to be useful too; docs are always a place we could improve though so please do let us know what's confusing or unclear and we can try to fill in the gaps!</p>",
        "id": 427515740,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1710776651
    },
    {
        "content": "<p>Also thanks Till for that link; neat, good PR; but never read the comments, see \"Writing a compiler is not a hard problem\" :-)</p>",
        "id": 427515888,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1710776695
    },
    {
        "content": "<p>Been tracking this project for years. Love the work you all did. Above wasn't a complaint about the docs more that im really curious about the current architecture after the isle changes. Those blog posts are perfect.</p>",
        "id": 427517821,
        "sender_full_name": "Carlo Kok",
        "timestamp": 1710777208
    },
    {
        "content": "<p>For sure! outside perspectives are also really useful as a signal on doc usefulness so we're definitely open to your thoughts/confusions if any</p>",
        "id": 427518211,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1710777313
    },
    {
        "content": "<p>I've done a basic ir to native code bit in the past. My approach was a lot simpler (but that's fine it was only to see if I could do it. Not for real use.) I love blog posts like this</p>",
        "id": 427518636,
        "sender_full_name": "Carlo Kok",
        "timestamp": 1710777413
    }
]