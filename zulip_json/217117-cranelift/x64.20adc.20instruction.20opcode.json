[
    {
        "content": "<p>I've been browsing the cranelift code and I noticed the following suspicious line:</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/300fe46d29b00c8ec49a38be4ced541e8b6d1c61/cranelift/codegen/src/isa/x64/inst/emit.rs#L168-L169\">https://github.com/bytecodealliance/wasmtime/blob/300fe46d29b00c8ec49a38be4ced541e8b6d1c61/cranelift/codegen/src/isa/x64/inst/emit.rs#L168-L169</a></p>\n<p>If I'm reading this right, the opcode for <code>adc r, r/m</code> is wrong – the one for <code>add r, r/m</code> is actually getting used. I tried writing a testcase that triggers this, and <code>iadd_carry</code> causes an ICE because we don't have a lowering rule for it at all. What's going on?</p>",
        "id": 423207476,
        "sender_full_name": "Maja Kądziołka",
        "timestamp": 1708812417
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"596118\">@Maja Kądziołka</span> I'm not sure where you're getting \"wrong opcode\" from -- the <code>opcode_r</code> here is 0x01 for ADD and 0x11 for ADC, which is <a href=\"https://www.felixcloutier.com/x86/adc\">correct</a> (see the \"Add with CF r64 to r/m64\" case)</p>",
        "id": 423235392,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1708840377
    },
    {
        "content": "<p><code>iadd_carry</code> is not supported and should probably either be removed or filled out; it's an artifact of an older legalization-based approach to \"wide\" (128-bit) ops. Currently operations on i128s will natively use adc/add pairs during lowering, so all of this is transparent at the CLIF level</p>",
        "id": 423235416,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1708840434
    },
    {
        "content": "<p><code>opcode_m</code> isn't correct, though!</p>",
        "id": 423253938,
        "sender_full_name": "Maja Kądziołka",
        "timestamp": 1708858684
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"596118\">@Maja Kądziołka</span> ah, yes, that's right; we haven't hit this because we don't use the add-to-memory form of <code>adc</code> (or <code>sbb</code>) at all. If you'd like, I'm happy to review a PR fixing that and adding emit-tests to cover.</p>\n<p>And to your second question and if you're feeling ambitious, removing <code>iadd_carry</code>and <code>isub_borrow</code> from Cranelift too; it looks like they only appear in the CLIF interpreter and in some interpreter-only runtests</p>",
        "id": 423278617,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1708882142
    }
]