[
    {
        "content": "<p>After the repo merge, some folks have been swamped in github emails for wasmtime things, when they only want to keep an eye on cranelift things. Well, now you can do that!</p>\n<ol>\n<li>\n<p>We now automatically label pull requests that touch <code>cranelift/*</code> files with the \"cranelift\" label. See <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/.github/labeler.yml\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/blob/master/.github/labeler.yml\">https://github.com/bytecodealliance/wasmtime/blob/master/.github/labeler.yml</a> for more paths that get automatically labeled, and feel free to add new ones!</p>\n</li>\n<li>\n<p>You can opt into getting @'d by a bot whenever a pull request or issue is labeled with a label that you care about. Add your username and list of labels you want to subscribe to here: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/.github/subscribe-to-label.json\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/blob/master/.github/subscribe-to-label.json\">https://github.com/bytecodealliance/wasmtime/blob/master/.github/subscribe-to-label.json</a></p>\n</li>\n</ol>\n<p>The one gap is that this doesn't cover triaging new issues that didn't use an issue template (which automatically apply labels).  I think you'll have to lean on those of us who are watching the full repo to triage and label new issues correctly.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/master/.github/labeler.yml\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\" target=\"_blank\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/.github/labeler.yml\" target=\"_blank\" title=\"bytecodealliance/wasmtime\">bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Standalone JIT-style runtime for WebAssembly, using Cranelift - bytecodealliance/wasmtime</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/master/.github/subscribe-to-label.json\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\" target=\"_blank\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/.github/subscribe-to-label.json\" target=\"_blank\" title=\"bytecodealliance/wasmtime\">bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Standalone JIT-style runtime for WebAssembly, using Cranelift - bytecodealliance/wasmtime</div></div></div>",
        "id": 190235368,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1583881282
    },
    {
        "content": "<p>quick update:</p>\n<p>it looks like the subscribe-to-label action is working: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1220#issuecomment-597763152\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1220#issuecomment-597763152\">https://github.com/bytecodealliance/wasmtime/issues/1220#issuecomment-597763152</a></p>\n<p>however, it looks like the automatic labeler action is not working. for example, I would have expected this pull request to automatically have been labeled \"fuzzing\" but it wasn't: <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1277\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1277\">https://github.com/bytecodealliance/wasmtime/pull/1277</a></p>\n<p>I'll look into this some more and see if I can figure out what's going on. stay tuned for updates.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/issues/1220#issuecomment-597763152\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\" target=\"_blank\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/issues/1220#issuecomment-597763152\" target=\"_blank\" title=\"Missing a way to get access to wasm_instance_t from wasi_instance_t for C-API · Issue #1220 · bytecodealliance/wasmtime\">Missing a way to get access to wasm_instance_t from wasi_instance_t for C-API · Issue #1220 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">For the new wasi.h we can create own wasi_instance_t* wasi_instance_new. But there is no away to access the wasm API using the wasi_instance_t handle. E.g. for getting the export table with wasm_in...</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/1277\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\" target=\"_blank\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/1277\" target=\"_blank\" title=\"Enable bulk memory in the fuzzers by fitzgen · Pull Request #1277 · bytecodealliance/wasmtime\">Enable bulk memory in the fuzzers by fitzgen · Pull Request #1277 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">I plan on adding all the spec tests to the corpora as well, but I want to wait until after we merge this so that they look like new interesting inputs that cover new code paths.</div></div></div>",
        "id": 190308811,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1583947646
    },
    {
        "content": "<p>thank you for your work on this!</p>",
        "id": 190310708,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1583948668
    },
    {
        "content": "<p>I overlooked this in the README of the labeler action:</p>\n<blockquote>\n<p>Note that only pull requests being opened from the same repository can be labeled. This action will not currently work for pull requests from forks -- like is common in open source projects -- because the token for forked pull request workflows does not have write permissions.</p>\n</blockquote>\n<p>D'oh.</p>\n<p>There is an open PR that makes the labeler run on a cron schedule, rather than on pull requests, and it should have the base repo's permissions when run then. I'll look into forking the labeler action and rebasing that PR onto our fork.</p>",
        "id": 190313772,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1583950270
    },
    {
        "content": "<p>Looks like we need to also run the subscribe-to-label action on a cron schedule for pull requests (as opposed to when a label is added to an issue): <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1290/checks?check_run_id=501503929#step:2:25\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1290/checks?check_run_id=501503929#step:2:25\">https://github.com/bytecodealliance/wasmtime/pull/1290/checks?check_run_id=501503929#step:2:25</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/1290/checks?check_run_id=501503929#step:2:25\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/64996?s=400&amp;v=4)\" target=\"_blank\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/1290/checks?check_run_id=501503929#step:2:25\" target=\"_blank\" title=\"Add a first-class way of accessing caller's exports by alexcrichton · Pull Request #1290 · bytecodealliance/wasmtime\">Add a first-class way of accessing caller's exports by alexcrichton · Pull Request #1290 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">This commit is a continuation of #1237 and updates the API of Func to\nallow defining host functions which have easy access to a caller&#39;s\nmemory in particular. The new APIs look like so:\n\nThe Fu...</div></div></div>",
        "id": 190324484,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1583956660
    },
    {
        "content": "<p>Okay the labeler is working now: <a href=\"https://github.com/bytecodealliance/wasmtime/pull/920#event-3120495952\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/920#event-3120495952\">https://github.com/bytecodealliance/wasmtime/pull/920#event-3120495952</a></p>\n<p>Still working on a cron schedule mode for the subscribe-to-label action</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/920#event-3120495952\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\" target=\"_blank\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/920#event-3120495952\" target=\"_blank\" title=\"Fix assert invalid and assert malformed in spec tests by fitzgen · Pull Request #920 · bytecodealliance/wasmtime\">Fix assert invalid and assert malformed in spec tests by fitzgen · Pull Request #920 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Depends on / will need a rebase once it lands: #919</div></div></div>",
        "id": 190331259,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1583960630
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253990\">@fitzgen (he/him)</span> looks like it works! - <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1294#event-3120631746\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1294#event-3120631746\">https://github.com/bytecodealliance/wasmtime/pull/1294#event-3120631746</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/1294#event-3120631746\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\" target=\"_blank\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/1294#event-3120631746\" target=\"_blank\" title=\"wiggle: make paths relative to use site of macro by pchickey · Pull Request #1294 · bytecodealliance/wasmtime\">wiggle: make paths relative to use site of macro by pchickey · Pull Request #1294 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">prior to this change, they were relative to CARGO_MANIFEST_DIR for the\nwiggle-generate crate.</div></div></div>",
        "id": 190336317,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1583963765
    },
    {
        "content": "<p>yeah, the automatic labeler works, the @-notifier for label subscriptions is still a WIP</p>",
        "id": 190336370,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1583963823
    },
    {
        "content": "<p>(the @-notifier is a WIP for PRs; it works for issues already)</p>",
        "id": 190336420,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1583963864
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253990\">@fitzgen (he/him)</span> you may be interested in this failure -- <a href=\"https://github.com/bytecodealliance/wasmtime/runs/503783076?check_suite_focus=true\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/runs/503783076?check_suite_focus=true\">https://github.com/bytecodealliance/wasmtime/runs/503783076?check_suite_focus=true</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/runs/503783076?check_suite_focus=true\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\" target=\"_blank\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/runs/503783076?check_suite_focus=true\" target=\"_blank\" title=\"bytecodealliance/wasmtime\">bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Standalone JIT-style runtime for WebAssembly, using Cranelift - bytecodealliance/wasmtime</div></div></div>",
        "id": 190416146,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1584032803
    },
    {
        "content": "<p>yeah, I'm debugging now</p>\n<p>github actions are very fun where you push and see what happens and then wait 5 minutes for the next run to find the next bug...</p>",
        "id": 190416267,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1584032868
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253990\">@fitzgen (he/him)</span> er I assume you see the torrent of notifications?</p>",
        "id": 190417514,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1584033522
    },
    {
        "content": "<p><a href=\"https://github.com/bytecodealliance/wasmtime/pull/1013#issuecomment-598306884\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1013#issuecomment-598306884\">https://github.com/bytecodealliance/wasmtime/pull/1013#issuecomment-598306884</a> e.g.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/1013#issuecomment-598306884\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\" target=\"_blank\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/1013#issuecomment-598306884\" target=\"_blank\" title=\"Modernize implementation of interface types by alexcrichton · Pull Request #1013 · bytecodealliance/wasmtime\">Modernize implementation of interface types by alexcrichton · Pull Request #1013 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">This commit is the start of the modernization of the implementation of\ninterface types in wasmtime. This has a long way to go, and like the\nprevious iteration, chunks of it are already destined to ...</div></div></div>",
        "id": 190417525,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1584033531
    },
    {
        "content": "<p>oh god... I didn't see the comments</p>\n<p>I'll disable temporarily</p>",
        "id": 190417577,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1584033571
    },
    {
        "content": "<p><a href=\"https://github.com/bytecodealliance/wasmtime/pull/1300\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1300\">https://github.com/bytecodealliance/wasmtime/pull/1300</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/1300\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\" target=\"_blank\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/1300\" target=\"_blank\" title=\"Temporarily disable subscribe to label by fitzgen · Pull Request #1300 · bytecodealliance/wasmtime\">Temporarily disable subscribe to label by fitzgen · Pull Request #1300 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">GitHub is home to over 40 million developers working together to host and review code, manage projects, and build software together.</div></div></div>",
        "id": 190417909,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1584033739
    },
    {
        "content": "<p>ok I think I fixed the bot: <a href=\"https://github.com/fitzgen/wasmtime/pull/2#issuecomment-598342193\" target=\"_blank\" title=\"https://github.com/fitzgen/wasmtime/pull/2#issuecomment-598342193\">https://github.com/fitzgen/wasmtime/pull/2#issuecomment-598342193</a></p>\n<p>going to wait to re-enable on bytecodealliance/wasmtime until I verify that it isn't making duplicate comments next time it is scheduled</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/fitzgen/wasmtime/pull/2#issuecomment-598342193\" style=\"background-image: url(https://avatars2.githubusercontent.com/u/74571?s=400&amp;v=4)\" target=\"_blank\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/fitzgen/wasmtime/pull/2#issuecomment-598342193\" target=\"_blank\" title=\"touchin files by alexcrichton · Pull Request #2 · fitzgen/wasmtime\">touchin files by alexcrichton · Pull Request #2 · fitzgen/wasmtime</a></div><div class=\"message_embed_description\">GitHub is home to over 40 million developers working together to host and review code, manage projects, and build software together.</div></div></div>",
        "id": 190425116,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1584036748
    },
    {
        "content": "<p>just curious, where did the quoting every letter bug come from? ive made that bug in a bunch of different programming languages but never before in javascript :)</p>",
        "id": 190425491,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1584036954
    },
    {
        "content": "<p>I did <code>new Set(...arrayOfLabels)</code> when I should have done <code>new Set(arrayOfLabels)</code> :-/</p>",
        "id": 190425565,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1584036982
    },
    {
        "content": "<p>right on. its a super easy bug to make</p>",
        "id": 190425670,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1584037055
    },
    {
        "content": "<p>typescript would have caught this, maybe I should be using that</p>",
        "id": 190425684,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1584037066
    },
    {
        "content": "<p>ok, I've fixed the bot! it now parses labels correctly and understands when it has already left a comment notifying folks about a certain label subscription.</p>\n<p>going to re-enable it now</p>",
        "id": 190437001,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1584042957
    }
]