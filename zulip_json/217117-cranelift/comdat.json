[
    {
        "content": "<p>so I'm probably missing something obvious. But in cranelift in codegen\\src\\ir\\entities.rs I added <code>pub enum ComdatMode { .. }</code> from module\\src\\data_context.rs which has <code>use cranelift_codegen::ir;</code></p>\n<p>I get:  cannot find type <code>ComdatMode</code> in module <code>ir</code></p>\n<p>not found in <code>ir</code></p>",
        "id": 205992976,
        "sender_full_name": "Carlo Kok",
        "timestamp": 1596610071
    },
    {
        "content": "<p>anyone got a hint on where I should look ?</p>",
        "id": 205993040,
        "sender_full_name": "Carlo Kok",
        "timestamp": 1596610116
    },
    {
        "content": "<p>The path would be <code>cranelift_codegen::ir::entities::ComdatMode</code>. I think you should add it to <code>cranelift_module</code> though, as comdat doesn't influence codegen as far as I know. Only writing object files.</p>",
        "id": 205995574,
        "sender_full_name": "bjorn3",
        "timestamp": 1596612849
    },
    {
        "content": "<p>thanks. trying</p>",
        "id": 205995641,
        "sender_full_name": "Carlo Kok",
        "timestamp": 1596612931
    },
    {
        "content": "<p>is there a function or global variable symbol type I can use for the comdat api?</p>",
        "id": 205996176,
        "sender_full_name": "Carlo Kok",
        "timestamp": 1596613530
    },
    {
        "content": "<p>AnyEntity comes close, but really has too many options</p>",
        "id": 205996242,
        "sender_full_name": "Carlo Kok",
        "timestamp": 1596613609
    },
    {
        "content": "<p>I was thinking of something like: <br>\nadd_comdat(&amp;Self, main: FuncOrVarRef, mode: ComdatMode, symbols: &amp;[FuncOrVarRef])</p>",
        "id": 205996387,
        "sender_full_name": "Carlo Kok",
        "timestamp": 1596613755
    },
    {
        "content": "<p>(On backend)</p>",
        "id": 205996389,
        "sender_full_name": "Carlo Kok",
        "timestamp": 1596613761
    }
]