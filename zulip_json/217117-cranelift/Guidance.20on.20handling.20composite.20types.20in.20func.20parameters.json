[
    {
        "content": "<p>If I'm remembering correctly, Cranelift doesn't have any builtin way to work with composites, so my question is, would that mean that the simplest way to deal with composites in function parameters is to pass by pointer?</p>",
        "id": 429743597,
        "sender_full_name": "Ivan Chinenov",
        "timestamp": 1711488845
    },
    {
        "content": "<p>Yes, exactly. You'll want to define an ABI or convention of some sort in your compiler, but the gist of it is: put the storage somewhere (perhaps on a shadow stack?) and pass a pointer to it.</p>",
        "id": 429745123,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1711489608
    },
    {
        "content": "<p>What exactly do you mean by \"shadow stack\"?</p>",
        "id": 429746845,
        "sender_full_name": "Ivan Chinenov",
        "timestamp": 1711490417
    },
    {
        "content": "<p>A mechanism to allocate storage via a bump-decrement pointer, sometimes used for stack-local storage; you can also use Cranelift stackslots for this, either way</p>",
        "id": 429747056,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1711490514
    }
]