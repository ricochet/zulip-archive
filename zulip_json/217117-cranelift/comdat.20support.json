[
    {
        "content": "<p>Is there any support for comdat in Cranelift?</p>",
        "id": 199977018,
        "sender_full_name": "Carlo Kok",
        "timestamp": 1591452997
    },
    {
        "content": "<p>No. If you want to add support, you will need to implement it in <a href=\"https://github.com/gimli-rs/object\">object</a> first.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/gimli-rs/object\" style=\"background-image: url(https://avatars3.githubusercontent.com/u/21131604?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/gimli-rs/object\" title=\"gimli-rs/object\">gimli-rs/object</a></div><div class=\"message_embed_description\">A unified interface for reading and writing object file formats - gimli-rs/object</div></div></div>",
        "id": 199977669,
        "sender_full_name": "bjorn3",
        "timestamp": 1591453923
    },
    {
        "content": "<p>so <a href=\"https://github.com/gimli-rs/object/pull/243\">https://github.com/gimli-rs/object/pull/243</a> supports COMDAT now.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/gimli-rs/object/pull/243\" style=\"background-image: url(https://avatars3.githubusercontent.com/u/21131604?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/gimli-rs/object/pull/243\" title=\"Implement COMDAT support by philipc · Pull Request #243 · gimli-rs/object\">Implement COMDAT support by philipc · Pull Request #243 · gimli-rs/object</a></div><div class=\"message_embed_description\">Fixes #239\nI'll add tests before merging.\n@carlokok Are you able to review this please?</div></div></div>",
        "id": 204455161,
        "sender_full_name": "Carlo Kok",
        "timestamp": 1595268325
    },
    {
        "content": "<p>so to get back to this</p>",
        "id": 204459411,
        "sender_full_name": "Carlo Kok",
        "timestamp": 1595270533
    },
    {
        "content": "<p>should I create an issue for this first, wait for the oke, then a PR?</p>",
        "id": 204459434,
        "sender_full_name": "Carlo Kok",
        "timestamp": 1595270548
    },
    {
        "content": "<p><a href=\"https://github.com/bytecodealliance/wasmtime/issues/2048\">https://github.com/bytecodealliance/wasmtime/issues/2048</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/issues/2048\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/issues/2048\" title=\"Cranelift: COMDAT support · Issue #2048 · bytecodealliance/wasmtime\">Cranelift: COMDAT support · Issue #2048 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">COMDAT can be used for two purposes: Allow multiple symbols with the same name without linking failures(pick largest, pick any, etc) Bind symbols together This is very useful for using Cranelift as...</div></div></div>",
        "id": 204461541,
        "sender_full_name": "Carlo Kok",
        "timestamp": 1595271533
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"295546\">@Carlo Kok</span> I think that mainly depends on if it's an easy fix or not, and whether you anticipate any disagreement on the approach</p>",
        "id": 204530195,
        "sender_full_name": "Till Schneidereit",
        "timestamp": 1595325876
    },
    {
        "content": "<p>ah, I misread, and now see that you did open the issue. I don't know how much work the implementation is here, but if it's not too much, I'd suggest starting on that now, given that what you describe as the approach does seem reasonable (to me, lacking domain expertise!)</p>",
        "id": 204531762,
        "sender_full_name": "Till Schneidereit",
        "timestamp": 1595327227
    },
    {
        "content": "<p>anyone able to help me with the design for comdat within cranelift? Comdat itself is essentially 1 symbol, with a mode (comdat mode), tied to other symbols. Where a symbol can be either a global var or a global function.</p>",
        "id": 207708240,
        "sender_full_name": "Carlo Kok",
        "timestamp": 1598073042
    },
    {
        "content": "<p>I'm having a bit of trouble with the right design for this</p>",
        "id": 207708243,
        "sender_full_name": "Carlo Kok",
        "timestamp": 1598073052
    },
    {
        "content": "<p>Anyone feel like commenting on this <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2048#issuecomment-669041583\">https://github.com/bytecodealliance/wasmtime/issues/2048#issuecomment-669041583</a> ? I'm having a bit of trouble with the design for this feature.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/issues/2048#issuecomment-669041583\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/issues/2048#issuecomment-669041583\" title=\"Cranelift: COMDAT support · Issue #2048 · bytecodealliance/wasmtime\">Cranelift: COMDAT support · Issue #2048 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">COMDAT can be used for two purposes: Allow multiple symbols with the same name without linking failures(pick largest, pick any, etc) Bind symbols together This is very useful for using Cranelift as...</div></div></div>",
        "id": 209500280,
        "sender_full_name": "Carlo Kok",
        "timestamp": 1599652146
    }
]