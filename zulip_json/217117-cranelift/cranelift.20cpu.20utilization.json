[
    {
        "content": "<p>I have been benchmarking rustc with llvm and cg_clif today. One fun thing I noticed is that the cpu-clock metric when comparing cg_llvm and cg_clif improves more than the instruction count. This seems to suggest that Cranelift has a slightly higher ipc than LLVM.</p>",
        "id": 278217261,
        "sender_full_name": "bjorn3",
        "timestamp": 1649361012
    },
    {
        "content": "<p>Interesting, thanks for measuring that! I suspect this may be due to better cache locality (LLVM has heavily pointer-based IR data structures, Cranelift is largely index-based with dense arrays)</p>",
        "id": 278219841,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1649362268
    },
    {
        "content": "<p>It might also be due to bound checks. I noticed the same behavior when benchmarking a Rust app and it's C++ equivalent: the Rust one had a bound check on the critical path, increasing the instructions count but not the cpu time thanks to branch prediction.</p>",
        "id": 278324383,
        "sender_full_name": "Charly Castes",
        "timestamp": 1649433424
    }
]