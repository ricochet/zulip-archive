[
    {
        "content": "<p>Hello! I'd like to try using Cranelift for a compiler for a toy language I've been working on. The compiler is written in Java, and I was wondering whether there were any recommended ways of using Cranelift in non-Rust projects?</p>\n<p>Rather than trying to write bindings to the Cranelift API, I thought the better approach might be to generate <code>.clif</code> IR files, and then to compile those to object files. In other words, the equivalent of <code>llc -filetype obj</code> for LLVM. I had a quick search around, but couldn't find such a CLI: does it exist already and I just missed it, or is that something I'd need to write myself?</p>",
        "id": 430391772,
        "sender_full_name": "Michael Williamson",
        "timestamp": 1711806623
    },
    {
        "content": "<p>I cobbled something together quickly that seems to do the right thing (although I haven't tested it properly yet): <a href=\"https://github.com/mwilliamson/cranelift-compiler\">https://github.com/mwilliamson/cranelift-compiler</a></p>\n<p>Happy to have any foolishness in the approach or implementation pointed out!</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/mwilliamson/cranelift-compiler\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/ee5878d3047f4fda133c4e7a32b41f93b0cd160d\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f363130333965373731396661366235333232373435643161396563623562383435346537323933306161346130666134633033336262386333356535666535332f6d77696c6c69616d736f6e2f6372616e656c6966742d636f6d70696c6572)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/mwilliamson/cranelift-compiler\" title=\"GitHub - mwilliamson/cranelift-compiler: Compiles `.clir` IR files into object files\">GitHub - mwilliamson/cranelift-compiler: Compiles `.clir` IR files into object files</a></div><div class=\"message_embed_description\">Compiles `.clir` IR files into object files. Contribute to mwilliamson/cranelift-compiler development by creating an account on GitHub.</div></div></div>",
        "id": 430419661,
        "sender_full_name": "Michael Williamson",
        "timestamp": 1711832314
    },
    {
        "content": "<p>Ah, evidently my prior searching was subpar: it looks like <code>.clir</code> files can only represent functions, not entire modules: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2285\">https://github.com/bytecodealliance/wasmtime/issues/2285</a></p>\n<p>Which arose from a previous discussion of using Cranelift from a non-Rust project: <a href=\"#narrow/stream/217117-cranelift/topic/using.20cranelift.20as.20a.20backend.20for.20a.20non-rust.20compiler/near/212909451\">https://bytecodealliance.zulipchat.com/#narrow/stream/217117-cranelift/topic/using.20cranelift.20as.20a.20backend.20for.20a.20non-rust.20compiler/near/212909451</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/issues/2285\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/1cc851b1ce0bced3744c01195f1df27e083dbf93\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f613565396434633037666534393930636263316539613639343162383434333262333532333065326465306362663638643066393666626336663030303832622f62797465636f6465616c6c69616e63652f7761736d74696d652f6973737565732f32323835)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/issues/2285\" title=\"Define a textual representation of a cranelift module 路 Issue #2285 路 bytecodealliance/wasmtime\">Define a textual representation of a cranelift module 路 Issue #2285 路 bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Feature Define a textual representation of a cranelift module that is like the current clir ir text form, but with added support for defining data objects, importing extern functions and data objec...</div></div></div>",
        "id": 430420096,
        "sender_full_name": "Michael Williamson",
        "timestamp": 1711832791
    }
]