[
    {
        "content": "<p>I'm currently hitting a bug in regalloc2, but don't have an easy way to share the regalloc input. What are your thoughts about having a <code>regalloc2-tool</code> which reads a textual representation of a <code>Function</code> and <code>MachineEnv</code> and run the register allocator and checker on it. A utility function would also be provided to serialize a <code>Function</code> and <code>MachineEnv</code> into this textual representation.</p>\n<p>This would be useful both for debugging and for working on better optimizations in the register allocator.</p>",
        "id": 374270249,
        "sender_full_name": "Amanieu",
        "timestamp": 1689082662
    },
    {
        "content": "<p>Yes, that would be very useful indeed! Possibly if what we need is a way to snapshot bug-cases, we could get away with something simpler as well, e.g. a <code>bincode</code> format (<a href=\"http://regalloc.rs\">regalloc.rs</a> had this)</p>",
        "id": 374313112,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1689090295
    },
    {
        "content": "<p>although a text format has nice long-term value: it would allow us to reify a fuzz corpus into a regression suite in-tree; currently the fuzzer is really good for testing but each person has to independently build up a corpus</p>",
        "id": 374313442,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1689090359
    },
    {
        "content": "<p>(that's a problem that can also be solved by keeping a corpus repo I guess, but having the ability to read and write human-readable test cases and minimize by hand would be nice)</p>",
        "id": 374313700,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1689090399
    },
    {
        "content": "<p>I've found that, in practice, corpus repos become out of date almost immediately unless there is automation to keep them up to date</p>",
        "id": 374323377,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1689092240
    },
    {
        "content": "<p>also, they aren't incredibly useful for <code>arbitrary</code>-based fuzz targets, because if the <code>Arbitrary</code> types change, then the fuzz inputs tend not to test what they did before anymore</p>",
        "id": 374323613,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1689092294
    },
    {
        "content": "<p>Here's the output of regalloc2-tool for the function that I'm currently debugging: <a href=\"https://gist.github.com/Amanieu/b1a338a5b2da38355f60b0f5fe5eb79c\">https://gist.github.com/Amanieu/b1a338a5b2da38355f60b0f5fe5eb79c</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://gist.github.com/Amanieu/b1a338a5b2da38355f60b0f5fe5eb79c\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/2aafd906f69f8f71c7544060163ba3e419b173e8\\/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f67697374732f676973742d6f672d696d6167652e706e67)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://gist.github.com/Amanieu/b1a338a5b2da38355f60b0f5fe5eb79c\" title=\"gist:b1a338a5b2da38355f60b0f5fe5eb79c\">gist:b1a338a5b2da38355f60b0f5fe5eb79c</a></div><div class=\"message_embed_description\">GitHub Gist: instantly share code, notes, and snippets.</div></div></div>",
        "id": 374608700,
        "sender_full_name": "Amanieu",
        "timestamp": 1689166347
    },
    {
        "content": "<p>I ended up just using bincode for serialization instead of a text format for simplicity.</p>",
        "id": 374608807,
        "sender_full_name": "Amanieu",
        "timestamp": 1689166373
    }
]