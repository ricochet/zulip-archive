[
    {
        "content": "<p>I've written a blog post on Cranelift last week, it might be of interest if you want to learn more about the concepts of the code generation backend we've been working on for the last year (in particular, register allocation). It's still pretty high-level, but might be useful if you're hacking (or planning to!) on Cranelift: <a href=\"https://blog.benj.me/2021/02/17/cranelift-codegen-primer/\">https://blog.benj.me/2021/02/17/cranelift-codegen-primer/</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://blog.benj.me/2021/02/17/cranelift-codegen-primer/\" style=\"background-image: url(https://blog.benj.me/img/logo.jpeg)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://blog.benj.me/2021/02/17/cranelift-codegen-primer/\" title=\"A primer on code generation in Cranelift\">A primer on code generation in Cranelift</a></div><div class=\"message_embed_description\">Cranelift is a code generator written in the Rust programming language that aims to be a fast code generator, which outputs machine code that runs at reasonable speeds. The Cranelift compilation model consists in compiling functions one by one, holding extra information about external entities, like external functions, memory addresses â€¦</div></div></div>",
        "id": 227298213,
        "sender_full_name": "Benjamin Bouvier",
        "timestamp": 1614012611
    }
]