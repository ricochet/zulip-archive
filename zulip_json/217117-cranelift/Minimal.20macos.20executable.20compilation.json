[
    {
        "content": "<p>Hello all!</p>\n<p>I've been trying out cranelift for codegen and really like it. I'm able to produce CLIF and verify it with <code>clif-util</code>. I'm now trying to figure out how to take the results and produce an executable on aarch64 MacOS. I was wondering if anybody here had any wisdom or perhaps a minimal example of what's required to just generate a main function that returns 0 or 1, or similar.</p>\n<p>I've used cranelift_object to create an object file, and verified with hexdump that it is not empty (although I'm not sure how to verify the content), but when I try to link it  with <code>clang -o output output.o</code>, I get:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">ld</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">warning</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">no</span><span class=\"w\"> </span><span class=\"n\">platform</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"w\"> </span><span class=\"n\">command</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">codegen</span><span class=\"o\">/</span><span class=\"n\">output</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">assuming</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">macOS</span>\n<span class=\"n\">Undefined</span><span class=\"w\"> </span><span class=\"n\">symbols</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">architecture</span><span class=\"w\"> </span><span class=\"n\">arm64</span><span class=\"p\">:</span>\n<span class=\"w\">  </span><span class=\"s\">\"_main\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">referenced</span><span class=\"w\"> </span><span class=\"n\">from</span><span class=\"p\">:</span>\n<span class=\"w\">      </span><span class=\"o\">&lt;</span><span class=\"n\">initial</span><span class=\"o\">-</span><span class=\"n\">undefines</span><span class=\"o\">&gt;</span>\n<span class=\"n\">ld</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">symbol</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">architecture</span><span class=\"w\"> </span><span class=\"n\">arm64</span>\n</code></pre></div>\n<p>I interpreted this as \"no main function exists\".</p>\n<p>This is my current minimal code for generating an object file: <a href=\"https://gist.github.com/sezna/9bbd1001a3170adcb99e6d524830706b\">https://gist.github.com/sezna/9bbd1001a3170adcb99e6d524830706b</a></p>\n<p>Thanks for your time and help. I look forward to getting deeper with cranelift.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://gist.github.com/sezna/9bbd1001a3170adcb99e6d524830706b\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/91f9baed8f4fc08c462d1a4de5a8c23942d45e97/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f6173736574732f676973742d6f672d696d6167652d3534666437646330373133652e706e67&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://gist.github.com/sezna/9bbd1001a3170adcb99e6d524830706b\" title=\"cranelift codegen attempt\">cranelift codegen attempt</a></div><div class=\"message_embed_description\">cranelift codegen attempt. GitHub Gist: instantly share code, notes, and snippets.</div></div></div>",
        "id": 441705645,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717161764
    },
    {
        "content": "<p>You need to define the <code>main</code> function, not <code>_main</code> on the Cranelift side. Mach-O adds an <code>_</code> prefix to all exported symbols, but you still need to use the unprefixed name on the Cranelift side.</p>",
        "id": 441706689,
        "sender_full_name": "bjorn3",
        "timestamp": 1717162007
    },
    {
        "content": "<p>Oh my goodness that did it. Hours were spent on this last night, haha. Thank you so much!</p>",
        "id": 441708163,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717162365
    },
    {
        "content": "<p>Ok, i have another question, but I fear it might be dumb/misinformed. I'm probably missing some basic knowledge here.</p>\n<p>Using cranelift IR, how do I produce a binary which has access to stdout? I'm not too worried about different arches and OSs yet, I'm just on aarch64 macos. I'm looking to compile a println-type function into cranelift IR. </p>\n<p>I tried to search the docs, but to be honest, I'm not sure what I'm looking for -- I've never interacted with stdout at this low of a level before, without a VM, so I'm not even sure what type of interface to look for.</p>\n<p>If anybody here has any idea how this works, or has any pointers to resources about this kind of thing, I'd greatly appreciate it. Thanks.</p>",
        "id": 441785772,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717183242
    },
    {
        "content": "<p>This is an operating-system-specific question, but each OS will define a canonical way to access its set of system calls; stdout is ultimately an open file descriptor that one writes to using system calls</p>",
        "id": 441786774,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1717183532
    },
    {
        "content": "<p>On macOS, the usual way is to link to (iirc) libSystem; libc in turn uses that so one can link to libc and call the C-level functions as well if one wants</p>",
        "id": 441786845,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1717183557
    },
    {
        "content": "<p>On Linux, for example, it's a bit different: the kernel guarantees that the syscall ABI is stable, so one can write <code>syscall</code> instructions (on x86-64,or <code>svc</code> on aarch64, or ...) directly with the appropriate values</p>",
        "id": 441786999,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1717183597
    },
    {
        "content": "<p>Cranelift doesn't give an interface for the latter, it expects you to emit calls to outside functionality</p>",
        "id": 441787026,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1717183611
    },
    {
        "content": "<p>so a safe cross-platform bet would be to expect to link to libc directly, or else write a \"runtime library\" for your language that you call and that in turn does whatever needed</p>",
        "id": 441787132,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1717183639
    },
    {
        "content": "<p>(the reason none of this is described in Cranelift documentation is because the operating system is an orthogonal concept to the compiler; Cranelift only knows about \"calls to some other function\")</p>",
        "id": 441787222,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1717183673
    },
    {
        "content": "<p>It makes sense that it is orthogonal. I wasn't sure if there'd be an abstraction layer here or not. So if I link libc when I invoke clang, and I lower println calls to cranelift external function calls...that...<em>should work</em>? Do you know if there's an example of that kind of linking to libc anywhere floating around? Not sure what the calling convention is.</p>",
        "id": 441789756,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717184583
    },
    {
        "content": "<p>Once again...might be out of my depth here...but hey this is how we learn. Thanks for your time and response by the way.</p>",
        "id": 441789804,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717184599
    },
    {
        "content": "<p>For sure happy to help; I don't know of any examples off the top of my head (maybe others do?). But yeah, calling arbitrary functions in libc should just work, provided the linking details are done right (func defined as external, gets emitted as relocation, etc). <code>printf</code> will be tricky because we don't support the variadic calling convention but you could call <code>puts</code>, or write your own runtime function in C and call that</p>",
        "id": 441790095,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1717184690
    },
    {
        "content": "<p>My language is not rust-like, and it doesn't support variadic macros, i'm just hoping be able to print out ASCII (unicode if I'm ambitious?)  given a pointer and len. Nothing fancier than that (although as I understand it, that's apparently pretty fancy :) )</p>",
        "id": 441796131,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717186447
    },
    {
        "content": "<p>if you want to use a ptr/len, using <code>write</code> or <code>fwrite</code> may be better than using <code>puts</code> since that way you don't need to come up with a nul-terminated string</p>",
        "id": 441800402,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1717187702
    },
    {
        "content": "<p>if you're on non-windows normal unix, printing unicode is easy, just write utf-8 just like any other text</p>",
        "id": 441800673,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1717187784
    },
    {
        "content": "<p>(if you're on an ebcdic system, i feel sorry for you)</p>",
        "id": 441800780,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1717187824
    },
    {
        "content": "<p>with windows you may have to use special functions and/or put special things in your .exe's manifest because it's weird like that</p>",
        "id": 441801083,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1717187911
    },
    {
        "content": "<p>if you use <code>write</code> don't forget to retry it if you get <code>EINTR</code></p>",
        "id": 441801553,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1717188041
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"315881\">@Jacob Lifshay</span> ! For now I'm still figuring out how to call libc functions. I've been bouncing around the API in the rust docs. </p>\n<p>I thought I'd use <a href=\"https://docs.rs/cranelift-codegen/latest/cranelift_codegen/ir/function/struct.Function.html#method.import_function\">import_function</a>, and that requires an ExternalName. Of the options <a href=\"https://docs.rs/cranelift-codegen/latest/cranelift_codegen/ir/enum.ExternalName.html\">for ExternalName</a>, it seems LibCall and KnownSymbol are a no-go (they're not present in the docs), I'd rather not use the one for testing only, so that leaves <a href=\"https://docs.rs/cranelift-codegen/latest/cranelift_codegen/ir/entities/struct.UserExternalNameRef.html\"><code>UserExternalNameRef</code></a> to be created  via <a href=\"https://docs.rs/cranelift-codegen/latest/cranelift_codegen/ir/function/struct.Function.html#method.declare_imported_user_function\"><code>declare_imported_user_function</code></a>. Does this sound like I'm barking up the correct tree?</p>\n<p>If so, my next question follows pretty quickly. I'm not sure how to provide a user-defined symbol table corresponding to <code>libc</code>...</p>",
        "id": 441811448,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717191502
    },
    {
        "content": "<p>So this runs into the layering of functionality: <code>cranelift-codegen</code> is the compiler core, and knows about \"references to external functions\", but basically just reflects those right back out the other end in the relocations. It's intentionally not knowledgeable about any particular symbol or object file format; it just says \"these bytes here are your machine code for this function, and patch in the address of what you call <code>function 23</code> here\"</p>",
        "id": 441811788,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1717191610
    },
    {
        "content": "<p>The next layer up includes at least <code>cranelift-object</code> and <code>cranelift-jit</code>, for generation of object files and in-process JIT, respectively; each of them have their own ways of defining references to external symbols (or in-process symbols) and using them</p>",
        "id": 441811895,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1717191649
    },
    {
        "content": "<p>or perhaps <code>cranelift-module</code> for AOT, I always mix them up; I think what you want is <a href=\"https://docs.rs/cranelift-module/0.108.1/cranelift_module/trait.Module.html#tymethod.declare_function\"><code>declare_function</code></a> (with \"external linkage\")</p>",
        "id": 441812110,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1717191724
    },
    {
        "content": "<p>Oh thank you. That makes sense. Is it expected that most cranelift consumers will use the JIT? I thought \"I'm not building a JIT compiler so I don't need that\" -- but most resources reference it.</p>\n<p>I was able to get this to compile, but I'm producing invalid binaries. I am guessing this is because I messed up the data section?</p>\n<p>If anybody has the time, here's exactly what I've come up with: <a href=\"https://gist.github.com/sezna/e358a9167d4ef3063f6cfe4ce4c2ad37\">https://gist.github.com/sezna/e358a9167d4ef3063f6cfe4ce4c2ad37</a></p>\n<p>A lot of the API calls I'm guessing on, because I don't fully understand the docs. Do you happen to see anything obviously wrong?</p>\n<p>FWIW, my error is:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">ld</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">warning</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">alignment</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">atom</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"nb\">_</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">from</span><span class=\"w\"> </span><span class=\"o\">'/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">alexanderhansen</span><span class=\"o\">/</span><span class=\"n\">code</span><span class=\"o\">/</span><span class=\"n\">swim</span><span class=\"o\">/</span><span class=\"n\">swim</span><span class=\"o\">-</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">output</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">too</span><span class=\"w\"> </span><span class=\"n\">small</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">unaligned</span><span class=\"w\"> </span><span class=\"n\">pointers</span>\n<span class=\"n\">ld</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">warning</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">no</span><span class=\"w\"> </span><span class=\"n\">platform</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"w\"> </span><span class=\"n\">command</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"o\">'/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">alexanderhansen</span><span class=\"o\">/</span><span class=\"n\">code</span><span class=\"o\">/</span><span class=\"n\">swim</span><span class=\"o\">/</span><span class=\"n\">swim</span><span class=\"o\">-</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">output</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">assuming</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">macOS</span>\n<span class=\"n\">ld</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">building</span><span class=\"w\"> </span><span class=\"n\">fixups</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">pointer</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">aligned</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">_main</span><span class=\"o\">+</span><span class=\"mh\">0x14</span><span class=\"w\"> </span><span class=\"n\">from</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">alexanderhansen</span><span class=\"o\">/</span><span class=\"n\">code</span><span class=\"o\">/</span><span class=\"n\">swim</span><span class=\"o\">/</span><span class=\"n\">swim</span><span class=\"o\">-</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">output</span><span class=\"p\">.</span><span class=\"n\">o</span>\n<span class=\"n\">clang</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">linker</span><span class=\"w\"> </span><span class=\"n\">command</span><span class=\"w\"> </span><span class=\"n\">failed</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"n\">exit</span><span class=\"w\"> </span><span class=\"n\">code</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">v</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">see</span><span class=\"w\"> </span><span class=\"n\">invocation</span><span class=\"p\">)</span>\n</code></pre></div>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://gist.github.com/sezna/e358a9167d4ef3063f6cfe4ce4c2ad37\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/91f9baed8f4fc08c462d1a4de5a8c23942d45e97/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f6173736574732f676973742d6f672d696d6167652d3534666437646330373133652e706e67&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://gist.github.com/sezna/e358a9167d4ef3063f6cfe4ce4c2ad37\" title=\"Attempt at cranelift &quot;hello world&quot;\">Attempt at cranelift \"hello world\"</a></div><div class=\"message_embed_description\">Attempt at cranelift \"hello world\". GitHub Gist: instantly share code, notes, and snippets.</div></div></div>",
        "id": 441813930,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717192399
    },
    {
        "content": "<p>Alignment is part of the function metadata, I think the module builder has a way of specifying that? it looks like that's the only error (I'm not sure what the 'platform load command' warning implies or how to fix it)</p>",
        "id": 441814531,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1717192650
    },
    {
        "content": "<p>re: using cranelift-jit vs. cranelift-module, both are valid uses, just depends on whether you want to run code right away or produce a .o / binary! the good news is that the majority of the logic you need to write (the CLIF generation) is the same either way so you can build out both eventually...</p>",
        "id": 441814667,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1717192696
    },
    {
        "content": "<p>Things were \"working\" (producing a binary that NOOPs) with the \"no platform command\" thing, so i'm not concerned about that -- the new thing is the clang error and I think it's coming ffrom \"building fixups\"</p>",
        "id": 441815358,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717192981
    },
    {
        "content": "<p>So i think <code>ld: building fixups: pointer not aligned at _main+0x14 from codegen/output.o</code><br>\nis what's getting me now</p>",
        "id": 441815458,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717193030
    },
    {
        "content": "<p><code>-v</code> on <code>clang</code> unfortunately didn't give any new information</p>",
        "id": 441815845,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717193184
    },
    {
        "content": "<p>can you disassemble (objdump -d if you have GNU binutils, otherwise otool -tv on macOS) and see what's at that offset?</p>",
        "id": 441815892,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1717193208
    },
    {
        "content": "<p>Ohhh, a new tool, yay.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">output</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"nc\">file</span><span class=\"w\"> </span><span class=\"n\">format</span><span class=\"w\"> </span><span class=\"n\">mach</span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">arm64</span>\n\n<span class=\"n\">Disassembly</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">section</span><span class=\"w\"> </span><span class=\"n\">__TEXT</span><span class=\"p\">,</span><span class=\"n\">__text</span><span class=\"p\">:</span>\n\n<span class=\"mi\">0000000000000010</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">_main</span><span class=\"o\">&gt;</span><span class=\"p\">:</span>\n<span class=\"w\">      </span><span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">d503237f</span><span class=\"w\">      </span><span class=\"n\">pacibsp</span>\n<span class=\"w\">      </span><span class=\"mi\">14</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">a9bf7bfd</span><span class=\"w\">      </span><span class=\"n\">stp</span><span class=\"w\"> </span><span class=\"n\">x29</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x30</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">sp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"o\">-</span><span class=\"mi\">16</span><span class=\"p\">]</span><span class=\"o\">!</span>\n<span class=\"w\">      </span><span class=\"mi\">18</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">910003</span><span class=\"n\">fd</span><span class=\"w\">      </span><span class=\"n\">mov</span><span class=\"w\"> </span><span class=\"n\">x29</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">sp</span>\n<span class=\"w\">      </span><span class=\"mi\">1</span><span class=\"n\">c</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">58000040</span><span class=\"w\">      </span><span class=\"n\">ldr</span><span class=\"w\"> </span><span class=\"n\">x0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x24</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">_main</span><span class=\"o\">+</span><span class=\"mh\">0x14</span><span class=\"o\">&gt;</span>\n<span class=\"w\">      </span><span class=\"mi\">20</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">14000003</span><span class=\"w\">      </span><span class=\"n\">b</span><span class=\"w\">   </span><span class=\"mh\">0x2c</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">_main</span><span class=\"o\">+</span><span class=\"mh\">0x1c</span><span class=\"o\">&gt;</span>\n<span class=\"w\">        </span><span class=\"o\">..</span><span class=\"p\">.</span>\n<span class=\"w\">      </span><span class=\"mi\">2</span><span class=\"n\">c</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">58000042</span><span class=\"w\">      </span><span class=\"n\">ldr</span><span class=\"w\"> </span><span class=\"n\">x2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x34</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">_main</span><span class=\"o\">+</span><span class=\"mh\">0x24</span><span class=\"o\">&gt;</span>\n<span class=\"w\">      </span><span class=\"mi\">30</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">14000003</span><span class=\"w\">      </span><span class=\"n\">b</span><span class=\"w\">   </span><span class=\"mh\">0x3c</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">_main</span><span class=\"o\">+</span><span class=\"mh\">0x2c</span><span class=\"o\">&gt;</span>\n<span class=\"w\">        </span><span class=\"o\">..</span><span class=\"p\">.</span>\n<span class=\"w\">      </span><span class=\"mi\">3</span><span class=\"n\">c</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">d63f0040</span><span class=\"w\">      </span><span class=\"n\">blr</span><span class=\"w\"> </span><span class=\"n\">x2</span>\n<span class=\"w\">      </span><span class=\"mi\">40</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">a8c17bfd</span><span class=\"w\">      </span><span class=\"n\">ldp</span><span class=\"w\"> </span><span class=\"n\">x29</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x30</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">sp</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">16</span>\n<span class=\"w\">      </span><span class=\"mi\">44</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">d65f0fff</span><span class=\"w\">      </span><span class=\"n\">retab</span>\n</code></pre></div>",
        "id": 441815993,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717193257
    },
    {
        "content": "<p>huh, weird, <code>_main+0x14</code> is <code>0x24</code>, just after the branch at <code>0x20</code>; whatever it is is unconditionally branched around</p>",
        "id": 441816570,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1717193533
    },
    {
        "content": "<p>the disassembler seems to be too smart, skipping dead code; I'm not sure if there's an option to show it?</p>",
        "id": 441816612,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1717193555
    },
    {
        "content": "<p>I don't see anything in the module builder, but is this what you were referring to? <a href=\"https://docs.rs/cranelift-codegen/latest/cranelift_codegen/isa/struct.FunctionAlignment.html\">https://docs.rs/cranelift-codegen/latest/cranelift_codegen/isa/struct.FunctionAlignment.html</a></p>",
        "id": 441816728,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717193605
    },
    {
        "content": "<p>maybe some combination of <code>-D</code> (disassemble all) and <code>--disassemble-zeroes</code>?</p>",
        "id": 441816741,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1717193613
    },
    {
        "content": "<p>ah, yes, exactly, that's what we need to set somehow</p>",
        "id": 441816767,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1717193629
    },
    {
        "content": "<p>reading <code>objdump --help</code>...one sec, i'll figure it out</p>",
        "id": 441816770,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717193630
    },
    {
        "content": "<p>for what it is worth, here's <code>otool</code>'s output:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">output</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">:</span>\n<span class=\"p\">(</span><span class=\"n\">__TEXT</span><span class=\"p\">,</span><span class=\"n\">__text</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">section</span>\n<span class=\"n\">_main</span><span class=\"p\">:</span>\n<span class=\"mi\">0000000000000010</span><span class=\"w\">    </span><span class=\"n\">pacibsp</span>\n<span class=\"mi\">0000000000000014</span><span class=\"w\">    </span><span class=\"n\">stp</span><span class=\"w\"> </span><span class=\"n\">x29</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x30</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">sp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"o\">-</span><span class=\"mh\">0x10</span><span class=\"p\">]</span><span class=\"o\">!</span>\n<span class=\"mi\">0000000000000018</span><span class=\"w\">    </span><span class=\"n\">mov</span><span class=\"w\"> </span><span class=\"n\">x29</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">sp</span>\n<span class=\"mi\">000000000000001</span><span class=\"n\">c</span><span class=\"w\">    </span><span class=\"n\">ldr</span><span class=\"w\"> </span><span class=\"n\">x0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mh\">0x8</span>\n<span class=\"mi\">0000000000000020</span><span class=\"w\">    </span><span class=\"n\">b</span><span class=\"w\">   </span><span class=\"mh\">0x2c</span>\n<span class=\"mi\">0000000000000024</span><span class=\"w\">    </span><span class=\"n\">udf</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mh\">0x0</span>\n<span class=\"mi\">0000000000000028</span><span class=\"w\">    </span><span class=\"n\">udf</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mh\">0x0</span>\n<span class=\"mi\">000000000000002</span><span class=\"n\">c</span><span class=\"w\">    </span><span class=\"n\">ldr</span><span class=\"w\"> </span><span class=\"n\">x2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mh\">0x8</span>\n<span class=\"mi\">0000000000000030</span><span class=\"w\">    </span><span class=\"n\">b</span><span class=\"w\">   </span><span class=\"mh\">0x3c</span>\n<span class=\"mi\">0000000000000034</span><span class=\"w\">    </span><span class=\"n\">udf</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mh\">0x0</span>\n<span class=\"mi\">0000000000000038</span><span class=\"w\">    </span><span class=\"n\">udf</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mh\">0x0</span>\n<span class=\"mi\">000000000000003</span><span class=\"n\">c</span><span class=\"w\">    </span><span class=\"n\">blr</span><span class=\"w\"> </span><span class=\"n\">x2</span>\n<span class=\"mi\">0000000000000040</span><span class=\"w\">    </span><span class=\"n\">ldp</span><span class=\"w\"> </span><span class=\"n\">x29</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x30</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">sp</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mh\">0x10</span>\n<span class=\"mi\">0000000000000044</span><span class=\"w\">    </span><span class=\"n\">retab</span>\n</code></pre></div>\n<p>the <code>--help</code>  on <code>objdump</code> is immense, give me a minute to read through it haha</p>",
        "id": 441816929,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717193699
    },
    {
        "content": "<p><code> objdump -Dd --disassemble-zeroes output.o</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">output</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"nc\">file</span><span class=\"w\"> </span><span class=\"n\">format</span><span class=\"w\"> </span><span class=\"n\">mach</span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">arm64</span>\n\n<span class=\"n\">Disassembly</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">section</span><span class=\"w\"> </span><span class=\"n\">__TEXT</span><span class=\"p\">,</span><span class=\"n\">__const</span><span class=\"p\">:</span>\n\n<span class=\"mi\">0000000000000000</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">_hello_world</span><span class=\"o\">&gt;</span><span class=\"p\">:</span>\n<span class=\"w\">       </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"n\">c6c6548</span><span class=\"w\">      </span><span class=\"n\">ldnp</span><span class=\"w\">    </span><span class=\"n\">d8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">d25</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">x10</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"o\">-</span><span class=\"mi\">320</span><span class=\"p\">]</span>\n<span class=\"w\">       </span><span class=\"mi\">4</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">77202</span><span class=\"n\">c6f</span><span class=\"w\">      </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;</span>\n<span class=\"w\">       </span><span class=\"mi\">8</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">646</span><span class=\"n\">c726f</span><span class=\"w\">      </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;</span>\n<span class=\"w\">       </span><span class=\"n\">c</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">21</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">      </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;</span>\n\n<span class=\"n\">Disassembly</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">section</span><span class=\"w\"> </span><span class=\"n\">__TEXT</span><span class=\"p\">,</span><span class=\"n\">__text</span><span class=\"p\">:</span>\n\n<span class=\"mi\">0000000000000010</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">_main</span><span class=\"o\">&gt;</span><span class=\"p\">:</span>\n<span class=\"w\">      </span><span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">d503237f</span><span class=\"w\">      </span><span class=\"n\">pacibsp</span>\n<span class=\"w\">      </span><span class=\"mi\">14</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">a9bf7bfd</span><span class=\"w\">      </span><span class=\"n\">stp</span><span class=\"w\"> </span><span class=\"n\">x29</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x30</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">sp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"o\">-</span><span class=\"mi\">16</span><span class=\"p\">]</span><span class=\"o\">!</span>\n<span class=\"w\">      </span><span class=\"mi\">18</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">910003</span><span class=\"n\">fd</span><span class=\"w\">      </span><span class=\"n\">mov</span><span class=\"w\"> </span><span class=\"n\">x29</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">sp</span>\n<span class=\"w\">      </span><span class=\"mi\">1</span><span class=\"n\">c</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">58000040</span><span class=\"w\">      </span><span class=\"n\">ldr</span><span class=\"w\"> </span><span class=\"n\">x0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x24</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">_main</span><span class=\"o\">+</span><span class=\"mh\">0x14</span><span class=\"o\">&gt;</span>\n<span class=\"w\">      </span><span class=\"mi\">20</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">14000003</span><span class=\"w\">      </span><span class=\"n\">b</span><span class=\"w\">   </span><span class=\"mh\">0x2c</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">_main</span><span class=\"o\">+</span><span class=\"mh\">0x1c</span><span class=\"o\">&gt;</span>\n<span class=\"w\">      </span><span class=\"mi\">24</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">00000000</span><span class=\"w\">      </span><span class=\"n\">udf</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">0</span>\n<span class=\"w\">      </span><span class=\"mi\">28</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">00000000</span><span class=\"w\">      </span><span class=\"n\">udf</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">0</span>\n<span class=\"w\">      </span><span class=\"mi\">2</span><span class=\"n\">c</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">58000042</span><span class=\"w\">      </span><span class=\"n\">ldr</span><span class=\"w\"> </span><span class=\"n\">x2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x34</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">_main</span><span class=\"o\">+</span><span class=\"mh\">0x24</span><span class=\"o\">&gt;</span>\n<span class=\"w\">      </span><span class=\"mi\">30</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">14000003</span><span class=\"w\">      </span><span class=\"n\">b</span><span class=\"w\">   </span><span class=\"mh\">0x3c</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">_main</span><span class=\"o\">+</span><span class=\"mh\">0x2c</span><span class=\"o\">&gt;</span>\n<span class=\"w\">      </span><span class=\"mi\">34</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">00000000</span><span class=\"w\">      </span><span class=\"n\">udf</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">0</span>\n<span class=\"w\">      </span><span class=\"mi\">38</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">00000000</span><span class=\"w\">      </span><span class=\"n\">udf</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">0</span>\n<span class=\"w\">      </span><span class=\"mi\">3</span><span class=\"n\">c</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">d63f0040</span><span class=\"w\">      </span><span class=\"n\">blr</span><span class=\"w\"> </span><span class=\"n\">x2</span>\n<span class=\"w\">      </span><span class=\"mi\">40</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">a8c17bfd</span><span class=\"w\">      </span><span class=\"n\">ldp</span><span class=\"w\"> </span><span class=\"n\">x29</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x30</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">sp</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">16</span>\n<span class=\"w\">      </span><span class=\"mi\">44</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">d65f0fff</span><span class=\"w\">      </span><span class=\"n\">retab</span>\n</code></pre></div>",
        "id": 441817001,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717193732
    },
    {
        "content": "<p>ok, <code>udf</code> (\"undefined\", intentionally traps, used to implement <code>unreachable</code> sometimes)</p>",
        "id": 441817278,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1717193853
    },
    {
        "content": "<p>not sure why that would cause ld problems (it shouldn't require any fixups?)</p>",
        "id": 441817293,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1717193862
    },
    {
        "content": "<p>at this point it might be necessary to page <span class=\"user-mention\" data-user-id=\"264278\">@bjorn3</span> to the courtesy phone for help (they have done way more with object-file generation in cg_clif than I have, I only write core compiler bits, sorry!)</p>",
        "id": 441817424,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1717193917
    },
    {
        "content": "<p>I don't think I have the sufficient knowledge to debug this. Is a fixup just a pass that fixes invalid code generation? And I'm guessing <code>udf</code> is just there because those are null bytes, maybe padding for alignment?</p>\n<p>No need to say sorry...you've been super helpful. This zulip page is awesome</p>",
        "id": 441817529,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717193966
    },
    {
        "content": "<p>Here I was debating if it was worth it to make an account just to ask a question</p>",
        "id": 441817547,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717193975
    },
    {
        "content": "<p><em>patiently awaits bjorn3</em></p>",
        "id": 441817663,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717194009
    },
    {
        "content": "<p>Also, is the alignment we are referring to here the offset counter on the left? I notice it is incrementing by 4 in hex -- not sure if that's just the word size, or if that's a property of the alignment</p>",
        "id": 441817854,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717194121
    },
    {
        "content": "<p>alignment in this context could either mean alignment of a location being patched, which as you've observed on aarch64 is always at least 4-aligned because instructions are all 32 bits; or it could be alignment of some value being patched in (also I'm assuming that fixup means something like a relocation, I don't actually know though)</p>",
        "id": 441818021,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1717194197
    },
    {
        "content": "<p>and, yes indeed, I'm remembering now that the encoding on aarch64 for udf is zeroes so ... yep, those are just zeroes</p>",
        "id": 441818061,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1717194217
    },
    {
        "content": "<p>oh! you know what, these may be PLT relocations</p>",
        "id": 441818077,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1717194241
    },
    {
        "content": "<p>can you dump relocs from objdump too?</p>",
        "id": 441818124,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1717194249
    },
    {
        "content": "<p><code>--reloc</code> I think</p>",
        "id": 441818156,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1717194271
    },
    {
        "content": "<p>(the udfs in that case would be placeholders for other instructions to be patched in)</p>",
        "id": 441818179,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1717194287
    },
    {
        "content": "<p>with <code>--reloc</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">output</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"nc\">file</span><span class=\"w\"> </span><span class=\"n\">format</span><span class=\"w\"> </span><span class=\"n\">mach</span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">arm64</span>\n\n<span class=\"n\">Disassembly</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">section</span><span class=\"w\"> </span><span class=\"n\">__TEXT</span><span class=\"p\">,</span><span class=\"n\">__const</span><span class=\"p\">:</span>\n\n<span class=\"mi\">0000000000000000</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">_hello_world</span><span class=\"o\">&gt;</span><span class=\"p\">:</span>\n<span class=\"w\">       </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"n\">c6c6548</span><span class=\"w\">      </span><span class=\"n\">ldnp</span><span class=\"w\">    </span><span class=\"n\">d8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">d25</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">x10</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"o\">-</span><span class=\"mi\">320</span><span class=\"p\">]</span>\n<span class=\"w\">       </span><span class=\"mi\">4</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">77202</span><span class=\"n\">c6f</span><span class=\"w\">      </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;</span>\n<span class=\"w\">       </span><span class=\"mi\">8</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">646</span><span class=\"n\">c726f</span><span class=\"w\">      </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;</span>\n<span class=\"w\">       </span><span class=\"n\">c</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">21</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">      </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;</span>\n\n<span class=\"n\">Disassembly</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">section</span><span class=\"w\"> </span><span class=\"n\">__TEXT</span><span class=\"p\">,</span><span class=\"n\">__text</span><span class=\"p\">:</span>\n\n<span class=\"mi\">0000000000000010</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">_main</span><span class=\"o\">&gt;</span><span class=\"p\">:</span>\n<span class=\"w\">      </span><span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">d503237f</span><span class=\"w\">      </span><span class=\"n\">pacibsp</span>\n<span class=\"w\">      </span><span class=\"mi\">14</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">a9bf7bfd</span><span class=\"w\">      </span><span class=\"n\">stp</span><span class=\"w\"> </span><span class=\"n\">x29</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x30</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">sp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"o\">-</span><span class=\"mi\">16</span><span class=\"p\">]</span><span class=\"o\">!</span>\n<span class=\"w\">      </span><span class=\"mi\">18</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">910003</span><span class=\"n\">fd</span><span class=\"w\">      </span><span class=\"n\">mov</span><span class=\"w\"> </span><span class=\"n\">x29</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">sp</span>\n<span class=\"w\">      </span><span class=\"mi\">1</span><span class=\"n\">c</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">58000040</span><span class=\"w\">      </span><span class=\"n\">ldr</span><span class=\"w\"> </span><span class=\"n\">x0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x24</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">_main</span><span class=\"o\">+</span><span class=\"mh\">0x14</span><span class=\"o\">&gt;</span>\n<span class=\"w\">      </span><span class=\"mi\">20</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">14000003</span><span class=\"w\">      </span><span class=\"n\">b</span><span class=\"w\">   </span><span class=\"mh\">0x2c</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">_main</span><span class=\"o\">+</span><span class=\"mh\">0x1c</span><span class=\"o\">&gt;</span>\n<span class=\"w\">      </span><span class=\"mi\">24</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">00000000</span><span class=\"w\">      </span><span class=\"n\">udf</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">0</span>\n<span class=\"w\">        </span><span class=\"mi\">0000000000000024</span><span class=\"p\">:</span><span class=\"w\">  </span><span class=\"nc\">ARM64_RELOC_UNSIGNED</span><span class=\"w\"> </span><span class=\"n\">_hello_world</span>\n<span class=\"w\">      </span><span class=\"mi\">28</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">00000000</span><span class=\"w\">      </span><span class=\"n\">udf</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">0</span>\n<span class=\"w\">      </span><span class=\"mi\">2</span><span class=\"n\">c</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">58000042</span><span class=\"w\">      </span><span class=\"n\">ldr</span><span class=\"w\"> </span><span class=\"n\">x2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x34</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">_main</span><span class=\"o\">+</span><span class=\"mh\">0x24</span><span class=\"o\">&gt;</span>\n<span class=\"w\">      </span><span class=\"mi\">30</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">14000003</span><span class=\"w\">      </span><span class=\"n\">b</span><span class=\"w\">   </span><span class=\"mh\">0x3c</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">_main</span><span class=\"o\">+</span><span class=\"mh\">0x2c</span><span class=\"o\">&gt;</span>\n<span class=\"w\">      </span><span class=\"mi\">34</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">00000000</span><span class=\"w\">      </span><span class=\"n\">udf</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">0</span>\n<span class=\"w\">        </span><span class=\"mi\">0000000000000034</span><span class=\"p\">:</span><span class=\"w\">  </span><span class=\"nc\">ARM64_RELOC_UNSIGNED</span><span class=\"w\"> </span><span class=\"n\">_puts</span>\n<span class=\"w\">      </span><span class=\"mi\">38</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">00000000</span><span class=\"w\">      </span><span class=\"n\">udf</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">0</span>\n<span class=\"w\">      </span><span class=\"mi\">3</span><span class=\"n\">c</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">d63f0040</span><span class=\"w\">      </span><span class=\"n\">blr</span><span class=\"w\"> </span><span class=\"n\">x2</span>\n<span class=\"w\">      </span><span class=\"mi\">40</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">a8c17bfd</span><span class=\"w\">      </span><span class=\"n\">ldp</span><span class=\"w\"> </span><span class=\"n\">x29</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x30</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">sp</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">16</span>\n<span class=\"w\">      </span><span class=\"mi\">44</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">d65f0fff</span><span class=\"w\">      </span><span class=\"n\">retab</span>\n</code></pre></div>",
        "id": 441818238,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717194324
    },
    {
        "content": "<p>Relocations are just moving bits of code around to be more optimal, I'm guessing?</p>",
        "id": 441818259,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717194343
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"254389\">Chris Fallin</span> <a href=\"#narrow/stream/217117-cranelift/topic/Minimal.20macos.20executable.20compilation/near/441818061\">said</a>:</p>\n<blockquote>\n<p>and, yes indeed, I'm remembering now that the encoding on aarch64 for udf is zeroes so ... yep, those are just zeroes</p>\n</blockquote>\n<p>ah yeah I was reading the hex code output. Thanks for all the explanations btw, I'm having a great time working through this</p>",
        "id": 441818351,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717194369
    },
    {
        "content": "<p>ah, a relocation is a record that says \"patch in a reference to this thing I don't have the address of yet\", and the relocation kind says how to patch</p>",
        "id": 441818359,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1717194375
    },
    {
        "content": "<p>so <code>ARM64_RELOC_UNSIGNED</code> here has some definition of semantics (\"add the offset\" or \"give a relative offset\" or \"absolute address\" or ... I'm not sure, it's defined in some tool conventions spec) and it means patch the machine code there to refer to the given symbol</p>",
        "id": 441818412,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1717194407
    },
    {
        "content": "<p>a linker's main job is to concatenate object files then process all the relocations so code properly refers to stuff in other object files</p>",
        "id": 441818446,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1717194425
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"254389\">Chris Fallin</span> <a href=\"#narrow/stream/217117-cranelift/topic/Minimal.20macos.20executable.20compilation/near/441818446\">said</a>:</p>\n<blockquote>\n<p>a linker's main job is to concatenate object files then process all the relocations so code properly refers to stuff in other object files</p>\n</blockquote>\n<p>I have wondered this for literally a decade, and it just clicked haha. Linking has always been magic to me</p>",
        "id": 441818485,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717194444
    },
    {
        "content": "<p>Seeing the actual objdump plus your explanation makes it make sense</p>",
        "id": 441818508,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717194461
    },
    {
        "content": "<p>cool, yep, no magic only grungy details :-)</p>",
        "id": 441818533,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1717194475
    },
    {
        "content": "<p>it's possible we have the wrong kind of relocation here, or maybe teh kind specified to cranelift-module is wrong, I'm not sure</p>",
        "id": 441818587,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1717194490
    },
    {
        "content": "<p>So it is unable to find either <code>_hello_world</code> or <code>_puts</code>, then?</p>",
        "id": 441818602,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717194498
    },
    {
        "content": "<p>And the question now is why?</p>",
        "id": 441818610,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717194506
    },
    {
        "content": "<p>my strategy at this point would be to objdump a file produced by compiling C that invokes some external func, and see what kind of reloc that produces, then work backward (look in the Cranelift source to see where the reloc kind comes from)</p>",
        "id": 441818642,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1717194524
    },
    {
        "content": "<p>unable to find or unable to process; it's possible those reloc kinds have other requirements (at a guess, alignment) which we don't satisfy either because we're accidentally generating the wrong kind of reloc or ... some other reason</p>",
        "id": 441818728,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1717194569
    },
    {
        "content": "<p>I see. Uhhhh. Another dumb question incoming. Is <code>puts</code> considered an <em>external</em> func in C, considering it comes from libc? If i just do:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">stdio</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">puts</span><span class=\"p\">(</span><span class=\"s\">\"Hello World!\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>would that give me a reasonable <code>.o</code> to compare to?</p>",
        "id": 441818941,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717194647
    },
    {
        "content": "<p>Yep, for sure, sorry by external I just meant not defined in the same .o that calls it :-)</p>",
        "id": 441819160,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1717194766
    },
    {
        "content": "<p>here's <code>objdump -Dd --disassemble-zeroes --reloc a.out</code> for the C file above:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">a</span><span class=\"p\">.</span><span class=\"n\">out</span><span class=\"p\">:</span><span class=\"w\">  </span><span class=\"nc\">file</span><span class=\"w\"> </span><span class=\"n\">format</span><span class=\"w\"> </span><span class=\"n\">mach</span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">arm64</span>\n\n<span class=\"n\">Disassembly</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">section</span><span class=\"w\"> </span><span class=\"n\">__TEXT</span><span class=\"p\">,</span><span class=\"n\">__text</span><span class=\"p\">:</span>\n\n<span class=\"mi\">0000000100003</span><span class=\"n\">f58</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">_main</span><span class=\"o\">&gt;</span><span class=\"p\">:</span>\n<span class=\"mi\">100003</span><span class=\"n\">f58</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">d10083ff</span><span class=\"w\">     </span><span class=\"n\">sub</span><span class=\"w\"> </span><span class=\"n\">sp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">sp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">32</span>\n<span class=\"mi\">100003</span><span class=\"n\">f5c</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">a9017bfd</span><span class=\"w\">     </span><span class=\"n\">stp</span><span class=\"w\"> </span><span class=\"n\">x29</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x30</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">sp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">16</span><span class=\"p\">]</span>\n<span class=\"mi\">100003</span><span class=\"n\">f60</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">910043</span><span class=\"n\">fd</span><span class=\"w\">     </span><span class=\"n\">add</span><span class=\"w\"> </span><span class=\"n\">x29</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">sp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">16</span>\n<span class=\"mi\">100003</span><span class=\"k\">f64</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">52800008</span><span class=\"w\">     </span><span class=\"n\">mov</span><span class=\"w\"> </span><span class=\"n\">w8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">0</span>\n<span class=\"mi\">100003</span><span class=\"n\">f68</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">b9000be8</span><span class=\"w\">     </span><span class=\"kt\">str</span><span class=\"w\"> </span><span class=\"n\">w8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">sp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">8</span><span class=\"p\">]</span>\n<span class=\"mi\">100003</span><span class=\"n\">f6c</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">b81fc3bf</span><span class=\"w\">     </span><span class=\"n\">stur</span><span class=\"w\">    </span><span class=\"n\">wzr</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">x29</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"o\">-</span><span class=\"mi\">4</span><span class=\"p\">]</span>\n<span class=\"mi\">100003</span><span class=\"n\">f70</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">90000000</span><span class=\"w\">     </span><span class=\"n\">adrp</span><span class=\"w\">    </span><span class=\"n\">x0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x100003000</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">_main</span><span class=\"o\">+</span><span class=\"mh\">0x18</span><span class=\"o\">&gt;</span>\n<span class=\"mi\">100003</span><span class=\"n\">f74</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mf\">913e6000</span><span class=\"w\">     </span><span class=\"n\">add</span><span class=\"w\"> </span><span class=\"n\">x0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">3992</span>\n<span class=\"mi\">100003</span><span class=\"n\">f78</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">94000005</span><span class=\"w\">     </span><span class=\"n\">bl</span><span class=\"w\">  </span><span class=\"mh\">0x100003f8c</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">_puts</span><span class=\"o\">+</span><span class=\"mh\">0x100003f8c</span><span class=\"o\">&gt;</span>\n<span class=\"mi\">100003</span><span class=\"n\">f7c</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">b9400be0</span><span class=\"w\">     </span><span class=\"n\">ldr</span><span class=\"w\"> </span><span class=\"n\">w0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">sp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">8</span><span class=\"p\">]</span>\n<span class=\"mi\">100003</span><span class=\"n\">f80</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">a9417bfd</span><span class=\"w\">     </span><span class=\"n\">ldp</span><span class=\"w\"> </span><span class=\"n\">x29</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x30</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">sp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">16</span><span class=\"p\">]</span>\n<span class=\"mi\">100003</span><span class=\"n\">f84</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">910083</span><span class=\"n\">ff</span><span class=\"w\">     </span><span class=\"n\">add</span><span class=\"w\"> </span><span class=\"n\">sp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">sp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">32</span>\n<span class=\"mi\">100003</span><span class=\"n\">f88</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">d65f03c0</span><span class=\"w\">     </span><span class=\"n\">ret</span>\n\n<span class=\"n\">Disassembly</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">section</span><span class=\"w\"> </span><span class=\"n\">__TEXT</span><span class=\"p\">,</span><span class=\"n\">__stubs</span><span class=\"p\">:</span>\n\n<span class=\"mi\">0000000100003</span><span class=\"n\">f8c</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">__stubs</span><span class=\"o\">&gt;</span><span class=\"p\">:</span>\n<span class=\"mi\">100003</span><span class=\"n\">f8c</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">b0000010</span><span class=\"w\">     </span><span class=\"n\">adrp</span><span class=\"w\">    </span><span class=\"n\">x16</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x100004000</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">__stubs</span><span class=\"o\">+</span><span class=\"mh\">0x4</span><span class=\"o\">&gt;</span>\n<span class=\"mi\">100003</span><span class=\"n\">f90</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">f9400210</span><span class=\"w\">     </span><span class=\"n\">ldr</span><span class=\"w\"> </span><span class=\"n\">x16</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">x16</span><span class=\"p\">]</span>\n<span class=\"mi\">100003</span><span class=\"n\">f94</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">d61f0200</span><span class=\"w\">     </span><span class=\"n\">br</span><span class=\"w\">  </span><span class=\"n\">x16</span>\n\n<span class=\"n\">Disassembly</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">section</span><span class=\"w\"> </span><span class=\"n\">__TEXT</span><span class=\"p\">,</span><span class=\"n\">__cstring</span><span class=\"p\">:</span>\n\n<span class=\"mi\">0000000100003</span><span class=\"n\">f98</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">__cstring</span><span class=\"o\">&gt;</span><span class=\"p\">:</span>\n<span class=\"mi\">100003</span><span class=\"n\">f98</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"n\">c6c6548</span><span class=\"w\">     </span><span class=\"n\">ldnp</span><span class=\"w\">    </span><span class=\"n\">d8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">d25</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">x10</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"o\">-</span><span class=\"mi\">320</span><span class=\"p\">]</span>\n<span class=\"mi\">100003</span><span class=\"n\">f9c</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"n\">f57206f</span><span class=\"w\">     </span><span class=\"n\">umlal2</span><span class=\"p\">.</span><span class=\"mi\">4</span><span class=\"n\">s</span><span class=\"w\">   </span><span class=\"n\">v15</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v7</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"mi\">100003</span><span class=\"n\">fa0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">21646</span><span class=\"n\">c72</span><span class=\"w\">     </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;</span>\n<span class=\"mi\">100003</span><span class=\"n\">fa4</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">           </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;</span>\n\n<span class=\"n\">Disassembly</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">section</span><span class=\"w\"> </span><span class=\"n\">__TEXT</span><span class=\"p\">,</span><span class=\"n\">__unwind_info</span><span class=\"p\">:</span>\n\n<span class=\"mi\">0000000100003</span><span class=\"n\">fa8</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">__unwind_info</span><span class=\"o\">&gt;</span><span class=\"p\">:</span>\n<span class=\"mi\">100003</span><span class=\"n\">fa8</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">00000001</span><span class=\"w\">     </span><span class=\"n\">udf</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">1</span>\n<span class=\"mi\">100003</span><span class=\"n\">fac</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">0000001</span><span class=\"n\">c</span><span class=\"w\">     </span><span class=\"n\">udf</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">28</span>\n<span class=\"mi\">100003</span><span class=\"n\">fb0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">00000000</span><span class=\"w\">     </span><span class=\"n\">udf</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">0</span>\n<span class=\"mi\">100003</span><span class=\"n\">fb4</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">0000001</span><span class=\"n\">c</span><span class=\"w\">     </span><span class=\"n\">udf</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">28</span>\n<span class=\"mi\">100003</span><span class=\"n\">fb8</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">00000000</span><span class=\"w\">     </span><span class=\"n\">udf</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">0</span>\n<span class=\"mi\">100003</span><span class=\"n\">fbc</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">0000001</span><span class=\"n\">c</span><span class=\"w\">     </span><span class=\"n\">udf</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">28</span>\n<span class=\"mi\">100003</span><span class=\"n\">fc0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">00000002</span><span class=\"w\">     </span><span class=\"n\">udf</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">2</span>\n<span class=\"mi\">100003</span><span class=\"n\">fc4</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">00003</span><span class=\"n\">f58</span><span class=\"w\">     </span><span class=\"n\">udf</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">16216</span>\n<span class=\"mi\">100003</span><span class=\"n\">fc8</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">00000040</span><span class=\"w\">     </span><span class=\"n\">udf</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">64</span>\n<span class=\"mi\">100003</span><span class=\"n\">fcc</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">00000040</span><span class=\"w\">     </span><span class=\"n\">udf</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">64</span>\n<span class=\"mi\">100003</span><span class=\"n\">fd0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">00003</span><span class=\"n\">f8c</span><span class=\"w\">     </span><span class=\"n\">udf</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">16268</span>\n<span class=\"mi\">100003</span><span class=\"n\">fd4</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">00000000</span><span class=\"w\">     </span><span class=\"n\">udf</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">0</span>\n<span class=\"mi\">100003</span><span class=\"n\">fd8</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">00000040</span><span class=\"w\">     </span><span class=\"n\">udf</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">64</span>\n<span class=\"mi\">100003</span><span class=\"n\">fdc</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">00000000</span><span class=\"w\">     </span><span class=\"n\">udf</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">0</span>\n<span class=\"mi\">100003</span><span class=\"n\">fe0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">00000000</span><span class=\"w\">     </span><span class=\"n\">udf</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">0</span>\n<span class=\"mi\">100003</span><span class=\"n\">fe4</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">00000000</span><span class=\"w\">     </span><span class=\"n\">udf</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">0</span>\n<span class=\"mi\">100003</span><span class=\"n\">fe8</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">00000003</span><span class=\"w\">     </span><span class=\"n\">udf</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">3</span>\n<span class=\"mi\">100003</span><span class=\"n\">fec</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">0001000</span><span class=\"n\">c</span><span class=\"w\">     </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;</span>\n<span class=\"mi\">100003</span><span class=\"n\">ff0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">00010010</span><span class=\"w\">     </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;</span>\n<span class=\"mi\">100003</span><span class=\"n\">ff4</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">00000000</span><span class=\"w\">     </span><span class=\"n\">udf</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">0</span>\n<span class=\"mi\">100003</span><span class=\"n\">ff8</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">04000000</span><span class=\"w\">     </span><span class=\"n\">add</span><span class=\"w\"> </span><span class=\"n\">z0</span><span class=\"p\">.</span><span class=\"n\">b</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">p0</span><span class=\"o\">/</span><span class=\"n\">m</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">z0</span><span class=\"p\">.</span><span class=\"n\">b</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">z0</span><span class=\"p\">.</span><span class=\"n\">b</span>\n<span class=\"mi\">100003</span><span class=\"n\">ffc</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">00000000</span><span class=\"w\">     </span><span class=\"n\">udf</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">0</span>\n\n<span class=\"n\">Disassembly</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">section</span><span class=\"w\"> </span><span class=\"n\">__DATA_CONST</span><span class=\"p\">,</span><span class=\"n\">__got</span><span class=\"p\">:</span>\n\n<span class=\"mi\">0000000100004000</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">__got</span><span class=\"o\">&gt;</span><span class=\"p\">:</span>\n<span class=\"mi\">100004000</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">00000000</span><span class=\"w\">     </span><span class=\"n\">udf</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">0</span>\n<span class=\"mi\">100004004</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">80000000</span><span class=\"w\">     </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;</span>\n</code></pre></div>",
        "id": 441819992,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717195199
    },
    {
        "content": "<p>This looks very different. For starters, the offsets are all way larger?</p>",
        "id": 441820113,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717195257
    },
    {
        "content": "<p>but no relocations!</p>",
        "id": 441820937,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717195606
    },
    {
        "content": "<p>Oh, that's for an <code>a.out</code> which is the whole linked program, I guess build with <code>cc -c -o test.o test.c</code> to get a .o?</p>",
        "id": 441827688,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1717199029
    },
    {
        "content": "<p>(I have to head out for the day but hopefully others can continue helping! best of luck)</p>",
        "id": 441827705,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1717199042
    },
    {
        "content": "<p>Thank so much for your help today Chris, </p>\n<p>Here's the correct objdump:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">file</span><span class=\"w\"> </span><span class=\"n\">format</span><span class=\"w\"> </span><span class=\"n\">mach</span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">arm64</span>\n\n<span class=\"n\">Disassembly</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">section</span><span class=\"w\"> </span><span class=\"n\">__TEXT</span><span class=\"p\">,</span><span class=\"n\">__text</span><span class=\"p\">:</span>\n\n<span class=\"mi\">0000000000000000</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">ltmp0</span><span class=\"o\">&gt;</span><span class=\"p\">:</span>\n<span class=\"w\">       </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">d10083ff</span><span class=\"w\">      </span><span class=\"n\">sub</span><span class=\"w\"> </span><span class=\"n\">sp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">sp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">32</span>\n<span class=\"w\">       </span><span class=\"mi\">4</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">a9017bfd</span><span class=\"w\">      </span><span class=\"n\">stp</span><span class=\"w\"> </span><span class=\"n\">x29</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x30</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">sp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">16</span><span class=\"p\">]</span>\n<span class=\"w\">       </span><span class=\"mi\">8</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">910043</span><span class=\"n\">fd</span><span class=\"w\">      </span><span class=\"n\">add</span><span class=\"w\"> </span><span class=\"n\">x29</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">sp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">16</span>\n<span class=\"w\">       </span><span class=\"n\">c</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">52800008</span><span class=\"w\">      </span><span class=\"n\">mov</span><span class=\"w\"> </span><span class=\"n\">w8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">0</span>\n<span class=\"w\">      </span><span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">b9000be8</span><span class=\"w\">      </span><span class=\"kt\">str</span><span class=\"w\"> </span><span class=\"n\">w8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">sp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">8</span><span class=\"p\">]</span>\n<span class=\"w\">      </span><span class=\"mi\">14</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">b81fc3bf</span><span class=\"w\">      </span><span class=\"n\">stur</span><span class=\"w\">    </span><span class=\"n\">wzr</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">x29</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"o\">-</span><span class=\"mi\">4</span><span class=\"p\">]</span>\n<span class=\"w\">      </span><span class=\"mi\">18</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">90000000</span><span class=\"w\">      </span><span class=\"n\">adrp</span><span class=\"w\">    </span><span class=\"n\">x0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x0</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">ltmp0</span><span class=\"o\">+</span><span class=\"mh\">0x18</span><span class=\"o\">&gt;</span>\n<span class=\"w\">        </span><span class=\"mi\">0000000000000018</span><span class=\"p\">:</span><span class=\"w\">  </span><span class=\"nc\">ARM64_RELOC_PAGE21</span><span class=\"w\">   </span><span class=\"n\">l_</span><span class=\"p\">.</span><span class=\"kt\">str</span>\n<span class=\"w\">      </span><span class=\"mi\">1</span><span class=\"n\">c</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">91000000</span><span class=\"w\">      </span><span class=\"n\">add</span><span class=\"w\"> </span><span class=\"n\">x0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">0</span>\n<span class=\"w\">        </span><span class=\"mi\">000000000000001</span><span class=\"n\">c</span><span class=\"p\">:</span><span class=\"w\">  </span><span class=\"nc\">ARM64_RELOC_PAGEOFF12</span><span class=\"w\">    </span><span class=\"n\">l_</span><span class=\"p\">.</span><span class=\"kt\">str</span>\n<span class=\"w\">      </span><span class=\"mi\">20</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">94000000</span><span class=\"w\">      </span><span class=\"n\">bl</span><span class=\"w\">  </span><span class=\"mh\">0x20</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">ltmp0</span><span class=\"o\">+</span><span class=\"mh\">0x20</span><span class=\"o\">&gt;</span>\n<span class=\"w\">        </span><span class=\"mi\">0000000000000020</span><span class=\"p\">:</span><span class=\"w\">  </span><span class=\"nc\">ARM64_RELOC_BRANCH26</span><span class=\"w\"> </span><span class=\"n\">_puts</span>\n<span class=\"w\">      </span><span class=\"mi\">24</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">b9400be0</span><span class=\"w\">      </span><span class=\"n\">ldr</span><span class=\"w\"> </span><span class=\"n\">w0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">sp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">8</span><span class=\"p\">]</span>\n<span class=\"w\">      </span><span class=\"mi\">28</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">a9417bfd</span><span class=\"w\">      </span><span class=\"n\">ldp</span><span class=\"w\"> </span><span class=\"n\">x29</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x30</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">sp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">16</span><span class=\"p\">]</span>\n<span class=\"w\">      </span><span class=\"mi\">2</span><span class=\"n\">c</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">910083</span><span class=\"n\">ff</span><span class=\"w\">      </span><span class=\"n\">add</span><span class=\"w\"> </span><span class=\"n\">sp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">sp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">32</span>\n<span class=\"w\">      </span><span class=\"mi\">30</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">d65f03c0</span><span class=\"w\">      </span><span class=\"n\">ret</span>\n\n<span class=\"n\">Disassembly</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">section</span><span class=\"w\"> </span><span class=\"n\">__TEXT</span><span class=\"p\">,</span><span class=\"n\">__cstring</span><span class=\"p\">:</span>\n\n<span class=\"mi\">0000000000000034</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">ltmp1</span><span class=\"o\">&gt;</span><span class=\"p\">:</span>\n<span class=\"w\">      </span><span class=\"mi\">34</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"n\">c6c6548</span><span class=\"w\">      </span><span class=\"n\">ldnp</span><span class=\"w\">    </span><span class=\"n\">d8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">d25</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">x10</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"o\">-</span><span class=\"mi\">320</span><span class=\"p\">]</span>\n<span class=\"w\">      </span><span class=\"mi\">38</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"n\">f57206f</span><span class=\"w\">      </span><span class=\"n\">umlal2</span><span class=\"p\">.</span><span class=\"mi\">4</span><span class=\"n\">s</span><span class=\"w\">   </span><span class=\"n\">v15</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v7</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"w\">      </span><span class=\"mi\">3</span><span class=\"n\">c</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">21646</span><span class=\"n\">c72</span><span class=\"w\">      </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;</span>\n<span class=\"w\">      </span><span class=\"mi\">40</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">            </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;</span>\n\n<span class=\"n\">Disassembly</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">section</span><span class=\"w\"> </span><span class=\"n\">__LD</span><span class=\"p\">,</span><span class=\"n\">__compact_unwind</span><span class=\"p\">:</span>\n\n<span class=\"mi\">0000000000000048</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">ltmp2</span><span class=\"o\">&gt;</span><span class=\"p\">:</span>\n<span class=\"w\">      </span><span class=\"mi\">48</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">00000000</span><span class=\"w\">      </span><span class=\"n\">udf</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">0</span>\n<span class=\"w\">        </span><span class=\"mi\">0000000000000048</span><span class=\"p\">:</span><span class=\"w\">  </span><span class=\"nc\">ARM64_RELOC_UNSIGNED</span><span class=\"w\"> </span><span class=\"n\">__text</span>\n<span class=\"w\">      </span><span class=\"mi\">4</span><span class=\"n\">c</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">00000000</span><span class=\"w\">      </span><span class=\"n\">udf</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">0</span>\n<span class=\"w\">      </span><span class=\"mi\">50</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">00000034</span><span class=\"w\">      </span><span class=\"n\">udf</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">52</span>\n<span class=\"w\">      </span><span class=\"mi\">54</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">04000000</span><span class=\"w\">      </span><span class=\"n\">add</span><span class=\"w\"> </span><span class=\"n\">z0</span><span class=\"p\">.</span><span class=\"n\">b</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">p0</span><span class=\"o\">/</span><span class=\"n\">m</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">z0</span><span class=\"p\">.</span><span class=\"n\">b</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">z0</span><span class=\"p\">.</span><span class=\"n\">b</span>\n<span class=\"w\">      </span><span class=\"mi\">58</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">00000000</span><span class=\"w\">      </span><span class=\"n\">udf</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">0</span>\n<span class=\"w\">      </span><span class=\"mi\">5</span><span class=\"n\">c</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">00000000</span><span class=\"w\">      </span><span class=\"n\">udf</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">0</span>\n<span class=\"w\">      </span><span class=\"mi\">60</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">00000000</span><span class=\"w\">      </span><span class=\"n\">udf</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">0</span>\n<span class=\"w\">      </span><span class=\"mi\">64</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">00000000</span><span class=\"w\">      </span><span class=\"n\">udf</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">0</span>\n</code></pre></div>",
        "id": 441829962,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717200228
    },
    {
        "content": "<p>Is my help still needed? If so please ping me again. Was asleep when I got pinged.</p>",
        "id": 441881611,
        "sender_full_name": "bjorn3",
        "timestamp": 1717234612
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"264278\">@bjorn3</span> ! I have not yet figured this out, if you have any wisdom to impart it would be very appreciated.</p>\n<p>To recap, I'm trying to produce a runable macOS binary from cranelift IR, and my current code is <a href=\"https://gist.github.com/sezna/e358a9167d4ef3063f6cfe4ce4c2ad37\">here</a>.</p>\n<p>Linking is currently failing, and Chris helped me figure out it is likely alignment related to relocations. Above, I've pasted the objdump for my binary, as well as a comparable objdump for a C <code>.o</code> that does the same thing, for comparison.</p>\n<p>I <em>think</em> I might need to use this <a href=\"https://docs.rs/cranelift-codegen/latest/cranelift_codegen/isa/struct.FunctionAlignment.html\">function alignment</a> struct but I'm not sure</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://gist.github.com/sezna/e358a9167d4ef3063f6cfe4ce4c2ad37\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/91f9baed8f4fc08c462d1a4de5a8c23942d45e97/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f6173736574732f676973742d6f672d696d6167652d3534666437646330373133652e706e67&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://gist.github.com/sezna/e358a9167d4ef3063f6cfe4ce4c2ad37\" title=\"Attempt at cranelift &quot;hello world&quot;\">Attempt at cranelift \"hello world\"</a></div><div class=\"message_embed_description\">Attempt at cranelift \"hello world\". GitHub Gist: instantly share code, notes, and snippets.</div></div></div>",
        "id": 441911780,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717251506
    },
    {
        "content": "<p>I see you don't have the is_pic flag enabled. I do have it enabled in cg_clif: <a href=\"https://github.com/rust-lang/rustc_codegen_cranelift/blob/ab10da27a11133add161bc6f9b2b7580ba455d58/src/lib.rs#L266\">https://github.com/rust-lang/rustc_codegen_cranelift/blob/ab10da27a11133add161bc6f9b2b7580ba455d58/src/lib.rs#L266</a> Can you try enabling it?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/rust-lang/rustc_codegen_cranelift/blob/ab10da27a11133add161bc6f9b2b7580ba455d58/src/lib.rs#L266\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/11b086ced3949273b1587bd18c954b45b28996e0/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f303735376235303762663137326361363939623832383231376632623632333865306537303362623431616536323839666561326362363565396663653466302f727573742d6c616e672f72757374635f636f646567656e5f6372616e656c696674&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/rust-lang/rustc_codegen_cranelift/blob/ab10da27a11133add161bc6f9b2b7580ba455d58/src/lib.rs#L266\" title=\"rustc_codegen_cranelift/src/lib.rs at ab10da27a11133add161bc6f9b2b7580ba455d58 · rust-lang/rustc_codegen_cranelift\">rustc_codegen_cranelift/src/lib.rs at ab10da27a11133add161bc6f9b2b7580ba455d58 · rust-lang/rustc_codegen_cranelift</a></div><div class=\"message_embed_description\">Cranelift based backend for rustc. Contribute to rust-lang/rustc_codegen_cranelift development by creating an account on GitHub.</div></div></div>",
        "id": 441915078,
        "sender_full_name": "bjorn3",
        "timestamp": 1717253071
    },
    {
        "content": "<p>trying it now -- will report back</p>",
        "id": 441915127,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717253102
    },
    {
        "content": "<p>Ok, I added that to the flags builder. Here's the verbose clang output, which is indeed different than before, but it still seems to have failed:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Apple</span><span class=\"w\"> </span><span class=\"n\">clang</span><span class=\"w\"> </span><span class=\"n\">version</span><span class=\"w\"> </span><span class=\"mf\">15.0.0</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">clang</span><span class=\"o\">-</span><span class=\"mf\">1500.3.9.4</span><span class=\"p\">)</span>\n<span class=\"n\">Target</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">arm64</span><span class=\"o\">-</span><span class=\"n\">apple</span><span class=\"o\">-</span><span class=\"n\">darwin23</span><span class=\"p\">.</span><span class=\"mf\">5.0</span>\n<span class=\"n\">Thread</span><span class=\"w\"> </span><span class=\"n\">model</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">posix</span>\n<span class=\"n\">InstalledDir</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">Library</span><span class=\"o\">/</span><span class=\"n\">Developer</span><span class=\"o\">/</span><span class=\"n\">CommandLineTools</span><span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">bin</span>\n<span class=\"w\"> </span><span class=\"s\">\"/Library/Developer/CommandLineTools/usr/bin/ld\"</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">demangle</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">lto_library</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">Library</span><span class=\"o\">/</span><span class=\"n\">Developer</span><span class=\"o\">/</span><span class=\"n\">CommandLineTools</span><span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">libLTO</span><span class=\"p\">.</span><span class=\"n\">dylib</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">dynamic</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">arch</span><span class=\"w\"> </span><span class=\"n\">arm64</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">platform_version</span><span class=\"w\"> </span><span class=\"n\">macos</span><span class=\"w\"> </span><span class=\"mf\">14.0.0</span><span class=\"w\"> </span><span class=\"mf\">14.4</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">syslibroot</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">Library</span><span class=\"o\">/</span><span class=\"n\">Developer</span><span class=\"o\">/</span><span class=\"n\">CommandLineTools</span><span class=\"o\">/</span><span class=\"n\">SDKs</span><span class=\"o\">/</span><span class=\"n\">MacOSX</span><span class=\"p\">.</span><span class=\"n\">sdk</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">output</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">L</span><span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"w\"> </span><span class=\"n\">output</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">lSystem</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">Library</span><span class=\"o\">/</span><span class=\"n\">Developer</span><span class=\"o\">/</span><span class=\"n\">CommandLineTools</span><span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">clang</span><span class=\"o\">/</span><span class=\"mf\">15.0.0</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">darwin</span><span class=\"o\">/</span><span class=\"n\">libclang_rt</span><span class=\"p\">.</span><span class=\"n\">osx</span><span class=\"p\">.</span><span class=\"n\">a</span>\n<span class=\"mi\">0</span><span class=\"w\">  </span><span class=\"mh\">0x100136074</span><span class=\"w\">  </span><span class=\"n\">__assert_rtn</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">72</span>\n<span class=\"mi\">1</span><span class=\"w\">  </span><span class=\"mh\">0x100072db8</span><span class=\"w\">  </span><span class=\"n\">ld</span><span class=\"p\">::</span><span class=\"n\">InputFiles</span><span class=\"p\">::</span><span class=\"n\">SliceParser</span><span class=\"p\">::</span><span class=\"n\">parseObjectFile</span><span class=\"p\">(</span><span class=\"n\">mach_o</span><span class=\"p\">::</span><span class=\"n\">Header</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">22712</span>\n<span class=\"mi\">2</span><span class=\"w\">  </span><span class=\"mh\">0x10007f830</span><span class=\"w\">  </span><span class=\"n\">ld</span><span class=\"p\">::</span><span class=\"n\">InputFiles</span><span class=\"p\">::</span><span class=\"n\">parseAllFiles</span><span class=\"p\">(</span><span class=\"n\">void</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">ld</span><span class=\"p\">::</span><span class=\"n\">AtomFile</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">block_pointer</span><span class=\"p\">)::</span><span class=\"cp\">$_8</span><span class=\"p\">::</span><span class=\"n\">operator</span><span class=\"p\">()(</span><span class=\"n\">unsigned</span><span class=\"w\"> </span><span class=\"n\">long</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ld</span><span class=\"p\">::</span><span class=\"n\">FileInfo</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"o\">&amp;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">440</span>\n<span class=\"mi\">3</span><span class=\"w\">  </span><span class=\"mh\">0x192836428</span><span class=\"w\">  </span><span class=\"n\">_dispatch_client_callout2</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">20</span>\n<span class=\"mi\">4</span><span class=\"w\">  </span><span class=\"mh\">0x19284a850</span><span class=\"w\">  </span><span class=\"n\">_dispatch_apply_invoke3</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">336</span>\n<span class=\"mi\">5</span><span class=\"w\">  </span><span class=\"mh\">0x1928363e8</span><span class=\"w\">  </span><span class=\"n\">_dispatch_client_callout</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">20</span>\n<span class=\"mi\">6</span><span class=\"w\">  </span><span class=\"mh\">0x192837c68</span><span class=\"w\">  </span><span class=\"n\">_dispatch_once_callout</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">32</span>\n<span class=\"mi\">7</span><span class=\"w\">  </span><span class=\"mh\">0x19284aeec</span><span class=\"w\">  </span><span class=\"n\">_dispatch_apply_invoke_and_wait</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">372</span>\n<span class=\"mi\">8</span><span class=\"w\">  </span><span class=\"mh\">0x192849e9c</span><span class=\"w\">  </span><span class=\"n\">_dispatch_apply_with_attr_f</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">1212</span>\n<span class=\"mi\">9</span><span class=\"w\">  </span><span class=\"mh\">0x19284a08c</span><span class=\"w\">  </span><span class=\"n\">dispatch_apply</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">96</span>\n<span class=\"mi\">10</span><span class=\"w\">  </span><span class=\"mh\">0x100104564</span><span class=\"w\">  </span><span class=\"n\">ld</span><span class=\"p\">::</span><span class=\"n\">AtomFileConsolidator</span><span class=\"p\">::</span><span class=\"n\">parseFiles</span><span class=\"p\">(</span><span class=\"kt\">bool</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">292</span>\n<span class=\"mi\">11</span><span class=\"w\">  </span><span class=\"mh\">0x10009fee8</span><span class=\"w\">  </span><span class=\"n\">main</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">9532</span>\n<span class=\"n\">ld</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Assertion</span><span class=\"w\"> </span><span class=\"n\">failed</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">pattern</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">].</span><span class=\"n\">addrMode</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">addr_other</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">addFixupFromRelocations</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">Relocations</span><span class=\"p\">.</span><span class=\"n\">cpp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">line</span><span class=\"w\"> </span><span class=\"mf\">701.</span>\n<span class=\"n\">clang</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">linker</span><span class=\"w\"> </span><span class=\"n\">command</span><span class=\"w\"> </span><span class=\"n\">failed</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"n\">exit</span><span class=\"w\"> </span><span class=\"n\">code</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">v</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">see</span><span class=\"w\"> </span><span class=\"n\">invocation</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>the objdump of the new output.o: </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">output</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"nc\">file</span><span class=\"w\"> </span><span class=\"n\">format</span><span class=\"w\"> </span><span class=\"n\">mach</span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">arm64</span>\n\n<span class=\"n\">Disassembly</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">section</span><span class=\"w\"> </span><span class=\"n\">__TEXT</span><span class=\"p\">,</span><span class=\"n\">__const</span><span class=\"p\">:</span>\n\n<span class=\"mi\">0000000000000000</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">_hello_world</span><span class=\"o\">&gt;</span><span class=\"p\">:</span>\n<span class=\"w\">       </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"n\">c6c6548</span><span class=\"w\">      </span><span class=\"n\">ldnp</span><span class=\"w\">    </span><span class=\"n\">d8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">d25</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">x10</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"o\">-</span><span class=\"mi\">320</span><span class=\"p\">]</span>\n<span class=\"w\">       </span><span class=\"mi\">4</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">77202</span><span class=\"n\">c6f</span><span class=\"w\">      </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;</span>\n<span class=\"w\">       </span><span class=\"mi\">8</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">646</span><span class=\"n\">c726f</span><span class=\"w\">      </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;</span>\n<span class=\"w\">       </span><span class=\"n\">c</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">21</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">      </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;</span>\n\n<span class=\"n\">Disassembly</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">section</span><span class=\"w\"> </span><span class=\"n\">__TEXT</span><span class=\"p\">,</span><span class=\"n\">__text</span><span class=\"p\">:</span>\n\n<span class=\"mi\">0000000000000010</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">_main</span><span class=\"o\">&gt;</span><span class=\"p\">:</span>\n<span class=\"w\">      </span><span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">d503237f</span><span class=\"w\">      </span><span class=\"n\">pacibsp</span>\n<span class=\"w\">      </span><span class=\"mi\">14</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">a9bf7bfd</span><span class=\"w\">      </span><span class=\"n\">stp</span><span class=\"w\"> </span><span class=\"n\">x29</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x30</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">sp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"o\">-</span><span class=\"mi\">16</span><span class=\"p\">]</span><span class=\"o\">!</span>\n<span class=\"w\">      </span><span class=\"mi\">18</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">910003</span><span class=\"n\">fd</span><span class=\"w\">      </span><span class=\"n\">mov</span><span class=\"w\"> </span><span class=\"n\">x29</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">sp</span>\n<span class=\"w\">      </span><span class=\"mi\">1</span><span class=\"n\">c</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">90000000</span><span class=\"w\">      </span><span class=\"n\">adrp</span><span class=\"w\">    </span><span class=\"n\">x0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x0</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">_main</span><span class=\"o\">+</span><span class=\"mh\">0xc</span><span class=\"o\">&gt;</span>\n<span class=\"w\">        </span><span class=\"mi\">000000000000001</span><span class=\"n\">c</span><span class=\"p\">:</span><span class=\"w\">  </span><span class=\"nc\">ARM64_RELOC_GOT_LOAD_PAGE21</span><span class=\"w\">  </span><span class=\"n\">_hello_world</span>\n<span class=\"w\">      </span><span class=\"mi\">20</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">f9400000</span><span class=\"w\">      </span><span class=\"n\">ldr</span><span class=\"w\"> </span><span class=\"n\">x0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">x0</span><span class=\"p\">]</span>\n<span class=\"w\">        </span><span class=\"mi\">0000000000000020</span><span class=\"p\">:</span><span class=\"w\">  </span><span class=\"nc\">ARM64_RELOC_GOT_LOAD_PAGEOFF12</span><span class=\"w\">   </span><span class=\"n\">_hello_world</span>\n<span class=\"w\">      </span><span class=\"mi\">24</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">90000002</span><span class=\"w\">      </span><span class=\"n\">adrp</span><span class=\"w\">    </span><span class=\"n\">x2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x0</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">_main</span><span class=\"o\">+</span><span class=\"mh\">0x14</span><span class=\"o\">&gt;</span>\n<span class=\"w\">        </span><span class=\"mi\">0000000000000024</span><span class=\"p\">:</span><span class=\"w\">  </span><span class=\"nc\">ARM64_RELOC_GOT_LOAD_PAGE21</span><span class=\"w\">  </span><span class=\"n\">_puts</span>\n<span class=\"w\">      </span><span class=\"mi\">28</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">f9400042</span><span class=\"w\">      </span><span class=\"n\">ldr</span><span class=\"w\"> </span><span class=\"n\">x2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">x2</span><span class=\"p\">]</span>\n<span class=\"w\">        </span><span class=\"mi\">0000000000000028</span><span class=\"p\">:</span><span class=\"w\">  </span><span class=\"nc\">ARM64_RELOC_GOT_LOAD_PAGEOFF12</span><span class=\"w\">   </span><span class=\"n\">_puts</span>\n<span class=\"w\">      </span><span class=\"mi\">2</span><span class=\"n\">c</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">d63f0040</span><span class=\"w\">      </span><span class=\"n\">blr</span><span class=\"w\"> </span><span class=\"n\">x2</span>\n<span class=\"w\">      </span><span class=\"mi\">30</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">a8c17bfd</span><span class=\"w\">      </span><span class=\"n\">ldp</span><span class=\"w\"> </span><span class=\"n\">x29</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x30</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">sp</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">16</span>\n<span class=\"w\">      </span><span class=\"mi\">34</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">d65f0fff</span><span class=\"w\">      </span><span class=\"n\">retab</span>\n</code></pre></div>",
        "id": 441915464,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717253275
    },
    {
        "content": "<p>May I ask why position independent code might help here?</p>",
        "id": 441915676,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717253369
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"725309\">Alex Hansen</span> <a href=\"#narrow/stream/217117-cranelift/topic/Minimal.20macos.20executable.20compilation/near/441915676\">said</a>:</p>\n<blockquote>\n<p>May I ask why position independent code might help here?</p>\n</blockquote>\n<p>I'm not sure if non-PIC executables are still supported on macOS at all.</p>",
        "id": 441915785,
        "sender_full_name": "bjorn3",
        "timestamp": 1717253405
    },
    {
        "content": "<p>I see, that makes sense. Thanks. clang does <em>seem</em> to have gotten further in the process, at least the verbose output has more info</p>",
        "id": 441915902,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717253470
    },
    {
        "content": "<p>I'm currently thinking about what other differences there are between what cg_clif does and what you are doing. I know for a fact that what cg_clif does works.</p>",
        "id": 441916024,
        "sender_full_name": "bjorn3",
        "timestamp": 1717253544
    },
    {
        "content": "<p>Just to check can you pass <code>-Wl,-ld_classic</code> to clang to use the old linker?</p>",
        "id": 441916272,
        "sender_full_name": "bjorn3",
        "timestamp": 1717253681
    },
    {
        "content": "<p>Is the file you linked what you do for all OSes? I could just copy it and try</p>",
        "id": 441916280,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717253685
    },
    {
        "content": "<p>While that might unblock me, we wouldn't get the same feeling of enlightenment :)</p>",
        "id": 441916310,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717253705
    },
    {
        "content": "<p>With those flags, it worked!!!</p>",
        "id": 441916410,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717253764
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">output</span>\n<span class=\"n\">Hello</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">world</span><span class=\"o\">!</span>\n</code></pre></div>",
        "id": 441916426,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717253774
    },
    {
        "content": "<p>Yes, that is how I build the <code>TargetIsa</code> for all targets. It is not quite copy-paste-able though as it depends on rustc internals. I don't think the difference in <code>TargetIsa</code> is the issue here though.</p>",
        "id": 441916440,
        "sender_full_name": "bjorn3",
        "timestamp": 1717253782
    },
    {
        "content": "<p>Is it generally unpreferred to use the old linker? I'm in very unfamiliar territory, not sure if I should just keep the flags, or dig to find out why it isn't working with the new linker</p>",
        "id": 441916523,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717253858
    },
    {
        "content": "<blockquote>\n<p>I know for a fact that what cg_clif does works.</p>\n</blockquote>\n<p>Or at least it does with the old linker. There was a bug in the object crate that was fixed relatively recently: <a href=\"https://github.com/rust-lang/rustc_codegen_cranelift/issues/1456\">https://github.com/rust-lang/rustc_codegen_cranelift/issues/1456</a> I haven't tested it since.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/rust-lang/rustc_codegen_cranelift/issues/1456\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/6aa4aa153180bccce8e93d44a9a27457d30f70c8/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f663937373931626633313665333462613730613662356632333734646565326262336534666563393135613264623032393134303964366564306231336435662f727573742d6c616e672f72757374635f636f646567656e5f6372616e656c6966742f6973737565732f31343536&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/rust-lang/rustc_codegen_cranelift/issues/1456\" title=\"Linking error with Xcode 15 invalid r_symbolnum · Issue #1456 · rust-lang/rustc_codegen_cranelift\">Linking error with Xcode 15 invalid r_symbolnum · Issue #1456 · rust-lang/rustc_codegen_cranelift</a></div><div class=\"message_embed_description\">Trying to run the cranelift testsuite on an x86_64 macOS system with Xcode 15 results in an error that looks roughly like this: = note: ld: warning: search path '/Users/eric/Proj/rust/rustc_codegen...</div></div></div>",
        "id": 441916613,
        "sender_full_name": "bjorn3",
        "timestamp": 1717253898
    },
    {
        "content": "<blockquote>\n<p>Is it generally unpreferred to use the old linker?</p>\n</blockquote>\n<p>It is likely going away at some point.</p>\n<blockquote>\n<p>I'm in very unfamiliar territory, not sure if I should just keep the flags, or dig to find out why it isn't working with the new linker</p>\n</blockquote>\n<p>It may well be that there is a bug in cranelift or object. It would be great to know if that is the case, but I don't have a mac myself to dig deeper. So I think using the old linker for now is your best option.</p>",
        "id": 441916842,
        "sender_full_name": "bjorn3",
        "timestamp": 1717254054
    },
    {
        "content": "<p>Ok, that makes sense. Thank you for your help. Should I file an issue or otherwise put the above Gist somewhere more public, so there's a reproducible way to dig into this issue? In case somebody more advanced with a Mac would like to look into it</p>",
        "id": 441917614,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717254427
    },
    {
        "content": "<p>Yeah, opening an issue on the wasmtime repo would make sense.</p>",
        "id": 441917825,
        "sender_full_name": "bjorn3",
        "timestamp": 1717254531
    },
    {
        "content": "<p><a href=\"https://github.com/bytecodealliance/wasmtime/issues/8730\">https://github.com/bytecodealliance/wasmtime/issues/8730</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/issues/8730\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/6614c56b226fd4d529724e9c0e2c2d0205d89ba3/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f313837666461386635333366616136636462393266326630656232636637366330623938623435643563343731643734373138313233366534366533613266392f62797465636f6465616c6c69616e63652f7761736d74696d652f6973737565732f38373330&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/issues/8730\" title=\"Object files can only be linked with legacy clang linker on Apple · Issue #8730 · bytecodealliance/wasmtime\">Object files can only be linked with legacy clang linker on Apple · Issue #8730 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Hello, thank you very much for all of the incredible software y'all are writing. I'm currently using Cranelift to generate native binaries for my project, and I'm continually impressed at the level...</div></div></div>",
        "id": 441919798,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717255531
    },
    {
        "content": "<p>Thanks for all the help, both of you. Have a  great weekend! I'm sure I'll be back in the near future.</p>",
        "id": 441919824,
        "sender_full_name": "Alex Hansen",
        "timestamp": 1717255547
    },
    {
        "content": "<p>Happy to help!</p>",
        "id": 441921209,
        "sender_full_name": "bjorn3",
        "timestamp": 1717256082
    }
]