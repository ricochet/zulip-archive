[
    {
        "content": "<p>I've noticed that it seems like cranelift is unable to produce or call C ABI functions. Are there any plans to be able to do so or am I missing something obvious?<br>\nI've also noticed that lots of examples, especially JIT ones, seem to use C ABI in rust to communicate with the jitted functions which are usually platform default ABI, such as fastcall/systemV. Given that rust can choose every ABI that cranelift supports, including the default system ABI, shouldn't these examples all use something like SystemV instead?</p>",
        "id": 360260709,
        "sender_full_name": "PROMETHIA",
        "timestamp": 1684760273
    },
    {
        "content": "<p><code>extern \"C\"</code> in rust is the platform default ABI, so SystemV on Unix and WindowsFastcall on Windows.</p>",
        "id": 360290175,
        "sender_full_name": "bjorn3",
        "timestamp": 1684765805
    },
    {
        "content": "<p>Which examples are you referring to specifically?</p>",
        "id": 360290238,
        "sender_full_name": "bjorn3",
        "timestamp": 1684765819
    },
    {
        "content": "<p>For example, <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/jit/examples/jit-minimal.rs\">https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/jit/examples/jit-minimal.rs</a> transmutes the function pointer to an <code>extern \"C\"</code> pointer and then calls it, but it's declared (implicitly) with e.g. fastcall on windows.<br>\nAnd I thought <code>extern \"system\"</code> in rust was platform default, <code>extern \"C\"</code> is C ABI?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/jit/examples/jit-minimal.rs\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/5c447144bb8db712f6bdebcccf5ea156c5b60a6f\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f393438336138613638303035343430393233356335323365653064383430613061313634373062393434316561643064633739313265363462326234343434332f62797465636f6465616c6c69616e63652f7761736d74696d65)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/jit/examples/jit-minimal.rs\" title=\"wasmtime/jit-minimal.rs at main · bytecodealliance/wasmtime\">wasmtime/jit-minimal.rs at main · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A fast and secure runtime for WebAssembly. Contribute to bytecodealliance/wasmtime development by creating an account on GitHub.</div></div></div>",
        "id": 360292791,
        "sender_full_name": "PROMETHIA",
        "timestamp": 1684766368
    },
    {
        "content": "<p><code>make_signature()</code> uses the C abi by default.</p>",
        "id": 360294441,
        "sender_full_name": "bjorn3",
        "timestamp": 1684766751
    },
    {
        "content": "<p>On 32bit x86 Windows there is a difference between <code>extern \"system\"</code> which is used for system libraries and <code>extern \"C\"</code> which is used for the rest. On every other system there is no difference. I have been referring to <code>extern \"C\"</code> as platform default.</p>",
        "id": 360294799,
        "sender_full_name": "bjorn3",
        "timestamp": 1684766823
    },
    {
        "content": "<p>Ah, I see. I thought C ABI was referring to a concrete ABI such as <code>cdecl</code>, not referring to \"whatever the system C compiler uses\". That makes more sense. Thank you!</p>",
        "id": 360296298,
        "sender_full_name": "PROMETHIA",
        "timestamp": 1684767154
    }
]