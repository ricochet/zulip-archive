[
    {
        "content": "<p>I'm running into a SIGSEGV when calling a JITed function. I'm following along with the JIT demo. I had a theory that this was because I dropped JIT engine, but keeping it alive did not change a thing.<br>\nFunction.display() looks like this, which does not seem suspicious to me:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">u0</span>:<span class=\"mi\">0</span><span class=\"p\">(</span><span class=\"kt\">f64</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">f64</span> <span class=\"nc\">system_v</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">f64</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">f64const</span><span class=\"w\"> </span><span class=\"mf\">0.0</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 261176568,
        "sender_full_name": "Ivan Chinenov",
        "timestamp": 1636659643
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"455945\">@Ivan Chinenov</span> that CLIF code looks correct; unfortunately it's probably hard to say more without digging in with a debugger</p>",
        "id": 261176727,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1636659751
    },
    {
        "content": "<p>It would help to know whether the crash happens in the JIT'd code or somewhere else; also it might be helpful to try to instruction-step (<code>si</code> in gdb) into the call from your code to the JIT function pointer and see what is happening</p>",
        "id": 261176808,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1636659796
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"254389\">@Chris Fallin</span> I have tried stepping into JITed function with LLDB, but LLDB errored out with \"Can't read instruction at this address\". Next \"step into\" and I end up in signal handler.</p>",
        "id": 261177012,
        "sender_full_name": "Ivan Chinenov",
        "timestamp": 1636659918
    },
    {
        "content": "<p>OK, that indicates then that the function pointer is probably invalid</p>",
        "id": 261177029,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1636659934
    },
    {
        "content": "<p>if you post your code (a minimal reproduction of the problem) in a gist or something of the sort, someone here may be able to see something wrong; there's very little information here to help diagnose otherwise</p>",
        "id": 261177126,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1636659999
    },
    {
        "content": "<p>Here is my jit code <a href=\"https://github.com/JohnDowson/CraneLisp/blob/main/src/jit.rs\">https://github.com/JohnDowson/CraneLisp/blob/main/src/jit.rs</a> it is coincidentally just enough code as needed to try calling a JITed function</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/JohnDowson/CraneLisp/blob/main/src/jit.rs\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/f88e1bef16e91c0eaa00247b5ece99428e15bd7a\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f336165303236636435353431386537343765636362633365666333343138613135623261666235623938306639646330633131663233376339626634646366372f4a6f686e446f77736f6e2f4372616e654c697370)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/JohnDowson/CraneLisp/blob/main/src/jit.rs\" title=\"CraneLisp/jit.rs at main 路 JohnDowson/CraneLisp\">CraneLisp/jit.rs at main 路 JohnDowson/CraneLisp</a></div><div class=\"message_embed_description\">Lisp in rust using cranelift as compiler backend. Contribute to JohnDowson/CraneLisp development by creating an account on GitHub.</div></div></div>",
        "id": 261177403,
        "sender_full_name": "Ivan Chinenov",
        "timestamp": 1636660166
    },
    {
        "content": "<p>ok, thanks; possibly someone who has embedded the JIT API directly can see if there's something suspicious? (cc <span class=\"user-mention\" data-user-id=\"264278\">@bjorn3</span> maybe?)</p>",
        "id": 261177831,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1636660438
    },
    {
        "content": "<p>in the meantime I'd encourage more fine-grained debugging; what is the actual function pointer value, where did it come from, where was that memory allocated, was it valid at one time then freed or not (memory watchpoints are maybe helpful here), etc</p>",
        "id": 261177893,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1636660472
    },
    {
        "content": "<p>/me is looking...</p>",
        "id": 261178041,
        "sender_full_name": "bjorn3",
        "timestamp": 1636660570
    },
    {
        "content": "<p>One problem I see is that at <a href=\"https://github.com/JohnDowson/CraneLisp/blob/60846e2d4b773fa39792264011c13da00589c083/src/eval.rs#L95\">https://github.com/JohnDowson/CraneLisp/blob/60846e2d4b773fa39792264011c13da00589c083/src/eval.rs#L95</a> you need to use <code>extern \"C\" fn</code> and not plain <code>fn</code>. The later will use the rust abi, which is unstable.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/JohnDowson/CraneLisp/blob/60846e2d4b773fa39792264011c13da00589c083/src/eval.rs#L95\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/f88e1bef16e91c0eaa00247b5ece99428e15bd7a\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f336165303236636435353431386537343765636362633365666333343138613135623261666235623938306639646330633131663233376339626634646366372f4a6f686e446f77736f6e2f4372616e654c697370)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/JohnDowson/CraneLisp/blob/60846e2d4b773fa39792264011c13da00589c083/src/eval.rs#L95\" title=\"CraneLisp/eval.rs at 60846e2d4b773fa39792264011c13da00589c083 路 JohnDowson/CraneLisp\">CraneLisp/eval.rs at 60846e2d4b773fa39792264011c13da00589c083 路 JohnDowson/CraneLisp</a></div><div class=\"message_embed_description\">Lisp in rust using cranelift as compiler backend. Contribute to JohnDowson/CraneLisp development by creating an account on GitHub.</div></div></div>",
        "id": 261178315,
        "sender_full_name": "bjorn3",
        "timestamp": 1636660783
    },
    {
        "content": "<p>ah! at that line, could <code>ptr</code> be a &amp;*const u8? (auto-borrowing behavior of the <code>match</code> on <code>self</code>)</p>",
        "id": 261178470,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1636660857
    },
    {
        "content": "<p>Update: after a closer look with a debugger, I realized what was wrong.</p>",
        "id": 261178473,
        "sender_full_name": "Ivan Chinenov",
        "timestamp": 1636660860
    },
    {
        "content": "<p>so the transmute is turning a poitner into the pointer into the code pointer</p>",
        "id": 261178501,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1636660872
    },
    {
        "content": "<p>I was transmuting a ref to the pointer</p>",
        "id": 261178506,
        "sender_full_name": "Ivan Chinenov",
        "timestamp": 1636660874
    },
    {
        "content": "<p>yep, <code>transmute</code> is a horribly dangerous thing, I usually try to sprinkle type annotations liberally around it to make sure I'm doing the right thing</p>",
        "id": 261178558,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1636660913
    },
    {
        "content": "<p>anyway, happy the issue was found!</p>",
        "id": 261178596,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1636660924
    },
    {
        "content": "<p>Thanks for your time <span class=\"user-mention\" data-user-id=\"254389\">@Chris Fallin</span> <span class=\"user-mention\" data-user-id=\"264278\">@bjorn3</span></p>",
        "id": 261178734,
        "sender_full_name": "Ivan Chinenov",
        "timestamp": 1636660990
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"254389\">Chris Fallin</span> has marked this topic as resolved.</p>",
        "id": 261179036,
        "sender_full_name": "Notification Bot",
        "timestamp": 1636661148
    }
]