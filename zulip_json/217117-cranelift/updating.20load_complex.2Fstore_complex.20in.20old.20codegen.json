[
    {
        "content": "<p>I'm looking at some code which someone wrote back in <code>cranelift = 0.66</code> -- and they used <code>load_complex</code> and <code>store_complex</code> instructions, which allowed you to pass a dynamic offset (a <code>Value</code> instead of something which has <code>Into&lt;Offset32&gt;</code>). What's the correct way to update this codegen now?</p>",
        "id": 286302995,
        "sender_full_name": "McCoy",
        "timestamp": 1655351244
    },
    {
        "content": "<p>Second, I'm running into an issue with the binary format returned by <code>lookup_by_name</code></p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">shared_builder</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">settings</span>::<span class=\"n\">builder</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">shared_flags</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">settings</span>::<span class=\"n\">Flags</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">shared_builder</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">codegen_flags</span>: <span class=\"nc\">settings</span>::<span class=\"n\">Flags</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">settings</span>::<span class=\"n\">Flags</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">settings</span>::<span class=\"n\">builder</span><span class=\"p\">());</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">isa_builder</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">isa</span>::<span class=\"n\">lookup_by_name</span><span class=\"p\">(</span><span class=\"s\">\"x86_64\"</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">isa</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">isa_builder</span><span class=\"p\">.</span><span class=\"n\">finish</span><span class=\"p\">(</span><span class=\"n\">shared_flags</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">module</span>: <span class=\"nc\">ObjectModule</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">ObjectModule</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">ObjectBuilder</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">isa</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"c1\">// TODO: what is this?</span>\n<span class=\"w\">            </span><span class=\"n\">default_libcall_names</span><span class=\"p\">(),</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">unwrap</span><span class=\"p\">(),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">);</span><span class=\"w\"></span>\n</code></pre></div>\n<p>In the compile, when I run it -- it panics</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">called</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Result</span>::<span class=\"n\">unwrap</span><span class=\"p\">()</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Err</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">value</span>: <span class=\"nc\">Backend</span><span class=\"p\">(</span><span class=\"n\">binary</span><span class=\"w\"> </span><span class=\"n\">format</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">unknown</span><span class=\"p\">)</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">38</span>:<span class=\"mi\">10</span><span class=\"w\"></span>\n<span class=\"n\">note</span>: <span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"w\"></span>\n</code></pre></div>\n<p>I honestly can't figure out why from looking at the <code>cranelift</code> APIs.</p>",
        "id": 286304311,
        "sender_full_name": "McCoy",
        "timestamp": 1655352847
    },
    {
        "content": "<p>To answer your second question: You should pass in a full triple to <code>lookup_by_name</code>, not just the target arch. So for example <code>x86_64-unknown-linux-gnu</code>. Otherwise cranelift_object doesn't know which OS to use the object file format for.</p>",
        "id": 286305500,
        "sender_full_name": "bjorn3",
        "timestamp": 1655354487
    },
    {
        "content": "<p>To answer the first question you can use zero or more iadd instructions before a load/store instruction to compute the address.</p>",
        "id": 286305588,
        "sender_full_name": "bjorn3",
        "timestamp": 1655354558
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"264278\">@bjorn3</span> do you know how to find a list of all targets?</p>",
        "id": 286306061,
        "sender_full_name": "McCoy",
        "timestamp": 1655355174
    },
    {
        "content": "<p>See the target_lexicon crate. Basically whatever the latest stable rustc version supports I believe.</p>",
        "id": 286306088,
        "sender_full_name": "bjorn3",
        "timestamp": 1655355213
    },
    {
        "content": "<p>Re -- I performed some surgery. I changed instructions, and tested code generation on a Linux box. However, when I try to run the compiler on an Apple M1 -- I get linking warnings:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">ld</span>: <span class=\"nc\">warning</span>: <span class=\"nc\">PIE</span><span class=\"w\"> </span><span class=\"n\">disabled</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">Absolute</span><span class=\"w\"> </span><span class=\"n\">addressing</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">perhaps</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">mdynamic</span><span class=\"o\">-</span><span class=\"n\">no</span><span class=\"o\">-</span><span class=\"n\">pic</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">allowed</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">code</span><span class=\"w\"> </span><span class=\"n\">signed</span><span class=\"w\"> </span><span class=\"n\">PIE</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">but</span><span class=\"w\"> </span><span class=\"n\">used</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">_</span>#<span class=\"n\">cc_L</span><span class=\"w\"> </span><span class=\"n\">from</span><span class=\"w\"> </span><span class=\"n\">ack</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">To</span><span class=\"w\"> </span><span class=\"n\">fix</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">warning</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">don</span><span class=\"o\">'</span><span class=\"na\">t</span><span class=\"w\"> </span><span class=\"n\">compile</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">mdynamic</span><span class=\"o\">-</span><span class=\"n\">no</span><span class=\"o\">-</span><span class=\"n\">pic</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">link</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Wl</span><span class=\"p\">,</span><span class=\"o\">-</span><span class=\"n\">no_pie</span><span class=\"w\"></span>\n</code></pre></div>\n<p>and if I try to execute the binaries, I get bus errors. I don't fully understand why this occurs, but I know the parts of my language which are causing these issues for <code>x86-64-apple-darwin</code> (?)</p>",
        "id": 286685079,
        "sender_full_name": "McCoy",
        "timestamp": 1655608571
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">thread</span><span class=\"w\"> </span>#<span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">stop</span><span class=\"w\"> </span><span class=\"n\">reason</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">EXC_BAD_ACCESS</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">code</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">address</span><span class=\"o\">=</span><span class=\"mh\">0x100003da3</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">frame</span><span class=\"w\"> </span>#<span class=\"mi\">0</span>: <span class=\"mh\">0x00000002000249a8</span><span class=\"w\"> </span><span class=\"n\">dyld</span><span class=\"err\">`</span><span class=\"n\">invocation</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">block</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">dyld4</span>::<span class=\"n\">Loader</span>::<span class=\"n\">applyFixupsGeneric</span><span class=\"p\">(</span><span class=\"n\">Diagnostics</span><span class=\"o\">&amp;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">dyld4</span>::<span class=\"n\">RuntimeState</span><span class=\"o\">&amp;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">dyld3</span>::<span class=\"n\">Array</span><span class=\"o\">&lt;</span><span class=\"n\">void</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"o\">*&gt;</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"o\">&amp;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">dyld3</span>::<span class=\"n\">Array</span><span class=\"o\">&lt;</span><span class=\"n\">void</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"o\">*&gt;</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"o\">&amp;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">bool</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">dyld3</span>::<span class=\"n\">Array</span><span class=\"o\">&lt;</span><span class=\"n\">dyld4</span>::<span class=\"n\">Loader</span>::<span class=\"n\">MissingFlatLazySymbol</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"o\">&amp;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">149</span><span class=\"w\"></span>\n<span class=\"n\">dyld</span><span class=\"err\">`</span><span class=\"n\">invocation</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">block</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">dyld4</span>::<span class=\"n\">Loader</span>::<span class=\"n\">applyFixupsGeneric</span><span class=\"p\">(</span><span class=\"n\">Diagnostics</span><span class=\"o\">&amp;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">dyld4</span>::<span class=\"n\">RuntimeState</span><span class=\"o\">&amp;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">dyld3</span>::<span class=\"n\">Array</span><span class=\"o\">&lt;</span><span class=\"n\">void</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"o\">*&gt;</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"o\">&amp;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">dyld3</span>::<span class=\"n\">Array</span><span class=\"o\">&lt;</span><span class=\"n\">void</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"o\">*&gt;</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"o\">&amp;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">bool</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">dyld3</span>::<span class=\"n\">Array</span><span class=\"o\">&lt;</span><span class=\"n\">dyld4</span>::<span class=\"n\">Loader</span>::<span class=\"n\">MissingFlatLazySymbol</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"o\">&amp;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">const</span>:\n-&gt;  <span class=\"mh\">0x2000249a8</span><span class=\"w\"> </span><span class=\"o\">&lt;+</span><span class=\"mi\">149</span><span class=\"o\">&gt;</span>: <span class=\"nc\">movq</span><span class=\"w\">   </span><span class=\"o\">%</span><span class=\"n\">r15</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">r14</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"mh\">0x2000249ab</span><span class=\"w\"> </span><span class=\"o\">&lt;+</span><span class=\"mi\">152</span><span class=\"o\">&gt;</span>: <span class=\"nc\">cmpq</span><span class=\"w\">   </span><span class=\"mh\">0x50</span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">r12</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r15</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"mh\">0x2000249b0</span><span class=\"w\"> </span><span class=\"o\">&lt;+</span><span class=\"mi\">157</span><span class=\"o\">&gt;</span>: <span class=\"nc\">je</span><span class=\"w\">     </span><span class=\"mh\">0x2000249c1</span><span class=\"w\">               </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"o\">&lt;+</span><span class=\"mi\">174</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"mh\">0x2000249b2</span><span class=\"w\"> </span><span class=\"o\">&lt;+</span><span class=\"mi\">159</span><span class=\"o\">&gt;</span>: <span class=\"nc\">addq</span><span class=\"w\">   </span><span class=\"cp\">$</span><span class=\"mh\">0x18</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rsp</span><span class=\"w\"></span>\n</code></pre></div>\n<p>here's the breaking point from <code>lldb</code> -- it seems like this is actually a linker issue, but I'm not sure if it's also a cranelift codegen issue.</p>",
        "id": 286707400,
        "sender_full_name": "McCoy",
        "timestamp": 1655641808
    },
    {
        "content": "<p>Is that when trying to build and run a project that uses cranelift or when trying to link and run a program compiled using cranelift?</p>",
        "id": 286709515,
        "sender_full_name": "bjorn3",
        "timestamp": 1655644847
    },
    {
        "content": "<p>Link and run a program compiled using cranelift.</p>",
        "id": 286709697,
        "sender_full_name": "McCoy",
        "timestamp": 1655645056
    },
    {
        "content": "<p>I can send <code>clang</code> flags, etc -- as well. I generate object code with <code>cranelift</code> -- then run into bus errors, which turn out to be dynamic linking errors (like above).</p>\n<p>Before this point, there's no indication that anything is \"wrong\" per say, except for the PIE warning.</p>",
        "id": 286709731,
        "sender_full_name": "McCoy",
        "timestamp": 1655645117
    },
    {
        "content": "<p>Also, my data structures are aligned on word boundaries, as far as I can tell.</p>\n<p>But even if they we're not -- <code>put</code> to an address not on a word boundary shouldn't error if Rosetta emulation is faithful to x86_64.</p>",
        "id": 286709799,
        "sender_full_name": "McCoy",
        "timestamp": 1655645176
    },
    {
        "content": "<p>I can tell this may be a pretty niche problem -- compiling to <code>x86_64-apple-darwin</code> then running using Rosetta on an M1. I wasn't sure if this code path was fully supported yet.</p>",
        "id": 286709891,
        "sender_full_name": "McCoy",
        "timestamp": 1655645294
    },
    {
        "content": "<p>Which flags are you setting when creating the <code>TargetIsa</code>?</p>",
        "id": 286720567,
        "sender_full_name": "bjorn3",
        "timestamp": 1655659819
    },
    {
        "content": "<p>Maybe you need to set <code>is_pic</code>? <a href=\"https://github.com/bjorn3/rustc_codegen_cranelift/blob/c431540544a03dc09577df4b97afd868deb167e5/src/lib.rs#L242\">https://github.com/bjorn3/rustc_codegen_cranelift/blob/c431540544a03dc09577df4b97afd868deb167e5/src/lib.rs#L242</a><br>\nEdit: I'm pretty sure you need to set it.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bjorn3/rustc_codegen_cranelift/blob/c431540544a03dc09577df4b97afd868deb167e5/src/lib.rs#L242\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/1b0e69462200a56f9dfc4ef9a24dd2c2fe1d2776\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f636461616665393935303433613361623261663666316337393963376465313131376536333736666230626166636662626461303861666130373663393135342f626a6f726e332f72757374635f636f646567656e5f6372616e656c696674)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bjorn3/rustc_codegen_cranelift/blob/c431540544a03dc09577df4b97afd868deb167e5/src/lib.rs#L242\" title=\"rustc_codegen_cranelift/lib.rs at c431540544a03dc09577df4b97afd868deb167e5 · bjorn3/rustc_codegen_cranelift\">rustc_codegen_cranelift/lib.rs at c431540544a03dc09577df4b97afd868deb167e5 · bjorn3/rustc_codegen_cranelift</a></div><div class=\"message_embed_description\">Cranelift based backend for rustc. Contribute to bjorn3/rustc_codegen_cranelift development by creating an account on GitHub.</div></div></div>",
        "id": 286720571,
        "sender_full_name": "bjorn3",
        "timestamp": 1655659832
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"449589\">@McCoy</span></p>",
        "id": 286720574,
        "sender_full_name": "bjorn3",
        "timestamp": 1655659840
    },
    {
        "content": "<p>I actually set <code>is_pic</code> recently, had no effect.</p>",
        "id": 286722545,
        "sender_full_name": "McCoy",
        "timestamp": 1655662279
    },
    {
        "content": "<p><a href=\"https://github.com/femtomc/wowcaml/blob/a3467a631de3eb58f50fb1518bd48dd394079449/src/backend/cranelift.rs#L33-L46\">https://github.com/femtomc/wowcaml/blob/a3467a631de3eb58f50fb1518bd48dd394079449/src/backend/cranelift.rs#L33-L46</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/femtomc/wowcaml/blob/a3467a631de3eb58f50fb1518bd48dd394079449/src/backend/cranelift.rs#L33-L46\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/d3d93e7a5d6a0767ba0aaa9161f53d189d5a426a\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f376434323730653162353835656161336633346438336262396430623934376332623231363365353337373037373231656166326634373138303430363934322f66656d746f6d632f776f7763616d6c)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/femtomc/wowcaml/blob/a3467a631de3eb58f50fb1518bd48dd394079449/src/backend/cranelift.rs#L33-L46\" title=\"wowcaml/cranelift.rs at a3467a631de3eb58f50fb1518bd48dd394079449 · femtomc/wowcaml\">wowcaml/cranelift.rs at a3467a631de3eb58f50fb1518bd48dd394079449 · femtomc/wowcaml</a></div><div class=\"message_embed_description\">Contribute to femtomc/wowcaml development by creating an account on GitHub.</div></div></div>",
        "id": 286722558,
        "sender_full_name": "McCoy",
        "timestamp": 1655662313
    },
    {
        "content": "<p>That doesn't set <code>is_pic</code>. It merely checks if it is already enabled. You need <code>flags_builder.enable(\"is_pic\").unwrap();</code> to enable it.</p>",
        "id": 286776642,
        "sender_full_name": "bjorn3",
        "timestamp": 1655721461
    },
    {
        "content": "<p>Also you shouldn't use <code>use_colocated_libcalls</code> as you don't provide the libcalls yourself, but depend on libc which is unlikely to be within 128MiB of your executable on AArch64.</p>",
        "id": 286776741,
        "sender_full_name": "bjorn3",
        "timestamp": 1655721514
    },
    {
        "content": "<p>ah! thank you</p>",
        "id": 286794025,
        "sender_full_name": "McCoy",
        "timestamp": 1655731387
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"264278\">@bjorn3</span> perhaps we should change the documentation: <a href=\"https://docs.rs/cranelift/latest/cranelift/prelude/settings/struct.Flags.html#method.is_pic\">https://docs.rs/cranelift/latest/cranelift/prelude/settings/struct.Flags.html#method.is_pic</a></p>\n<p>this says \"Enable ...\" which confused me.</p>",
        "id": 286801066,
        "sender_full_name": "McCoy",
        "timestamp": 1655734600
    },
    {
        "content": "<p>Yeah. Maybe open an issue?</p>",
        "id": 286801718,
        "sender_full_name": "bjorn3",
        "timestamp": 1655734875
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"264278\">@bjorn3</span>  do you mean <code>builder.set(\"is_pic\", \"true\")</code> (?)</p>",
        "id": 286802400,
        "sender_full_name": "McCoy",
        "timestamp": 1655735133
    },
    {
        "content": "<p><code>builder.set(\"is_pic\", \"true\")</code> and <code>builder.enable(\"is_pic\")</code> are equivalent.</p>",
        "id": 286802520,
        "sender_full_name": "bjorn3",
        "timestamp": 1655735172
    },
    {
        "content": "<p>Turned out that setting this flag enabled fixed code generation -- no more bus errors! Thank you <span class=\"user-mention\" data-user-id=\"264278\">@bjorn3</span></p>",
        "id": 286906249,
        "sender_full_name": "McCoy",
        "timestamp": 1655815084
    },
    {
        "content": "<p>Re -- I am surprised that that just emits a linker warning...</p>",
        "id": 286911369,
        "sender_full_name": "McCoy",
        "timestamp": 1655817437
    },
    {
        "content": "<p>Perhaps that means that there is a bug in Rosetta</p>",
        "id": 286911409,
        "sender_full_name": "McCoy",
        "timestamp": 1655817457
    },
    {
        "content": "<p>I don't think it is too uncommon for linkers to emit just a warning when they created an executable that is not correct, rather than error.</p>",
        "id": 286957331,
        "sender_full_name": "bjorn3",
        "timestamp": 1655836811
    }
]