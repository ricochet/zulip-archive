[
    {
        "content": "<p>I stumbled across <a href=\"https://github.com/tkaitchuck/aHash/issues/222\">https://github.com/tkaitchuck/aHash/issues/222</a> today and using Afonso's freshly-added support to the compiler explorer whipped up <a href=\"https://godbolt.org/z/j6YEv81MM\">https://godbolt.org/z/j6YEv81MM</a> to show how cranelift's doing quite a good job relative native by eating through all the swap_bytes expansions that llvm inserts</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/tkaitchuck/aHash/issues/222\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/d95ef5dce40d4605ed221f64b1e1e76f0b54589a/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f366263376239613863373961323137346232666332313863353138666135666439636237333961356138616432633236646531646536396131343532626437342f746b616974636875636b2f61486173682f6973737565732f323232&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/tkaitchuck/aHash/issues/222\" title=\"Work around `swap_bytes` on WebAssembly · Issue #222 · tkaitchuck/aHash\">Work around `swap_bytes` on WebAssembly · Issue #222 · tkaitchuck/aHash</a></div><div class=\"message_embed_description\">Unfortunately neither u128 nor swap_bytes are supported directly by WebAssembly. So both implementations of folded_multiply are very slow. I think an algorithm that takes both u64 values, turns the...</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://godbolt.org/z/j6YEv81MM\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/4bf336f7597f851df0732b12f8d4b7b383508ec8/68747470733a2f2f6769746875622e636f6d2f636f6d70696c65722d6578706c6f7265722f696e6672612f626c6f622f6d61696e2f6c6f676f2f66617669636f6e2e706e673f7261773d74727565&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://godbolt.org/z/j6YEv81MM\" title=\"Compiler Explorer\">Compiler Explorer</a></div><div class=\"message_embed_description\">Compiler Explorer is an interactive online compiler which shows the assembly output of compiled C++, Rust, Go (and many more) code.</div></div></div>",
        "id": 446999232,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1719350205
    },
    {
        "content": "<p>just figured it was neat and wanted to share</p>",
        "id": 446999253,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1719350212
    },
    {
        "content": "<p>Super neat being able to see all of this in a single screen!</p>",
        "id": 446999661,
        "sender_full_name": "Afonso Bordado",
        "timestamp": 1719350306
    },
    {
        "content": "<p>nice :)</p>",
        "id": 447000847,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1719350663
    },
    {
        "content": "<p>I completely randomly stumbled upon this just now, and then additionally stumbled upon the fact that the Wasmtime output is pretty different with Wasmtime 22—the latest version available on Godbolt: <a href=\"https://godbolt.org/z/3W8j8MG9n\">https://godbolt.org/z/3W8j8MG9n</a></p>\n<p>It looks like maybe that's just a matter of more details being printed? I have no idea where the <code>wasm_to_array_trampoline</code> comes from, though</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://godbolt.org/z/3W8j8MG9n\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/4bf336f7597f851df0732b12f8d4b7b383508ec8/68747470733a2f2f6769746875622e636f6d2f636f6d70696c65722d6578706c6f7265722f696e6672612f626c6f622f6d61696e2f6c6f676f2f66617669636f6e2e706e673f7261773d74727565&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://godbolt.org/z/3W8j8MG9n\" title=\"Compiler Explorer\">Compiler Explorer</a></div><div class=\"message_embed_description\">Compiler Explorer is an interactive online compiler which shows the assembly output of compiled C++, Rust, Go (and many more) code.</div></div></div>",
        "id": 468568066,
        "sender_full_name": "Till Schneidereit",
        "timestamp": 1725802551
    },
    {
        "content": "<blockquote>\n<p>I have no idea where the <code>wasm_to_array_trampoline</code> comes from, though</p>\n</blockquote>\n<p>Oh, when we compile wasm in godbolt we compile it into a binary and then dissasemble it. We then filter out some of the trampoline functions that wasmtime includes in the binary, that must be broken somehow.</p>",
        "id": 468585907,
        "sender_full_name": "Afonso Bordado",
        "timestamp": 1725809163
    },
    {
        "content": "<p>ah, that makes sense—thank you!</p>",
        "id": 468774767,
        "sender_full_name": "Till Schneidereit",
        "timestamp": 1725884110
    }
]