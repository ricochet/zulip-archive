[
    {
        "content": "<p>Sorry if this is the wrong stream but I don't think there is one for regalloc2(?)<br>\nI'm currently hacking a bit on regalloc2 with the current main branch. Now to make the new regalloc trait work with wasmtime I simply removed the <code>is_move</code> function from the trait impl in cranelift.<br>\nNow, when running the <code>func::import_works</code> (<a href=\"https://github.com/bytecodealliance/wasmtime/blob/9dd0b59c2a3ea72278f250080bf5e2b042e2951b/tests/all/func.rs#L123\">link</a>) test I get a segfault.<br>\nThis is because the emit code for the call <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/codegen/src/machinst/abi.rs#L2242-L2253\">generates a move</a> for the last call in the test because the sixth argument is a reftype and thus can't be used with an <code>OperandConstraint::Reg</code> for the call but due to the calling conv it needs to be in a reg. However, this move never gets emitted because regalloc2 doesn't know that its a move anymore and cranelift <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/codegen/src/machinst/vcode.rs#L929\">assumes regalloc2 emitted the move</a>.</p>\n<p>Now I think my question is, is the move skipping in cranelift incorrect? Removing it seems to do the trick but I don't know if that's gonna break something else. Also, if the register allocator chooses to use the same reg that now emits the move anyway, though that's a small concern.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/9dd0b59c2a3ea72278f250080bf5e2b042e2951b/tests/all/func.rs#L123\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/7c22f5db4d4389b56a817877b3c9644e94110240\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f633030383837376266633661303336643135396661616332643263643635323433346561633134663063376239306562653263623063626431386430393633382f62797465636f6465616c6c69616e63652f7761736d74696d65)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/9dd0b59c2a3ea72278f250080bf5e2b042e2951b/tests/all/func.rs#L123\" title=\"wasmtime/func.rs at 9dd0b59c2a3ea72278f250080bf5e2b042e2951b · bytecodealliance/wasmtime\">wasmtime/func.rs at 9dd0b59c2a3ea72278f250080bf5e2b042e2951b · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A fast and secure runtime for WebAssembly. Contribute to bytecodealliance/wasmtime development by creating an account on GitHub.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/codegen/src/machinst/abi.rs#L2242-L2253\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/7c22f5db4d4389b56a817877b3c9644e94110240\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f633030383837376266633661303336643135396661616332643263643635323433346561633134663063376239306562653263623063626431386430393633382f62797465636f6465616c6c69616e63652f7761736d74696d65)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/codegen/src/machinst/abi.rs#L2242-L2253\" title=\"wasmtime/abi.rs at main · bytecodealliance/wasmtime\">wasmtime/abi.rs at main · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A fast and secure runtime for WebAssembly. Contribute to bytecodealliance/wasmtime development by creating an account on GitHub.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/codegen/src/machinst/vcode.rs#L929\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/7c22f5db4d4389b56a817877b3c9644e94110240\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f633030383837376266633661303336643135396661616332643263643635323433346561633134663063376239306562653263623063626431386430393633382f62797465636f6465616c6c69616e63652f7761736d74696d65)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/codegen/src/machinst/vcode.rs#L929\" title=\"wasmtime/vcode.rs at main · bytecodealliance/wasmtime\">wasmtime/vcode.rs at main · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A fast and secure runtime for WebAssembly. Contribute to bytecodealliance/wasmtime development by creating an account on GitHub.</div></div></div>",
        "id": 350058151,
        "sender_full_name": "T0b1",
        "timestamp": 1681511998
    },
    {
        "content": "<p>I don't personally understand enough of RA2 to answer your question, but I just want to say that I think this is a fine stream to ask this question in.</p>",
        "id": 350059147,
        "sender_full_name": "Jamey Sharp",
        "timestamp": 1681512410
    },
    {
        "content": "<p>Could you add more context on what you're trying to do / what you've done already? You'r switching Cranelift to use a more recent version of RA2?</p>",
        "id": 350059195,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1681512430
    },
    {
        "content": "<p>The line you linked (the conditional to skip instructions) should no longer exist, either, since RA2 no longer elides program moves (by CL's definition)</p>",
        "id": 350059302,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1681512478
    },
    {
        "content": "<p>with that fix, I suspect/hope that your upgrade works</p>",
        "id": 350059354,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1681512486
    },
    {
        "content": "<p>(I don't have much mental bandwidth to put on this right now but if there's a true issue, beyond the above, we'll need to debug it when we next upgrade RA2 in CL. cc <span class=\"user-mention\" data-user-id=\"506239\">@Trevor Elliott</span> as well)</p>",
        "id": 350059452,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1681512530
    },
    {
        "content": "<p>I have a branch where I've updated to a newer version of RA2, but I have only tried running filetests and sightglass benchmarks with it so far.</p>",
        "id": 350063274,
        "sender_full_name": "Trevor Elliott",
        "timestamp": 1681514143
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"254389\">Chris Fallin</span> <a href=\"#narrow/stream/217117-cranelift/topic/regalloc2.3A.20Question.20about.20removal.20of.20program.20moves/near/350059195\">said</a>:</p>\n<blockquote>\n<p>Could you add more context on what you're trying to do / what you've done already? You'r switching Cranelift to use a more recent version of RA2?</p>\n</blockquote>\n<p>Yes, I'm trying to prototype a greedy approach to see how much compile time improvements you could (possibly) get (as that is related to my bachelor thesis I finished recently and it's also fun). As such I thought starting with the current main for regalloc2 is better since cranelift will move to it eventually (and simply removing the trait impls for <code>is_move</code> made it compile at least).</p>\n<p>I just ran into this problem trying to see if my implementation of the allocator had any problems and was a bit confused about what exactly was the 'incorrect' code in cranelift. The tests seem to pass now so thanks!</p>",
        "id": 350063610,
        "sender_full_name": "T0b1",
        "timestamp": 1681514319
    },
    {
        "content": "<p>OK, cool. Let us know if removing the line linked above solves the problem. If not, we can help debug further at some point!</p>",
        "id": 350068600,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1681517571
    },
    {
        "content": "<p>Just to follow up here, I finished upgrading cranelift to regalloc2-0.7.0, so you should be able to rebase on main and have it just work <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 351730164,
        "sender_full_name": "Trevor Elliott",
        "timestamp": 1682110202
    },
    {
        "content": "<p>Thanks! I'll check it out</p>",
        "id": 351741877,
        "sender_full_name": "T0b1",
        "timestamp": 1682115291
    }
]