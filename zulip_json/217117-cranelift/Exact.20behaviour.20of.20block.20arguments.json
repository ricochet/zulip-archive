[
    {
        "content": "<p>Here's a question. Does passing a slice of values as block args make those values valid to use withing said block, or does it emit new <code>Value</code>s referencing the same SSA value?</p>",
        "id": 430237722,
        "sender_full_name": "Ivan Chinenov",
        "timestamp": 1711709330
    },
    {
        "content": "<p>If you pass a slice of values as block args, you need to call <code>append_block_param</code> an equivalent amount of times on the target block. The arguments you pass will then be used as values of the <code>Value</code> returned by <code>append_block_param</code>. You only need to use block arguments when there are multiple sources of a value though. If you have <code>v42</code> defined in <code>block5</code> you can use it in <code>block27</code> just fine for as long as all execution paths to <code>block27</code> pass through <code>block5</code>. For example:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">u0</span>:<span class=\"mi\">0</span><span class=\"p\">(</span><span class=\"kt\">i8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i32</span> <span class=\"nc\">system_v</span><span class=\"w\"> </span><span class=\"p\">{</span>\n\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2</span>: <span class=\"kt\">i32</span><span class=\"p\">)</span>:\n  <span class=\"nc\">br_if</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"p\">(</span><span class=\"n\">v1</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"p\">(</span><span class=\"n\">v2</span><span class=\"p\">)</span>\n\n<span class=\"n\">block1</span><span class=\"p\">(</span><span class=\"n\">v3</span>: <span class=\"kt\">i32</span><span class=\"p\">)</span>:\n  <span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"w\"> </span><span class=\"n\">was</span><span class=\"w\"> </span><span class=\"n\">non</span><span class=\"o\">-</span><span class=\"n\">zero</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"n\">otherwise</span>\n<span class=\"w\">  </span><span class=\"n\">v4</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iadd</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">fine</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">reference</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"n\">here</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">all</span><span class=\"w\"> </span><span class=\"n\">execution</span><span class=\"w\"> </span><span class=\"n\">paths</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">block</span><span class=\"w\"> </span><span class=\"n\">go</span><span class=\"w\"> </span><span class=\"n\">through</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">defining</span><span class=\"w\"> </span><span class=\"n\">block</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">block0</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v4</span>\n<span class=\"p\">}</span>\n</code></pre></div>",
        "id": 430379210,
        "sender_full_name": "bjorn3",
        "timestamp": 1711795598
    }
]