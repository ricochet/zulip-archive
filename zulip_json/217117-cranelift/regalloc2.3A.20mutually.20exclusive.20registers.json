[
    {
        "content": "<p>Hey, I've been working a bit on support for 8 bit operands for ALU instructions on x64 for a project of mine and I was wondering whether regalloc supports mutually exclusive register allocation since for example <code>add ah, dil</code> is not encodable. So I would need a way to tell regalloc that if it allocates e.g. <code>ah</code> for one operand it cannot allocate <code>dil, sil, bpl, r8b, ...</code> for the other. Is that possible?<br>\n(I don't know if this is the right place to ask but there doesn't seem to be a channel for regalloc on this zulip)</p>",
        "id": 314577913,
        "sender_full_name": "T0b1",
        "timestamp": 1670455573
    },
    {
        "content": "<p>Unfortunately no, such a constraint isn't possible to encode right now. It's conceptually possible (the first of those to be allocated would impose a condition when looking for a register for the second one) but I'd have to think through how it impacts backtracking...</p>",
        "id": 314578129,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1670455690
    },
    {
        "content": "<p>the simple (if inefficient) solution for now would be to settle on just allocating one kind of 8-bit register (e.g. only the low 8 bits) so you never allocate <code>ah</code></p>",
        "id": 314578169,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1670455723
    },
    {
        "content": "<p>Okay, thanks.</p>",
        "id": 314578419,
        "sender_full_name": "T0b1",
        "timestamp": 1670455824
    }
]