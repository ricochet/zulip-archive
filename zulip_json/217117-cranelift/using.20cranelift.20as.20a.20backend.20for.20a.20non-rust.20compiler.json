[
    {
        "content": "<p>hi, I've been investigating a bunch of compiler backends (LLVM, QBE ), and came across CLIF. my compiler is not written in rust, so i was wondering if there's existing command-line tooling that can accept CLIF and generate executables, or is the only interface via rust?</p>\n<p>the closest i could find is this PR: <a href=\"https://github.com/bytecodealliance/cranelift/pull/872\">https://github.com/bytecodealliance/cranelift/pull/872</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/cranelift/pull/872\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/cranelift/pull/872\" title=\"Add ability to run CLIF IR using `clif-util run [-v] {file}*` by abrown 路 Pull Request #872 路 bytecodealliance/cranelift\">Add ability to run CLIF IR using `clif-util run [-v] {file}*` by abrown 路 Pull Request #872 路 bytecodealliance/cranelift</a></div><div class=\"message_embed_description\">This PR allows users to execute CLIF functions from the command line by running clif-util run [-v] {file}*. It will look for functions with a signature like () -&gt; bool that have a run: comment a...</div></div></div>",
        "id": 212909451,
        "sender_full_name": "Alec Thomas",
        "timestamp": 1602325536
    },
    {
        "content": "<p>There is currently no C api for Cranelift. As for a program that accepts clif ir in text form and creates an executable, there is none either. The main problem here is that cranelift-module (the interface used to \"glue\" multiple functions together) doesn't have a text form. This would be useful for other things too though. I have opened #2285 for this.</p>",
        "id": 212913674,
        "sender_full_name": "bjorn3",
        "timestamp": 1602332862
    },
    {
        "content": "<p>ok, thanks for clarifying</p>",
        "id": 212948438,
        "sender_full_name": "Alec Thomas",
        "timestamp": 1602390864
    },
    {
        "content": "<p>I started on <a href=\"https://gist.github.com/carlokok/d0d079dba76ee253a1571d58f2e791fb\">https://gist.github.com/carlokok/d0d079dba76ee253a1571d58f2e791fb</a>  some time ago (it might/will be slightly out of date); could be a good starting point. I have a version at home that's slightly more up to date.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://gist.github.com/carlokok/d0d079dba76ee253a1571d58f2e791fb\" style=\"background-image: url(https://github.githubassets.com/images/modules/gists/gist-og-image.png)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://gist.github.com/carlokok/d0d079dba76ee253a1571d58f2e791fb\" title=\"lib.rs\">lib.rs</a></div><div class=\"message_embed_description\">GitHub Gist: instantly share code, notes, and snippets.</div></div></div>",
        "id": 213001525,
        "sender_full_name": "Carlo Kok",
        "timestamp": 1602483740
    },
    {
        "content": "<p>generates a fairly decent C header with cbindgen.</p>",
        "id": 213001568,
        "sender_full_name": "Carlo Kok",
        "timestamp": 1602483805
    }
]