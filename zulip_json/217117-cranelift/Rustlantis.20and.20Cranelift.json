[
    {
        "content": "<p>There's a <a href=\"https://ethz.ch/content/dam/ethz/special-interest/infk/inst-pls/plf-dam/documents/StudentProjects/MasterTheses/2023-Andy-Thesis.pdf\">paper going around</a> about a new fuzzer for rustc called Rustlantis. I haven't read it in full yet but I found this part interesting:</p>\n<blockquote>\n<p>Cranelift [13] is a machine code generator developed by Bytecode Alliance.<br>\nIt translates Cranelift IR into target-specific machine instructions. rustc can<br>\ngenerate Cranelift IR and use Cranelift as the machine code generator as an<br>\nalternative to LLVM IR and LLVM. It is comparatively new to LLVM and far<br>\nless widely used, therefore we hypothesised that it may contain more bugs<br>\ndue to its immaturity.</p>\n<p>...</p>\n<p>Despite being new, Cranelift held up well with no bugs discovered by<br>\nRustlantis. Of course, this is not proof that Cranelift is overall more correct<br>\nthan LLVM, but it does serve as evidence in favour of Cranelift. This is likely<br>\nbecause it performs little optimisations and its developers have dedicated<br>\nfuzzing and formal verification efforts to ensure its correctness [13]:</p>\n</blockquote>\n<p>Wanted to highlight this here and also link the paper. Props to bjorn3 for all the work on rustc_codegen_cranelift and all the fuzzing work on Wasmtime which likely led to this!</p>",
        "id": 404709073,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1701201871
    },
    {
        "content": "<p>I also plan on reading this in full in the near future and seeing if it's got ideas we can take inspiration from to fold into <code>wasm-smith</code></p>",
        "id": 404709715,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1701202144
    },
    {
        "content": "<p>That's encouraging to read; thanks for digging that out!</p>",
        "id": 404730688,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1701210635
    }
]