[
    {
        "content": "<p>Hello! I'm building my toy compiler with Cranelift as my backend.<br>\nI'm getting binary format unknown error with the following command (tried this command on both Linux and MacOS):</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">clif</span><span class=\"o\">-</span><span class=\"n\">util</span><span class=\"w\"> </span><span class=\"n\">compile</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">filetests</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">clif</span>\n<span class=\"n\">Error</span>: <span class=\"nc\">Backend</span><span class=\"w\"> </span><span class=\"n\">error</span>: <span class=\"nc\">binary</span><span class=\"w\"> </span><span class=\"n\">format</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">unknown</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"nc\">binary</span><span class=\"w\"> </span><span class=\"n\">format</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">unknown</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"c1\">// main.clif</span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">run</span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i32</span> <span class=\"p\">{</span>\n<span class=\"n\">block0</span>:\n    <span class=\"nc\">v0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"mi\">42</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v0</span>\n<span class=\"p\">}</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">print</span>: <span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">4</span>\n</code></pre></div>\n<p>Can anyone give me some hints for this issue? Both <code>clif-util test</code> and <code>clif-util run</code> can execute perfectly.<br>\nRight now, I'm thinking to compile Cranelift IR into object file, and then link it with dynamic library with gcc, so that I can get an executable.  Or maybe there are alternatives to achieve this goal? Thanks in advanced!</p>",
        "id": 423338764,
        "sender_full_name": "Lee Wei",
        "timestamp": 1708933653
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"689928\">Lee Wei</span> has marked this topic as resolved.</p>",
        "id": 423339306,
        "sender_full_name": "Notification Bot",
        "timestamp": 1708933942
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"689928\">Lee Wei</span> has marked this topic as unresolved.</p>",
        "id": 423339313,
        "sender_full_name": "Notification Bot",
        "timestamp": 1708933947
    },
    {
        "content": "<p>You need to specify the full target I think rather than just the architecture. Otherwise it wouldn't know if the correct object file format to use should be ELF, Mach-O or COFF. Try <code>clif-util compile --target x86_64-apple-darwin -o test.o filetests/main.clif</code> if you want a Mach-O object file.</p>",
        "id": 423374409,
        "sender_full_name": "bjorn3",
        "timestamp": 1708946246
    },
    {
        "content": "<p>On linux you did use <code>x86_64-unknown-linux-gnu</code> as target.</p>",
        "id": 423374464,
        "sender_full_name": "bjorn3",
        "timestamp": 1708946273
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"689928\">@Lee Wei</span></p>",
        "id": 423374669,
        "sender_full_name": "bjorn3",
        "timestamp": 1708946367
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"264278\">@bjorn3</span> Thanks! It worked!</p>",
        "id": 423386709,
        "sender_full_name": "Lee Wei",
        "timestamp": 1708951022
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"689928\">Lee Wei</span> has marked this topic as resolved.</p>",
        "id": 423386724,
        "sender_full_name": "Notification Bot",
        "timestamp": 1708951026
    }
]