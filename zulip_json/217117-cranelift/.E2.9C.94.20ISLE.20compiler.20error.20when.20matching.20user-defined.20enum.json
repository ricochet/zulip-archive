[
    {
        "content": "<p>I wrote the following ISLE code (inside <code>cranelift/codegen/src/isa/aarch64/inst.isle</code>):</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"nc\">AModeNew</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"p\">(</span><span class=\"k\">enum</span>\n        <span class=\"p\">(</span><span class=\"n\">RegOffset</span><span class=\"w\"></span>\n<span class=\"w\">         </span><span class=\"p\">(</span><span class=\"n\">rn</span><span class=\"w\"> </span><span class=\"n\">Reg</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">         </span><span class=\"p\">(</span><span class=\"n\">off</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">         </span><span class=\"p\">(</span><span class=\"n\">ty</span><span class=\"w\"> </span><span class=\"n\">Type</span><span class=\"p\">))</span><span class=\"w\"></span>\n<span class=\"p\">))</span><span class=\"w\"></span>\n\n<span class=\"p\">(</span><span class=\"n\">decl</span><span class=\"w\"> </span><span class=\"n\">load_addr_new</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">AModeNew</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">Reg</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">(</span><span class=\"n\">rule</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">load_addr_new</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">AModeNew</span><span class=\"p\">.</span><span class=\"n\">RegOffset</span><span class=\"w\"> </span><span class=\"n\">r</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">))</span><span class=\"w\"></span>\n</code></pre></div>\n<p>and when I try to rebuild Cranelift, I get the following cryptic ISLE compiler error (which refers to the last line):</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">isa</span><span class=\"o\">/</span><span class=\"n\">aarch64</span><span class=\"o\">/</span><span class=\"n\">inst</span><span class=\"p\">.</span><span class=\"n\">isle</span>:<span class=\"mi\">2545</span>:<span class=\"mi\">1</span>: <span class=\"nc\">type</span><span class=\"w\"> </span><span class=\"n\">error</span>: <span class=\"nc\">Unknown</span><span class=\"w\"> </span><span class=\"n\">term</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">pattern</span>: <span class=\"o\">'</span><span class=\"na\">r</span><span class=\"o\">'</span>\n</code></pre></div>\n<p>The error message also suggests running:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">check</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">-</span><span class=\"n\">codegen</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">features</span><span class=\"w\"> </span><span class=\"n\">isle</span><span class=\"o\">-</span><span class=\"n\">errors</span><span class=\"w\"></span>\n</code></pre></div>\n<p>but that doesn't help. It feels like I am missing something obvious, but I just can't figure out what; I would appreciate any suggestions.</p>",
        "id": 295111754,
        "sender_full_name": "Anton Kirilov",
        "timestamp": 1661369167
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"300050\">@Anton Kirilov</span> the \"Unknown term in pattern\" error is indicating that a \"term\" lookup (for the first symbol in a paren expression) failed; so I would expect source code like <code>(r ...)</code> to produce such an error (the <code>r</code> is the term here). I'm surprised it's picking up the <code>r</code> in the second position in that way. Do you have a branch (even just a WIP commit) somewhere I can reproduce this and play with it?</p>",
        "id": 295112988,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1661369613
    },
    {
        "content": "<p>... oh, nevermind, I see it</p>",
        "id": 295113094,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1661369651
    },
    {
        "content": "<p>the <code>(r)</code> in your right-hand side is the issue: it is invoking <code>r</code> as if it were a constructor</p>",
        "id": 295113130,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1661369664
    },
    {
        "content": "<p>I think remove the parens around that and it'll work?</p>",
        "id": 295113142,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1661369669
    },
    {
        "content": "<p>separately, <a href=\"https://github.com/bytecodealliance/wasmtime/blob/94bcbe844612306c136193f41f5cbdeec45a42ec/cranelift/isle/isle/src/sema.rs#L1785\">this</a> error message is I think the one that's firing and should say \"Unknown term in expression\" rather than \"Unknown term in pattern\"; that's part of the confusion here I think</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/94bcbe844612306c136193f41f5cbdeec45a42ec/cranelift/isle/isle/src/sema.rs#L1785\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/224da2405a6f2cab03fe8aa2f9e1ce16012dd89f\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f386339643031333435383638623934366633616265393438343966333163303966353832356232633530356366373961356638326433633737396537383166662f62797465636f6465616c6c69616e63652f7761736d74696d65)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/94bcbe844612306c136193f41f5cbdeec45a42ec/cranelift/isle/isle/src/sema.rs#L1785\" title=\"wasmtime/sema.rs at 94bcbe844612306c136193f41f5cbdeec45a42ec · bytecodealliance/wasmtime\">wasmtime/sema.rs at 94bcbe844612306c136193f41f5cbdeec45a42ec · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A fast and secure runtime for WebAssembly. Contribute to bytecodealliance/wasmtime development by creating an account on GitHub.</div></div></div>",
        "id": 295113319,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1661369746
    },
    {
        "content": "<p>Indeed, it worked! Thanks a lot! My hunch that it was something obvious was correct, after all <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span>.</p>",
        "id": 295113838,
        "sender_full_name": "Anton Kirilov",
        "timestamp": 1661369955
    },
    {
        "content": "<p><a href=\"https://github.com/bytecodealliance/wasmtime/pull/4775\">https://github.com/bytecodealliance/wasmtime/pull/4775</a> to fix the error message</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/4775\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/cd618afe72fe17ba520a24fa899102953350989a\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f643033323830353934313764363861643437353966666565623731333033393439376234663865303638396637373161646130653037356639333833336335302f62797465636f6465616c6c69616e63652f7761736d74696d652f70756c6c2f34373735)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/4775\" title=\"Update ISLE error message: unknown term in expr, not pattern. by cfallin · Pull Request #4775 · bytecodealliance/wasmtime\">Update ISLE error message: unknown term in expr, not pattern. by cfallin · Pull Request #4775 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">This was likely a copy-paste from the ast::Pattern case, but here it\nis checking a term name in ast::Expr and so should say \"... in\nexpression\", not \"... in pattern\".</div></div></div>",
        "id": 295114128,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1661370071
    },
    {
        "content": "<p>thanks for asking here :-)</p>",
        "id": 295114157,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1661370079
    },
    {
        "content": "<p>However, I am not sure the updated error message would have helped - I guess I still have to wrap my head around the fact that I need to be careful with my usage of brackets.</p>",
        "id": 295114789,
        "sender_full_name": "Anton Kirilov",
        "timestamp": 1661370302
    },
    {
        "content": "<p>Or maybe it was just a long day <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span>.</p>",
        "id": 295115347,
        "sender_full_name": "Anton Kirilov",
        "timestamp": 1661370519
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"300050\">Anton Kirilov</span> has marked this topic as resolved.</p>",
        "id": 295115368,
        "sender_full_name": "Notification Bot",
        "timestamp": 1661370527
    },
    {
        "content": "<p>yeah, it is a bit of a case of \"Lisp: use lots of parens, but not <em>too</em> many\"</p>",
        "id": 295119145,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1661372007
    },
    {
        "content": "<p>sorry about that :-)</p>",
        "id": 295119149,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1661372010
    }
]