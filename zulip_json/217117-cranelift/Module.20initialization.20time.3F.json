[
    {
        "content": "<p>Hello! I noticed that when I create a module, the first function that I compile into it takes significantly longer than the following functions. Is there some initialization cost to the first time you use a module to compile a function?</p>",
        "id": 485591613,
        "sender_full_name": "marin",
        "timestamp": 1733135498
    },
    {
        "content": "<p>There shouldn't be any initialization for Module. If you are clearing and reusing the Function/Context between multiple defines rather than creating a new one from scratch, it is possible however that the difference is caused by memory allocations cached in the Function/Context.</p>",
        "id": 485621654,
        "sender_full_name": "bjorn3",
        "timestamp": 1733145216
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"264278\">bjorn3</span> <a href=\"#narrow/channel/217117-cranelift/topic/Module.20initialization.20time.3F/near/485621654\">said</a>:</p>\n<blockquote>\n<p>There shouldn't be any initialization for Module. If you are clearing and reusing the Function/Context between multiple defines rather than creating a new one from scratch, it is possible however that the difference is caused by memory allocations cached in the Function/Context.</p>\n</blockquote>\n<p>Makes sense! Are there any benches out there on compile speed?</p>",
        "id": 485955997,
        "sender_full_name": "marin",
        "timestamp": 1733261002
    },
    {
        "content": "<p>not for specifically cranelift in an independent context, but we use Sightglass for benchmarking Wasmtime's compilation which uses Cranelift by default: <a href=\"https://github.com/bytecodealliance/sightglass\">https://github.com/bytecodealliance/sightglass</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/sightglass\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/1c2473c8582fc809dd24b661c2928c4a11536135/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f386535386261393761616561386561313561326462393239633435626431663930323830643662646134313563323063666433383365366561366362636461622f62797465636f6465616c6c69616e63652f7369676874676c617373&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/sightglass\" title=\"GitHub - bytecodealliance/sightglass: A benchmark suite and tool to compare different implementations of the same primitives.\">GitHub - bytecodealliance/sightglass: A benchmark suite and tool to compare different implementations of the same primitives.</a></div><div class=\"message_embed_description\">A benchmark suite and tool to compare different implementations of the same primitives. - bytecodealliance/sightglass</div></div></div>",
        "id": 486152616,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1733336076
    }
]