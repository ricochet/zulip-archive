[
    {
        "content": "<p>Hi folks,</p>\n<p>I was wondering if anyone knows of a C/LLVM IR frontend for cranelift? So far I've found an LLVM IR to Cranelift MIR translator, which would've been perfect but it's abandoned.</p>\n<p>For context, I'm a cpython core dev and I'm experimenting with JIT compilers for cpython. I can't claim that whatever I try will end up in cpython, mostly just doing this for fun and experimentation!</p>\n<p>Thanks for your help!</p>",
        "id": 490146890,
        "sender_full_name": "Ken Jin",
        "timestamp": 1734695697
    },
    {
        "content": "<p>There's <a href=\"https://github.com/jyn514/saltwater/\">https://github.com/jyn514/saltwater/</a>, but it's using a very old version of Cranelift and is archived/not active. It might help (to avoid the X-Y problem) to say what you're trying to do -- what is the C code you're trying to compile, and what problem is it solving?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/jyn514/saltwater/\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/c868660075fa9008114f9df0c3b7f7d7a79acc60/68747470733a2f2f7265706f7369746f72792d696d616765732e67697468756275736572636f6e74656e742e636f6d2f3139303934303938312f36353236396230302d313838342d313165612d396633372d373238623962633639373366&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/jyn514/saltwater/\" title=\"GitHub - jyn514/saltwater: A C compiler written in Rust, with a focus on good error messages.\">GitHub - jyn514/saltwater: A C compiler written in Rust, with a focus on good error messages.</a></div><div class=\"message_embed_description\">A C compiler written in Rust, with a focus on good error messages. - jyn514/saltwater</div></div></div>",
        "id": 490195690,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1734712777
    },
    {
        "content": "<p>Thanks! I'll try to condense things to save your time:</p>\n<p>CPython is written in C and so are its bytecode definitions. We use the bytecode definitions to generate multiple things, among them a baseline template (copy and patch) JIT.</p>\n<p>I was thinking of how a higher-tier JIT (a somewhat-optimizing one) would look like. I'm trying to take straight-line sequences of bytecode, as either C source, or LLVM IR, concatenate them together, and pass them to something like Cranelift. This would (in theory) produce better code than our baseline JIT right now.</p>",
        "id": 490198615,
        "sender_full_name": "Ken Jin",
        "timestamp": 1734713806
    },
    {
        "content": "<p>ah, so copy-and-patch style, interesting!</p>",
        "id": 490204414,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1734716209
    },
    {
        "content": "<p>The short answer is that I don't think there's a fully mature and complete C compiler that would serve that need right now. I thought briefly about whether it might be possible to chain together stages e.g. through Wasm, but that introduces other issues -- you want the code to have the same target/ABI as the native runtime code it shares data structures with. So probably you're reduced to handwriting CLIF at the moment...</p>",
        "id": 490204606,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1734716302
    },
    {
        "content": "<p>Alright, makes sense. Thank you for your advice!</p>",
        "id": 490205183,
        "sender_full_name": "Ken Jin",
        "timestamp": 1734716591
    }
]