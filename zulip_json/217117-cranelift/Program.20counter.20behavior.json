[
    {
        "content": "<p>Hey <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>\n<p>I compiled this module with cranelift (aarch64) :</p>\n<div class=\"codehilite\" data-code-language=\"WebAssembly\"><pre><span></span><code><span class=\"p\">(</span><span class=\"k\">module</span>\n    <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"run\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"nv\">$p</span> <span class=\"kt\">i32</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"kt\">i32</span><span class=\"p\">)</span>\n      <span class=\"p\">(</span><span class=\"k\">block</span>\n        <span class=\"p\">(</span><span class=\"k\">block</span>\n          <span class=\"p\">(</span><span class=\"k\">block</span>\n            <span class=\"p\">(</span><span class=\"k\">block</span>\n                <span class=\"p\">(</span><span class=\"nb\">local.get</span> <span class=\"nv\">$p</span><span class=\"p\">)</span>\n                <span class=\"p\">(</span><span class=\"nb\">br_table</span>\n                     <span class=\"mi\">2</span>   <span class=\"c1\">;; p == 0 =&gt; (br 2)</span>\n                     <span class=\"mi\">1</span>   <span class=\"c1\">;; p == 1 =&gt; (br 1)</span>\n                     <span class=\"mi\">0</span>   <span class=\"c1\">;; p == 2 =&gt; (br 0)</span>\n                     <span class=\"mi\">3</span><span class=\"p\">)</span>  <span class=\"c1\">;; else =&gt; (br 3)</span>\n                <span class=\"p\">)</span>\n            <span class=\"c1\">;; Target for (br 0)</span>\n            <span class=\"p\">(</span><span class=\"nb\">i32.const</span> <span class=\"mf\">100</span><span class=\"p\">)</span>\n            <span class=\"p\">(</span><span class=\"nb\">return</span><span class=\"p\">)</span>\n          <span class=\"p\">)</span>\n          <span class=\"c1\">;; Target for (br 1)</span>\n          <span class=\"p\">(</span><span class=\"nb\">i32.const</span> <span class=\"mf\">101</span><span class=\"p\">)</span>\n          <span class=\"p\">(</span><span class=\"nb\">return</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n        <span class=\"c1\">;; Target for (br 2)</span>\n        <span class=\"p\">(</span><span class=\"nb\">i32.const</span> <span class=\"mf\">102</span><span class=\"p\">)</span>\n        <span class=\"p\">(</span><span class=\"nb\">return</span><span class=\"p\">)</span>\n      <span class=\"p\">)</span>\n      <span class=\"c1\">;; Target for (br 3)</span>\n      <span class=\"p\">(</span><span class=\"nb\">i32.const</span> <span class=\"mf\">103</span><span class=\"p\">)</span>\n      <span class=\"p\">(</span><span class=\"nb\">return</span><span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n<p>The output is</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"mi\">00000000</span><span class=\"w\">    </span><span class=\"n\">pacibz</span>\n<span class=\"mi\">00000004</span><span class=\"w\">    </span><span class=\"n\">stp</span><span class=\"w\"> </span><span class=\"n\">x29</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x30</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">sp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"o\">-</span><span class=\"mh\">0x10</span><span class=\"p\">]</span><span class=\"o\">!</span>\n<span class=\"mi\">00000008</span><span class=\"w\">    </span><span class=\"n\">mov</span><span class=\"w\"> </span><span class=\"n\">x29</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">sp</span>\n<span class=\"mi\">0000000</span><span class=\"n\">c</span><span class=\"w\">    </span><span class=\"n\">cmp</span><span class=\"w\"> </span><span class=\"n\">w4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">3</span>\n<span class=\"mi\">00000010</span><span class=\"w\">    </span><span class=\"n\">b</span><span class=\"p\">.</span><span class=\"n\">hs</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mh\">0x68</span>\n<span class=\"mi\">00000014</span><span class=\"w\">    </span><span class=\"n\">csel</span><span class=\"w\"> </span><span class=\"n\">x9</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">xzr</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">hs</span>\n<span class=\"mi\">00000018</span><span class=\"w\">    </span><span class=\"n\">csdb</span>\n<span class=\"mi\">0000001</span><span class=\"n\">c</span><span class=\"w\">    </span><span class=\"n\">adr</span><span class=\"w\"> </span><span class=\"n\">x8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mh\">0x2c</span>\n<span class=\"mi\">00000020</span><span class=\"w\">    </span><span class=\"n\">ldrsw</span><span class=\"w\"> </span><span class=\"n\">x9</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">x8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">w9</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">uxtw</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n<span class=\"mi\">00000024</span><span class=\"w\">    </span><span class=\"n\">add</span><span class=\"w\"> </span><span class=\"n\">x8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x9</span>\n<span class=\"mi\">00000028</span><span class=\"w\">    </span><span class=\"n\">br</span><span class=\"w\"> </span><span class=\"n\">x8</span>\n<span class=\"mi\">0000002</span><span class=\"n\">c</span><span class=\"w\">    </span><span class=\"p\">.</span><span class=\"n\">byte</span><span class=\"w\"> </span><span class=\"mh\">0x2c</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x00</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x00</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x00</span>\n<span class=\"mi\">00000030</span><span class=\"w\">    </span><span class=\"p\">.</span><span class=\"n\">byte</span><span class=\"w\"> </span><span class=\"mh\">0x1c</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x00</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x00</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x00</span>\n<span class=\"mi\">00000034</span><span class=\"w\">    </span><span class=\"p\">.</span><span class=\"n\">byte</span><span class=\"w\"> </span><span class=\"mh\">0x0c</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x00</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x00</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x00</span>\n<span class=\"mi\">00000038</span><span class=\"w\">    </span><span class=\"n\">mov</span><span class=\"w\"> </span><span class=\"n\">w2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mh\">0x64</span>\n<span class=\"mi\">0000003</span><span class=\"n\">c</span><span class=\"w\">    </span><span class=\"n\">ldp</span><span class=\"w\"> </span><span class=\"n\">x29</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x30</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">sp</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mh\">0x10</span>\n<span class=\"mi\">00000040</span><span class=\"w\">    </span><span class=\"n\">autibz</span>\n<span class=\"mi\">00000044</span><span class=\"w\">    </span><span class=\"n\">ret</span>\n<span class=\"mi\">00000048</span><span class=\"w\">    </span><span class=\"n\">mov</span><span class=\"w\"> </span><span class=\"n\">w2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mh\">0x65</span>\n<span class=\"mi\">0000004</span><span class=\"n\">c</span><span class=\"w\">    </span><span class=\"n\">ldp</span><span class=\"w\"> </span><span class=\"n\">x29</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x30</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">sp</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mh\">0x10</span>\n<span class=\"mi\">00000050</span><span class=\"w\">    </span><span class=\"n\">autibz</span>\n<span class=\"mi\">00000054</span><span class=\"w\">    </span><span class=\"n\">ret</span>\n<span class=\"mi\">00000058</span><span class=\"w\">    </span><span class=\"n\">mov</span><span class=\"w\"> </span><span class=\"n\">w2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mh\">0x66</span>\n<span class=\"mi\">0000005</span><span class=\"n\">c</span><span class=\"w\">    </span><span class=\"n\">ldp</span><span class=\"w\"> </span><span class=\"n\">x29</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x30</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">sp</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mh\">0x10</span>\n<span class=\"mi\">00000060</span><span class=\"w\">    </span><span class=\"n\">autibz</span>\n<span class=\"mi\">00000064</span><span class=\"w\">    </span><span class=\"n\">ret</span>\n<span class=\"mi\">00000068</span><span class=\"w\">    </span><span class=\"n\">mov</span><span class=\"w\"> </span><span class=\"n\">w2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mh\">0x67</span>\n<span class=\"mi\">0000006</span><span class=\"n\">c</span><span class=\"w\">    </span><span class=\"n\">ldp</span><span class=\"w\"> </span><span class=\"n\">x29</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x30</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">sp</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mh\">0x10</span>\n<span class=\"mi\">00000070</span><span class=\"w\">    </span><span class=\"n\">autibz</span>\n<span class=\"mi\">00000074</span><span class=\"w\">    </span><span class=\"n\">ret</span>\n</code></pre></div>\n<p>I don't understand the instruction <code>0000001c    adr x8, #0x2c</code>.  <code>adr</code> is supposed to add 0x2c to the program counter, but then, it would read the address 0x48. However, it seems to read the address 0x2c.</p>\n<p>Can someone explain how this work ? Thank you <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 454873872,
        "sender_full_name": "Vulcain",
        "timestamp": 1722268471
    },
    {
        "content": "<p>Is that perhaps the assembler de-sugaring <code>#0x2c</code> rather than the immediate in the instruction itself? (I'm not familiar enough with instruction formats on aarch64 myself to say for sure)</p>",
        "id": 454886082,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1722271528
    },
    {
        "content": "<p>I tried to copy the generated code and assemble it, and it reads 0x48. Then I read the runtime code to find answers. From my understanding, the code is cast to a rust closure. So yes, if it is not the runtime that changes the program counter behavior, it might be a weird disassembly <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 454887609,
        "sender_full_name": "Vulcain",
        "timestamp": 1722271992
    },
    {
        "content": "<p>The disassembly shows the target address, not the immediate that is added to PC.</p>",
        "id": 454891459,
        "sender_full_name": "Amanieu",
        "timestamp": 1722272977
    },
    {
        "content": "<p>Thank you <span aria-label=\"blush\" class=\"emoji emoji-1f60a\" role=\"img\" title=\"blush\">:blush:</span></p>",
        "id": 454892078,
        "sender_full_name": "Vulcain",
        "timestamp": 1722273102
    }
]