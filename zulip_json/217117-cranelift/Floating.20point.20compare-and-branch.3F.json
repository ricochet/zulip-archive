[
    {
        "content": "<p>As far as I can see we don't have anything like <code>br_icmp</code> for floats, right? Do I have to use <code>x = ffcmp(...); brff(cond, x, target)</code> ?</p>",
        "id": 197801354,
        "sender_full_name": "osa1",
        "timestamp": 1589643637
    },
    {
        "content": "<p>Currently I'm generating this:</p>\n<div class=\"codehilite\"><pre><span></span><code>block0(v0: i64, v1: f64, v2: f64, v3: f64):\n    v4 = ffcmp v2, v1\n    brff le v4, block1\n    jump block2\n</code></pre></div>",
        "id": 197801413,
        "sender_full_name": "osa1",
        "timestamp": 1589643722
    },
    {
        "content": "<p>But it fails with <code>Compilation(Verifier(VerifierErrors([VerifierError { location: inst1, context: Some(\"brff le v4, block1\"), message: \"Branch must have an encoding\" }])))</code></p>",
        "id": 197801419,
        "sender_full_name": "osa1",
        "timestamp": 1589643736
    },
    {
        "content": "<p>You should normally use <code>icmp</code> + <code>brz</code>/<code>brnz</code> instead of <code>br_icmp</code>. For floats that is <code>fcmp</code> + <code>brz</code>/<code>brnz</code>. The <code>brz</code> instruction jumps when the argument is false or zero. The <code>brnz</code> instruction jumps when the argument is true or non-zero.</p>",
        "id": 197803439,
        "sender_full_name": "bjorn3",
        "timestamp": 1589646688
    },
    {
        "content": "<p>\"You should\" &lt;-- why? It's easier with one instruction.</p>",
        "id": 197803586,
        "sender_full_name": "osa1",
        "timestamp": 1589646941
    },
    {
        "content": "<p>There is an optimization pass that does this for you: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/49622bde586deeb8400529fd61bf5bf1abab38e3/cranelift/codegen/src/postopt.rs#L134\">https://github.com/bytecodealliance/wasmtime/blob/49622bde586deeb8400529fd61bf5bf1abab38e3/cranelift/codegen/src/postopt.rs#L134</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/49622bde586deeb8400529fd61bf5bf1abab38e3/cranelift/codegen/src/postopt.rs#L134\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/49622bde586deeb8400529fd61bf5bf1abab38e3/cranelift/codegen/src/postopt.rs#L134\" title=\"bytecodealliance/wasmtime\">bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Standalone JIT-style runtime for WebAssembly, using Cranelift - bytecodealliance/wasmtime</div></div></div>",
        "id": 197804520,
        "sender_full_name": "bjorn3",
        "timestamp": 1589648169
    }
]