[
    {
        "content": "<p>Hello, I am writing a programming language. I am trying translating my AST to Cranelift IR and then compile it to WASM.</p>\n<p>I am having a hard time making progress. I was able to write a basic function with numeric variable. But now I am having a really hard time to translate more of my language AST to Cranelift IR.</p>\n<p>Specifically I am having a hard time doing simple things like:</p>\n<ul>\n<li>add support for String</li>\n<li>add support for Arrays</li>\n<li>generate a WASM file to call in a browser</li>\n</ul>\n<p>Apart from the API documentation, <a href=\"https://github.com/bytecodealliance/cranelift-jit-demo\">cranelift-jit-demo</a> and <a href=\"https://github.com/CraneStation/kaleidoscope-cranelift/blob/master/ch3.adoc\">kaleidoscope-cranelift</a> I have not found any guide, examples or extensive documentation. I am not a compiler expert so I need more help probably.</p>\n<p>Do you have any documentation, guides or well documented examples that you can share? </p>\n<p>Thank you very much</p>\n<p>PS: I originally posted this message in the <a href=\"#narrow/stream/426461-SIG-Documentation/topic/Cranelift.20documentation.20and.20guides/near/456650232\">SIG Documentation</a> channel, but since I got no reply I reposted it here.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/cranelift-jit-demo\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/f6ad1d2ef1dc3cf9782d9fb05f04e5fc351b3406/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f396438333336663764646666376231653730666536386366353934393737626330376262653266393732303735393265373836646238333839646637633234352f62797465636f6465616c6c69616e63652f6372616e656c6966742d6a69742d64656d6f&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/cranelift-jit-demo\" title=\"GitHub - bytecodealliance/cranelift-jit-demo: JIT compiler and runtime for a toy language, using Cranelift\">GitHub - bytecodealliance/cranelift-jit-demo: JIT compiler and runtime for a toy language, using Cranelift</a></div><div class=\"message_embed_description\">JIT compiler and runtime for a toy language, using Cranelift - bytecodealliance/cranelift-jit-demo</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/CraneStation/kaleidoscope-cranelift/blob/master/ch3.adoc\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/9d429be5bfb6f9d3e33ad154160aa44078eb67b5/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f323131613034653130303637326332366264656262616338363431356664323232303237343934376532666463343739306165376262653238653266363039622f4372616e6553746174696f6e2f6b616c6569646f73636f70652d6372616e656c696674&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/CraneStation/kaleidoscope-cranelift/blob/master/ch3.adoc\" title=\"kaleidoscope-cranelift/ch3.adoc at master · CraneStation/kaleidoscope-cranelift\">kaleidoscope-cranelift/ch3.adoc at master · CraneStation/kaleidoscope-cranelift</a></div><div class=\"message_embed_description\">Tutorial to learn to use the cranelift compiler backend - CraneStation/kaleidoscope-cranelift</div></div></div>",
        "id": 456846451,
        "sender_full_name": "clacla",
        "timestamp": 1722948001
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"742214\">clacla</span> <a href=\"#narrow/stream/217117-cranelift/topic/.3E.20.20Cranelift.20documentation.20and.20guides/near/456846451\">said</a>:</p>\n<blockquote>\n<p>Hello, I am writing a programming language. I am trying translating my AST to Cranelift IR and then compile it to WASM.</p>\n<p>[ ... ]</p>\n<p>hard time doing simple things like:<br>\n[ ... ]</p>\n<ul>\n<li>generate a WASM file to call in a browser</li>\n</ul>\n</blockquote>\n<p>Unfortunately Cranelift does not support Wasm as a target; only the four native ISAs x86-64, aarch64, riscv64, and s390x. If your goal is to generate Wasm I'd recommend looking into libraries like walrus or waffle, or perhaps Binaryen's producer API.</p>",
        "id": 456878372,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1722956289
    },
    {
        "content": "<p>Thank you a lot Chris. I re-read the Cranelift documentation and now I get it. I was using it for something wrong. My bad.</p>\n<p>Thank you also for suggesting walrus and Binaryen. I will experiment with these frameworks, they seem to be made for what I need</p>",
        "id": 456895962,
        "sender_full_name": "clacla",
        "timestamp": 1722960746
    }
]