[
    {
        "content": "<p>I was looking into regalloc2 to investigate having MachineEnv use PRegSet (<a href=\"https://github.com/bytecodealliance/wasmtime/pull/8489#issuecomment-2106379885\">https://github.com/bytecodealliance/wasmtime/pull/8489#issuecomment-2106379885</a>): running tests however, there seem to be far fewer than in wasmtime and only testing small areas of the code? Is there an additional test suite I may be missing?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/8489#issuecomment-2106379885\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/e66576bde31e98d331d5cdccefa38489df3c4d13/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f306366376233616639303563393838303835663864366664346439643432346365376666353634626262343862663963653032613166613739383335373137652f62797465636f6465616c6c69616e63652f7761736d74696d652f70756c6c2f38343839&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/8489#issuecomment-2106379885\" title=\"refactor(cranelift-codegen): remove `OnceLock` by JonasKruckenberg · Pull Request #8489 · bytecodealliance/wasmtime\">refactor(cranelift-codegen): remove `OnceLock` by JonasKruckenberg · Pull Request #8489 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">This removes the dependency on std::sync::OnceLock by lifting the state out of a static and into the Callee struct.\nThis PR also removes the call_conv parameter since it was not used by any of the ...</div></div></div>",
        "id": 438625389,
        "sender_full_name": "Kirp",
        "timestamp": 1715709028
    },
    {
        "content": "<p>I believe the primary testing is the fuzzer when combined with the regalloc checker</p>",
        "id": 438644012,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1715716292
    },
    {
        "content": "<p><a href=\"https://github.com/bytecodealliance/regalloc2/blob/main/fuzz/fuzz_targets/ion_checker.rs\">https://github.com/bytecodealliance/regalloc2/blob/main/fuzz/fuzz_targets/ion_checker.rs</a> is the main one I believe</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/regalloc2/blob/main/fuzz/fuzz_targets/ion_checker.rs\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/2f2e21df8e0e95015cda12ad580a29be6d5568f9/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f323731376631633637333561636130393238643762363564626332653838646332333735306262643039396463303234303564616666346263396533323562322f62797465636f6465616c6c69616e63652f726567616c6c6f6332&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/regalloc2/blob/main/fuzz/fuzz_targets/ion_checker.rs\" title=\"regalloc2/fuzz/fuzz_targets/ion_checker.rs at main · bytecodealliance/regalloc2\">regalloc2/fuzz/fuzz_targets/ion_checker.rs at main · bytecodealliance/regalloc2</a></div><div class=\"message_embed_description\">A new register allocator. Contribute to bytecodealliance/regalloc2 development by creating an account on GitHub.</div></div></div>",
        "id": 438644219,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1715716350
    },
    {
        "content": "<p>you should be able to run it via:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">fuzz</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"n\">none</span><span class=\"w\"> </span><span class=\"n\">ion_checker</span>\n</code></pre></div>\n<p>inside the regalloc2 repo</p>\n<p>you'll need to install <code>cargo fuzz</code> if you don't have it yet:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">install</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"o\">-</span><span class=\"n\">fuzz</span>\n</code></pre></div>",
        "id": 438644356,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1715716404
    },
    {
        "content": "<p>Indeed, we explicitly chose to test via fuzzing first with RA2; any change should be fuzzed for at least a few hours with <code>ion_checker</code></p>",
        "id": 438646296,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1715717019
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"712312\">Kirp</span> has marked this topic as resolved.</p>",
        "id": 439466429,
        "sender_full_name": "Notification Bot",
        "timestamp": 1716152461
    }
]