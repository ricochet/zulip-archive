[
    {
        "content": "<p>dicej opened <a href=\"https://github.com/bytecodealliance/rfcs/pull/37\">PR #37</a> from <code>dicej:component-async</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>Add support for the Component Model <a href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/Async.md\">Async\nABI</a> to <code>wasm-tools</code>, <code>wit-bindgen</code>, and <code>wasmtime</code>.</p>\n<p><a href=\"https://github.com/dicej/rfcs/blob/component-async/accepted/component-model-async.md\">Rendered RFC</a></p>\n</blockquote>",
        "id": 475608855,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1728404382
    },
    {
        "content": "<p>tschneidereit submitted <a href=\"https://github.com/bytecodealliance/rfcs/pull/37#pullrequestreview-2355007295\">PR review</a>:</p>\n<blockquote>\n<p>Hooray! <span aria-label=\"partying face\" class=\"emoji emoji-1f973\" role=\"img\" title=\"partying face\">:partying_face:</span></p>\n<p>From a brief skim, the parts of this that I'm qualified to have an opinion on all look good to me. I left a couple of inline comments on specific aspects, but they're not particularly important.</p>\n</blockquote>",
        "id": 475613615,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1728405356
    },
    {
        "content": "<p>tschneidereit created <a href=\"https://github.com/bytecodealliance/rfcs/pull/37#discussion_r1792192464\">PR review comment</a>:</p>\n<blockquote>\n<p>I think to some degree we don't really need this kind of discussion: the \"what else could we do\" question has been answered at the spec level, and we'd have had a ton of opportunity to voice disagreement there. At this point, I think we should handle this the same as other features, such as the recent support for <a href=\"https://github.com/bytecodealliance/rfcs/blob/main/accepted/tail-calls.md#rationale-and-alternatives\">Tail Calls</a>.</p>\n<p>As such, I wonder if there are possible alternative approaches to implementing support of the spec feature that would be worth discussing here? And if not, is there a way to explain why that is the case as part of a \"there really isn't much of an alternative\" paragraph?</p>\n</blockquote>",
        "id": 475613616,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1728405356
    },
    {
        "content": "<p>tschneidereit created <a href=\"https://github.com/bytecodealliance/rfcs/pull/37#discussion_r1792187611\">PR review comment</a>:</p>\n<blockquote>\n<p>How (un)likely are scenarios in which all imports, but only some exports should be async, or vice-versa? If they might be reasonably likely, it might make sense to support <code>All</code> or <code>None</code> for one, and <code>Some</code> for the other. I assume you have a much better intuition on this than I do, though</p>\n</blockquote>",
        "id": 475613618,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1728405357
    },
    {
        "content": "<p>dicej updated <a href=\"https://github.com/bytecodealliance/rfcs/pull/37\">PR #37</a>.</p>",
        "id": 475613721,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1728405373
    },
    {
        "content": "<p>dicej submitted <a href=\"https://github.com/bytecodealliance/rfcs/pull/37#pullrequestreview-2355088533\">PR review</a>.</p>",
        "id": 475621021,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1728407612
    },
    {
        "content": "<p>dicej created <a href=\"https://github.com/bytecodealliance/rfcs/pull/37#discussion_r1792238404\">PR review comment</a>:</p>\n<blockquote>\n<p>Good point.  If anything, I'd be tempted to remove the <code>All</code> option entirely, given that I expect most worlds will contain mostly non-blocking functions (e.g. <code>wasi:http</code> which contains just two functions which actually do I/O: <code>wasi:http/types#[static]body.finish</code> and <code>wasi:http/handler#handle</code>).  And I suppose <code>None</code> is even more redundant; we could reduce it all to:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">AsyncConfig</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"n\">imports</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">HashSet</span><span class=\"o\">&lt;</span><span class=\"nb\">String</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n<span class=\"w\">  </span><span class=\"n\">exports</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">HashSet</span><span class=\"o\">&lt;</span><span class=\"nb\">String</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>Note that the proposed <code>nonblocking</code> function attribute will allow us to do the right thing automatically without any configuration required.</p>\n</blockquote>",
        "id": 475621023,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1728407612
    },
    {
        "content": "<p>dicej updated <a href=\"https://github.com/bytecodealliance/rfcs/pull/37\">PR #37</a>.</p>",
        "id": 475626297,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1728408983
    },
    {
        "content": "<p>dicej edited <a href=\"https://github.com/bytecodealliance/rfcs/pull/37\">PR #37</a>:</p>\n<blockquote>\n<p>Add support for the Component Model <a href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/Async.md\">Async ABI</a> to <code>wasm-tools</code>, <code>wit-bindgen</code>, and <code>wasmtime</code>.</p>\n<p><a href=\"https://github.com/dicej/rfcs/blob/component-async/accepted/component-model-async.md\">Rendered RFC</a></p>\n</blockquote>",
        "id": 475626482,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1728409028
    },
    {
        "content": "<p>dicej updated <a href=\"https://github.com/bytecodealliance/rfcs/pull/37\">PR #37</a>.</p>",
        "id": 475628958,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1728409623
    },
    {
        "content": "<p>dicej merged <a href=\"https://github.com/bytecodealliance/rfcs/pull/37\">PR #37</a>.</p>",
        "id": 475674847,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1728422819
    },
    {
        "content": "<p>dicej <a href=\"https://github.com/bytecodealliance/rfcs/pull/37#issuecomment-2400961604\">commented</a> on <a href=\"https://github.com/bytecodealliance/rfcs/pull/37\">PR #37</a>:</p>\n<blockquote>\n<p>Ugh, I definitely did _not_ mean to merge this.  I must have pushed to origin/main by mistake.  Sorry; will revert.</p>\n</blockquote>",
        "id": 475690362,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1728428469
    },
    {
        "content": "<p>dicej <a href=\"https://github.com/bytecodealliance/rfcs/pull/37#issuecomment-2400968636\">commented</a> on <a href=\"https://github.com/bytecodealliance/rfcs/pull/37\">PR #37</a>:</p>\n<blockquote>\n<p>I've reverted all the earlier commits, rebased, and opened <a href=\"https://github.com/bytecodealliance/rfcs/pull/38\">https://github.com/bytecodealliance/rfcs/pull/38</a> -- please direct further discussion there.  Sorry again for the confusion!</p>\n<p>BTW, would it make sense to tweak the branch protection rules in this repo to block pushing straight to main?  Asking for a friend.</p>\n</blockquote>",
        "id": 475691082,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1728428924
    },
    {
        "content": "<p>you can let your friend know that the <code>main</code> branch is now protected, as it should be</p>",
        "id": 475956995,
        "sender_full_name": "Till Schneidereit",
        "timestamp": 1728507605
    }
]