[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/rfcs/pull/21\">PR #21</a> from <code>isle-extended-patterns</code> to <code>main</code>:</p>\n<blockquote>\n<p><a href=\"https://github.com/cfallin/rfcs/blob/isle-extended-patterns/accepted/isle-extended-patterns.md\">Rendered</a></p>\n<p>This RFC proposes an extension to the ISLE pattern-matching DSL used by Cranelift's code generation<br>\nbackends. The extension is a backward-compatible proposal that is meant to make certain lowering<br>\npatterns easier to express. The ideas are informed by our experience so far with the DSL, and aim<br>\nto replace some awkward uses of extractors with in-arguments with clearer, more direct idioms<br>\nusing a new language form.</p>\n<p>cc @abrown @fitzgen @jlb6740 @akirilov-arm @sparker-arm @uweigand</p>\n</blockquote>",
        "id": 280020989,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1650862305
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/rfcs/pull/21\">PR #21</a> from <code>isle-extended-patterns</code> to <code>main</code>.</p>",
        "id": 280021273,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1650862604
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/rfcs/pull/21\">PR #21</a> from <code>isle-extended-patterns</code> to <code>main</code>.</p>",
        "id": 280021351,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1650862696
    },
    {
        "content": "<p>avanhatt submitted <a href=\"https://github.com/bytecodealliance/rfcs/pull/21#pullrequestreview-953522133\">PR review</a>.</p>",
        "id": 280221660,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1650984796
    },
    {
        "content": "<p>avanhatt submitted <a href=\"https://github.com/bytecodealliance/rfcs/pull/21#pullrequestreview-953522133\">PR review</a>.</p>",
        "id": 280221661,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1650984796
    },
    {
        "content": "<p>avanhatt created <a href=\"https://github.com/bytecodealliance/rfcs/pull/21#discussion_r858810283\">PR review comment</a>:</p>\n<blockquote>\n<p>Can we expand on this a bit? I.e., if any <code>given</code> clause is unable to match, the rule does not match? Also, including the case of a boolean predicate more explicitly here?</p>\n</blockquote>",
        "id": 280221662,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1650984796
    },
    {
        "content": "<p>avanhatt created <a href=\"https://github.com/bytecodealliance/rfcs/pull/21#discussion_r858812670\">PR review comment</a>:</p>\n<blockquote>\n<p>To this end, would it make sense to name this something like <code>if-let</code> instead of <code>given</code>? I ask both for clarity in my own understanding and as an actual naming suggestion :) </p>\n</blockquote>",
        "id": 280221663,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1650984796
    },
    {
        "content": "<p>avanhatt created <a href=\"https://github.com/bytecodealliance/rfcs/pull/21#discussion_r858811231\">PR review comment</a>:</p>\n<blockquote>\n<p>The \"with no <code>given</code> clauses\" bit here doesn't make sense to me---presumably, the elided RHS here uses variables bound in the <code>given</code> clauses, so what does it mean to behave the same as before?</p>\n</blockquote>",
        "id": 280221664,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1650984796
    },
    {
        "content": "<p>avanhatt created <a href=\"https://github.com/bytecodealliance/rfcs/pull/21#discussion_r858813870\">PR review comment</a>:</p>\n<blockquote>\n<p>Might be helpful here to explicitly call out the difference between RHS expressions and LHS patterns again, since \"expression\" could be read in a less-specific way. </p>\n</blockquote>",
        "id": 280221665,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1650984796
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/rfcs/pull/21#pullrequestreview-953669422\">PR review</a>.</p>",
        "id": 280232981,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1650989551
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/rfcs/pull/21#discussion_r858909579\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah, I think this is just ambiguous wording. This isn't saying that one can strip clauses from a particular rule and have it behave the same as before; this is saying that rules with no <code>given</code> clauses behave the same as before. (In other words, meanings of rules with no <code>given</code> clauses do not change.)</p>\n</blockquote>",
        "id": 280232982,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1650989551
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/rfcs/pull/21#pullrequestreview-953757512\">PR review</a>.</p>",
        "id": 280242197,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1650993761
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/rfcs/pull/21#discussion_r858971623\">PR review comment</a>:</p>\n<blockquote>\n<p>It's basically the same as an <code>if let</code> in Rust, indeed! I do kind of like this suggestion. @fitzgen @abrown thoughts?</p>\n</blockquote>",
        "id": 280242199,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1650993761
    },
    {
        "content": "<p>avanhatt submitted <a href=\"https://github.com/bytecodealliance/rfcs/pull/21#pullrequestreview-953761370\">PR review</a>.</p>",
        "id": 280243047,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1650993956
    },
    {
        "content": "<p>avanhatt created <a href=\"https://github.com/bytecodealliance/rfcs/pull/21#discussion_r858974347\">PR review comment</a>:</p>\n<blockquote>\n<p>Makes sense! The singular <code>the rule</code> was what tripped me, maybe better as <code>(rules without </code>given<code> clauses behave the same as before)</code></p>\n</blockquote>",
        "id": 280243048,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1650993956
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/rfcs/pull/21#discussion_r859116400\">PR review comment</a>:</p>\n<blockquote>\n<p>I like <code>if-let</code> instead of <code>given</code></p>\n</blockquote>",
        "id": 280267604,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1651004880
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/rfcs/pull/21#pullrequestreview-953961255\">PR review</a>.</p>",
        "id": 280267605,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1651004881
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/rfcs/pull/21\">PR #21</a> from <code>isle-extended-patterns</code> to <code>main</code>.</p>",
        "id": 280268982,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1651005495
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/rfcs/pull/21#pullrequestreview-953977531\">PR review</a>.</p>",
        "id": 280269007,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1651005513
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/rfcs/pull/21#discussion_r859124311\">PR review comment</a>:</p>\n<blockquote>\n<p>Alright, I've gone ahead and find-replaced everything to <code>if-let</code> instead. Thanks for the idea!</p>\n</blockquote>",
        "id": 280269008,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1651005513
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/rfcs/pull/21#pullrequestreview-953977683\">PR review</a>.</p>",
        "id": 280269017,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1651005522
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/rfcs/pull/21#discussion_r859124488\">PR review comment</a>:</p>\n<blockquote>\n<p>Fixed, hopefully clearer now.</p>\n</blockquote>",
        "id": 280269018,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1651005522
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/rfcs/pull/21#discussion_r859124675\">PR review comment</a>:</p>\n<blockquote>\n<p>Updated, hopefully more descriptive now.</p>\n</blockquote>",
        "id": 280269034,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1651005532
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/rfcs/pull/21#pullrequestreview-953977838\">PR review</a>.</p>",
        "id": 280269035,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1651005532
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/rfcs/pull/21#pullrequestreview-953978091\">PR review</a>.</p>",
        "id": 280269052,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1651005547
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/rfcs/pull/21#discussion_r859124972\">PR review comment</a>:</p>\n<blockquote>\n<p>Expanded this with a more explicit discussion of how the evaluation proceeds.</p>\n</blockquote>",
        "id": 280269053,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1651005548
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/rfcs/pull/21#pullrequestreview-956887334\">PR review</a>.</p>",
        "id": 280536926,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1651170775
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/rfcs/pull/21#pullrequestreview-956887334\">PR review</a>.</p>",
        "id": 280536928,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1651170775
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/rfcs/pull/21#discussion_r861202913\">PR review comment</a>:</p>\n<blockquote>\n<p>Maybe this should just be <code>(if (magic_simd_extension_enabled))</code>?</p>\n</blockquote>",
        "id": 280536929,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1651170775
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/rfcs/pull/21#pullrequestreview-956891694\">PR review</a>.</p>",
        "id": 280537280,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1651170939
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/rfcs/pull/21#discussion_r861205985\">PR review comment</a>:</p>\n<blockquote>\n<p>Hmm, yeah, that's a nice shorthand. I'll play with this a bit more in the prototype, thanks!</p>\n</blockquote>",
        "id": 280537281,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1651170940
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/rfcs/pull/21\">PR #21</a>.</p>",
        "id": 280537676,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1651171117
    },
    {
        "content": "<p>cfallin edited <a href=\"https://github.com/bytecodealliance/rfcs/pull/21\">PR #21</a> from <code>isle-extended-patterns</code> to <code>main</code>:</p>\n<blockquote>\n<p><a href=\"https://github.com/bytecodealliance/rfcs/blob/main/accepted/isle-extended-patterns.md\">Rendered</a></p>\n<p>This RFC proposes an extension to the ISLE pattern-matching DSL used by Cranelift's code generation<br>\nbackends. The extension is a backward-compatible proposal that is meant to make certain lowering<br>\npatterns easier to express. The ideas are informed by our experience so far with the DSL, and aim<br>\nto replace some awkward uses of extractors with in-arguments with clearer, more direct idioms<br>\nusing a new language form.</p>\n<p>cc @abrown @fitzgen @jlb6740 @akirilov-arm @sparker-arm @uweigand</p>\n</blockquote>",
        "id": 280537814,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1651171179
    }
]