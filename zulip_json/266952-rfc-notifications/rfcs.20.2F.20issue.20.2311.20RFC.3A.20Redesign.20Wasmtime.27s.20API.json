[
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/rfcs/pull/11#issuecomment-839879808\">commented</a> on <a href=\"https://github.com/bytecodealliance/rfcs/pull/11\">issue #11</a>:</p>\n<blockquote>\n<p>I've updated with a tweak to the APIs in languages like Python, Go, and .NET. Originally I intended that \"pass the store around\" wouldn't be as common there, but the behavior of the GC in Go and converting a <code>wasmtime_val_t</code> to a <code>wasmtime_func_t</code> has tipped my opinion in favor of \"pass the store everyhwere\" like what happens in C &amp; Rust.</p>\n</blockquote>",
        "id": 238496523,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1620834365
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/rfcs/pull/11#issuecomment-847235017\">commented</a> on <a href=\"https://github.com/bytecodealliance/rfcs/pull/11\">issue #11</a>:</p>\n<blockquote>\n<h1>Motion to finalize with a disposition to merge</h1>\n<p>We've reached out to various Wasmtime embedders, and have received very positive feedback on the changes proposed here. Additionally, we have full implementations of the proposal for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2897\">Wasmtime's Rust and C-APIs</a>, <a href=\"https://github.com/alexcrichton/wasmtime-py/tree/new-api\">wasmtime-py</a>, and <a href=\"https://github.com/alexcrichton/wasmtime-go/tree/new-api\">wasmtime-go</a>.</p>\n<p>We also analyzed the impact on various existing embeddings, and found it to be very reasonable in all cases.</p>\n<p>As such, we proposing finalizing this RFC with a disposition to merge it.</p>\n<h1>Stakeholders sign-off</h1>\n<p>Given the broad impact of these changes, we decided to also tag a broad list of contributors and Wasmtime embedders for feedback.</p>\n<h2>Arm</h2>\n<ul>\n<li>[ ] @akirilov-arm</li>\n</ul>\n<h2>DFINITY</h2>\n<ul>\n<li>[ ] @granstrom</li>\n</ul>\n<h2>Embark Studios</h2>\n<ul>\n<li>[ ] @bnjbvr</li>\n<li>[ ] @repi</li>\n</ul>\n<h2>Fastly</h2>\n<ul>\n<li>[ ] @cfallin</li>\n<li>[ ] @sunfishcode </li>\n<li>[ ] @jedisct1 </li>\n<li>[ ] @fitzgen </li>\n<li>[ ] @pchickey </li>\n<li>[ ] @peterhuene </li>\n<li>[ ] @acfoltzer </li>\n<li>[ ] @iximeow </li>\n</ul>\n<h2>Intel</h2>\n<ul>\n<li>[ ] @mingqiusun</li>\n<li>[ ] @abrown </li>\n<li>[ ] @jlb6740</li>\n</ul>\n<h2>Microsoft</h2>\n<ul>\n<li>[ ] @thomastaylor312</li>\n<li>[ ] @bacongobbler</li>\n<li>[ ] @radu-matei</li>\n</ul>\n<h2>Mozilla</h2>\n<ul>\n<li>[ ] @julian-seward1 </li>\n<li>[ ] @yurydelendik</li>\n</ul>\n<h2>IBM</h2>\n<ul>\n<li>[ ] @uweigand</li>\n</ul>\n<h2>wasmCloud</h2>\n<ul>\n<li>[ ] @autodidaddict</li>\n</ul>\n<h2>Unaffiliated</h2>\n<ul>\n<li>[ ] @bjorn3</li>\n</ul>\n</blockquote>",
        "id": 240089042,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1621879866
    },
    {
        "content": "<p>acfoltzer <a href=\"https://github.com/bytecodealliance/rfcs/pull/11#issuecomment-847235768\">commented</a> on <a href=\"https://github.com/bytecodealliance/rfcs/pull/11\">issue #11</a>:</p>\n<blockquote>\n<blockquote>\n<p>[ ] @acfoltzer</p>\n</blockquote>\n<ul>\n<li>[x] @acfoltzer</li>\n</ul>\n</blockquote>",
        "id": 240089224,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1621879951
    },
    {
        "content": "<p>acfoltzer edited a <a href=\"https://github.com/bytecodealliance/rfcs/pull/11#issuecomment-847235768\">comment</a> on <a href=\"https://github.com/bytecodealliance/rfcs/pull/11\">issue #11</a>:</p>\n<blockquote>\n<blockquote>\n<ul>\n<li>[ ] @acfoltzer</li>\n</ul>\n</blockquote>\n<ul>\n<li>[x] @acfoltzer</li>\n</ul>\n</blockquote>",
        "id": 240089253,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1621879965
    },
    {
        "content": "<p>pchickey edited a <a href=\"https://github.com/bytecodealliance/rfcs/pull/11#issuecomment-847235017\">comment</a> on <a href=\"https://github.com/bytecodealliance/rfcs/pull/11\">issue #11</a>:</p>\n<blockquote>\n<h1>Motion to finalize with a disposition to merge</h1>\n<p>We've reached out to various Wasmtime embedders, and have received very positive feedback on the changes proposed here. Additionally, we have full implementations of the proposal for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2897\">Wasmtime's Rust and C-APIs</a>, <a href=\"https://github.com/alexcrichton/wasmtime-py/tree/new-api\">wasmtime-py</a>, and <a href=\"https://github.com/alexcrichton/wasmtime-go/tree/new-api\">wasmtime-go</a>.</p>\n<p>We also analyzed the impact on various existing embeddings, and found it to be very reasonable in all cases.</p>\n<p>As such, we proposing finalizing this RFC with a disposition to merge it.</p>\n<h1>Stakeholders sign-off</h1>\n<p>Given the broad impact of these changes, we decided to also tag a broad list of contributors and Wasmtime embedders for feedback.</p>\n<h2>Arm</h2>\n<ul>\n<li>[ ] @akirilov-arm</li>\n</ul>\n<h2>DFINITY</h2>\n<ul>\n<li>[ ] @granstrom</li>\n</ul>\n<h2>Embark Studios</h2>\n<ul>\n<li>[ ] @bnjbvr</li>\n<li>[ ] @repi</li>\n</ul>\n<h2>Fastly</h2>\n<ul>\n<li>[ ] @cfallin</li>\n<li>[ ] @sunfishcode </li>\n<li>[ ] @jedisct1 </li>\n<li>[ ] @fitzgen </li>\n<li>[x] @pchickey </li>\n<li>[ ] @peterhuene </li>\n<li>[ ] @acfoltzer </li>\n<li>[ ] @iximeow </li>\n</ul>\n<h2>Intel</h2>\n<ul>\n<li>[ ] @mingqiusun</li>\n<li>[ ] @abrown </li>\n<li>[ ] @jlb6740</li>\n</ul>\n<h2>Microsoft</h2>\n<ul>\n<li>[ ] @thomastaylor312</li>\n<li>[ ] @bacongobbler</li>\n<li>[ ] @radu-matei</li>\n</ul>\n<h2>Mozilla</h2>\n<ul>\n<li>[ ] @julian-seward1 </li>\n<li>[ ] @yurydelendik</li>\n</ul>\n<h2>IBM</h2>\n<ul>\n<li>[ ] @uweigand</li>\n</ul>\n<h2>wasmCloud</h2>\n<ul>\n<li>[ ] @autodidaddict</li>\n</ul>\n<h2>Unaffiliated</h2>\n<ul>\n<li>[ ] @bjorn3</li>\n</ul>\n</blockquote>",
        "id": 240089303,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1621879992
    },
    {
        "content": "<p>peterhuene edited a <a href=\"https://github.com/bytecodealliance/rfcs/pull/11#issuecomment-847235017\">comment</a> on <a href=\"https://github.com/bytecodealliance/rfcs/pull/11\">issue #11</a>:</p>\n<blockquote>\n<h1>Motion to finalize with a disposition to merge</h1>\n<p>We've reached out to various Wasmtime embedders, and have received very positive feedback on the changes proposed here. Additionally, we have full implementations of the proposal for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2897\">Wasmtime's Rust and C-APIs</a>, <a href=\"https://github.com/alexcrichton/wasmtime-py/tree/new-api\">wasmtime-py</a>, and <a href=\"https://github.com/alexcrichton/wasmtime-go/tree/new-api\">wasmtime-go</a>.</p>\n<p>We also analyzed the impact on various existing embeddings, and found it to be very reasonable in all cases.</p>\n<p>As such, we proposing finalizing this RFC with a disposition to merge it.</p>\n<h1>Stakeholders sign-off</h1>\n<p>Given the broad impact of these changes, we decided to also tag a broad list of contributors and Wasmtime embedders for feedback.</p>\n<h2>Arm</h2>\n<ul>\n<li>[ ] @akirilov-arm</li>\n</ul>\n<h2>DFINITY</h2>\n<ul>\n<li>[ ] @granstrom</li>\n</ul>\n<h2>Embark Studios</h2>\n<ul>\n<li>[ ] @bnjbvr</li>\n<li>[ ] @repi</li>\n</ul>\n<h2>Fastly</h2>\n<ul>\n<li>[ ] @cfallin</li>\n<li>[ ] @sunfishcode </li>\n<li>[ ] @jedisct1 </li>\n<li>[ ] @fitzgen </li>\n<li>[x] @pchickey </li>\n<li>[x] @peterhuene </li>\n<li>[ ] @acfoltzer </li>\n<li>[ ] @iximeow </li>\n</ul>\n<h2>Intel</h2>\n<ul>\n<li>[ ] @mingqiusun</li>\n<li>[ ] @abrown </li>\n<li>[ ] @jlb6740</li>\n</ul>\n<h2>Microsoft</h2>\n<ul>\n<li>[ ] @thomastaylor312</li>\n<li>[ ] @bacongobbler</li>\n<li>[ ] @radu-matei</li>\n</ul>\n<h2>Mozilla</h2>\n<ul>\n<li>[ ] @julian-seward1 </li>\n<li>[ ] @yurydelendik</li>\n</ul>\n<h2>IBM</h2>\n<ul>\n<li>[ ] @uweigand</li>\n</ul>\n<h2>wasmCloud</h2>\n<ul>\n<li>[ ] @autodidaddict</li>\n</ul>\n<h2>Unaffiliated</h2>\n<ul>\n<li>[ ] @bjorn3</li>\n</ul>\n</blockquote>",
        "id": 240089383,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1621880032
    },
    {
        "content": "<p>fitzgen edited a <a href=\"https://github.com/bytecodealliance/rfcs/pull/11#issuecomment-847235017\">comment</a> on <a href=\"https://github.com/bytecodealliance/rfcs/pull/11\">issue #11</a>:</p>\n<blockquote>\n<h1>Motion to finalize with a disposition to merge</h1>\n<p>We've reached out to various Wasmtime embedders, and have received very positive feedback on the changes proposed here. Additionally, we have full implementations of the proposal for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2897\">Wasmtime's Rust and C-APIs</a>, <a href=\"https://github.com/alexcrichton/wasmtime-py/tree/new-api\">wasmtime-py</a>, and <a href=\"https://github.com/alexcrichton/wasmtime-go/tree/new-api\">wasmtime-go</a>.</p>\n<p>We also analyzed the impact on various existing embeddings, and found it to be very reasonable in all cases.</p>\n<p>As such, we proposing finalizing this RFC with a disposition to merge it.</p>\n<h1>Stakeholders sign-off</h1>\n<p>Given the broad impact of these changes, we decided to also tag a broad list of contributors and Wasmtime embedders for feedback.</p>\n<h2>Arm</h2>\n<ul>\n<li>[ ] @akirilov-arm</li>\n</ul>\n<h2>DFINITY</h2>\n<ul>\n<li>[ ] @granstrom</li>\n</ul>\n<h2>Embark Studios</h2>\n<ul>\n<li>[ ] @bnjbvr</li>\n<li>[ ] @repi</li>\n</ul>\n<h2>Fastly</h2>\n<ul>\n<li>[ ] @cfallin</li>\n<li>[ ] @sunfishcode </li>\n<li>[ ] @jedisct1 </li>\n<li>[x] @fitzgen </li>\n<li>[x] @pchickey </li>\n<li>[x] @peterhuene </li>\n<li>[ ] @acfoltzer </li>\n<li>[ ] @iximeow </li>\n</ul>\n<h2>Intel</h2>\n<ul>\n<li>[ ] @mingqiusun</li>\n<li>[ ] @abrown </li>\n<li>[ ] @jlb6740</li>\n</ul>\n<h2>Microsoft</h2>\n<ul>\n<li>[ ] @thomastaylor312</li>\n<li>[ ] @bacongobbler</li>\n<li>[ ] @radu-matei</li>\n</ul>\n<h2>Mozilla</h2>\n<ul>\n<li>[ ] @julian-seward1 </li>\n<li>[ ] @yurydelendik</li>\n</ul>\n<h2>IBM</h2>\n<ul>\n<li>[ ] @uweigand</li>\n</ul>\n<h2>wasmCloud</h2>\n<ul>\n<li>[ ] @autodidaddict</li>\n</ul>\n<h2>Unaffiliated</h2>\n<ul>\n<li>[ ] @bjorn3</li>\n</ul>\n</blockquote>",
        "id": 240089475,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1621880067
    },
    {
        "content": "<p>fitzgen edited a <a href=\"https://github.com/bytecodealliance/rfcs/pull/11#issuecomment-847235017\">comment</a> on <a href=\"https://github.com/bytecodealliance/rfcs/pull/11\">issue #11</a>:</p>\n<blockquote>\n<h1>Motion to finalize with a disposition to merge</h1>\n<p>We've reached out to various Wasmtime embedders, and have received very positive feedback on the changes proposed here. Additionally, we have full implementations of the proposal for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2897\">Wasmtime's Rust and C-APIs</a>, <a href=\"https://github.com/alexcrichton/wasmtime-py/tree/new-api\">wasmtime-py</a>, and <a href=\"https://github.com/alexcrichton/wasmtime-go/tree/new-api\">wasmtime-go</a>.</p>\n<p>We also analyzed the impact on various existing embeddings, and found it to be very reasonable in all cases.</p>\n<p>As such, we proposing finalizing this RFC with a disposition to merge it.</p>\n<h1>Stakeholders sign-off</h1>\n<p>Given the broad impact of these changes, we decided to also tag a broad list of contributors and Wasmtime embedders for feedback.</p>\n<h2>Arm</h2>\n<ul>\n<li>[ ] @akirilov-arm</li>\n</ul>\n<h2>DFINITY</h2>\n<ul>\n<li>[ ] @granstrom</li>\n</ul>\n<h2>Embark Studios</h2>\n<ul>\n<li>[ ] @bnjbvr</li>\n<li>[ ] @repi</li>\n</ul>\n<h2>Fastly</h2>\n<ul>\n<li>[ ] @cfallin</li>\n<li>[ ] @sunfishcode </li>\n<li>[ ] @jedisct1 </li>\n<li>[x] @fitzgen </li>\n<li>[x] @pchickey </li>\n<li>[x] @peterhuene </li>\n<li>[x] @acfoltzer </li>\n<li>[ ] @iximeow </li>\n</ul>\n<h2>Intel</h2>\n<ul>\n<li>[ ] @mingqiusun</li>\n<li>[ ] @abrown </li>\n<li>[ ] @jlb6740</li>\n</ul>\n<h2>Microsoft</h2>\n<ul>\n<li>[ ] @thomastaylor312</li>\n<li>[ ] @bacongobbler</li>\n<li>[ ] @radu-matei</li>\n</ul>\n<h2>Mozilla</h2>\n<ul>\n<li>[ ] @julian-seward1 </li>\n<li>[ ] @yurydelendik</li>\n</ul>\n<h2>IBM</h2>\n<ul>\n<li>[ ] @uweigand</li>\n</ul>\n<h2>wasmCloud</h2>\n<ul>\n<li>[ ] @autodidaddict</li>\n</ul>\n<h2>Unaffiliated</h2>\n<ul>\n<li>[ ] @bjorn3</li>\n</ul>\n</blockquote>",
        "id": 240089485,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1621880073
    },
    {
        "content": "<p>cfallin edited a <a href=\"https://github.com/bytecodealliance/rfcs/pull/11#issuecomment-847235017\">comment</a> on <a href=\"https://github.com/bytecodealliance/rfcs/pull/11\">issue #11</a>:</p>\n<blockquote>\n<h1>Motion to finalize with a disposition to merge</h1>\n<p>We've reached out to various Wasmtime embedders, and have received very positive feedback on the changes proposed here. Additionally, we have full implementations of the proposal for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2897\">Wasmtime's Rust and C-APIs</a>, <a href=\"https://github.com/alexcrichton/wasmtime-py/tree/new-api\">wasmtime-py</a>, and <a href=\"https://github.com/alexcrichton/wasmtime-go/tree/new-api\">wasmtime-go</a>.</p>\n<p>We also analyzed the impact on various existing embeddings, and found it to be very reasonable in all cases.</p>\n<p>As such, we proposing finalizing this RFC with a disposition to merge it.</p>\n<h1>Stakeholders sign-off</h1>\n<p>Given the broad impact of these changes, we decided to also tag a broad list of contributors and Wasmtime embedders for feedback.</p>\n<h2>Arm</h2>\n<ul>\n<li>[ ] @akirilov-arm</li>\n</ul>\n<h2>DFINITY</h2>\n<ul>\n<li>[ ] @granstrom</li>\n</ul>\n<h2>Embark Studios</h2>\n<ul>\n<li>[ ] @bnjbvr</li>\n<li>[ ] @repi</li>\n</ul>\n<h2>Fastly</h2>\n<ul>\n<li>[x] @cfallin</li>\n<li>[ ] @sunfishcode </li>\n<li>[ ] @jedisct1 </li>\n<li>[x] @fitzgen </li>\n<li>[x] @pchickey </li>\n<li>[x] @peterhuene </li>\n<li>[x] @acfoltzer </li>\n<li>[ ] @iximeow </li>\n</ul>\n<h2>Intel</h2>\n<ul>\n<li>[ ] @mingqiusun</li>\n<li>[ ] @abrown </li>\n<li>[ ] @jlb6740</li>\n</ul>\n<h2>Microsoft</h2>\n<ul>\n<li>[ ] @thomastaylor312</li>\n<li>[ ] @bacongobbler</li>\n<li>[ ] @radu-matei</li>\n</ul>\n<h2>Mozilla</h2>\n<ul>\n<li>[ ] @julian-seward1 </li>\n<li>[ ] @yurydelendik</li>\n</ul>\n<h2>IBM</h2>\n<ul>\n<li>[ ] @uweigand</li>\n</ul>\n<h2>wasmCloud</h2>\n<ul>\n<li>[ ] @autodidaddict</li>\n</ul>\n<h2>Unaffiliated</h2>\n<ul>\n<li>[ ] @bjorn3</li>\n</ul>\n</blockquote>",
        "id": 240091085,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1621880781
    },
    {
        "content": "<p>akirilov-arm edited a <a href=\"https://github.com/bytecodealliance/rfcs/pull/11#issuecomment-847235017\">comment</a> on <a href=\"https://github.com/bytecodealliance/rfcs/pull/11\">issue #11</a>:</p>\n<blockquote>\n<h1>Motion to finalize with a disposition to merge</h1>\n<p>We've reached out to various Wasmtime embedders, and have received very positive feedback on the changes proposed here. Additionally, we have full implementations of the proposal for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2897\">Wasmtime's Rust and C-APIs</a>, <a href=\"https://github.com/alexcrichton/wasmtime-py/tree/new-api\">wasmtime-py</a>, and <a href=\"https://github.com/alexcrichton/wasmtime-go/tree/new-api\">wasmtime-go</a>.</p>\n<p>We also analyzed the impact on various existing embeddings, and found it to be very reasonable in all cases.</p>\n<p>As such, we proposing finalizing this RFC with a disposition to merge it.</p>\n<h1>Stakeholders sign-off</h1>\n<p>Given the broad impact of these changes, we decided to also tag a broad list of contributors and Wasmtime embedders for feedback.</p>\n<h2>Arm</h2>\n<ul>\n<li>[x] @akirilov-arm</li>\n</ul>\n<h2>DFINITY</h2>\n<ul>\n<li>[ ] @granstrom</li>\n</ul>\n<h2>Embark Studios</h2>\n<ul>\n<li>[ ] @bnjbvr</li>\n<li>[ ] @repi</li>\n</ul>\n<h2>Fastly</h2>\n<ul>\n<li>[x] @cfallin</li>\n<li>[ ] @sunfishcode </li>\n<li>[ ] @jedisct1 </li>\n<li>[x] @fitzgen </li>\n<li>[x] @pchickey </li>\n<li>[x] @peterhuene </li>\n<li>[x] @acfoltzer </li>\n<li>[ ] @iximeow </li>\n</ul>\n<h2>Intel</h2>\n<ul>\n<li>[ ] @mingqiusun</li>\n<li>[ ] @abrown </li>\n<li>[ ] @jlb6740</li>\n</ul>\n<h2>Microsoft</h2>\n<ul>\n<li>[ ] @thomastaylor312</li>\n<li>[ ] @bacongobbler</li>\n<li>[ ] @radu-matei</li>\n</ul>\n<h2>Mozilla</h2>\n<ul>\n<li>[ ] @julian-seward1 </li>\n<li>[ ] @yurydelendik</li>\n</ul>\n<h2>IBM</h2>\n<ul>\n<li>[ ] @uweigand</li>\n</ul>\n<h2>wasmCloud</h2>\n<ul>\n<li>[ ] @autodidaddict</li>\n</ul>\n<h2>Unaffiliated</h2>\n<ul>\n<li>[ ] @bjorn3</li>\n</ul>\n</blockquote>",
        "id": 240092640,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1621881443
    },
    {
        "content": "<p>alexcrichton edited a <a href=\"https://github.com/bytecodealliance/rfcs/pull/11#issuecomment-847235017\">comment</a> on <a href=\"https://github.com/bytecodealliance/rfcs/pull/11\">issue #11</a>:</p>\n<blockquote>\n<h1>Motion to finalize with a disposition to merge</h1>\n<p>We've reached out to various Wasmtime embedders, and have received very positive feedback on the changes proposed here. Additionally, we have full implementations of the proposal for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2897\">Wasmtime's Rust and C-APIs</a>, <a href=\"https://github.com/alexcrichton/wasmtime-py/tree/new-api\">wasmtime-py</a>, and <a href=\"https://github.com/alexcrichton/wasmtime-go/tree/new-api\">wasmtime-go</a>.</p>\n<p>We also analyzed the impact on various existing embeddings, and found it to be very reasonable in all cases.</p>\n<p>As such, we proposing finalizing this RFC with a disposition to merge it.</p>\n<h1>Stakeholders sign-off</h1>\n<p>Given the broad impact of these changes, we decided to also tag a broad list of contributors and Wasmtime embedders for feedback.</p>\n<h2>Arm</h2>\n<ul>\n<li>[x] @akirilov-arm</li>\n</ul>\n<h2>DFINITY</h2>\n<ul>\n<li>[ ] @granstrom</li>\n</ul>\n<h2>Embark Studios</h2>\n<ul>\n<li>[ ] @bnjbvr</li>\n<li>[ ] @repi</li>\n</ul>\n<h2>Fastly</h2>\n<ul>\n<li>[x] @cfallin</li>\n<li>[ ] @sunfishcode </li>\n<li>[x] @jedisct1 </li>\n<li>[x] @fitzgen </li>\n<li>[x] @pchickey </li>\n<li>[x] @peterhuene </li>\n<li>[x] @acfoltzer </li>\n<li>[ ] @iximeow </li>\n</ul>\n<h2>Intel</h2>\n<ul>\n<li>[ ] @mingqiusun</li>\n<li>[ ] @abrown </li>\n<li>[ ] @jlb6740</li>\n</ul>\n<h2>Microsoft</h2>\n<ul>\n<li>[ ] @thomastaylor312</li>\n<li>[ ] @bacongobbler</li>\n<li>[ ] @radu-matei</li>\n</ul>\n<h2>Mozilla</h2>\n<ul>\n<li>[ ] @julian-seward1 </li>\n<li>[ ] @yurydelendik</li>\n</ul>\n<h2>IBM</h2>\n<ul>\n<li>[ ] @uweigand</li>\n</ul>\n<h2>wasmCloud</h2>\n<ul>\n<li>[ ] @autodidaddict</li>\n</ul>\n<h2>Unaffiliated</h2>\n<ul>\n<li>[ ] @bjorn3</li>\n</ul>\n</blockquote>",
        "id": 240092839,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1621881530
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/rfcs/pull/11#issuecomment-847250238\">commented</a> on <a href=\"https://github.com/bytecodealliance/rfcs/pull/11\">issue #11</a>:</p>\n<blockquote>\n<h1>Entering Final Call Period</h1>\n<p><a href=\"https://github.com/bytecodealliance/rfcs/blob/main/accepted/rfc-process.md#making-a-decision-merge-or-close\">https://github.com/bytecodealliance/rfcs/blob/main/accepted/rfc-process.md#making-a-decision-merge-or-close</a></p>\n<blockquote>\n<p>Once any stakeholder from a different group has signed off, the RFC will move into a 10 calendar day final comment period (FCP), long enough to ensure that other stakeholders have at least a full business week to respond.</p>\n</blockquote>\n<p>The FCP will end on Thursday June 3.</p>\n</blockquote>",
        "id": 240092956,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1621881591
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/rfcs/pull/11#issuecomment-847268392\">commented</a> on <a href=\"https://github.com/bytecodealliance/rfcs/pull/11\">issue #11</a>:</p>\n<blockquote>\n<p>I think it may be a little too early to say how we might support a proposal like that. The discussion on that issue is largely about thread id representation which is somewhat orthogonal to the embedding API. For the embedding API though the proposal is so vague at this point I'm not sure what our design constraints are. For example with a hypothetical <code>thread.new</code> instruction:</p>\n<ul>\n<li>I'm not sure how the imports of the current module are handled. For example if you imported a function, how is that fuction import satisfied on the other thread? Similarly if you have a function table in the module it's not clear how that would be \"forked\" into another thread. This might mean recursively instantiating a whole bunch of modules, but you'd also bottom out in host closures and be faced with a question of how to \"fork\" them to new threads too.</li>\n<li>I'm not sure how globals would be handled. Current globals, like the stack pointer, naturally don't want to be shared amongst threads and the sub-thread would want to get a fresh copy. (but where does the initial value come from?)</li>\n</ul>\n<p>I'm sure there's other questions too, but without knowing much about the proposal it's hard to say what the embedding API might look like. </p>\n<p>My rough mental model for the <a href=\"https://github.com/webassembly/threads\">current wasm threads proposal</a> (not to be confused with that issue for a native wasm thread) is that there'd be a <code>Store</code>-per-thread. Here <code>T</code> wouldn't need <code>Send</code> or <code>Sync</code> since the embedder would simply arrange the <code>Store</code> to be on its own thread somewhere else. Trying to fuse this with a native wasm threads proposal sort of looks like we'd need like a \"store factory\" where there's a built-in ability to create a <code>Store</code> on another thread. That namely does indeed need to create a <code>T</code>, and that could presumably be done with a custom trait/helper or even just <code>T: Clone</code>. This would indeed require <code>T: Send. I don't think that </code>T: Sync<code> would make sense since we provide mutable access to the </code>T<code> which means that we can't share the </code>T` across threads anyway.</p>\n<p>Overall I don't think we're necessarily in a <em>bad</em> position to support a proposal like that, but it's tough to say given the current state. I do think that we're still better off than we are today where host state is littered across all sorts of host functions and such. The only state in a <code>Store</code> which is maybe not <code>Send</code> and <code>Sync</code> is the <code>T</code> itself. This means that all reasoning about thread-safety is entirely tied to <code>T</code> since everything else is threadsafe (e.g. host closures are all <code>Fn() + Send +  Sync</code>).</p>\n<p>Currently there's a bunch of pieces floating around where if you connect a few and squint hard it sort of looks like an implementation of a native threads proposal, but I think there needs to be more concrete design planning and such done first.</p>\n</blockquote>",
        "id": 240096685,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1621883129
    },
    {
        "content": "<p>alexcrichton edited a <a href=\"https://github.com/bytecodealliance/rfcs/pull/11#issuecomment-847235017\">comment</a> on <a href=\"https://github.com/bytecodealliance/rfcs/pull/11\">issue #11</a>:</p>\n<blockquote>\n<h1>Motion to finalize with a disposition to merge</h1>\n<p>We've reached out to various Wasmtime embedders, and have received very positive feedback on the changes proposed here. Additionally, we have full implementations of the proposal for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2897\">Wasmtime's Rust and C-APIs</a>, <a href=\"https://github.com/alexcrichton/wasmtime-py/tree/new-api\">wasmtime-py</a>, and <a href=\"https://github.com/alexcrichton/wasmtime-go/tree/new-api\">wasmtime-go</a>.</p>\n<p>We also analyzed the impact on various existing embeddings, and found it to be very reasonable in all cases.</p>\n<p>As such, we proposing finalizing this RFC with a disposition to merge it.</p>\n<h1>Stakeholders sign-off</h1>\n<p>Given the broad impact of these changes, we decided to also tag a broad list of contributors and Wasmtime embedders for feedback.</p>\n<h2>Arm</h2>\n<ul>\n<li>[x] @akirilov-arm</li>\n</ul>\n<h2>DFINITY</h2>\n<ul>\n<li>[ ] @granstrom</li>\n</ul>\n<h2>Embark Studios</h2>\n<ul>\n<li>[ ] @bnjbvr</li>\n<li>[ ] @repi</li>\n</ul>\n<h2>Fastly</h2>\n<ul>\n<li>[x] @cfallin</li>\n<li>[ ] @sunfishcode </li>\n<li>[x] @jedisct1 </li>\n<li>[x] @fitzgen </li>\n<li>[x] @pchickey </li>\n<li>[x] @peterhuene </li>\n<li>[x] @acfoltzer </li>\n<li>[ ] @iximeow </li>\n</ul>\n<h2>Intel</h2>\n<ul>\n<li>[ ] @mingqiusun</li>\n<li>[ ] @abrown </li>\n<li>[ ] @jlb6740</li>\n</ul>\n<h2>Microsoft</h2>\n<ul>\n<li>[ ] @thomastaylor312</li>\n<li>[ ] @bacongobbler</li>\n<li>[ ] @radu-matei</li>\n</ul>\n<h2>Mozilla</h2>\n<ul>\n<li>[ ] @julian-seward1 </li>\n<li>[ ] @yurydelendik</li>\n</ul>\n<h2>IBM</h2>\n<ul>\n<li>[ ] @uweigand</li>\n</ul>\n<h2>wasmCloud</h2>\n<ul>\n<li>[ ] @autodidaddict</li>\n</ul>\n<h2>Unaffiliated</h2>\n<ul>\n<li>[x] @bjorn3</li>\n</ul>\n</blockquote>",
        "id": 240098226,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1621883821
    },
    {
        "content": "<p>sunfishcode edited a <a href=\"https://github.com/bytecodealliance/rfcs/pull/11#issuecomment-847235017\">comment</a> on <a href=\"https://github.com/bytecodealliance/rfcs/pull/11\">issue #11</a>:</p>\n<blockquote>\n<h1>Motion to finalize with a disposition to merge</h1>\n<p>We've reached out to various Wasmtime embedders, and have received very positive feedback on the changes proposed here. Additionally, we have full implementations of the proposal for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2897\">Wasmtime's Rust and C-APIs</a>, <a href=\"https://github.com/alexcrichton/wasmtime-py/tree/new-api\">wasmtime-py</a>, and <a href=\"https://github.com/alexcrichton/wasmtime-go/tree/new-api\">wasmtime-go</a>.</p>\n<p>We also analyzed the impact on various existing embeddings, and found it to be very reasonable in all cases.</p>\n<p>As such, we proposing finalizing this RFC with a disposition to merge it.</p>\n<h1>Stakeholders sign-off</h1>\n<p>Given the broad impact of these changes, we decided to also tag a broad list of contributors and Wasmtime embedders for feedback.</p>\n<h2>Arm</h2>\n<ul>\n<li>[x] @akirilov-arm</li>\n</ul>\n<h2>DFINITY</h2>\n<ul>\n<li>[ ] @granstrom</li>\n</ul>\n<h2>Embark Studios</h2>\n<ul>\n<li>[ ] @bnjbvr</li>\n<li>[ ] @repi</li>\n</ul>\n<h2>Fastly</h2>\n<ul>\n<li>[x] @cfallin</li>\n<li>[x] @sunfishcode </li>\n<li>[x] @jedisct1 </li>\n<li>[x] @fitzgen </li>\n<li>[x] @pchickey </li>\n<li>[x] @peterhuene </li>\n<li>[x] @acfoltzer </li>\n<li>[ ] @iximeow </li>\n</ul>\n<h2>Intel</h2>\n<ul>\n<li>[ ] @mingqiusun</li>\n<li>[ ] @abrown </li>\n<li>[ ] @jlb6740</li>\n</ul>\n<h2>Microsoft</h2>\n<ul>\n<li>[ ] @thomastaylor312</li>\n<li>[ ] @bacongobbler</li>\n<li>[ ] @radu-matei</li>\n</ul>\n<h2>Mozilla</h2>\n<ul>\n<li>[ ] @julian-seward1 </li>\n<li>[ ] @yurydelendik</li>\n</ul>\n<h2>IBM</h2>\n<ul>\n<li>[ ] @uweigand</li>\n</ul>\n<h2>wasmCloud</h2>\n<ul>\n<li>[ ] @autodidaddict</li>\n</ul>\n<h2>Unaffiliated</h2>\n<ul>\n<li>[x] @bjorn3</li>\n</ul>\n</blockquote>",
        "id": 240099967,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1621884611
    },
    {
        "content": "<p>alexcrichton edited a <a href=\"https://github.com/bytecodealliance/rfcs/pull/11#issuecomment-847235017\">comment</a> on <a href=\"https://github.com/bytecodealliance/rfcs/pull/11\">issue #11</a>:</p>\n<blockquote>\n<h1>Motion to finalize with a disposition to merge</h1>\n<p>We've reached out to various Wasmtime embedders, and have received very positive feedback on the changes proposed here. Additionally, we have full implementations of the proposal for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2897\">Wasmtime's Rust and C-APIs</a>, <a href=\"https://github.com/alexcrichton/wasmtime-py/tree/new-api\">wasmtime-py</a>, and <a href=\"https://github.com/alexcrichton/wasmtime-go/tree/new-api\">wasmtime-go</a>.</p>\n<p>We also analyzed the impact on various existing embeddings, and found it to be very reasonable in all cases.</p>\n<p>As such, we proposing finalizing this RFC with a disposition to merge it.</p>\n<h1>Stakeholders sign-off</h1>\n<p>Given the broad impact of these changes, we decided to also tag a broad list of contributors and Wasmtime embedders for feedback.</p>\n<h2>Arm</h2>\n<ul>\n<li>[x] @akirilov-arm</li>\n</ul>\n<h2>DFINITY</h2>\n<ul>\n<li>[ ] @granstrom</li>\n</ul>\n<h2>Embark Studios</h2>\n<ul>\n<li>[ ] @bnjbvr</li>\n<li>[ ] @repi</li>\n</ul>\n<h2>Fastly</h2>\n<ul>\n<li>[x] @cfallin</li>\n<li>[x] @sunfishcode </li>\n<li>[x] @jedisct1 </li>\n<li>[x] @fitzgen </li>\n<li>[x] @pchickey </li>\n<li>[x] @peterhuene </li>\n<li>[x] @acfoltzer </li>\n<li>[ ] @iximeow </li>\n</ul>\n<h2>Intel</h2>\n<ul>\n<li>[ ] @mingqiusun</li>\n<li>[ ] @abrown </li>\n<li>[ ] @jlb6740</li>\n</ul>\n<h2>Microsoft</h2>\n<ul>\n<li>[ ] @thomastaylor312</li>\n<li>[ ] @bacongobbler</li>\n<li>[x] @radu-matei</li>\n</ul>\n<h2>Mozilla</h2>\n<ul>\n<li>[ ] @julian-seward1 </li>\n<li>[ ] @yurydelendik</li>\n</ul>\n<h2>IBM</h2>\n<ul>\n<li>[ ] @uweigand</li>\n</ul>\n<h2>wasmCloud</h2>\n<ul>\n<li>[ ] @autodidaddict</li>\n</ul>\n<h2>Unaffiliated</h2>\n<ul>\n<li>[x] @bjorn3</li>\n</ul>\n</blockquote>",
        "id": 240126948,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1621899520
    },
    {
        "content": "<p>alexcrichton edited a <a href=\"https://github.com/bytecodealliance/rfcs/pull/11#issuecomment-847235017\">comment</a> on <a href=\"https://github.com/bytecodealliance/rfcs/pull/11\">issue #11</a>:</p>\n<blockquote>\n<h1>Motion to finalize with a disposition to merge</h1>\n<p>We've reached out to various Wasmtime embedders, and have received very positive feedback on the changes proposed here. Additionally, we have full implementations of the proposal for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2897\">Wasmtime's Rust and C-APIs</a>, <a href=\"https://github.com/alexcrichton/wasmtime-py/tree/new-api\">wasmtime-py</a>, and <a href=\"https://github.com/alexcrichton/wasmtime-go/tree/new-api\">wasmtime-go</a>.</p>\n<p>We also analyzed the impact on various existing embeddings, and found it to be very reasonable in all cases.</p>\n<p>As such, we proposing finalizing this RFC with a disposition to merge it.</p>\n<h1>Stakeholders sign-off</h1>\n<p>Given the broad impact of these changes, we decided to also tag a broad list of contributors and Wasmtime embedders for feedback.</p>\n<h2>Arm</h2>\n<ul>\n<li>[x] @akirilov-arm</li>\n</ul>\n<h2>DFINITY</h2>\n<ul>\n<li>[ ] @granstrom</li>\n</ul>\n<h2>Embark Studios</h2>\n<ul>\n<li>[ ] @bnjbvr</li>\n<li>[ ] @repi</li>\n</ul>\n<h2>Fastly</h2>\n<ul>\n<li>[x] @cfallin</li>\n<li>[x] @sunfishcode </li>\n<li>[x] @jedisct1 </li>\n<li>[x] @fitzgen </li>\n<li>[x] @pchickey </li>\n<li>[x] @peterhuene </li>\n<li>[x] @acfoltzer </li>\n<li>[ ] @iximeow </li>\n</ul>\n<h2>Intel</h2>\n<ul>\n<li>[ ] @mingqiusun</li>\n<li>[x] @abrown </li>\n<li>[ ] @jlb6740</li>\n</ul>\n<h2>Microsoft</h2>\n<ul>\n<li>[ ] @thomastaylor312</li>\n<li>[ ] @bacongobbler</li>\n<li>[x] @radu-matei</li>\n</ul>\n<h2>Mozilla</h2>\n<ul>\n<li>[ ] @julian-seward1 </li>\n<li>[ ] @yurydelendik</li>\n</ul>\n<h2>IBM</h2>\n<ul>\n<li>[ ] @uweigand</li>\n</ul>\n<h2>wasmCloud</h2>\n<ul>\n<li>[ ] @autodidaddict</li>\n</ul>\n<h2>Unaffiliated</h2>\n<ul>\n<li>[x] @bjorn3</li>\n</ul>\n</blockquote>",
        "id": 240214317,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1621960167
    },
    {
        "content": "<p>alexcrichton edited a <a href=\"https://github.com/bytecodealliance/rfcs/pull/11#issuecomment-847235017\">comment</a> on <a href=\"https://github.com/bytecodealliance/rfcs/pull/11\">issue #11</a>:</p>\n<blockquote>\n<h1>Motion to finalize with a disposition to merge</h1>\n<p>We've reached out to various Wasmtime embedders, and have received very positive feedback on the changes proposed here. Additionally, we have full implementations of the proposal for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2897\">Wasmtime's Rust and C-APIs</a>, <a href=\"https://github.com/alexcrichton/wasmtime-py/tree/new-api\">wasmtime-py</a>, and <a href=\"https://github.com/alexcrichton/wasmtime-go/tree/new-api\">wasmtime-go</a>.</p>\n<p>We also analyzed the impact on various existing embeddings, and found it to be very reasonable in all cases.</p>\n<p>As such, we proposing finalizing this RFC with a disposition to merge it.</p>\n<h1>Stakeholders sign-off</h1>\n<p>Given the broad impact of these changes, we decided to also tag a broad list of contributors and Wasmtime embedders for feedback.</p>\n<h2>Arm</h2>\n<ul>\n<li>[x] @akirilov-arm</li>\n</ul>\n<h2>DFINITY</h2>\n<ul>\n<li>[ ] @granstrom</li>\n</ul>\n<h2>Embark Studios</h2>\n<ul>\n<li>[ ] @bnjbvr</li>\n<li>[ ] @repi</li>\n</ul>\n<h2>Fastly</h2>\n<ul>\n<li>[x] @cfallin</li>\n<li>[x] @sunfishcode </li>\n<li>[x] @jedisct1 </li>\n<li>[x] @fitzgen </li>\n<li>[x] @pchickey </li>\n<li>[x] @peterhuene </li>\n<li>[x] @acfoltzer </li>\n<li>[ ] @iximeow </li>\n</ul>\n<h2>Intel</h2>\n<ul>\n<li>[ ] @mingqiusun</li>\n<li>[x] @abrown </li>\n<li>[ ] @jlb6740</li>\n</ul>\n<h2>Microsoft</h2>\n<ul>\n<li>[x] @thomastaylor312</li>\n<li>[ ] @bacongobbler</li>\n<li>[x] @radu-matei</li>\n</ul>\n<h2>Mozilla</h2>\n<ul>\n<li>[ ] @julian-seward1 </li>\n<li>[ ] @yurydelendik</li>\n</ul>\n<h2>IBM</h2>\n<ul>\n<li>[ ] @uweigand</li>\n</ul>\n<h2>wasmCloud</h2>\n<ul>\n<li>[ ] @autodidaddict</li>\n</ul>\n<h2>Unaffiliated</h2>\n<ul>\n<li>[x] @bjorn3</li>\n</ul>\n</blockquote>",
        "id": 240214331,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1621960172
    },
    {
        "content": "<p>alexcrichton edited a <a href=\"https://github.com/bytecodealliance/rfcs/pull/11#issuecomment-847235017\">comment</a> on <a href=\"https://github.com/bytecodealliance/rfcs/pull/11\">issue #11</a>:</p>\n<blockquote>\n<h1>Motion to finalize with a disposition to merge</h1>\n<p>We've reached out to various Wasmtime embedders, and have received very positive feedback on the changes proposed here. Additionally, we have full implementations of the proposal for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2897\">Wasmtime's Rust and C-APIs</a>, <a href=\"https://github.com/alexcrichton/wasmtime-py/tree/new-api\">wasmtime-py</a>, and <a href=\"https://github.com/alexcrichton/wasmtime-go/tree/new-api\">wasmtime-go</a>.</p>\n<p>We also analyzed the impact on various existing embeddings, and found it to be very reasonable in all cases.</p>\n<p>As such, we proposing finalizing this RFC with a disposition to merge it.</p>\n<h1>Stakeholders sign-off</h1>\n<p>Given the broad impact of these changes, we decided to also tag a broad list of contributors and Wasmtime embedders for feedback.</p>\n<h2>Arm</h2>\n<ul>\n<li>[x] @akirilov-arm</li>\n</ul>\n<h2>DFINITY</h2>\n<ul>\n<li>[ ] @granstrom</li>\n</ul>\n<h2>Embark Studios</h2>\n<ul>\n<li>[ ] @bnjbvr</li>\n<li>[ ] @repi</li>\n</ul>\n<h2>Fastly</h2>\n<ul>\n<li>[x] @cfallin</li>\n<li>[x] @sunfishcode </li>\n<li>[x] @jedisct1 </li>\n<li>[x] @fitzgen </li>\n<li>[x] @pchickey </li>\n<li>[x] @peterhuene </li>\n<li>[x] @acfoltzer </li>\n<li>[ ] @iximeow </li>\n</ul>\n<h2>Intel</h2>\n<ul>\n<li>[ ] @mingqiusun</li>\n<li>[x] @abrown </li>\n<li>[ ] @jlb6740</li>\n</ul>\n<h2>Microsoft</h2>\n<ul>\n<li>[x] @thomastaylor312</li>\n<li>[x] @bacongobbler</li>\n<li>[x] @radu-matei</li>\n</ul>\n<h2>Mozilla</h2>\n<ul>\n<li>[ ] @julian-seward1 </li>\n<li>[ ] @yurydelendik</li>\n</ul>\n<h2>IBM</h2>\n<ul>\n<li>[ ] @uweigand</li>\n</ul>\n<h2>wasmCloud</h2>\n<ul>\n<li>[ ] @autodidaddict</li>\n</ul>\n<h2>Unaffiliated</h2>\n<ul>\n<li>[x] @bjorn3</li>\n</ul>\n</blockquote>",
        "id": 240214336,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1621960177
    },
    {
        "content": "<p>mingqiusun edited a <a href=\"https://github.com/bytecodealliance/rfcs/pull/11#issuecomment-847235017\">comment</a> on <a href=\"https://github.com/bytecodealliance/rfcs/pull/11\">issue #11</a>:</p>\n<blockquote>\n<h1>Motion to finalize with a disposition to merge</h1>\n<p>We've reached out to various Wasmtime embedders, and have received very positive feedback on the changes proposed here. Additionally, we have full implementations of the proposal for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2897\">Wasmtime's Rust and C-APIs</a>, <a href=\"https://github.com/alexcrichton/wasmtime-py/tree/new-api\">wasmtime-py</a>, and <a href=\"https://github.com/alexcrichton/wasmtime-go/tree/new-api\">wasmtime-go</a>.</p>\n<p>We also analyzed the impact on various existing embeddings, and found it to be very reasonable in all cases.</p>\n<p>As such, we proposing finalizing this RFC with a disposition to merge it.</p>\n<h1>Stakeholders sign-off</h1>\n<p>Given the broad impact of these changes, we decided to also tag a broad list of contributors and Wasmtime embedders for feedback.</p>\n<h2>Arm</h2>\n<ul>\n<li>[x] @akirilov-arm</li>\n</ul>\n<h2>DFINITY</h2>\n<ul>\n<li>[ ] @granstrom</li>\n</ul>\n<h2>Embark Studios</h2>\n<ul>\n<li>[ ] @bnjbvr</li>\n<li>[ ] @repi</li>\n</ul>\n<h2>Fastly</h2>\n<ul>\n<li>[x] @cfallin</li>\n<li>[x] @sunfishcode </li>\n<li>[x] @jedisct1 </li>\n<li>[x] @fitzgen </li>\n<li>[x] @pchickey </li>\n<li>[x] @peterhuene </li>\n<li>[x] @acfoltzer </li>\n<li>[ ] @iximeow </li>\n</ul>\n<h2>Intel</h2>\n<ul>\n<li>[x] @mingqiusun</li>\n<li>[x] @abrown </li>\n<li>[ ] @jlb6740</li>\n</ul>\n<h2>Microsoft</h2>\n<ul>\n<li>[x] @thomastaylor312</li>\n<li>[x] @bacongobbler</li>\n<li>[x] @radu-matei</li>\n</ul>\n<h2>Mozilla</h2>\n<ul>\n<li>[ ] @julian-seward1 </li>\n<li>[ ] @yurydelendik</li>\n</ul>\n<h2>IBM</h2>\n<ul>\n<li>[ ] @uweigand</li>\n</ul>\n<h2>wasmCloud</h2>\n<ul>\n<li>[ ] @autodidaddict</li>\n</ul>\n<h2>Unaffiliated</h2>\n<ul>\n<li>[x] @bjorn3</li>\n</ul>\n</blockquote>",
        "id": 240216059,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1621960889
    },
    {
        "content": "<p>alexcrichton edited a <a href=\"https://github.com/bytecodealliance/rfcs/pull/11#issuecomment-847268392\">comment</a> on <a href=\"https://github.com/bytecodealliance/rfcs/pull/11\">issue #11</a>:</p>\n<blockquote>\n<p>I think it may be a little too early to say how we might support a proposal like that. The discussion on that issue is largely about thread id representation which is somewhat orthogonal to the embedding API. For the embedding API though the proposal is so vague at this point I'm not sure what our design constraints are. For example with a hypothetical <code>thread.new</code> instruction:</p>\n<ul>\n<li>I'm not sure how the imports of the current module are handled. For example if you imported a function, how is that fuction import satisfied on the other thread? Similarly if you have a function table in the module it's not clear how that would be \"forked\" into another thread. This might mean recursively instantiating a whole bunch of modules, but you'd also bottom out in host closures and be faced with a question of how to \"fork\" them to new threads too.</li>\n<li>I'm not sure how globals would be handled. Current globals, like the stack pointer, naturally don't want to be shared amongst threads and the sub-thread would want to get a fresh copy. (but where does the initial value come from?)</li>\n</ul>\n<p>I'm sure there's other questions too, but without knowing much about the proposal it's hard to say what the embedding API might look like. </p>\n<p>My rough mental model for the <a href=\"https://github.com/webassembly/threads\">current wasm threads proposal</a> (not to be confused with that issue for a native wasm thread) is that there'd be a <code>Store</code>-per-thread. Here <code>T</code> wouldn't need <code>Send</code> or <code>Sync</code> since the embedder would simply arrange the <code>Store</code> to be on its own thread somewhere else. Trying to fuse this with a native wasm threads proposal sort of looks like we'd need like a \"store factory\" where there's a built-in ability to create a <code>Store</code> on another thread. That namely does indeed need to create a <code>T</code>, and that could presumably be done with a custom trait/helper or even just <code>T: Clone</code>. This would indeed require <code>T: Send</code>. I don't think that <code>T: Sync</code> would make sense since we provide mutable access to the <code>T</code> which means that we can't share the <code>T</code> across threads anyway.</p>\n<p>Overall I don't think we're necessarily in a <em>bad</em> position to support a proposal like that, but it's tough to say given the current state. I do think that we're still better off than we are today where host state is littered across all sorts of host functions and such. The only state in a <code>Store</code> which is maybe not <code>Send</code> and <code>Sync</code> is the <code>T</code> itself. This means that all reasoning about thread-safety is entirely tied to <code>T</code> since everything else is threadsafe (e.g. host closures are all <code>Fn() + Send +  Sync</code>).</p>\n<p>Currently there's a bunch of pieces floating around where if you connect a few and squint hard it sort of looks like an implementation of a native threads proposal, but I think there needs to be more concrete design planning and such done first.</p>\n</blockquote>",
        "id": 240247501,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1621975427
    },
    {
        "content": "<p>bnjbvr edited a <a href=\"https://github.com/bytecodealliance/rfcs/pull/11#issuecomment-847235017\">comment</a> on <a href=\"https://github.com/bytecodealliance/rfcs/pull/11\">issue #11</a>:</p>\n<blockquote>\n<h1>Motion to finalize with a disposition to merge</h1>\n<p>We've reached out to various Wasmtime embedders, and have received very positive feedback on the changes proposed here. Additionally, we have full implementations of the proposal for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2897\">Wasmtime's Rust and C-APIs</a>, <a href=\"https://github.com/alexcrichton/wasmtime-py/tree/new-api\">wasmtime-py</a>, and <a href=\"https://github.com/alexcrichton/wasmtime-go/tree/new-api\">wasmtime-go</a>.</p>\n<p>We also analyzed the impact on various existing embeddings, and found it to be very reasonable in all cases.</p>\n<p>As such, we proposing finalizing this RFC with a disposition to merge it.</p>\n<h1>Stakeholders sign-off</h1>\n<p>Given the broad impact of these changes, we decided to also tag a broad list of contributors and Wasmtime embedders for feedback.</p>\n<h2>Arm</h2>\n<ul>\n<li>[x] @akirilov-arm</li>\n</ul>\n<h2>DFINITY</h2>\n<ul>\n<li>[ ] @granstrom</li>\n</ul>\n<h2>Embark Studios</h2>\n<ul>\n<li>[x] @bnjbvr</li>\n<li>[ ] @repi</li>\n</ul>\n<h2>Fastly</h2>\n<ul>\n<li>[x] @cfallin</li>\n<li>[x] @sunfishcode </li>\n<li>[x] @jedisct1 </li>\n<li>[x] @fitzgen </li>\n<li>[x] @pchickey </li>\n<li>[x] @peterhuene </li>\n<li>[x] @acfoltzer </li>\n<li>[ ] @iximeow </li>\n</ul>\n<h2>Intel</h2>\n<ul>\n<li>[x] @mingqiusun</li>\n<li>[x] @abrown </li>\n<li>[ ] @jlb6740</li>\n</ul>\n<h2>Microsoft</h2>\n<ul>\n<li>[x] @thomastaylor312</li>\n<li>[x] @bacongobbler</li>\n<li>[x] @radu-matei</li>\n</ul>\n<h2>Mozilla</h2>\n<ul>\n<li>[ ] @julian-seward1 </li>\n<li>[ ] @yurydelendik</li>\n</ul>\n<h2>IBM</h2>\n<ul>\n<li>[ ] @uweigand</li>\n</ul>\n<h2>wasmCloud</h2>\n<ul>\n<li>[ ] @autodidaddict</li>\n</ul>\n<h2>Unaffiliated</h2>\n<ul>\n<li>[x] @bjorn3</li>\n</ul>\n</blockquote>",
        "id": 241174942,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1622651726
    },
    {
        "content": "<p>repi <a href=\"https://github.com/bytecodealliance/rfcs/pull/11#issuecomment-853679911\">commented</a> on <a href=\"https://github.com/bytecodealliance/rfcs/pull/11\">issue #11</a>:</p>\n<blockquote>\n<p>Good stuff! <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>\n</blockquote>",
        "id": 241360427,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1622708203
    },
    {
        "content": "<p>bnjbvr edited a <a href=\"https://github.com/bytecodealliance/rfcs/pull/11#issuecomment-847235017\">comment</a> on <a href=\"https://github.com/bytecodealliance/rfcs/pull/11\">issue #11</a>:</p>\n<blockquote>\n<h1>Motion to finalize with a disposition to merge</h1>\n<p>We've reached out to various Wasmtime embedders, and have received very positive feedback on the changes proposed here. Additionally, we have full implementations of the proposal for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2897\">Wasmtime's Rust and C-APIs</a>, <a href=\"https://github.com/alexcrichton/wasmtime-py/tree/new-api\">wasmtime-py</a>, and <a href=\"https://github.com/alexcrichton/wasmtime-go/tree/new-api\">wasmtime-go</a>.</p>\n<p>We also analyzed the impact on various existing embeddings, and found it to be very reasonable in all cases.</p>\n<p>As such, we proposing finalizing this RFC with a disposition to merge it.</p>\n<h1>Stakeholders sign-off</h1>\n<p>Given the broad impact of these changes, we decided to also tag a broad list of contributors and Wasmtime embedders for feedback.</p>\n<h2>Arm</h2>\n<ul>\n<li>[x] @akirilov-arm</li>\n</ul>\n<h2>DFINITY</h2>\n<ul>\n<li>[ ] @granstrom</li>\n</ul>\n<h2>Embark Studios</h2>\n<ul>\n<li>[x] @bnjbvr</li>\n<li>[x] @repi</li>\n</ul>\n<h2>Fastly</h2>\n<ul>\n<li>[x] @cfallin</li>\n<li>[x] @sunfishcode </li>\n<li>[x] @jedisct1 </li>\n<li>[x] @fitzgen </li>\n<li>[x] @pchickey </li>\n<li>[x] @peterhuene </li>\n<li>[x] @acfoltzer </li>\n<li>[ ] @iximeow </li>\n</ul>\n<h2>Intel</h2>\n<ul>\n<li>[x] @mingqiusun</li>\n<li>[x] @abrown </li>\n<li>[ ] @jlb6740</li>\n</ul>\n<h2>Microsoft</h2>\n<ul>\n<li>[x] @thomastaylor312</li>\n<li>[x] @bacongobbler</li>\n<li>[x] @radu-matei</li>\n</ul>\n<h2>Mozilla</h2>\n<ul>\n<li>[ ] @julian-seward1 </li>\n<li>[ ] @yurydelendik</li>\n</ul>\n<h2>IBM</h2>\n<ul>\n<li>[ ] @uweigand</li>\n</ul>\n<h2>wasmCloud</h2>\n<ul>\n<li>[ ] @autodidaddict</li>\n</ul>\n<h2>Unaffiliated</h2>\n<ul>\n<li>[x] @bjorn3</li>\n</ul>\n</blockquote>",
        "id": 241360622,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1622708327
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/rfcs/pull/11#issuecomment-853898927\">commented</a> on <a href=\"https://github.com/bytecodealliance/rfcs/pull/11\">issue #11</a>:</p>\n<blockquote>\n<p>Ok the FCP period has now finished and no objections have been raised. Time to merge then!</p>\n</blockquote>",
        "id": 241395530,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1622729353
    }
]