[
    {
        "content": "<p>Hello Guys, i have two  components, called store and cli, store is a lib component while cli like the name signifies is a cli component, .<br>\nThe Store component has two wit files, they are as follows  :</p>\n<p><strong>types.wit</strong></p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"p\">:</span><span class=\"nc\">store</span><span class=\"p\">;</span>\n\n<span class=\"n\">interface</span><span class=\"w\"> </span><span class=\"n\">types</span><span class=\"w\"> </span><span class=\"p\">{</span>\n\n<span class=\"w\">    </span><span class=\"n\">record</span><span class=\"w\"> </span><span class=\"n\">key</span><span class=\"o\">-</span><span class=\"n\">value</span><span class=\"o\">-</span><span class=\"n\">pair</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">key</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">string</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"n\">value</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">string</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">type</span><span class=\"w\"> </span><span class=\"nc\">key</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">string</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"k\">enum</span><span class=\"w\"> </span><span class=\"nc\">error</span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">nae</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n\n<span class=\"w\">    </span><span class=\"n\">resource</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"p\">{</span>\n\n<span class=\"w\">        </span><span class=\"n\">constructor</span><span class=\"p\">();</span>\n\n<span class=\"w\">        </span><span class=\"n\">insert</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">(</span><span class=\"n\">kv</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">key</span><span class=\"o\">-</span><span class=\"n\">value</span><span class=\"o\">-</span><span class=\"n\">pair</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">result</span><span class=\"o\">&lt;</span><span class=\"n\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n\n<span class=\"w\">        </span><span class=\"n\">search</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">key</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">result</span><span class=\"o\">&lt;</span><span class=\"n\">key</span><span class=\"o\">-</span><span class=\"n\">value</span><span class=\"o\">-</span><span class=\"n\">pair</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n\n<span class=\"w\">        </span><span class=\"n\">delete</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">key</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">result</span><span class=\"o\">&lt;</span><span class=\"n\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n\n\n<span class=\"p\">}</span>\n\n<span class=\"p\">}</span>\n</code></pre></div>\n<p><strong>world.wit</strong></p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"p\">:</span><span class=\"nc\">store</span><span class=\"p\">;</span>\n\n<span class=\"n\">interface</span><span class=\"w\"> </span><span class=\"n\">types</span><span class=\"w\"> </span><span class=\"p\">{</span>\n\n<span class=\"w\">    </span><span class=\"n\">record</span><span class=\"w\"> </span><span class=\"n\">key</span><span class=\"o\">-</span><span class=\"n\">value</span><span class=\"o\">-</span><span class=\"n\">pair</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">key</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">string</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"n\">value</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">string</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">type</span><span class=\"w\"> </span><span class=\"nc\">key</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">string</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"k\">enum</span><span class=\"w\"> </span><span class=\"nc\">error</span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">nae</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n\n<span class=\"w\">    </span><span class=\"n\">resource</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"p\">{</span>\n\n<span class=\"w\">        </span><span class=\"n\">constructor</span><span class=\"p\">();</span>\n\n<span class=\"w\">        </span><span class=\"n\">insert</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">(</span><span class=\"n\">kv</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">key</span><span class=\"o\">-</span><span class=\"n\">value</span><span class=\"o\">-</span><span class=\"n\">pair</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">result</span><span class=\"o\">&lt;</span><span class=\"n\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n\n<span class=\"w\">        </span><span class=\"n\">search</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">key</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">result</span><span class=\"o\">&lt;</span><span class=\"n\">key</span><span class=\"o\">-</span><span class=\"n\">value</span><span class=\"o\">-</span><span class=\"n\">pair</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n\n<span class=\"w\">        </span><span class=\"n\">delete</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">key</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">result</span><span class=\"o\">&lt;</span><span class=\"n\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n\n\n<span class=\"p\">}</span>\n\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>The <strong>cli</strong> component only has a single <em>main.rs</em> file </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[allow(warnings)]</span>\n<span class=\"k\">mod</span><span class=\"w\"> </span><span class=\"nn\">bindings</span><span class=\"p\">;</span>\n\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">bindings</span><span class=\"p\">::</span><span class=\"n\">component</span><span class=\"p\">::</span><span class=\"n\">store</span><span class=\"p\">::</span><span class=\"n\">types</span><span class=\"p\">::{</span><span class=\"n\">KeyValuePair</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Store</span><span class=\"p\">};</span>\n\n\n<span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">new_store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Store</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"n\">new_store</span><span class=\"p\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">KeyValuePair</span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">key</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"hello\"</span><span class=\"p\">.</span><span class=\"n\">to_owned</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"world\"</span><span class=\"p\">.</span><span class=\"n\">to_owned</span><span class=\"p\">()}).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"fm\">assert_eq!</span><span class=\"p\">(</span><span class=\"n\">new_store</span><span class=\"p\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"s\">\"hello\"</span><span class=\"p\">.</span><span class=\"n\">to_owned</span><span class=\"p\">()).</span><span class=\"n\">unwrap</span><span class=\"p\">().</span><span class=\"n\">value</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"world\"</span><span class=\"p\">.</span><span class=\"n\">to_owned</span><span class=\"p\">())</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>I built both components with <strong>cargo component build</strong> which ran successfully without errors.<br>\nI also composed both components with command <strong>wac plug target/wasm32-wasi/debug/cli.wasm --plug target/wasm32-wasi/debug/store.wasm -o composed1.wasm</strong> which also ran fine without issues. <br>\nThe issue comes when i try to run the composed wasm with command <strong>wasmtime run --dir /home/WASI_PROJECTS/ -S inherit-network -S cli -S preview2 -S tcp ./composed1.wasm</strong>  It outputs such error :</p>\n<blockquote>\n<p>Error: failed to run main module <code>./composed1.wasm</code></p>\n<p>Caused by:<br>\n    0: component imports instance <code>component:store/types</code>, but a matching implementation was not found in the linker<br>\n    1: instance export <code>store</code> has the wrong type<br>\n    2: resource implementation is missing</p>\n</blockquote>",
        "id": 451713046,
        "sender_full_name": "Joshua Aruokhai",
        "timestamp": 1721120682
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"723815\">Joshua Aruokhai</span> <a href=\"#narrow/stream/235408-rust-toolchain/topic/Components.20are.20not.20being.20Linked/near/451713046\">said</a>:</p>\n<blockquote>\n<p>Hello Guys, i have two  components, called store and cli, store is a lib component while cli like the name signifies is a cli component, .<br>\nThe Store component has two wit files, they are as follows  :</p>\n<p><strong>types.wit</strong></p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"p\">:</span><span class=\"nc\">store</span><span class=\"p\">;</span>\n\n<span class=\"n\">interface</span><span class=\"w\"> </span><span class=\"n\">types</span><span class=\"w\"> </span><span class=\"p\">{</span>\n\n<span class=\"w\">    </span><span class=\"n\">record</span><span class=\"w\"> </span><span class=\"n\">key</span><span class=\"o\">-</span><span class=\"n\">value</span><span class=\"o\">-</span><span class=\"n\">pair</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">key</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">string</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"n\">value</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">string</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">type</span><span class=\"w\"> </span><span class=\"nc\">key</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">string</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"k\">enum</span><span class=\"w\"> </span><span class=\"nc\">error</span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">nae</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n\n<span class=\"w\">    </span><span class=\"n\">resource</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"p\">{</span>\n\n<span class=\"w\">        </span><span class=\"n\">constructor</span><span class=\"p\">();</span>\n\n<span class=\"w\">        </span><span class=\"n\">insert</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">(</span><span class=\"n\">kv</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">key</span><span class=\"o\">-</span><span class=\"n\">value</span><span class=\"o\">-</span><span class=\"n\">pair</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">result</span><span class=\"o\">&lt;</span><span class=\"n\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n\n<span class=\"w\">        </span><span class=\"n\">search</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">key</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">result</span><span class=\"o\">&lt;</span><span class=\"n\">key</span><span class=\"o\">-</span><span class=\"n\">value</span><span class=\"o\">-</span><span class=\"n\">pair</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n\n<span class=\"w\">        </span><span class=\"n\">delete</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">key</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">result</span><span class=\"o\">&lt;</span><span class=\"n\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n\n\n<span class=\"p\">}</span>\n\n<span class=\"p\">}</span>\n</code></pre></div>\n<p><strong>world.wit</strong></p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"p\">:</span><span class=\"nc\">store</span><span class=\"p\">;</span>\n\n<span class=\"n\">interface</span><span class=\"w\"> </span><span class=\"n\">types</span><span class=\"w\"> </span><span class=\"p\">{</span>\n\n<span class=\"w\">    </span><span class=\"n\">record</span><span class=\"w\"> </span><span class=\"n\">key</span><span class=\"o\">-</span><span class=\"n\">value</span><span class=\"o\">-</span><span class=\"n\">pair</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">key</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">string</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"n\">value</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">string</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">type</span><span class=\"w\"> </span><span class=\"nc\">key</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">string</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"k\">enum</span><span class=\"w\"> </span><span class=\"nc\">error</span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">nae</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n\n<span class=\"w\">    </span><span class=\"n\">resource</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"p\">{</span>\n\n<span class=\"w\">        </span><span class=\"n\">constructor</span><span class=\"p\">();</span>\n\n<span class=\"w\">        </span><span class=\"n\">insert</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">(</span><span class=\"n\">kv</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">key</span><span class=\"o\">-</span><span class=\"n\">value</span><span class=\"o\">-</span><span class=\"n\">pair</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">result</span><span class=\"o\">&lt;</span><span class=\"n\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n\n<span class=\"w\">        </span><span class=\"n\">search</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">key</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">result</span><span class=\"o\">&lt;</span><span class=\"n\">key</span><span class=\"o\">-</span><span class=\"n\">value</span><span class=\"o\">-</span><span class=\"n\">pair</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n\n<span class=\"w\">        </span><span class=\"n\">delete</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">key</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">result</span><span class=\"o\">&lt;</span><span class=\"n\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n\n\n<span class=\"p\">}</span>\n\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>The <strong>cli</strong> component only has a single <em>main.rs</em> file </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[allow(warnings)]</span>\n<span class=\"k\">mod</span><span class=\"w\"> </span><span class=\"nn\">bindings</span><span class=\"p\">;</span>\n\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">bindings</span><span class=\"p\">::</span><span class=\"n\">component</span><span class=\"p\">::</span><span class=\"n\">store</span><span class=\"p\">::</span><span class=\"n\">types</span><span class=\"p\">::{</span><span class=\"n\">KeyValuePair</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Store</span><span class=\"p\">};</span>\n\n\n<span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">new_store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Store</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"n\">new_store</span><span class=\"p\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">KeyValuePair</span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">key</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"hello\"</span><span class=\"p\">.</span><span class=\"n\">to_owned</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"world\"</span><span class=\"p\">.</span><span class=\"n\">to_owned</span><span class=\"p\">()}).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"fm\">assert_eq!</span><span class=\"p\">(</span><span class=\"n\">new_store</span><span class=\"p\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"s\">\"hello\"</span><span class=\"p\">.</span><span class=\"n\">to_owned</span><span class=\"p\">()).</span><span class=\"n\">unwrap</span><span class=\"p\">().</span><span class=\"n\">value</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"world\"</span><span class=\"p\">.</span><span class=\"n\">to_owned</span><span class=\"p\">())</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>I built both components with <strong>cargo component build</strong> which ran successfully without errors.<br>\nI also composed both components with command <strong>wac plug target/wasm32-wasi/debug/cli.wasm --plug target/wasm32-wasi/debug/store.wasm -o composed1.wasm</strong> which also ran fine without issues. <br>\nThe issue comes when i try to run the composed wasm with command <strong>wasmtime run --dir /home/WASI_PROJECTS/ -S inherit-network -S cli -S preview2 -S tcp ./composed1.wasm</strong>  It outputs such error :</p>\n<blockquote>\n<p>Error: failed to run main module <code>./composed1.wasm</code></p>\n<p>Caused by:<br>\n    0: component imports instance <code>component:store/types</code>, but a matching implementation was not found in the linker<br>\n    1: instance export <code>store</code> has the wrong type<br>\n    2: resource implementation is missing<br>\n</p>\n</blockquote>\n</blockquote>\n<p>Found my mistake, each component wit file needs to have a package version</p>",
        "id": 451759091,
        "sender_full_name": "Joshua Aruokhai",
        "timestamp": 1721136579
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"723815\">Joshua Aruokhai</span> has marked this topic as resolved.</p>",
        "id": 451759115,
        "sender_full_name": "Notification Bot",
        "timestamp": 1721136587
    }
]