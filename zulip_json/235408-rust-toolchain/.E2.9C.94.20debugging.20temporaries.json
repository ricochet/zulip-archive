[
    {
        "content": "<p>I'm too sleepy to file a proper bug report; but I just spent a good 30 mins debugging an issue that turned out to be related to temporaries: <a href=\"https://gist.github.com/yoshuawuyts/88bb552bb08ad5c1d53216c97fcc0f6e\">https://gist.github.com/yoshuawuyts/88bb552bb08ad5c1d53216c97fcc0f6e</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://gist.github.com/yoshuawuyts/88bb552bb08ad5c1d53216c97fcc0f6e\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/91f9baed8f4fc08c462d1a4de5a8c23942d45e97\\/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f6173736574732f676973742d6f672d696d6167652d3534666437646330373133652e706e67)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://gist.github.com/yoshuawuyts/88bb552bb08ad5c1d53216c97fcc0f6e\" title=\"temporaries.rs\">temporaries.rs</a></div><div class=\"message_embed_description\">GitHub Gist: instantly share code, notes, and snippets.</div></div></div>",
        "id": 423929511,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1709167874
    },
    {
        "content": "<p>These are all calls on the <code>IncomingResponse</code> type - <code>.consume().unwrap()</code> to get to the incoming body. Then <code>.stream().unwrap()</code> to get to the actual byte stream. But if you don't assign them to a local variable, it apparently does an early drop which triggers a panic.</p>",
        "id": 423929668,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1709167990
    },
    {
        "content": "<p>I'm not even sure this is a bug, and suspect it might just be an interaction between WIT's expressiveness limitations + our current limited stack trace / debugging facilities?</p>",
        "id": 423929772,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1709168055
    },
    {
        "content": "<p>Not sure what to do with this; but I figured it'd be worth sharing at a minimum</p>",
        "id": 423929794,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1709168074
    },
    {
        "content": "<p>If this tripped me up, it'll probably trip others up</p>",
        "id": 423929816,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1709168091
    },
    {
        "content": "<p>While I can't say for certain this looks like you may be running into <a href=\"https://github.com/WebAssembly/wasi-http/blob/32da63e2d0287e9b667d9de50f29addec34fc6c6/wit/types.wit#L419-L421\">this behavior</a>, which means you're right that WIT can't express the parent/child relationship here so the bindings can't do much better (at least not the auto-generated bindings)</p>",
        "id": 423930641,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1709168676
    },
    {
        "content": "<p>ohhhh right</p>",
        "id": 423930688,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1709168710
    },
    {
        "content": "<p>sorry, you linked to that earlier</p>",
        "id": 423930699,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1709168719
    },
    {
        "content": "<p>and I didn't read the link - that's on me</p>",
        "id": 423930703,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1709168724
    },
    {
        "content": "<p>I kind of forgot <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 423930712,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1709168732
    },
    {
        "content": "<p>yeah this looks like what I'm running into I think</p>",
        "id": 423930730,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1709168745
    },
    {
        "content": "<p>haaaa</p>",
        "id": 423930747,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1709168759
    },
    {
        "content": "<p>okay yeah that completely explains it</p>",
        "id": 423930804,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1709168778
    },
    {
        "content": "<p>I think I'm so used to just relying on the Rust type system, that this kind of runtime dependency just really threw me</p>",
        "id": 423930853,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1709168827
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"344849\">Yoshua Wuyts</span> has marked this topic as resolved.</p>",
        "id": 423931047,
        "sender_full_name": "Notification Bot",
        "timestamp": 1709168996
    },
    {
        "content": "<p>(I suspect this will resolve the issue; proactively closing it)</p>",
        "id": 423931104,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1709169016
    },
    {
        "content": "<p>Ah yeah, that did do the trick!</p>",
        "id": 423931289,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1709169185
    },
    {
        "content": "<p>It does lead to some fun cases like this tho:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"sd\">/// An HTTP response</span>\n<span class=\"cp\">#[derive(Debug)]</span>\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"nc\">Response</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">bytes_read</span>: <span class=\"kt\">u64</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">content_length</span>: <span class=\"kt\">u64</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">headers</span>: <span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"p\">(</span><span class=\"nb\">String</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"kt\">u8</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">reactor</span>: <span class=\"nc\">Reactor</span><span class=\"p\">,</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// IMPORTANT: the order of these fields here matters. `incoming_body` must</span>\n<span class=\"w\">    </span><span class=\"c1\">// be dropped before `body_stream`.</span>\n<span class=\"w\">    </span><span class=\"n\">body_stream</span>: <span class=\"nc\">InputStream</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">incoming_body</span>: <span class=\"nc\">IncomingBody</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n</code></pre></div>",
        "id": 423931344,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1709169239
    },
    {
        "content": "<p>heh good point! One thing you can do is to use <code>ManuallyDrop</code> with a <code>Drop</code> impl to explicitly write out the order of the drops (not that the struct field ordering doesn't work though)</p>",
        "id": 423931470,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1709169330
    },
    {
        "content": "<p>oh yeah, good call</p>",
        "id": 423931497,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1709169353
    },
    {
        "content": "<p>I don't know how yet; but we'll likely want to issue some guidance around this at some point</p>",
        "id": 423931554,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1709169369
    },
    {
        "content": "<p>it sounds like this might be part of the current streaming model, and at least having a canonical one-pager to point at and say: \"you're running into this case, do this thing\" could be good</p>",
        "id": 423931585,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1709169410
    },
    {
        "content": "<p>(I might volunteer doing that if we have a place to put it)</p>",
        "id": 423931605,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1709169428
    },
    {
        "content": "<p>agreed would be good to have <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 423931732,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1709169521
    }
]