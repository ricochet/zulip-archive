[
    {
        "content": "<p>Hey guys i am struggling to find examples that shows how to return a WASI type resource from a function which would be exported in a WIT file. </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">create_store</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"n\">BTree</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Error</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">btree</span><span class=\"p\">::</span><span class=\"n\">BTreeBuilder</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">().</span><span class=\"n\">build</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n</code></pre></div>\n<p>i have created the resource </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\"> </span><span class=\"n\">resource</span><span class=\"w\"> </span><span class=\"n\">btree</span><span class=\"w\"> </span><span class=\"p\">{</span>\n\n<span class=\"w\">        </span><span class=\"n\">insert</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">(</span><span class=\"n\">kv</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">key</span><span class=\"o\">-</span><span class=\"n\">value</span><span class=\"o\">-</span><span class=\"n\">pair</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">result</span><span class=\"o\">&lt;</span><span class=\"n\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"o\">-</span><span class=\"n\">code</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n\n<span class=\"w\">        </span><span class=\"n\">search</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">key</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">result</span><span class=\"o\">&lt;</span><span class=\"n\">key</span><span class=\"o\">-</span><span class=\"n\">value</span><span class=\"o\">-</span><span class=\"n\">pair</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"o\">-</span><span class=\"n\">code</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n\n<span class=\"w\">        </span><span class=\"n\">delete</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">key</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">result</span><span class=\"o\">&lt;</span><span class=\"n\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"o\">-</span><span class=\"n\">code</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n\n\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>also my <strong>world</strong></p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">world</span><span class=\"w\"> </span><span class=\"n\">example</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">types</span><span class=\"p\">.{</span><span class=\"n\">btree</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"o\">-</span><span class=\"n\">code</span><span class=\"p\">};</span>\n<span class=\"w\">    </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"n\">create</span><span class=\"o\">-</span><span class=\"n\">store</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">result</span><span class=\"o\">&lt;</span><span class=\"n\">btree</span><span class=\"p\">,</span><span class=\"n\">error</span><span class=\"o\">-</span><span class=\"n\">code</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>but i get the error </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">change</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">output</span><span class=\"w\"> </span><span class=\"k\">type</span><span class=\"w\"> </span><span class=\"nc\">to</span><span class=\"w\"> </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"n\">store</span><span class=\"p\">::</span><span class=\"n\">types</span><span class=\"p\">::</span><span class=\"n\">Btree</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">::</span><span class=\"n\">types</span><span class=\"p\">::</span><span class=\"n\">ErrorCode</span><span class=\"o\">&gt;</span><span class=\"err\">`</span>\n</code></pre></div>\n<p>How do i make BTree a resource ?, is there an additional library i should ise</p>",
        "id": 447208301,
        "sender_full_name": "Joshua Aruokhai",
        "timestamp": 1719405639
    },
    {
        "content": "<p>Could you provide a more complete example to help debug further?</p>",
        "id": 447228326,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1719411234
    },
    {
        "content": "<p>[Quotingâ€¦]</p>\n<p>My <a href=\"http://lib.rs\">lib.rs</a> </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[allow(warnings)]</span>\n<span class=\"k\">mod</span><span class=\"w\"> </span><span class=\"nn\">bindings</span><span class=\"p\">;</span>\n\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">bindings</span><span class=\"p\">::</span><span class=\"n\">Guest</span><span class=\"p\">;</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">btree</span><span class=\"p\">::</span><span class=\"n\">BTree</span><span class=\"p\">;</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">::</span><span class=\"n\">Error</span><span class=\"p\">;</span>\n\n<span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">Component</span><span class=\"p\">;</span>\n\n<span class=\"k\">mod</span><span class=\"w\"> </span><span class=\"nn\">node_type</span><span class=\"p\">;</span>\n<span class=\"k\">mod</span><span class=\"w\"> </span><span class=\"nn\">page_layout</span><span class=\"p\">;</span>\n<span class=\"k\">mod</span><span class=\"w\"> </span><span class=\"nn\">page</span><span class=\"p\">;</span>\n<span class=\"k\">mod</span><span class=\"w\"> </span><span class=\"nn\">node</span><span class=\"p\">;</span>\n<span class=\"k\">mod</span><span class=\"w\"> </span><span class=\"nn\">error</span><span class=\"p\">;</span>\n<span class=\"k\">mod</span><span class=\"w\"> </span><span class=\"nn\">btree</span><span class=\"p\">;</span>\n<span class=\"k\">mod</span><span class=\"w\"> </span><span class=\"nn\">pager</span><span class=\"p\">;</span>\n<span class=\"k\">mod</span><span class=\"w\"> </span><span class=\"nn\">wal</span><span class=\"p\">;</span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">Guest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">Component</span><span class=\"w\"> </span><span class=\"p\">{</span>\n\n<span class=\"w\">    </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">create_store</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"n\">BTree</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Error</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">btree</span><span class=\"p\">::</span><span class=\"n\">BTreeBuilder</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">().</span><span class=\"n\">build</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n\n\n\n\n<span class=\"p\">}</span>\n\n<span class=\"n\">bindings</span><span class=\"p\">::</span><span class=\"n\">export</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">Component</span><span class=\"w\"> </span><span class=\"n\">with_types_in</span><span class=\"w\"> </span><span class=\"n\">bindings</span><span class=\"p\">);</span>\n</code></pre></div>\n<p>My types.WIT file </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"p\">:</span><span class=\"nc\">store</span><span class=\"p\">;</span>\n\n<span class=\"n\">interface</span><span class=\"w\"> </span><span class=\"n\">types</span><span class=\"w\"> </span><span class=\"p\">{</span>\n\n<span class=\"w\">    </span><span class=\"n\">record</span><span class=\"w\"> </span><span class=\"n\">key</span><span class=\"o\">-</span><span class=\"n\">value</span><span class=\"o\">-</span><span class=\"n\">pair</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">key</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">string</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"n\">value</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">string</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">type</span><span class=\"w\"> </span><span class=\"nc\">key</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">string</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"k\">enum</span><span class=\"w\"> </span><span class=\"nc\">error</span><span class=\"o\">-</span><span class=\"n\">code</span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">nae</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n\n<span class=\"w\">    </span><span class=\"n\">resource</span><span class=\"w\"> </span><span class=\"n\">btree</span><span class=\"w\"> </span><span class=\"p\">{</span>\n\n<span class=\"w\">        </span><span class=\"n\">insert</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">(</span><span class=\"n\">kv</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">key</span><span class=\"o\">-</span><span class=\"n\">value</span><span class=\"o\">-</span><span class=\"n\">pair</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">result</span><span class=\"o\">&lt;</span><span class=\"n\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"o\">-</span><span class=\"n\">code</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n\n<span class=\"w\">        </span><span class=\"n\">search</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">key</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">result</span><span class=\"o\">&lt;</span><span class=\"n\">key</span><span class=\"o\">-</span><span class=\"n\">value</span><span class=\"o\">-</span><span class=\"n\">pair</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"o\">-</span><span class=\"n\">code</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n\n<span class=\"w\">        </span><span class=\"n\">delete</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">key</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">result</span><span class=\"o\">&lt;</span><span class=\"n\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"o\">-</span><span class=\"n\">code</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n\n\n<span class=\"p\">}</span>\n\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>My world.WIT file</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"p\">:</span><span class=\"nc\">store</span><span class=\"p\">;</span>\n\n<span class=\"sd\">/// An example world for the component to target.</span>\n<span class=\"n\">world</span><span class=\"w\"> </span><span class=\"n\">example</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">types</span><span class=\"p\">.{</span><span class=\"n\">btree</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"o\">-</span><span class=\"n\">code</span><span class=\"p\">};</span>\n<span class=\"w\">    </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"n\">create</span><span class=\"o\">-</span><span class=\"n\">store</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">result</span><span class=\"o\">&lt;</span><span class=\"n\">btree</span><span class=\"p\">,</span><span class=\"n\">error</span><span class=\"o\">-</span><span class=\"n\">code</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>The error is  from <a href=\"http://lib.rs\">lib.rs</a>, the <strong>create_store</strong>  fn return type gives a semantic error : </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">method</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">create_store</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"n\">incompatible</span><span class=\"w\"> </span><span class=\"k\">type</span><span class=\"w\"> </span><span class=\"nc\">for</span><span class=\"w\"> </span><span class=\"k\">trait</span>\n<span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"n\">signature</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"k\">fn</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"n\">store</span><span class=\"p\">::</span><span class=\"n\">types</span><span class=\"p\">::</span><span class=\"n\">Btree</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">::</span><span class=\"n\">types</span><span class=\"p\">::</span><span class=\"n\">ErrorCode</span><span class=\"o\">&gt;</span><span class=\"err\">`</span>\n<span class=\"w\">   </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"n\">signature</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"k\">fn</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"n\">BTree</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">::</span><span class=\"n\">Error</span><span class=\"o\">&gt;</span><span class=\"err\">`</span>\n</code></pre></div>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"http://lib.rs\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/a025d1dfcfcdb4f622e82e9f608412cba3162ba3/68747470733a2f2f6c69622e72732f6372617465732d6c6f676f2e706e67&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"http://lib.rs\" title=\"Lib.rs â€” home for Rust crates // Lib.rs\">Lib.rs â€” home for Rust crates // Lib.rs</a></div><div class=\"message_embed_description\">List of Rust libraries and applications. An unofficial experimental opinionated alternative to crates.io</div></div></div>",
        "id": 447705026,
        "sender_full_name": "Joshua Aruokhai",
        "timestamp": 1719565004
    },
    {
        "content": "<p>[Quotingâ€¦]</p>\n<p>Thanks a lot guys, i found the info needed at <a href=\"https://component-model.bytecodealliance.org/language-support/rust.html#using-resources\">https://component-model.bytecodealliance.org/language-support/rust.html#using-resources</a></p>",
        "id": 447779616,
        "sender_full_name": "Joshua Aruokhai",
        "timestamp": 1719583364
    }
]