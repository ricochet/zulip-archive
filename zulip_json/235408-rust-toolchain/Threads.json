[
    {
        "content": "<p>Is there any current ongoing work to bring threads into the rust std library implementation? At the moment it panics due to: <a href=\"https://github.com/rust-lang/rust/blob/673d0db5e393e9c64897005b470bfeb6d5aec61b/library/std/src/sys/wasi/thread.rs#L16\">https://github.com/rust-lang/rust/blob/673d0db5e393e9c64897005b470bfeb6d5aec61b/library/std/src/sys/wasi/thread.rs#L16</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/rust-lang/rust/blob/673d0db5e393e9c64897005b470bfeb6d5aec61b/library/std/src/sys/wasi/thread.rs#L16\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/3b85f063dcbf2998ffec667a960882d44b9c5a76\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f336330303238373534313934663438653330626261306139613737353933613562376335333664666261353132393263393363616536313032626261363361352f727573742d6c616e672f72757374)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/rust-lang/rust/blob/673d0db5e393e9c64897005b470bfeb6d5aec61b/library/std/src/sys/wasi/thread.rs#L16\" title=\"rust/thread.rs at 673d0db5e393e9c64897005b470bfeb6d5aec61b · rust-lang/rust\">rust/thread.rs at 673d0db5e393e9c64897005b470bfeb6d5aec61b · rust-lang/rust</a></div><div class=\"message_embed_description\">Empowering everyone to build reliable and efficient software. - rust/thread.rs at 673d0db5e393e9c64897005b470bfeb6d5aec61b · rust-lang/rust</div></div></div>",
        "id": 276080415,
        "sender_full_name": "Alexandru Ene",
        "timestamp": 1647881034
    },
    {
        "content": "<p>No; wasi itself doesn't yet have a way to create threads; until we have that, there isn't much that can be done on the producer toolchain side.</p>",
        "id": 276081268,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1647881352
    },
    {
        "content": "<p>Ah right, so the extension here is non-standard, I must have missed that <a href=\"https://github.com/bytecodealliance/wasm-micro-runtime/blob/main/doc/pthread_library.md\">https://github.com/bytecodealliance/wasm-micro-runtime/blob/main/doc/pthread_library.md</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasm-micro-runtime/blob/main/doc/pthread_library.md\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/e02ffa5cabf748ae43e654d230f356667ab6e801\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f393036346164643364353636643230366439643234613164613831636366363333316234386233376433306166393934616232633664373265636266633338612f62797465636f6465616c6c69616e63652f7761736d2d6d6963726f2d72756e74696d65)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasm-micro-runtime/blob/main/doc/pthread_library.md\" title=\"wasm-micro-runtime/pthread_library.md at main · bytecodealliance/wasm-micro-runtime\">wasm-micro-runtime/pthread_library.md at main · bytecodealliance/wasm-micro-runtime</a></div><div class=\"message_embed_description\">WebAssembly Micro Runtime (WAMR). Contribute to bytecodealliance/wasm-micro-runtime development by creating an account on GitHub.</div></div></div>",
        "id": 276081566,
        "sender_full_name": "Alexandru Ene",
        "timestamp": 1647881463
    },
    {
        "content": "<p>Is there a proposal for pthread-like API in WASI? I can only seem to find some issues where this is briefly discussed, but nothing beyond that.</p>",
        "id": 276083010,
        "sender_full_name": "Alexandru Ene",
        "timestamp": 1647882030
    },
    {
        "content": "<p>As far I'm aware, nothing has changed since <a href=\"https://github.com/WebAssembly/WASI/issues/296#issuecomment-659223938\">this post</a>.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/WASI/issues/296#issuecomment-659223938\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/b737fb4afd0faa8d5b8a04bc2db09726a5ff4dad\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f396263643766636361333062613639616635623931363364393863653363353030383939383431373830613839363133316635363431633061373634313637312f576562417373656d626c792f574153492f6973737565732f323936)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/WASI/issues/296#issuecomment-659223938\" title=\"Multi-threading and Atomics · Issue #296 · WebAssembly/WASI\">Multi-threading and Atomics · Issue #296 · WebAssembly/WASI</a></div><div class=\"message_embed_description\">Hi, I really excited about WASI and what it&#39;s trying to achieve. I looked around for this, but couldn&#39;t find any mention of it. What is the status of multi-threading and Atomics in WASI? I ...</div></div></div>",
        "id": 276083312,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1647882148
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"298375\">@Alexandru Ene</span>, I have been experimenting with wasi-parallel, a way to express a \"parallel for\" from WASI; are you dead set on needing pthread-like support?</p>",
        "id": 276135065,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1647913955
    },
    {
        "content": "<p>The thing I think would be hugely beneficial would be for rust apps using threads to just work when compiled to wasm32-wasi. A pthread-like support would as far as I understand solve that since one could implement the rust Thread interface from above using it.</p>",
        "id": 276173322,
        "sender_full_name": "Alexandru Ene",
        "timestamp": 1647948153
    },
    {
        "content": "<p>Sorry, I wrote this and forgot to send it:<br>\nThings like rayon, etc would _just work_ if we can support Threads from the stdlib</p>",
        "id": 276226119,
        "sender_full_name": "Alexandru Ene",
        "timestamp": 1647970421
    },
    {
        "content": "<p>Ultimately, there are limited resources for advancing things that \"Make It Just Work\".</p>",
        "id": 276226292,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1647970498
    },
    {
        "content": "<p>Even something as seemingly obvious as a a single-threaded stub implementation of &lt;pthread.h&gt; to allow code using it to at least compile, which many people have asked for, has never seen anyone volunteer to create a PR.</p>",
        "id": 276226482,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1647970570
    },
    {
        "content": "<p>So we've had to prioritize. And sometimes, the priority of building out a weird slow Unix clone has been lower than the priority of trying to build the best system we can on top of the new component model platform forming underneath us.</p>",
        "id": 276226697,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1647970676
    },
    {
        "content": "<p>But of course, many people just want the weird slow Unix clone.</p>",
        "id": 276226790,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1647970704
    },
    {
        "content": "<p>And they want someone else to build it for them.</p>",
        "id": 276226894,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1647970754
    },
    {
        "content": "<p>Threads in WASI aren't going to happen until someone steps up to make a proposal to add native threads to Wasm. I've talked to numerous people who wanted this to happen over the last 2 years, and no one has actually stepped up.</p>",
        "id": 276227593,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1647971094
    },
    {
        "content": "<p>I myself am not going to do it.</p>",
        "id": 276227665,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1647971136
    },
    {
        "content": "<p>So if it's going to happen, someone is going to have to step up.</p>",
        "id": 276227687,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1647971149
    },
    {
        "content": "<p>Oh yes, I wasn't suggesting someone should do it, i meant more what i envision the target experience to be like from a library user's perspective. \"You include rayon, or any code that used the standard's library Thread class, it should keep working with threads enabled just as it does natively.\"</p>",
        "id": 276228047,
        "sender_full_name": "Alexandru Ene",
        "timestamp": 1647971308
    },
    {
        "content": "<p>I'm more than happy to pick this up tbh since it's an area we're interested in improving (at Prime Video)</p>",
        "id": 276228105,
        "sender_full_name": "Alexandru Ene",
        "timestamp": 1647971340
    },
    {
        "content": "<p>That's why I asked for a status, and the comment link is a good summary.</p>",
        "id": 276228299,
        "sender_full_name": "Alexandru Ene",
        "timestamp": 1647971424
    },
    {
        "content": "<p>I'm looking to understand where we are and what a good next step would be <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 276228321,
        "sender_full_name": "Alexandru Ene",
        "timestamp": 1647971435
    },
    {
        "content": "<p>And from what I see so far, a WASI-thread proposal would be a good next step, at least we can define an API that can then be implemented in terms of what VM capabilities we get. It's a bit unclear so far how much WASI is willing to not be compatible with browsers for example, or if there is such a goal</p>",
        "id": 276229474,
        "sender_full_name": "Alexandru Ene",
        "timestamp": 1647971837
    },
    {
        "content": "<p>Or maybe I lack a bit of understanding on the dependency for threads in WASI to thread creation / join being defined in WASM. Since a WASI extension would be compatible with the current standard, or maybe i'm missing something</p>",
        "id": 276230484,
        "sender_full_name": "Alexandru Ene",
        "timestamp": 1647972162
    },
    {
        "content": "<p>I've registered for the next WASI meeting to try and understand this a bit better</p>",
        "id": 276230880,
        "sender_full_name": "Alexandru Ene",
        "timestamp": 1647972309
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"254110\">@Andrew Brown</span>  I did read the wasi-parallel and it seems useful with a more limited scope (parallel-for style computation). It reminded me of how open-mp extensions</p>",
        "id": 276235787,
        "sender_full_name": "Alexandru Ene",
        "timestamp": 1647974203
    },
    {
        "content": "<p>Yeah, actually OpenMP is something we are looking into. But now that I understand the \"just make rayon work\" use case, I think there may be some opportunities to work together. Initially we were quite hesitant to do pthread-like create/join because there seemed to be a lot of pitfalls, e.g., in 2018 <span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span> <a href=\"https://rustwasm.github.io/2018/10/24/multithreading-rust-and-wasm.html\">made rayon work on the browser</a> and he identified some key problems with the Wasm threads proposal that made things... not easy: see <a href=\"https://rustwasm.github.io/wasm-bindgen/examples/raytrace.html#caveats\">this list of caveats</a>. What do you think of those? Some are a bit browser specific...</p>",
        "id": 276239164,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1647975707
    },
    {
        "content": "<p>I'll give it a read, thanks for referencing it!</p>",
        "id": 276239378,
        "sender_full_name": "Alexandru Ene",
        "timestamp": 1647975782
    },
    {
        "content": "<blockquote>\n<p>Threads in WASI aren't going to happen until someone steps up to make a proposal to add native threads to Wasm. I've talked to numerous people who wanted this to happen over the last 2 years, and no one has actually stepped up.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"254083\">@Dan Gohman</span>, native threads in Wasm proper? Or is there some way to do it with WASI and the existing thread proposal?</p>",
        "id": 276239633,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1647975896
    },
    {
        "content": "<p>In the posts linked from <a href=\"https://github.com/WebAssembly/WASI/issues/296#issuecomment-659223938\">here</a>, the consensus seems to be that the Web Worker system for threads isn't something we want to carry forward into non-Web contexts that don't have Web constraints.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/WASI/issues/296#issuecomment-659223938\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/b737fb4afd0faa8d5b8a04bc2db09726a5ff4dad\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f396263643766636361333062613639616635623931363364393863653363353030383939383431373830613839363133316635363431633061373634313637312f576562417373656d626c792f574153492f6973737565732f323936)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/WASI/issues/296#issuecomment-659223938\" title=\"Multi-threading and Atomics · Issue #296 · WebAssembly/WASI\">Multi-threading and Atomics · Issue #296 · WebAssembly/WASI</a></div><div class=\"message_embed_description\">Hi, I really excited about WASI and what it&#39;s trying to achieve. I looked around for this, but couldn&#39;t find any mention of it. What is the status of multi-threading and Atomics in WASI? I ...</div></div></div>",
        "id": 276240118,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1647976137
    },
    {
        "content": "<p>Technically speaking, it would work. WASI could define concepts which play the role of Web Workers, and we could build essentially the same threading system that browsers have, in a WASI context.</p>",
        "id": 276240221,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1647976196
    },
    {
        "content": "<p>However, the wasm libpthread would need to be very different. Because in Web Workers, each thread is a separate wasm instance, which is different from how \"native\" threads in wasm are envisioned to work.</p>",
        "id": 276240394,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1647976271
    },
    {
        "content": "<p>Would we need a WASM \"native\" threads accepted proposal in order to propose a pthread-like API for \"native\" threads in WASI? From my investigation so far, \"native\" threads exposed through an WASI API would require some changes in the thread-safety of other methods, but don't necessarily require new WASM instructions (maybe i'm super wrong here, I've just started looking into this more deeply)</p>",
        "id": 276240830,
        "sender_full_name": "Alexandru Ene",
        "timestamp": 1647976482
    },
    {
        "content": "<p>My reading of the WASM standard so far is that it has added OPS that are concerned with atomic access to variables, they wouldn't be incompatible with \"native\" threads</p>",
        "id": 276241054,
        "sender_full_name": "Alexandru Ene",
        "timestamp": 1647976585
    },
    {
        "content": "<p>I'm not sure. The first thing I think we'd need is an answer to \"how does one create a new thread?\"</p>",
        "id": 276241087,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1647976612
    },
    {
        "content": "<p>And in answering that, we'll need to figure out how the new thread gains access to the linear memory, and how TLS works.</p>",
        "id": 276241155,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1647976648
    },
    {
        "content": "<p>I've read Dan's comments a few times in the past, but only now do I feel like I \"get\" them (at least in part). The Web Worker \"each thread is a separate instance\" is a big design decision that we would have to buy into... or not. Right now I don't see why not: the globals would remain thread-local and all we would need is to build support for shared memory in Wasmtime (I'm looking into this) and figure out what to do about the \"start\" function...</p>",
        "id": 276241273,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1647976698
    },
    {
        "content": "<p>Ok, if you want we can work together on this <span class=\"user-mention\" data-user-id=\"254110\">@Andrew Brown</span> . I'm really interested to get something moving in this direction, and since you already have some experience with the openmp-style parallel for it would help a bunch.</p>",
        "id": 276241412,
        "sender_full_name": "Alexandru Ene",
        "timestamp": 1647976788
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"254083\">@Dan Gohman</span>: I don't want to get sucked into a \"boil the ocean\" problem, but I am semi-hopeful that creating <code>wasi_thread_create</code> and <code>wasi_thread_join</code> are possible with \"one instance per thread\"... Beyond the following, what other things are missing to make this happen: 1) what to do about \"start\" function, 2) shared memory support in Wasmtime, 3) implement wait/notify instructions from the threads proposal in Wasmtime, 4) maybe finish out any missing atomic instructions in Wasmtime (most seem to be there)--what else?</p>",
        "id": 276241822,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1647976984
    },
    {
        "content": "<p>5) support in the Rust stdlib to map <a href=\"https://doc.rust-lang.org/std/thread/index.html#functions\">thread functions</a> to the WASI ones when compiled to wasm32-wasi</p>",
        "id": 276242214,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1647977172
    },
    {
        "content": "<p>I myself don't know what would be needed to make instance-per-thread happen. I'm under the assumption that instance-per-thread isn't the system we'll ultimately want. Building it will not only be redundant work in the long run, but it'll mean building the system we'll ultimately want will be more work, because we'll have to deal with the transition.</p>",
        "id": 276242571,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1647977349
    },
    {
        "content": "<blockquote>\n<p>isn't the system we'll ultimately want</p>\n</blockquote>",
        "id": 276242631,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1647977386
    },
    {
        "content": "<p>Why?</p>",
        "id": 276242635,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1647977389
    },
    {
        "content": "<p>For the reasons in the links in <a href=\"https://github.com/WebAssembly/WASI/issues/296#issuecomment-659223938\">https://github.com/WebAssembly/WASI/issues/296#issuecomment-659223938</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/WASI/issues/296#issuecomment-659223938\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/b737fb4afd0faa8d5b8a04bc2db09726a5ff4dad\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f396263643766636361333062613639616635623931363364393863653363353030383939383431373830613839363133316635363431633061373634313637312f576562417373656d626c792f574153492f6973737565732f323936)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/WASI/issues/296#issuecomment-659223938\" title=\"Multi-threading and Atomics · Issue #296 · WebAssembly/WASI\">Multi-threading and Atomics · Issue #296 · WebAssembly/WASI</a></div><div class=\"message_embed_description\">Hi, I really excited about WASI and what it&#39;s trying to achieve. I looked around for this, but couldn&#39;t find any mention of it. What is the status of multi-threading and Atomics in WASI? I ...</div></div></div>",
        "id": 276242756,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1647977444
    },
    {
        "content": "<p>I'm also leaning more towards the not-instance-per-thread model, but I'll think a bit more about what the best way forward would be</p>",
        "id": 276242948,
        "sender_full_name": "Alexandru Ene",
        "timestamp": 1647977525
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"298375\">@Alexandru Ene</span> To answer one of your earlier questions: a \"native\" threads approach wouldn't be compatible with browsers at first, but (a) that isn't necessarily a blocker for WASI, and (b) in some of those threads, folks working on browsers are also weighing in saying they'd like a more light-weight way to do threads than Web Workers, so it's possible that browsers could eventually support a \"native\" thread system too.</p>",
        "id": 276243035,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1647977569
    },
    {
        "content": "<p>Thanks for clarifying <span class=\"user-mention\" data-user-id=\"254083\">@Dan Gohman</span> . Your help is really appreciated <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 276251151,
        "sender_full_name": "Alexandru Ene",
        "timestamp": 1647981679
    },
    {
        "content": "<p>I've kickstarted this: <a href=\"https://github.com/AlexEne/wasi-native-threads/blob/main/README.md\">https://github.com/AlexEne/wasi-native-threads/blob/main/README.md</a><br>\nAs well as added a proposal initial discussion for tomrrow's meeting: <a href=\"https://github.com/WebAssembly/meetings/pull/1024\">https://github.com/WebAssembly/meetings/pull/1024</a></p>\n<p>It's really early days, but got to start somewhere <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/AlexEne/wasi-native-threads/blob/main/README.md\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/75f2a36d557ff13f1d258cef33e7d49c412643d3\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f336135653130366634623361666139343033663661323236626239623163316564333233343839656234346164316261363433303431343831666532636539382f416c6578456e652f776173692d6e61746976652d74687265616473)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/AlexEne/wasi-native-threads/blob/main/README.md\" title=\"wasi-native-threads/README.md at main · AlexEne/wasi-native-threads\">wasi-native-threads/README.md at main · AlexEne/wasi-native-threads</a></div><div class=\"message_embed_description\">Threads prpopsal for WASI. Contribute to AlexEne/wasi-native-threads development by creating an account on GitHub.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/meetings/pull/1024\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/8d4b7768c42b38101690313f53fc19798a771286\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f346330653133306463366235303233316364353466336561333438623136333537393063323536393638333034363338653235336530356438653033646661342f576562417373656d626c792f6d656574696e67732f70756c6c2f31303234)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/meetings/pull/1024\" title=\"Update WASI-05-05.md by AlexEne · Pull Request #1024 · WebAssembly/meetings\">Update WASI-05-05.md by AlexEne · Pull Request #1024 · WebAssembly/meetings</a></div><div class=\"message_embed_description\">Add a proposal to kickstart a discussion over a native threads API.\nThis is my first time doing this, I've read the docs, and started a (very WIP) repository here: https://github.com/AlexEne/wasi-n...</div></div></div>",
        "id": 281158793,
        "sender_full_name": "Alexandru Ene",
        "timestamp": 1651672753
    }
]