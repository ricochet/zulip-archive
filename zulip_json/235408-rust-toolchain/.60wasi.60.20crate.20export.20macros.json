[
    {
        "content": "<p>Would it make sense for the <code>wasi</code> crate to have specialized (per-world) macros for defining exports? These would wrap <code>wit-bindgen::generate</code> with appropriate <code>exports:</code>, <code>with:</code>, etc.</p>",
        "id": 423419785,
        "sender_full_name": "Lann Martin",
        "timestamp": 1708961088
    },
    {
        "content": "<p>That seems reasonable to me yeah!</p>",
        "id": 423420866,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1708961329
    },
    {
        "content": "<p><a href=\"https://github.com/bytecodealliance/wasi/issues/76\">https://github.com/bytecodealliance/wasi/issues/76</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasi/issues/76\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/c3b10d74ac5b5f9573ef2c407971cc8b3dbf07d0\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f353563373235663830653639366664333932316231353336363962383832626162663435653761386237366130636132633439666335623536353861386261312f62797465636f6465616c6c69616e63652f776173692f6973737565732f3736)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasi/issues/76\" title=\"Add macros for generating wasi world export bindings · Issue #76 · bytecodealliance/wasi\">Add macros for generating wasi world export bindings · Issue #76 · bytecodealliance/wasi</a></div><div class=\"message_embed_description\">Implementing WASI exports correctly is verbose and requires a somewhat-deep understanding of wit-bindgen features, especially if you want to reuse the types from this crate: wit_bindgen::generate!(...</div></div></div>",
        "id": 423432718,
        "sender_full_name": "Lann Martin",
        "timestamp": 1708964533
    },
    {
        "content": "<p><a href=\"https://github.com/bytecodealliance/wasi/pull/77\">https://github.com/bytecodealliance/wasi/pull/77</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasi/pull/77\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/fdd285a5521f150adbc2a16edd91799bcf073453\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f623064646264613361333638623631323632346665393563616665393436353465623635346566343031303731393934623736303535396133653265623663612f62797465636f6465616c6c69616e63652f776173692f70756c6c2f3737)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasi/pull/77\" title=\"Add `export!` macros by lann · Pull Request #77 · bytecodealliance/wasi\">Add `export!` macros by lann · Pull Request #77 · bytecodealliance/wasi</a></div><div class=\"message_embed_description\">Also update bindings.rs with wit-bindgen 0.19.2.\nCloses #76\nuse wasi::http::types::{IncomingRequest, ResponseOutparam};\n\nwasi::http::incoming_handler::export!(Handler);\n\nstruct Handler;\n\nimpl expor...</div></div></div>",
        "id": 423623665,
        "sender_full_name": "Lann Martin",
        "timestamp": 1709045458
    },
    {
        "content": "<p>oh lol, I think I might have filed the same question about that just now here: <a href=\"https://github.com/bytecodealliance/wasi/issues/79\">https://github.com/bytecodealliance/wasi/issues/79</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasi/issues/79\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/dd16f544bec379fd4fa84a3292d28a29453e688e\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f313835613030666631636330613236383134313461366132663234303837646162623236643838306438396266383137613864396638346232333532343630642f62797465636f6465616c6c69616e63652f776173692f6973737565732f3739)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasi/issues/79\" title=\"using the `wasi` crate for the proxy world · Issue #79 · bytecodealliance/wasi\">using the `wasi` crate for the proxy world · Issue #79 · bytecodealliance/wasi</a></div><div class=\"message_embed_description\">In this example the entry point for the proxy world is generated via wit-bindgen like so: mod bindings; pub use bindings::wasi::http::types::{IncomingRequest, ResponseOutparam}; struct Component; i...</div></div></div>",
        "id": 423887983,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1709148563
    },
    {
        "content": "<p>I believe <span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span> is planning to make the macros-generating-macros story easier by overhauling wit-bindgen-rust's resources as well</p>",
        "id": 423888633,
        "sender_full_name": "Lann Martin",
        "timestamp": 1709148780
    },
    {
        "content": "<p>oh neat!</p>",
        "id": 423889009,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1709148926
    },
    {
        "content": "<p>indeed! that was done in <a href=\"https://github.com/bytecodealliance/wit-bindgen/pull/871\">https://github.com/bytecodealliance/wit-bindgen/pull/871</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wit-bindgen/pull/871\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/1c216844e22792616b056a594cba1d354eb63e9b\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f613663323135346230326363303061383861373138306134336534343061616435656164613861646665393063656362633962626335316238396462643366352f62797465636f6465616c6c69616e63652f7769742d62696e6467656e2f70756c6c2f383731)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wit-bindgen/pull/871\" title=\"rust: Revert back to historical way of exporting functions by alexcrichton · Pull Request #871 · bytecodealliance/wit-bindgen\">rust: Revert back to historical way of exporting functions by alexcrichton · Pull Request #871 · bytecodealliance/wit-bindgen</a></div><div class=\"message_embed_description\">This commit is unfortunately a bit of whiplash for Rust users as it transitions the wit_bindgen::generate! macro to what it was a few months ago in terms of how exports work. Before describing that...</div></div></div>",
        "id": 423890627,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1709149463
    },
    {
        "content": "<p>see I only looked for <em>open</em> PR when I wrote \"planning\"</p>",
        "id": 423890801,
        "sender_full_name": "Lann Martin",
        "timestamp": 1709149540
    }
]