[
    {
        "content": "<p>Hello!</p>\n<p>I am in the process of making Leptos (a web framework) capable of targeting <code>wasm32-wasip*</code> for its Server Side Rendering, it's working well (reactivity, streaming the HTML response, server functions, tailwind integration), I have made a stupid abstraction of <code>wasi:http</code> using <code>http</code> and <code>bytes</code> crate so the framework is integrating nicely with WASI.</p>\n<p>But I am not satisfied with the current state of the async runtime integration (PR is there if you are interested: <a href=\"https://github.com/leptos-rs/leptos/pull/3063\">https://github.com/leptos-rs/leptos/pull/3063</a>). Obviously, it doesn't use the <code>Pollable</code> of WASI and you can really easily stale the calling stack so I want to build some abstraction to makes it easier for the end-users.</p>\n<p>I've read the really good article of <span class=\"user-mention\" data-user-id=\"344849\">@Yoshua Wuyts</span> <br>\n<a href=\"#narrow/stream/235408-rust-toolchain/topic/.5Bpost.5D.20Designing.20an.20async.20Runtime.20for.20WASI.200.2E2/near/424106638\">https://bytecodealliance.zulipchat.com/#narrow/stream/235408-rust-toolchain/topic/.5Bpost.5D.20Designing.20an.20async.20Runtime.20for.20WASI.200.2E2/near/424106638</a></p>\n<p>And I was wondering if the state of the art evolved ? Is there any other implementation, is the community using <a href=\"https://docs.rs/wasi-async-runtime/latest/wasi_async_runtime/\">https://docs.rs/wasi-async-runtime/latest/wasi_async_runtime/</a> etc?<br>\nI am still evaluating using a crate for that vs. writing my own abstraction etc.</p>\n<p>Thanks a lot for any hints! <span aria-label=\"pray\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"pray\">:pray:</span></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/leptos-rs/leptos/pull/3063\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/c6c3ae49ee2f64d1690b485364458da187684389/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f306532376333633866346661653331646234636639366164393064393466613165346666383464316665343138366239373038353838343236346234356664352f6c6570746f732d72732f6c6570746f732f70756c6c2f33303633&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/leptos-rs/leptos/pull/3063\" title=\"Draft: Makes the standard `wasm32-wasip1` target a first-class citizen for Leptos's Server-Side by raskyld 路 Pull Request #3063 路 leptos-rs/leptos\">Draft: Makes the standard `wasm32-wasip1` target a first-class citizen for Leptos's Server-Side by raskyld 路 Pull Request #3063 路 leptos-rs/leptos</a></div><div class=\"message_embed_description\">DISCLAIMER: This is a draft, I am not a seasoned Rust developer so this PR need some attention to ensure the code is idiomatic and clean.\nThis is a side-project, not backed by my company so I need ...</div></div></div>",
        "id": 475344481,
        "sender_full_name": "raskyld",
        "timestamp": 1728319741
    },
    {
        "content": "<p>Have you looked at <a href=\"https://crates.io/crates/leptos-spin\">https://crates.io/crates/leptos-spin</a> at all?  It's experimental, but based on <code>spin-sdk</code> and <code>spin-executor</code>, which are reasonably mature and capable of managing WASI <code>pollable</code>s in an <code>async</code> context.  Despite being intended for targeting <a href=\"https://github.com/fermyon/spin\">Spin</a>, you should be able to use it to target a generic <code>wasi:http</code> runtime as long as you don't use any of the Spin-specific APIs.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/fermyon/spin\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/38db72dc2007ef51800f9d42c00ec7f9e4d64da6/68747470733a2f2f7265706f7369746f72792d696d616765732e67697468756275736572636f6e74656e742e636f6d2f3432333637393636342f32306534383863362d623961652d343831622d393063332d633131313138643565663238&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/fermyon/spin\" title=\"GitHub - fermyon/spin: Spin is the open source developer tool for building and running serverless applications powered by WebAssembly.\">GitHub - fermyon/spin: Spin is the open source developer tool for building and running serverless applications powered by WebAssembly.</a></div><div class=\"message_embed_description\">Spin is the open source developer tool for building and running serverless applications powered by WebAssembly. - fermyon/spin</div></div></div>",
        "id": 475671330,
        "sender_full_name": "Joel Dice",
        "timestamp": 1728421311
    },
    {
        "content": "<p>Yep I've checked this project and the spin-start one, I am targeting Leptos 0.7 so there was some migration I had to do.<br>\nI haven't checked those 2 underlying crates, I will definitely have a check! Thanks a lot <span aria-label=\"pray\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"pray\">:pray:</span></p>",
        "id": 476058907,
        "sender_full_name": "raskyld",
        "timestamp": 1728544899
    }
]