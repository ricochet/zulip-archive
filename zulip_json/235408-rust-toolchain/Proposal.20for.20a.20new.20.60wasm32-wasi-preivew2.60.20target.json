[
    {
        "content": "<p>I've opened a <a href=\"https://github.com/rust-lang/compiler-team/issues/694\">MCP on the Rust project</a> for the addition of a new target which would correspond to components</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/rust-lang/compiler-team/issues/694\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/fc3576dba06cf5c3bb088d6e18116549915defa3\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f323235343538353937306537303432363965656630636162653839383734306332376239393064646563656334303232646135346636643239373437316331342f727573742d6c616e672f636f6d70696c65722d7465616d2f6973737565732f363934)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/rust-lang/compiler-team/issues/694\" title=\"New Tier-3 target: `wasm32-wasi-preview2` · Issue #694 · rust-lang/compiler-team\">New Tier-3 target: `wasm32-wasi-preview2` · Issue #694 · rust-lang/compiler-team</a></div><div class=\"message_embed_description\">Proposal This is a proposal to add a new Tier 3 target to the Rust compiler named wasm32-wasi-preview2. This new target will be unlike preexisting WebAssembly targets in two major ways: The default...</div></div></div>",
        "id": 404431356,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1701097572
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span> we already had an MCP accepted for that</p>",
        "id": 404454248,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1701104632
    },
    {
        "content": "<p>let me pull it back up</p>",
        "id": 404454262,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1701104636
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/compiler-team/issues/594\">https://github.com/rust-lang/compiler-team/issues/594</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/rust-lang/compiler-team/issues/594\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/19f4056d9d854488d766d6a3a4838dbd84dcbfd8\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f366562386566363832623865663238653138396464363735356664646133616331636437636438353463343333646465633562656237666230356564363162642f727573742d6c616e672f636f6d70696c65722d7465616d2f6973737565732f353934)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/rust-lang/compiler-team/issues/594\" title=\"New tier-2 target for `wasm32-wasi-preview2` · Issue #594 · rust-lang/compiler-team\">New tier-2 target for `wasm32-wasi-preview2` · Issue #594 · rust-lang/compiler-team</a></div><div class=\"message_embed_description\">Proposal In 2019 the first version of the WASI spec was released (what we now call \"WASI Preview 1\"), and support was added to rustc as the tier-2 wasm32-wasi target. The folks working on WASI have...</div></div></div>",
        "id": 404454342,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1701104652
    },
    {
        "content": "<p>Unless you're proposing it should actually be a tier-3 supported platform?</p>",
        "id": 404454383,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1701104674
    },
    {
        "content": "<p>oh I had forgotten about this and didn't search well enough</p>",
        "id": 404454420,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1701104687
    },
    {
        "content": "<p>lemme reread this</p>",
        "id": 404454467,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1701104705
    },
    {
        "content": "<p>oh wow right that's a long zulip thread</p>",
        "id": 404454780,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1701104818
    },
    {
        "content": "<p>the only thing it doesn't do is require outputting actual WASI packages - the proposal basically leaves that up to <code>cargo-component</code></p>",
        "id": 404454800,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1701104823
    },
    {
        "content": "<p>yeah so coming back to this in my opinion we should walk back the ambitions of this target and probably go through an MCP again</p>",
        "id": 404454865,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1701104850
    },
    {
        "content": "<p>I should clarify all of this though and update with respect to that MCP</p>",
        "id": 404454894,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1701104860
    },
    {
        "content": "<p>Chiefly I think that we should get the compiler output of <code>wasm32-wasi-preview2</code> to be a component, not a core wasm module</p>",
        "id": 404454929,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1701104874
    },
    {
        "content": "<p>That, and being tier 3 to start, is a pretty big difference from the prior and reflects some recent thinking about how it better enables an incremental implementation of the target</p>",
        "id": 404455024,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1701104902
    },
    {
        "content": "<p>thanks for pointing this out though and apologies for forgetting about it!</p>",
        "id": 404455052,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1701104912
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"253994\">Alex Crichton</span> <a href=\"#narrow/stream/235408-rust-toolchain/topic/Proposal.20for.20a.20new.20.60wasm32-wasi-preivew2.60.20target/near/404454929\">said</a>:</p>\n<blockquote>\n<p>Chiefly I think that we should get the compiler output of <code>wasm32-wasi-preview2</code> to be a component, not a core wasm module</p>\n</blockquote>\n<p>strong agree with this, if we think this is practical</p>",
        "id": 404455062,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1701104916
    },
    {
        "content": "<p>I do actually disagree that it should be a tier 3 target though</p>",
        "id": 404455084,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1701104930
    },
    {
        "content": "<p>We had that discussion as part of accepting the MCP</p>",
        "id": 404455122,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1701104947
    },
    {
        "content": "<p>let me rephrase the tier part, this should start as tier 3, get developed, and then move to tier 2 when we're ready</p>",
        "id": 404455138,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1701104954
    },
    {
        "content": "<p>I'm wary of over-promising at the beginning when we're still figuring all this out</p>",
        "id": 404455159,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1701104967
    },
    {
        "content": "<p>and e.g. want to open the path to incrementally implementing things</p>",
        "id": 404455189,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1701104979
    },
    {
        "content": "<p>e.g. to produce a component the thinking is to use a custom linker, not <code>wasm-ld</code>, which is a wrapper around <code>wasm-ld</code> plus more component stuff</p>",
        "id": 404455226,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1701104998
    },
    {
        "content": "<p>and we can't reasonably get that to a \"perfect\" state on day 1, so starting at tier 3 is hopefully going to give some runway to fix bugs and break things before getting to tier 2</p>",
        "id": 404455333,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1701105027
    },
    {
        "content": "<p>the whole time though it should all be usable via <code>-Zbuild-std</code></p>",
        "id": 404455353,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1701105034
    },
    {
        "content": "<p>okay okay</p>",
        "id": 404455370,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1701105044
    },
    {
        "content": "<p>I see that argument</p>",
        "id": 404455378,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1701105049
    },
    {
        "content": "<p>I should go reread the dicsussion though to address some of those points</p>",
        "id": 404455422,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1701105059
    },
    {
        "content": "<p>In the accepted proposal we basically made the case that tier 2 was fine, since it was mostly about maybe changing things in the stdlib / targeting a new version of <code>wasi-libc</code></p>",
        "id": 404455521,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1701105105
    },
    {
        "content": "<p>But crucially we weren't touching the backend or codegen</p>",
        "id": 404455548,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1701105116
    },
    {
        "content": "<p>In your proposal you're explicitly saying that you <em>do</em> want to target the codegen bits, swapping out the linker</p>",
        "id": 404455641,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1701105135
    },
    {
        "content": "<p>yeah if we envision an entirely new binary format output I think it may change the calculus there</p>",
        "id": 404455653,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1701105142
    },
    {
        "content": "<p>yeah</p>",
        "id": 404455670,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1701105146
    },
    {
        "content": "<p>Yeah, I think that's reasonable</p>",
        "id": 404455685,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1701105151
    },
    {
        "content": "<p>ok cool I'll summarize all this in the Zulip thread and edit the proposal as well</p>",
        "id": 404455721,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1701105172
    },
    {
        "content": "<p>one more thing</p>",
        "id": 404455735,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1701105182
    },
    {
        "content": "<p>I think it would be wise that as part of the re-MCP, we make sure we get sign-off on acceptance criteria for when we can bump it to stage 2</p>",
        "id": 404455841,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1701105233
    },
    {
        "content": "<p>To make sure that we can initiative the \"bump to tier 2\" process by pointing to something which was already accepted, rather than needing to re-engage with the process</p>",
        "id": 404456119,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1701105325
    },
    {
        "content": "<p>makes sense yeah, but I'm not actually sure what that would entail? I wrote up <a href=\"https://github.com/rust-lang/compiler-team/issues/694\">some stuff under \"Next Steps\"</a> but that's more target-specific rather than project policies, so I'm not sure if we'd want to add anything more there over what is already required of tier 2</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/rust-lang/compiler-team/issues/694\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/fc3576dba06cf5c3bb088d6e18116549915defa3\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f323235343538353937306537303432363965656630636162653839383734306332376239393064646563656334303232646135346636643239373437316331342f727573742d6c616e672f636f6d70696c65722d7465616d2f6973737565732f363934)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/rust-lang/compiler-team/issues/694\" title=\"New Tier-3 target: `wasm32-wasi-preview2` · Issue #694 · rust-lang/compiler-team\">New Tier-3 target: `wasm32-wasi-preview2` · Issue #694 · rust-lang/compiler-team</a></div><div class=\"message_embed_description\">Proposal This is a proposal to add a new Tier 3 target to the Rust compiler named wasm32-wasi-preview2. This new target will be unlike preexisting WebAssembly targets in two major ways: The default...</div></div></div>",
        "id": 404456155,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1701105335
    },
    {
        "content": "<p>oh okay, fair enough</p>",
        "id": 404456337,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1701105391
    },
    {
        "content": "<p>I'll make sure to note this in the discussion though</p>",
        "id": 404456418,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1701105418
    },
    {
        "content": "<p>I guess I'm coming at this from having put in significant work to get the MCP to be tier 2 lol</p>",
        "id": 404456425,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1701105421
    },
    {
        "content": "<p>that \"Next Steps\" is intended to be a set of criteria for tier 2</p>",
        "id": 404456444,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1701105426
    },
    {
        "content": "<p>So maybe I'm a little scarred going into this, being a bit wary of re-doing the entire discussion</p>",
        "id": 404456459,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1701105429
    },
    {
        "content": "<p>no that's a good point and I want to learn from that heh</p>",
        "id": 404456491,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1701105439
    },
    {
        "content": "<p>ok I think I've noted in the places with updates, but lemme know if I missed anything</p>",
        "id": 404459370,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1701106510
    },
    {
        "content": "<p>or if you'd recommend making wording stronger anywhere or similar</p>",
        "id": 404459398,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1701106519
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"594829\">Denys Zadorozhnyi</span> has marked this topic as resolved.</p>",
        "id": 404461419,
        "sender_full_name": "Notification Bot",
        "timestamp": 1701107248
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"594829\">Denys Zadorozhnyi</span> has marked this topic as unresolved.</p>",
        "id": 404461433,
        "sender_full_name": "Notification Bot",
        "timestamp": 1701107255
    },
    {
        "content": "<p>My understanding is that the binary version of components will change once the component model is accepted as stable, basically rendering all tooling incompatible over night - is this going to be part of 1.0? <br>\nI fear that until then, given enough popularity of preview2, everybody became used to the temporary version number - and it becomes the new de-facto binary standard.</p>",
        "id": 404476400,
        "sender_full_name": "Christof Petig",
        "timestamp": 1701113321
    },
    {
        "content": "<p>You're right that the version number will change, and I'm told by Luke that this is the same transition that core wasm itself went through. The current vision is that the version number will change but no other changes will be made, so binary parsers can validate that either the spec-defined version is present or the version just-before stabilization. So in that sense everything won't break overnight, there will be a long period where existing parsers will accept both</p>",
        "id": 404476940,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1701113570
    }
]