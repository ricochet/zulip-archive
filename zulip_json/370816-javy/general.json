[
    {
        "content": "<p>Hey! Sorry I'm not very used to Zulip yet <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span>. I understand we need to create specific \"topics\" to enable a scoped discussion. However, I think a \"General\" or \"Introduction\" one could be useful too as a wayt to decide the different topics and help people to introduce themselves</p>\n<p>Does is sounds good to you?</p>",
        "id": 328930681,
        "sender_full_name": "Angel M",
        "timestamp": 1676885095
    },
    {
        "content": "<p>And thanks <span class=\"user-mention\" data-user-id=\"587520\">@Surma</span> for creating the stream</p>",
        "id": 328930746,
        "sender_full_name": "Angel M",
        "timestamp": 1676885111
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"512058\">@Angel M</span> I've been poking around in the Zulip docs and I don't think there's a way to have a default topic; I think that the best that we get is the \"stream events\" topic, which perhaps we can rename to <code>general</code> as use that as the catch-all topic if needed? </p>\n<p>Also, could you please invite any other interested people from VMWare to the stream? We tried to invite everyone that attended the last meeting, but we weren't able to find them in Zulip.</p>",
        "id": 328996592,
        "sender_full_name": "Saúl Cabrera",
        "timestamp": 1676903882
    },
    {
        "content": "<p>Cool <span class=\"user-mention\" data-user-id=\"411395\">@Saúl Cabrera</span> ! Yeah, having a \"general\" topic will work. I think of it as a way for people to interact when they don't have any specific topic. Specially, for new people</p>",
        "id": 329008039,
        "sender_full_name": "Angel M",
        "timestamp": 1676906652
    },
    {
        "content": "<p>And yes, I'm going to ping the team in case someone is not on Zulip yet <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 329008117,
        "sender_full_name": "Angel M",
        "timestamp": 1676906673
    },
    {
        "content": "<p>Hello and welcome! <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span><br>\nWe could probably have a couple topics across the stream, from \"entrusting\" Javy to the Bytecode alliance to exploring the WinterCG \"minimum web API\" equivalent for our use cases and technical work on Javy (componentization, abstractions, oxidation (=Rust-ification :D)).</p>\n<p>I'd say people should feel fairly liberal in posting messages to start new threads as Zulip allows \"rehoming\" messages and shifting them around across topics liberally (for the first 7 days by the author, and without limits for operators). This I find to be useful info for Zulip-newcomers to make it less daunting and to reassure them that it's okay to start new threads of discussions.</p>",
        "id": 329272851,
        "sender_full_name": "Flaki",
        "timestamp": 1677007326
    },
    {
        "content": "<p>+1 on having different streams for the identified initiatives</p>",
        "id": 329356552,
        "sender_full_name": "Angel M",
        "timestamp": 1677051185
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"553432\">@Asen Dobrinov Alexandrov</span> here we are <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 329356563,
        "sender_full_name": "Angel M",
        "timestamp": 1677051190
    },
    {
        "content": "<p>Hey everyone! We (Shopify) are looking to kick off the recurring Javy CG meetings. It would be good to discuss upcoming changes we’re thinking of and to continue the WinterCG discussions. We can all fill in an agenda beforehand, and can skip the meeting if there are no talking points. If you’re interested in an invite please react with a <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 338672134,
        "sender_full_name": "Jackson",
        "timestamp": 1677612005
    },
    {
        "content": "<p>We also wanted to gauge what people felt would be a good cadence for the meetings. React with <span aria-label=\"one\" class=\"emoji emoji-0031-20e3\" role=\"img\" title=\"one\">:one:</span>  for biweekly or <span aria-label=\"two\" class=\"emoji emoji-0032-20e3\" role=\"img\" title=\"two\">:two:</span>  for monthly</p>",
        "id": 338672251,
        "sender_full_name": "Jackson",
        "timestamp": 1677612045
    },
    {
        "content": "<p>Last ask here is to get a sense of the best time people prefer. Please fill out your preferences here <a href=\"https://www.when2meet.com/?18995950-PbVmc\">https://www.when2meet.com/?18995950-PbVmc</a></p>\n<p>Thanks!</p>",
        "id": 338672324,
        "sender_full_name": "Jackson",
        "timestamp": 1677612072
    },
    {
        "content": "<p>Invites for the next meeting on March 14th 10am EST have been sent out. Please DM me if I missed you! Attached to the meeting is a link to a google doc where anyone can add agenda items for the meeting</p>",
        "id": 339886531,
        "sender_full_name": "Jackson",
        "timestamp": 1678113679
    },
    {
        "content": "<p>In case anyone here missed the very relevant discussions and <a href=\"https://hackmd.io/@calvinp/HJvNgcwJn/edit\">notes</a> in the <a class=\"stream-topic\" data-stream-id=\"223391\" href=\"/#narrow/stream/223391-wasm/topic/JS-guest-runtime-and-bindings\">#wasm &gt; JS-guest-runtime-and-bindings</a> (and more broadly the discussion on <a class=\"stream-topic\" data-stream-id=\"223391\" href=\"/#narrow/stream/223391-wasm/topic/Interpreted.20Language.20Guests\">#wasm &gt; Interpreted Language Guests</a> ). I know I did <span aria-label=\"smiling face\" class=\"emoji emoji-263a\" role=\"img\" title=\"smiling face\">:smiling_face:</span></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://hackmd.io/@calvinp/HJvNgcwJn/edit\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/b37ce5483ca5f88093e39486a76c6a2b768cd6a5\\/68747470733a2f2f6861636b6d642e696f2f696d616765732f6d656469612f4861636b4d442d6f672e6a7067)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://hackmd.io/@calvinp/HJvNgcwJn/edit\" title=\"JS Guest Runtimes &amp; Bindings meeting - HackMD\">JS Guest Runtimes &amp; Bindings meeting - HackMD</a></div><div class=\"message_embed_description\">or</div></div></div>",
        "id": 345939335,
        "sender_full_name": "Flaki",
        "timestamp": 1680267089
    },
    {
        "content": "<p><span aria-label=\"loudspeaker\" class=\"emoji emoji-1f4e2\" role=\"img\" title=\"loudspeaker\">:loudspeaker:</span>  FYI we've updated the Javy license with a LLVM exception clause <a href=\"https://github.com/Shopify/javy/pull/291/files#diff-4673a3aba01813b595de187a7a6e9e63a3491d55821606fecd9f13a10c188a1dR204\">https://github.com/Shopify/javy/pull/291/files#diff-4673a3aba01813b595de187a7a6e9e63a3491d55821606fecd9f13a10c188a1dR204</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/Shopify/javy/pull/291/files#diff-4673a3aba01813b595de187a7a6e9e63a3491d55821606fecd9f13a10c188a1dR204\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/30444b39aa419a45688f836ad5c6184b1698e6bd\\/68747470733a2f2f617661746172732e67697468756275736572636f6e74656e742e636f6d2f752f323530323234393f733d34303026763d34)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/Shopify/javy/pull/291/files#diff-4673a3aba01813b595de187a7a6e9e63a3491d55821606fecd9f13a10c188a1dR204\" title=\"Update license with LLVM exception clause by jianghong · Pull Request #291 · Shopify/javy\">Update license with LLVM exception clause by jianghong · Pull Request #291 · Shopify/javy</a></div><div class=\"message_embed_description\">As part of Javy being a Hosted Project under the Bytecode Alliance, we need to update the license with a LLVM exception clause</div></div></div>",
        "id": 345955025,
        "sender_full_name": "Jackson",
        "timestamp": 1680270231
    },
    {
        "content": "<p>We have some quickjs-wasm-rs improvements that we're thinking about <a href=\"https://github.com/Shopify/javy/issues/295\">https://github.com/Shopify/javy/issues/295</a>. Happy to hear any feedback! Note: <span aria-label=\"warning\" class=\"emoji emoji-26a0\" role=\"img\" title=\"warning\">:warning:</span> These are breaking changes so be sure to pin your dependency of <code>quickjs-wasm-rs</code></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/Shopify/javy/issues/295\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/0c5dcddaf4ca0b9f685098af699bf8e0342d53cc\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f643135386131316632323463376337356237303730353266383331383139653333636631303633333164393336373536336139616438336661373966383833362f53686f706966792f6a6176792f6973737565732f323935)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/Shopify/javy/issues/295\" title=\"quickjs-wasm-rs improvements · Issue #295 · Shopify/javy\">quickjs-wasm-rs improvements · Issue #295 · Shopify/javy</a></div><div class=\"message_embed_description\">Rename Value and Context As we plan to introduce an enum that represents a JSValue (see below), this rename will help us disambiguate which level of representation a type is. It also helps clarify ...</div></div></div>",
        "id": 346910195,
        "sender_full_name": "Jackson",
        "timestamp": 1680625527
    },
    {
        "content": "<p>We've officially moved the Javy repository to the Bytecode Alliance organization! <a href=\"https://github.com/bytecodealliance/javy\">https://github.com/bytecodealliance/javy</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/javy\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/37b895b263603f643148d63fbfe81a1b8ee3f0b6\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f353838303364343636303635643037336366303764386663346365373839393933386663623230303430613264663039336265303932643265623062303336372f62797465636f6465616c6c69616e63652f6a617679)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/javy\" title=\"GitHub - bytecodealliance/javy: JS to WebAssembly toolchain\">GitHub - bytecodealliance/javy: JS to WebAssembly toolchain</a></div><div class=\"message_embed_description\">JS to WebAssembly toolchain. Contribute to bytecodealliance/javy development by creating an account on GitHub.</div></div></div>",
        "id": 358818781,
        "sender_full_name": "Jeff Charles",
        "timestamp": 1684262020
    },
    {
        "content": "<p>Hi I was attempting to package a mermaid js like app called pintora. I tried using quickjs but it ended up being pretty slow. Would using javy help? I’m targeting wasm.</p>",
        "id": 412053648,
        "sender_full_name": "Taylor Hillegeist",
        "timestamp": 1704855636
    },
    {
        "content": "<p>Javy performs a couple of  optimizations ahead-of-time that could help you boost the performance, but it's hard to say by how much without actually giving it a try.</p>",
        "id": 412400342,
        "sender_full_name": "Saúl Cabrera",
        "timestamp": 1704998400
    },
    {
        "content": "<p>I am wondering are there any publicly available examples of implementing the strategy for extension of Javy outlined here: <a href=\"https://github.com/bytecodealliance/javy/blob/main/docs/extending.md\">https://github.com/bytecodealliance/javy/blob/main/docs/extending.md</a> ... I'd like to try something like this but am not 100% concrete on the instructions.  Like if I want to add Javy like functionality to my existing CLI, forking the java-cli doesn't seem to be a great path forward.</p>",
        "id": 421118449,
        "sender_full_name": "Damian Reeves",
        "timestamp": 1707768411
    },
    {
        "content": "<p>We don't have a concrete example today as far as I know, but that's something that we can definitely add. Forking is probably the only approach for now, iff you want to keep all the other functionality already available in Javy. If you're interested in having some of Javy's functionality, you can create your own CLI using the underlying creates (e.g. <a href=\"https://crates.io/crates/javy\">https://crates.io/crates/javy</a> and <a href=\"https://crates.io/crates/javy-apis\">https://crates.io/crates/javy-apis</a>). There's a third possibility, which could be having Javy load third-party \"plugins\", that would allow you to extend Javy without code modifications to add any extra functionality. This is an idea and it's not implemented yet, but certainly something that we welcome contributions for.</p>",
        "id": 421130944,
        "sender_full_name": "Saúl Cabrera",
        "timestamp": 1707772736
    },
    {
        "content": "<p>Just double checking, if I want to have a runtime that has access to my own functions/modules this is the path forward.</p>",
        "id": 421562307,
        "sender_full_name": "Damian Reeves",
        "timestamp": 1707960055
    },
    {
        "content": "<p>Yeah if you're building a custom runtime, assembling it to your needs with the underlying crates is the best for now. We've updated the documentation to better reflect this <a href=\"https://github.com/bytecodealliance/javy/blob/main/docs/extending.md\">https://github.com/bytecodealliance/javy/blob/main/docs/extending.md</a></p>",
        "id": 421654367,
        "sender_full_name": "Saúl Cabrera",
        "timestamp": 1708004000
    },
    {
        "content": "<p>Hi! I wonder if it is possible to get a wrap_callback to return a wrap_callback? (Nested JS functions)<br>\nFor example someobj.some_function().some_other_function();</p>\n<p>I can get it to access attributes on for example someobj.some_function().some_attribute but cant call functions there.<br>\nfrom_qjs_value/to_qjs_value seems to set keys properly except for wrap_callback?</p>",
        "id": 423559006,
        "sender_full_name": "Simon",
        "timestamp": 1709024037
    },
    {
        "content": "<blockquote>\n<p>I wonder if it is possible to get a wrap_callback to return a wrap_callback?</p>\n</blockquote>\n<p>It isn't possible today unfortunately due to an unfortunate assumption made when designing the API. We have an open issue at <a href=\"https://github.com/bytecodealliance/javy/issues/608\">https://github.com/bytecodealliance/javy/issues/608</a> discussing offering an API that would be like <code>wrap_callback</code> but would support returning a <code>JSValueRef</code> instead of a <code>JSValue</code> and that change _should_ enable returning a function. One workaround until this is addressed, would be to define the outer function (that is, the function returning a function) in JS and load it with <code>context.eval_global</code>.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/javy/issues/608\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/d321f45739cb179c8f47699998a0644d5912c956\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f643330386363376565393336306239386665663066363337366130303739313362666337326262333966666362613632373465363630633265343564373738352f62797465636f6465616c6c69616e63652f6a6176792f6973737565732f363038)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/javy/issues/608\" title=\"[quickjs-wasm-rs] Should the closure passed to `wrap_callback` return `JSValueRef`? · Issue #608 · bytecodealliance/javy\">[quickjs-wasm-rs] Should the closure passed to `wrap_callback` return `JSValueRef`? · Issue #608 · bytecodealliance/javy</a></div><div class=\"message_embed_description\">Currently, the closure passed to wrap_callback is impl FnMut(&amp;Self, JSValueRef&lt;'_&gt;, &amp;[JSValueRef&lt;'_&gt;]) -&gt; Result&lt;JSValue&gt; + 'static. This has worked well so far, however, this makes it impossible t...</div></div></div>",
        "id": 423629332,
        "sender_full_name": "Jeff Charles",
        "timestamp": 1709046906
    },
    {
        "content": "<p>Ok, Thanks! Will try to implement the work-around and keep an eye on the GH-issue.</p>",
        "id": 423630714,
        "sender_full_name": "Simon",
        "timestamp": 1709047277
    },
    {
        "content": "<p>Please can you guys help me here - <a href=\"https://github.com/bytecodealliance/javy/issues/650\">https://github.com/bytecodealliance/javy/issues/650</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/javy/issues/650\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/a9ea0f8fda42d6ff39c60c82a327e8d026fbffc7/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f306665386261363536626638333166376231376236343961353934303036306565343732376439373366613936643535633632373432316537353266616534392f62797465636f6465616c6c69616e63652f6a6176792f6973737565732f363530&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/javy/issues/650\" title=\"Implement Cancellable or interruptible setTimeout in javy · Issue #650 · bytecodealliance/javy\">Implement Cancellable or interruptible setTimeout in javy · Issue #650 · bytecodealliance/javy</a></div><div class=\"message_embed_description\">How can I implement Implement Cancellable or interruptible timeout in javy ? I am right now polyfilling setTimeout like below - fn set_timeout_api() -&gt; impl FnMut(&amp;JSContextRef, JSValueRef, &amp;[JSVal...</div></div></div>",
        "id": 440856370,
        "sender_full_name": "Afshan Ahmed Khan",
        "timestamp": 1716816745
    }
]