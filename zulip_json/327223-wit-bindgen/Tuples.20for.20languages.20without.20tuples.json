[
    {
        "content": "<p>Guest bindgen for Kotlin (has generics, but no <code>vararg T</code>) uses standard <code>Pair&lt;A, B&gt;</code> and <code>Triple&lt;A, B, C&gt;</code> tuple types, and generates <code>Tuple{4+}</code> types at the world level. Other built-in WIT types can be provided as a library,  but these TupleN stands-off as the only type generated this way.</p>\n<p>I am wondering if this could be improved. Does anybody know use-cases for the large tuples? The benefit of discouraging large tuples, would be that bindgens could  implement a limited set of <code>Tuple{1..N}</code> statically, and fall back to something like <code>List&lt;Any&gt;</code> for larger tuples. Limiting tuple size at the spec level would simplify bindings even more. </p>\n<p>These TupleN are currently also used for multi-value results, and would also benefit from this.</p>",
        "id": 446401364,
        "sender_full_name": "Slava Kuzmich",
        "timestamp": 1719138446
    }
]