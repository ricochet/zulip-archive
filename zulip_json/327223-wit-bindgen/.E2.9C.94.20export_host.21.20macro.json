[
    {
        "content": "<p>Hello all. <br>\nI'm having trouble to find <code>export_host!</code> macro which was stated in the Rust example. </p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>error:<span class=\"w\"> </span>cannot<span class=\"w\"> </span>find<span class=\"w\"> </span>macro<span class=\"w\"> </span><span class=\"sb\">`</span>export_host<span class=\"sb\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>this<span class=\"w\"> </span>scope\n<span class=\"w\">  </span>--&gt;<span class=\"w\"> </span>rust_module/src/lib.rs:18:1\n<span class=\"w\">   </span><span class=\"p\">|</span>\n<span class=\"m\">18</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>export_host!<span class=\"o\">(</span>MyTransformer<span class=\"o\">)</span><span class=\"p\">;</span>\n<span class=\"w\">   </span><span class=\"p\">|</span><span class=\"w\"> </span>^^^^^^^^^^^\n</code></pre></div>\n<p>I couldn't either spot it in the <code>wit-bindgen</code> code base. <br>\nWould you point me to the right direction?<br>\nThanks for your help in advance.</p>",
        "id": 370820336,
        "sender_full_name": "alisomay",
        "timestamp": 1688051379
    },
    {
        "content": "<p>Where is the example from?</p>",
        "id": 370820557,
        "sender_full_name": "Robin Brown",
        "timestamp": 1688051409
    },
    {
        "content": "<p>It is from the <code>README.md</code> in <code>wit-bindgen</code> code base.</p>",
        "id": 370820783,
        "sender_full_name": "alisomay",
        "timestamp": 1688051459
    },
    {
        "content": "<p>I slightly modified the names but it is the same. <br>\nThe original example is</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"c1\">// src/lib.rs</span>\n\n<span class=\"c1\">// Use a procedural macro to generate bindings for the world we specified in</span>\n<span class=\"c1\">// `host.wit`</span>\n<span class=\"n\">wit_bindgen</span>::<span class=\"n\">generate</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">\"host\"</span><span class=\"p\">);</span>\n\n<span class=\"c1\">// Define a custom type and implement the generated `Host` trait for it which</span>\n<span class=\"c1\">// represents implementing all the necesssary exported interfaces for this</span>\n<span class=\"c1\">// component.</span>\n<span class=\"k\">struct</span> <span class=\"nc\">MyHost</span><span class=\"p\">;</span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">Host</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">MyHost</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">run</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">print</span><span class=\"p\">(</span><span class=\"s\">\"Hello, world!\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">export_host</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">MyHost</span><span class=\"p\">);</span>\n</code></pre></div>",
        "id": 370821037,
        "sender_full_name": "alisomay",
        "timestamp": 1688051508
    },
    {
        "content": "<p>Which is trying to generate from this <code>wit</code> I suppose.</p>\n<div class=\"codehilite\" data-code-language=\"wit\"><pre><span></span><code>// wit/host.wit\npackage example:host\n\nworld host {\n  import print: func(msg: string)\n\n  export run: func()\n}\n</code></pre></div>",
        "id": 370821396,
        "sender_full_name": "alisomay",
        "timestamp": 1688051567
    },
    {
        "content": "<p>You won't find a macro named <code>export_host</code> in the wit-bindgen repo because wit-bindgen creates that macro when you use it to generate and the name is formatted as <code>export_{}</code> where the parameter is the name of the world which just happens to be <code>host</code> in this case.</p>",
        "id": 370823118,
        "sender_full_name": "Robin Brown",
        "timestamp": 1688051861
    },
    {
        "content": "<p><a href=\"https://github.com/bytecodealliance/wit-bindgen/blob/0cc1e99c2682f421d8c81145fb72f13cf28be12a/crates/rust/src/lib.rs#L261\">https://github.com/bytecodealliance/wit-bindgen/blob/0cc1e99c2682f421d8c81145fb72f13cf28be12a/crates/rust/src/lib.rs#L261</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wit-bindgen/blob/0cc1e99c2682f421d8c81145fb72f13cf28be12a/crates/rust/src/lib.rs#L261\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/c4b76643ccad675106ae93991d00ee9b539a939e\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f616637313366366132316662616562353461343530316663343539616536303932306565366261306139393033646435636464376133663562313166383461322f62797465636f6465616c6c69616e63652f7769742d62696e6467656e)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wit-bindgen/blob/0cc1e99c2682f421d8c81145fb72f13cf28be12a/crates/rust/src/lib.rs#L261\" title=\"wit-bindgen/crates/rust/src/lib.rs at 0cc1e99c2682f421d8c81145fb72f13cf28be12a · bytecodealliance/wit-bindgen\">wit-bindgen/crates/rust/src/lib.rs at 0cc1e99c2682f421d8c81145fb72f13cf28be12a · bytecodealliance/wit-bindgen</a></div><div class=\"message_embed_description\">A language binding generator for WebAssembly interface types - wit-bindgen/crates/rust/src/lib.rs at 0cc1e99c2682f421d8c81145fb72f13cf28be12a · bytecodealliance/wit-bindgen</div></div></div>",
        "id": 370823312,
        "sender_full_name": "Robin Brown",
        "timestamp": 1688051891
    },
    {
        "content": "<p>Now I got it :)<br>\nSince the host is such a generic name it confused me. <br>\nThanks for the help!</p>",
        "id": 370823437,
        "sender_full_name": "alisomay",
        "timestamp": 1688051911
    },
    {
        "content": "<p>you're welcome!</p>",
        "id": 370823566,
        "sender_full_name": "Robin Brown",
        "timestamp": 1688051935
    },
    {
        "content": "<p>Here is a PR which imo clarifies this potential confusion, if you'd like to consider.<br>\n<a href=\"https://github.com/bytecodealliance/wit-bindgen/pull/599\">https://github.com/bytecodealliance/wit-bindgen/pull/599</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wit-bindgen/pull/599\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/fcdbbf28528bccd60b38f49408a0563486b6f143\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f646432373262373863626238366238633936323464366166323638313264376566323838316630313661393735633530343033306531633238363265373961652f62797465636f6465616c6c69616e63652f7769742d62696e6467656e2f70756c6c2f353939)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wit-bindgen/pull/599\" title=\"Update rust guest example comments in README.md by alisomay · Pull Request #599 · bytecodealliance/wit-bindgen\">Update rust guest example comments in README.md by alisomay · Pull Request #599 · bytecodealliance/wit-bindgen</a></div><div class=\"message_embed_description\">Improves the documentation on export_host! macro in the Rust guest example.\nSince host seems to be a generic name one can confuse this generated macro with a macro which should come from wit-bindge...</div></div></div>",
        "id": 370828185,
        "sender_full_name": "alisomay",
        "timestamp": 1688052675
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"628731\">alisomay</span> has marked this topic as resolved.</p>",
        "id": 372336062,
        "sender_full_name": "Notification Bot",
        "timestamp": 1688482081
    }
]