[
    {
        "content": "<p>Are there any plans to allow explicit renaming of fields in WIT types, and if so would that metadata be passed through to the host language code generators? My use case is that I would like to use some very basic javascript objects/python dicts  that I do not control as inputs to my WIT-specified functions. But the names of the fields in these objects/dicts don't always perfectly align with the standard language conventions (ex: javascript bindings make all WIT <code>foo-bar</code> into js <code>fooBar</code>, but the field on my object is <code>FooBar</code>).</p>\n<p>The specific things I want to model are AWS Lambda events. These are always JSON inputs and so have fairly primitive types that should be modelable in WIT (besides the lack of an arbitrary dict/map type). But as you can see in this <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-s3.html\">example</a> not all of the fields conform to standard javascript camelCase convention (ex: <code>Records</code>, <code>x-amz-request-id</code>). I would hope for something similar to the <code>#[serde(rename = \"name\")]</code> attribute to force my preferred name through all of the wit codegen steps. </p>\n<p>This isn't a huge blocker since at the moment I can just <code>JSON.stringify</code> the input and pass it to my wasm as a string and do the <code>serde</code> work inside the wasm, but the extra two hops in the js/py in memory -&gt; js/py string -&gt; FFI boundary -&gt; wasm string -&gt; wasm struct process are a bit unergonomic.</p>",
        "id": 429283594,
        "sender_full_name": "Landon James",
        "timestamp": 1711340523
    },
    {
        "content": "<p>A Java developer would prescribe a layer of intermediary types and mapping to those types so you're not leaking a dependency library's types in your interface</p>",
        "id": 429289314,
        "sender_full_name": "adam",
        "timestamp": 1711343956
    },
    {
        "content": "<p>It's long been a desire to have a sort of attribute syntax in WIT for precisely this sort of use case. This is not implemented yet nor has it yet been designed, but the thinking is that we'd basically have the serde-rename attribute lookalike in one form or another yeah.</p>",
        "id": 429430709,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1711378907
    }
]