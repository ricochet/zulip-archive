[
    {
        "content": "<p>After having upgraded to <code>wit-bindgen = \"0.7.0\"</code> for guest generation, the Python bindings are not generated anymore:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"nv\">$python</span><span class=\"w\"> </span>-m<span class=\"w\"> </span>wasmtime.bindgen<span class=\"w\"> </span>./component.wasm<span class=\"w\"> </span>--out-dir<span class=\"w\"> </span>decoder/\n\nRuntimeError:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>extract<span class=\"w\"> </span>interface<span class=\"w\"> </span>information<span class=\"w\"> </span>from<span class=\"w\"> </span>component\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">    </span>unknown<span class=\"w\"> </span>component<span class=\"w\"> </span>version:<span class=\"w\"> </span>0xd<span class=\"w\"> </span><span class=\"o\">(</span>at<span class=\"w\"> </span>offset<span class=\"w\"> </span>0x0<span class=\"o\">)</span>\n</code></pre></div>\n<p>Python uses <code>wasmtime-9.0.0</code>.</p>\n<p>The component is working as expected when bound to Rust.</p>\n<p>Can anyone confirm that generating Python bindings produces an error? Is there a workaround?</p>",
        "id": 371150878,
        "sender_full_name": "Christoph Brewing",
        "timestamp": 1688131610
    },
    {
        "content": "<p>I think the new wit-bindgen expects the wasmtime 10 wit format, wit has changed quite a bit unfortunately, a version of componentize-py that supports wasmtime 10 is next on the list as far as I understand</p>",
        "id": 371165606,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1688132220
    },
    {
        "content": "<p>but in general, that error (unknown component version) means your toolchain has diverged and some expect an older format of components while some expect a newer one</p>",
        "id": 371166194,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1688132314
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"550770\">Ramon Klass</span> <a href=\"#narrow/stream/327223-wit-bindgen/topic/Error.20generating.20Python.20bindings/near/371165606\">said</a>:</p>\n<blockquote>\n<p>I think the new wit-bindgen expects the wasmtime 10 wit format, wit has changed quite a bit unfortunately, a version of componentize-py that supports wasmtime 10 is next on the list as far as I understand</p>\n</blockquote>\n<p>I think you meant <code>wasmtime-py</code> based on the error Christoph shared.  But yeah, <code>componentize-py</code> needs an update, too.  The <code>snapshot</code> branch of the <code>componentize-py</code> repo is compatible with the latest component format, but it also relies on toolchain patches to support shared-everything linking, so it's not ready for general use yet.</p>",
        "id": 371174917,
        "sender_full_name": "Joel Dice",
        "timestamp": 1688133741
    },
    {
        "content": "<p>thank you for elaborating, and yes I need to familiarize myself more with all the parts involved in the wasi toolchain, some are \"something something wasmtime\" to me still</p>",
        "id": 371176564,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1688134020
    },
    {
        "content": "<p>you aren't the only one! Because there's a lot of movement at the moment prepping for the changes coming a lot of people are \"something version 3.1 something version 8.4 something version 23 wasmtime-klsk392\" :-) moving targets are hard.....</p>",
        "id": 371183941,
        "sender_full_name": "Ralph",
        "timestamp": 1688135248
    },
    {
        "content": "<p>(probably last) update: meanwhile <strong>wasmtime-py</strong> has been updated to match <code>wasmtime 10.0.0</code> . With this version, the bindings are generated flawlessly.</p>",
        "id": 373152404,
        "sender_full_name": "Christoph Brewing",
        "timestamp": 1688724693
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"595146\">Christoph Brewing</span> has marked this topic as resolved.</p>",
        "id": 373152567,
        "sender_full_name": "Notification Bot",
        "timestamp": 1688724726
    }
]