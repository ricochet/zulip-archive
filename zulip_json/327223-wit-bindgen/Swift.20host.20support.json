[
    {
        "content": "<p>Hi, I'm interested in using wit-bindgen to create libraries written in Rust that will be used by mobile hosts (iOS/Swift, Android/Kotlin), the readme suggested checking in here before diving in. </p>\n<p>I see Java is already supported but:<br>\n1) Has there been any work on generating Swift code and using this on iOS hosts?<br>\n2) Are there any know major barriers to getting this working?<br>\n3) How far away is some kind of async function support from landing?</p>\n<p>If not I would like to contribute Swift support if there is interest.</p>\n<p>Thanks</p>",
        "id": 326668470,
        "sender_full_name": "Jack Qi",
        "timestamp": 1675884447
    },
    {
        "content": "<p>Hey! Thanks for asking and welcome to contribute Swift guest bindgen!</p>\n<ol>\n<li>I am not aware of any work on generating Swift guest code</li>\n<li>I don't think a swift host version of wasmtime exists yet. </li>\n<li>async will not land this year</li>\n</ol>",
        "id": 326694384,
        "sender_full_name": "Mossaka (Joe)",
        "timestamp": 1675894172
    },
    {
        "content": "<p>Also, wasmtime won't work on iOS anyway due to JIT restrictions on that platform.</p>",
        "id": 326695484,
        "sender_full_name": "Joel Dice",
        "timestamp": 1675894620
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"487764\">@Mossaka (Joe)</span> Thanks for the quick reply. I'm looking for Swift host support, my use case is to have the guest written in rust which from what I understand is very well supported. My plan was to wrap the wasmtime C API (<a href=\"https://docs.wasmtime.dev/c-api/\">https://docs.wasmtime.dev/c-api/</a>) with Swift as a first step, then work on adding Swift code generation.</p>",
        "id": 326697583,
        "sender_full_name": "Jack Qi",
        "timestamp": 1675895438
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"509936\">@Joel Dice</span> Doesn't wasmtime support an AOT compilation mode? Would that not work on iOS?</p>",
        "id": 326697732,
        "sender_full_name": "Jack Qi",
        "timestamp": 1675895486
    },
    {
        "content": "<p>Ah that makes sense! Currently all the host generations are moved out of <code>wit-bindgen</code>. You might want to ask this question in the <code>wasmtime </code> stream!</p>",
        "id": 326701652,
        "sender_full_name": "Mossaka (Joe)",
        "timestamp": 1675897177
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"522247\">@Jack Qi</span> Yes, you can have wasmtime AOT a .wasm file to a native .cwasm file, but the iOS restrictions mean that you can't execute native code that was previously writable, so you can't just download a .cwasm and run it.  If you don't need to do that, and all your .cwasm files are bundled, read-only, as part of your app, then it might work.  Worth a try, anyway!</p>",
        "id": 326705404,
        "sender_full_name": "Joel Dice",
        "timestamp": 1675898948
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"522247\">@Jack Qi</span> you might be interested in the <code>wasmtime-py</code> embedding support which is a Python wrapper for Wasmtime's C API which then additionally has a <code>bindgen</code> module which is a code generator to execute components in Python, essentially host support for components in Python</p>",
        "id": 326705912,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1675899214
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"487764\">@Mossaka (Joe)</span> thanks for the pointer,  I'll take a look at the <code>wasmtime</code> repo to see how host support is implemented for other host languages. <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 326729851,
        "sender_full_name": "Jack Qi",
        "timestamp": 1675917408
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"509936\">@Joel Dice</span> yes I was hoping to be able bundle the AOT compiled wasm in the app and ship that. I still have hope that Apple might eventually remove the restriction in the future.</p>",
        "id": 326729881,
        "sender_full_name": "Jack Qi",
        "timestamp": 1675917445
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span> thanks I will take a look at <code>wasmtime-py</code> <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 326729948,
        "sender_full_name": "Jack Qi",
        "timestamp": 1675917491
    }
]