[
    {
        "content": "<p>I've setup an integration test to test a function called <code>fn read()</code>. The code compiles with no warnings with <code>cargo component build</code>, but when I run <code>cargo test</code> it panics with below message. The test run through fine if I for instance rename the function to <code>fn readf()</code>. I don't encounter the same issue with fn read() when having a \"regular\" lib project without wit-bindgen. I'm not sure if the issues are related to wit-bindgen or if there are certain words that can't be used as function names. </p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>cargo<span class=\"w\"> </span><span class=\"nb\">test</span>\n<span class=\"w\">   </span>Compiling<span class=\"w\"> </span>read_test<span class=\"w\"> </span>v0.1.0<span class=\"w\"> </span><span class=\"o\">(</span>/home/user/projects/read_test<span class=\"o\">)</span>\n<span class=\"w\">    </span>Finished<span class=\"w\"> </span><span class=\"sb\">`</span><span class=\"nb\">test</span><span class=\"sb\">`</span><span class=\"w\"> </span>profile<span class=\"w\"> </span><span class=\"o\">[</span>unoptimized<span class=\"w\"> </span>+<span class=\"w\"> </span>debuginfo<span class=\"o\">]</span><span class=\"w\"> </span>target<span class=\"o\">(</span>s<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"m\">0</span>.26s\n<span class=\"w\">     </span>Running<span class=\"w\"> </span>unittests<span class=\"w\"> </span>src/lib.rs<span class=\"w\"> </span><span class=\"o\">(</span>target/debug/deps/read_test-95b95b2d2f708962<span class=\"o\">)</span>\nthread<span class=\"w\"> </span><span class=\"s1\">'main'</span><span class=\"w\"> </span>panicked<span class=\"w\"> </span>at<span class=\"w\"> </span>src/lib.rs:8:9:\nattempt<span class=\"w\"> </span>to<span class=\"w\"> </span>add<span class=\"w\"> </span>with<span class=\"w\"> </span>overflow\nnote:<span class=\"w\"> </span>run<span class=\"w\"> </span>with<span class=\"w\"> </span><span class=\"sb\">`</span><span class=\"nv\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"m\">1</span><span class=\"sb\">`</span><span class=\"w\"> </span>environment<span class=\"w\"> </span>variable<span class=\"w\"> </span>to<span class=\"w\"> </span>display<span class=\"w\"> </span>a<span class=\"w\"> </span>backtrace\nthread<span class=\"w\"> </span><span class=\"s1\">'main'</span><span class=\"w\"> </span>panicked<span class=\"w\"> </span>at<span class=\"w\"> </span>core/src/panicking.rs:221:5:\npanic<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>a<span class=\"w\"> </span><span class=\"k\">function</span><span class=\"w\"> </span>that<span class=\"w\"> </span>cannot<span class=\"w\"> </span>unwind\nstack<span class=\"w\"> </span>backtrace:\npanicked<span class=\"w\"> </span>at<span class=\"w\"> </span>std/src/io/mod.rs:429:49:\n\nthread<span class=\"w\"> </span>panicked<span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span>processing<span class=\"w\"> </span>panic.<span class=\"w\"> </span>aborting.\nerror:<span class=\"w\"> </span><span class=\"nb\">test</span><span class=\"w\"> </span>failed,<span class=\"w\"> </span>to<span class=\"w\"> </span>rerun<span class=\"w\"> </span>pass<span class=\"w\"> </span><span class=\"sb\">`</span>--lib<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>process<span class=\"w\"> </span>didn<span class=\"err\">'</span>t<span class=\"w\"> </span><span class=\"nb\">exit</span><span class=\"w\"> </span>successfully:<span class=\"w\"> </span><span class=\"sb\">`</span>/home/projects/read_test/target/debug/deps/read_test-95b95b2d2f708962<span class=\"sb\">`</span><span class=\"w\"> </span><span class=\"o\">(</span>signal:<span class=\"w\"> </span><span class=\"m\">6</span>,<span class=\"w\"> </span>SIGABRT:<span class=\"w\"> </span>process<span class=\"w\"> </span>abort<span class=\"w\"> </span>signal<span class=\"o\">)</span>\n</code></pre></div>\n<p>Code</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"c1\">//structure</span>\n<span class=\"n\">read_test</span><span class=\"o\">/</span>\n<span class=\"err\">│</span>\n<span class=\"err\">├──</span><span class=\"w\"> </span><span class=\"n\">src</span><span class=\"o\">/</span>\n<span class=\"err\">│</span><span class=\"w\">   </span><span class=\"err\">├──</span><span class=\"w\"> </span><span class=\"n\">bindings</span><span class=\"p\">.</span><span class=\"n\">rs</span>\n<span class=\"err\">│</span><span class=\"w\">   </span><span class=\"err\">└──</span><span class=\"w\"> </span><span class=\"n\">lib</span><span class=\"p\">.</span><span class=\"n\">rs</span>\n<span class=\"err\">│</span>\n<span class=\"err\">├──</span><span class=\"w\"> </span><span class=\"n\">tests</span><span class=\"o\">/</span>\n<span class=\"err\">│</span><span class=\"w\">   </span><span class=\"err\">└──</span><span class=\"w\"> </span><span class=\"n\">integration_test</span><span class=\"p\">.</span><span class=\"n\">rs</span>\n<span class=\"err\">│</span>\n<span class=\"err\">├──</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"o\">/</span>\n<span class=\"err\">│</span><span class=\"w\">   </span><span class=\"err\">└──</span><span class=\"w\"> </span><span class=\"n\">world</span><span class=\"p\">.</span><span class=\"n\">wit</span>\n<span class=\"err\">└──</span><span class=\"w\"> </span><span class=\"n\">Cargo</span><span class=\"p\">.</span><span class=\"n\">toml</span>\n\n\n\n<span class=\"c1\">//lib.rs</span>\n<span class=\"k\">mod</span><span class=\"w\"> </span><span class=\"nn\">bindings</span><span class=\"p\">;</span>\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">bindings</span><span class=\"p\">::</span><span class=\"n\">Guest</span><span class=\"p\">;</span>\n\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">ReadTest</span><span class=\"p\">;</span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">Guest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">ReadTest</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">read</span><span class=\"p\">(</span><span class=\"n\">left</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kt\">u64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">right</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kt\">u64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">u64</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">left</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">right</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">bindings</span><span class=\"p\">::</span><span class=\"n\">export</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">ReadTest</span><span class=\"w\"> </span><span class=\"n\">with_types_in</span><span class=\"w\"> </span><span class=\"n\">bindings</span><span class=\"p\">);</span>\n\n<span class=\"c1\">//world.wit</span>\n<span class=\"n\">package</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"p\">:</span><span class=\"nc\">test</span><span class=\"p\">;</span>\n\n<span class=\"n\">world</span><span class=\"w\"> </span><span class=\"n\">read</span><span class=\"o\">-</span><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"n\">read</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">(</span><span class=\"n\">letf</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kt\">u64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">right</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kt\">u64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">u64</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">//integration_test.rs</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">read_test</span><span class=\"p\">::{</span><span class=\"n\">Guest</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ReadTest</span><span class=\"p\">};</span>\n\n<span class=\"cp\">#[test]</span>\n<span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">test_add</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">ReadTest</span><span class=\"p\">::</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"fm\">assert_eq!</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">//Cargo.toml</span>\n<span class=\"p\">[</span><span class=\"n\">package</span><span class=\"p\">]</span>\n<span class=\"n\">name</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"read_test\"</span>\n<span class=\"n\">version</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"0.1.0\"</span>\n<span class=\"n\">edition</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"2021\"</span>\n\n<span class=\"p\">[</span><span class=\"n\">dependencies</span><span class=\"p\">]</span>\n<span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">bindgen</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">version</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"0.24.0\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">default</span><span class=\"o\">-</span><span class=\"n\">features</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">features</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">    </span><span class=\"s\">\"realloc\"</span><span class=\"p\">,</span>\n<span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">bindgen</span><span class=\"o\">-</span><span class=\"n\">rt</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"0.24.0\"</span>\n<span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">cli</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"0.0.0\"</span>\n\n<span class=\"p\">[</span><span class=\"n\">lib</span><span class=\"p\">]</span>\n<span class=\"k\">crate</span><span class=\"o\">-</span><span class=\"k\">type</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"cdylib\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"rlib\"</span><span class=\"p\">]</span>\n\n<span class=\"p\">[</span><span class=\"n\">package</span><span class=\"p\">.</span><span class=\"n\">metadata</span><span class=\"p\">.</span><span class=\"n\">component</span><span class=\"p\">]</span>\n<span class=\"n\">package</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"wasm:test\"</span>\n\n<span class=\"p\">[</span><span class=\"n\">package</span><span class=\"p\">.</span><span class=\"n\">metadata</span><span class=\"p\">.</span><span class=\"n\">component</span><span class=\"p\">.</span><span class=\"n\">dependencies</span><span class=\"p\">]</span>\n<span class=\"err\">´´´</span>\n</code></pre></div>",
        "id": 484798357,
        "sender_full_name": "Utilize3214",
        "timestamp": 1732741211
    },
    {
        "content": "<p>My guess is that cargo test compiles and runs on native, so you would need a cargo component test (if that exists) or pass a wasm target and run it manually with a runtime.</p>",
        "id": 484861347,
        "sender_full_name": "Christof Petig",
        "timestamp": 1732781731
    }
]