[
    {
        "content": "<p>Hi, When I attempt to encode my runtime test wasm for c# with</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">ComponentEncoder</span>::<span class=\"n\">default</span><span class=\"p\">()</span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">module</span><span class=\"p\">(</span><span class=\"n\">module</span><span class=\"p\">.</span><span class=\"n\">as_slice</span><span class=\"p\">())</span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"s\">\"pull custom sections from module\"</span><span class=\"p\">)</span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">validate</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">)</span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">adapter</span><span class=\"p\">(</span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">wasi_adapter</span><span class=\"p\">)</span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"s\">\"adapter failed to get loaded\"</span><span class=\"p\">)</span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">encode</span><span class=\"p\">()</span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"fm\">format!</span><span class=\"p\">(</span>\n<span class=\"w\">                </span><span class=\"s\">\"module {:?} can be translated to a component\"</span><span class=\"p\">,</span>\n<span class=\"w\">                </span><span class=\"n\">out_wasm</span>\n<span class=\"w\">            </span><span class=\"p\">));</span>\n</code></pre></div>\n<p>I'm getting error </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"s\">\"C:</span><span class=\"se\">\\\\</span><span class=\"s\">github</span><span class=\"se\">\\\\</span><span class=\"s\">wit-bindgen-csharp</span><span class=\"se\">\\\\</span><span class=\"s\">target</span><span class=\"se\">\\\\</span><span class=\"s\">runtime-tests</span><span class=\"se\">\\\\</span><span class=\"s\">numbers</span><span class=\"se\">\\\\</span><span class=\"s\">csharp-numbers</span><span class=\"se\">\\\\</span><span class=\"s\">csharp-wasm</span><span class=\"se\">\\\\</span><span class=\"s\">csharp-wasm.wasm\"</span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">numbers</span>::<span class=\"n\">run</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">module</span><span class=\"w\"> </span><span class=\"s\">\"C:</span><span class=\"se\">\\\\</span><span class=\"s\">github</span><span class=\"se\">\\\\</span><span class=\"s\">wit-bindgen-csharp</span><span class=\"se\">\\\\</span><span class=\"s\">target</span><span class=\"se\">\\\\</span><span class=\"s\">runtime-tests</span><span class=\"se\">\\\\</span><span class=\"s\">numbers</span><span class=\"se\">\\\\</span><span class=\"s\">csharp-numbers</span><span class=\"se\">\\\\</span><span class=\"s\">csharp-wasm\"</span><span class=\"w\"> </span><span class=\"n\">can</span><span class=\"w\"> </span><span class=\"n\">be</span><span class=\"w\"> </span><span class=\"n\">translated</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">component</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">reduce</span><span class=\"w\"> </span><span class=\"n\">input</span><span class=\"w\"> </span><span class=\"n\">adapter</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">its</span><span class=\"w\"> </span><span class=\"n\">minimal</span><span class=\"w\"> </span><span class=\"n\">size</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"nc\">adapter</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"n\">does</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">have</span><span class=\"w\"> </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">fd_advise</span><span class=\"err\">`</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">tests</span><span class=\"err\">\\</span><span class=\"n\">runtime</span><span class=\"err\">\\</span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">695</span>:<span class=\"mi\">14</span>\n</code></pre></div>\n<p>I understand that wasi provides a  <code>fd_advise</code>, is that not the case?</p>",
        "id": 387450280,
        "sender_full_name": "Scott Waye",
        "timestamp": 1693076195
    },
    {
        "content": "<p>Are you sure you're using the right adapter? The <code>fd_advise</code> function is present in the adapter provided by Wasmtime, but if you're using a different adapter then you may need to make sure that function is present in the custom adapter</p>",
        "id": 387678078,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1693232134
    },
    {
        "content": "<p>I'm using the one from <code>wit-bindgen-csharp\\\\target\\\\debug\\\\build\\\\test-artifacts-477de5d9b736cf4f\\\\out\\\\wasm32-unknown-unknown/release/wasi_snapshot_preview1.wasm</code>  How do I know from where that originates?</p>",
        "id": 387678829,
        "sender_full_name": "Scott Waye",
        "timestamp": 1693232393
    },
    {
        "content": "<p>I believe that's project-specific build/configuration options, which I'm not familiar with in this case</p>",
        "id": 387678964,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1693232432
    },
    {
        "content": "<p>Would <a href=\"https://github.com/bytecodealliance/preview2-prototyping/releases/tag/latest\">https://github.com/bytecodealliance/preview2-prototyping/releases/tag/latest</a> by the right place for the latest wit-bindgen?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/preview2-prototyping/releases/tag/latest\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/fcc083fbb330ac784f0711f31ff199d7aef79cf0\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f626663336439656234313433326232616336333630363331653630643538336661373333343734356263363865643162363038303161393435323461643463312f62797465636f6465616c6c69616e63652f70726576696577322d70726f746f747970696e672f72656c65617365732f7461672f6c6174657374)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/preview2-prototyping/releases/tag/latest\" title=\"Release Latest Build · bytecodealliance/preview2-prototyping\">Release Latest Build · bytecodealliance/preview2-prototyping</a></div><div class=\"message_embed_description\">Features\n\nwasi: update wit definitions to latest #176 (Eduardo Rodrigues)\nupdate wasi http client to latest #176 (Eduardo Rodrigues)\n\nChores\n\nupdate to latest wit definitions #176 (Eduardo Rodrigue...</div></div></div>",
        "id": 387680130,
        "sender_full_name": "Scott Waye",
        "timestamp": 1693232791
    },
    {
        "content": "<p>Guess not quite as there is now a version mismatch </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">component</span><span class=\"o\">-</span><span class=\"k\">type</span> <span class=\"nc\">version</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"n\">does</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">supported</span><span class=\"w\"> </span><span class=\"n\">version</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">tests</span><span class=\"err\">\\</span><span class=\"n\">runtime</span><span class=\"err\">\\</span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">693</span>:<span class=\"mi\">14</span>\n</code></pre></div>",
        "id": 387706886,
        "sender_full_name": "Scott Waye",
        "timestamp": 1693239849
    },
    {
        "content": "<p>Is wit-bindgen already on version 3?</p>",
        "id": 387707023,
        "sender_full_name": "Scott Waye",
        "timestamp": 1693239889
    },
    {
        "content": "<p>All (?) language toolchains currently generate core modules rather than components. In order to allow a tool like <code>wasm-tools component new</code> to generate a component from one of these core modules, wit-bindgen embeds type metadata in its generated code. The current version of that metadata is indeed <code>3</code>.</p>",
        "id": 387714562,
        "sender_full_name": "Lann Martin",
        "timestamp": 1693241942
    },
    {
        "content": "<p>Doesn't look like there is a preview3-prototyping repo, where I could download the adpaters  Should I build them from source?</p>",
        "id": 387718175,
        "sender_full_name": "Scott Waye",
        "timestamp": 1693242924
    },
    {
        "content": "<p>Currently the adapters are built as part of the wasmtime repo and are available in the releases: <a href=\"https://github.com/bytecodealliance/wasmtime/releases\">https://github.com/bytecodealliance/wasmtime/releases</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/releases\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/f3380fa399ed8ab1c1e7d4cbaa7b27e417ea4502\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f393037303666313663633332636632353432333335643936633335333666383631373934633832646435663535303932613764303735346665656537343263322f62797465636f6465616c6c69616e63652f7761736d74696d65)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/releases\" title=\"Releases · bytecodealliance/wasmtime\">Releases · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A fast and secure runtime for WebAssembly. Contribute to bytecodealliance/wasmtime development by creating an account on GitHub.</div></div></div>",
        "id": 387718356,
        "sender_full_name": "Peter Huene",
        "timestamp": 1693242976
    },
    {
        "content": "<p>Thanks, looks like I will need to export a <code>_start</code> which I don't have currently perhaps because I <code>wasm-ld</code> with <code>-Wl,--no-entry</code></p>",
        "id": 387719949,
        "sender_full_name": "Scott Waye",
        "timestamp": 1693243410
    },
    {
        "content": "<p>Thought wasm-ld would add that for exec-model=command , but guess not</p>",
        "id": 387723965,
        "sender_full_name": "Scott Waye",
        "timestamp": 1693244530
    },
    {
        "content": "<p>If you're getting an error about <code>_start</code> you'll want the <code>*.reactor.wasm</code> instead of the <code>*.command.wasm</code></p>",
        "id": 387730846,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1693246502
    },
    {
        "content": "<p>Thanks that gets me to</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Error</span>: <span class=\"nc\">import</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasi</span>:<span class=\"nc\">clocks</span><span class=\"o\">/</span><span class=\"n\">wall</span><span class=\"o\">-</span><span class=\"n\">clock</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">wrong</span><span class=\"w\"> </span><span class=\"k\">type</span>\n</code></pre></div>\n<p>Was a new SDK released?</p>",
        "id": 387737580,
        "sender_full_name": "Scott Waye",
        "timestamp": 1693249028
    },
    {
        "content": "<p>is that error coming from wasmtime? Or a different runtime?</p>\n<p>There's not really releases in a discrete sense for the component model right now so whether or now a new SDK release depends on what you mean, but the answer is probably \"yes\" for what you're curious about (aka WASI interfaces changed since whatever is generating the error last updated to)</p>",
        "id": 387738493,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1693249377
    },
    {
        "content": "<p>its the wit-bindgen runtime test</p>",
        "id": 387745741,
        "sender_full_name": "Scott Waye",
        "timestamp": 1693252204
    },
    {
        "content": "<p>oh hm, is it possible to share a reproduction?</p>",
        "id": 387745987,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1693252309
    },
    {
        "content": "<p>I'm not sure, its not my repo.  But let me check the wall-clock/now function in the module wasm and the adapter</p>",
        "id": 387747073,
        "sender_full_name": "Scott Waye",
        "timestamp": 1693252767
    },
    {
        "content": "<p>The adapter does look a bit odd compared to <a href=\"https://github.com/bytecodealliance/wasmtime/blob/8efcb9851602287fd07a1a1e91501f51f2653d7e/crates/wasi/wit/deps/clocks/wall-clock.wit#L37\">https://github.com/bytecodealliance/wasmtime/blob/8efcb9851602287fd07a1a1e91501f51f2653d7e/crates/wasi/wit/deps/clocks/wall-clock.wit#L37</a></p>",
        "id": 387749411,
        "sender_full_name": "Scott Waye",
        "timestamp": 1693253669
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(</span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"s\">\"wasi:clocks/wall-clock\"</span><span class=\"w\"> </span><span class=\"s\">\"now\"</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"w\"> </span><span class=\"cp\">$_ZN22wasi_snapshot_preview18bindings4wasi6clocks10wall_clock3now10wit_import17h612125935ddec421E</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">0</span><span class=\"p\">)))</span>\n</code></pre></div>\n<p>and </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">  </span><span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"p\">(;</span><span class=\"mi\">0</span><span class=\"p\">;)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">param</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">)))</span>\n</code></pre></div>",
        "id": 387749494,
        "sender_full_name": "Scott Waye",
        "timestamp": 1693253710
    },
    {
        "content": "<p>But maybe that's how it handles the complex type, it returns it via a pointer</p>",
        "id": 387749692,
        "sender_full_name": "Scott Waye",
        "timestamp": 1693253801
    },
    {
        "content": "<p>yeah that's the canonical abi for returning larger-than-a-primitive types</p>",
        "id": 387749972,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1693253918
    },
    {
        "content": "<p>I think I have this <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6523\">https://github.com/bytecodealliance/wasmtime/issues/6523</a>, the error message is just not that clear, says the type is wrong when it seems like it should be that the type is not found</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/issues/6523\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/eff28184cdd3682e605928b2e939439b6308e8c8\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f396161643533353031633834373233393038323331333038346265336630356231353738653864616233303136383261353062323239616237396436636331352f62797465636f6465616c6c69616e63652f7761736d74696d652f6973737565732f36353233)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/issues/6523\" title=\"import `wasi:clocks/wall-clock` has the wrong type when instantiating component · Issue #6523 · bytecodealliance/wasmtime\">import `wasi:clocks/wall-clock` has the wrong type when instantiating component · Issue #6523 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Hi, I'm trying to instantiate a component compiled using tinygo from wasmtime in rust The components implements the following WIT interface package producer:host world producer-interface { export h...</div></div></div>",
        "id": 387873534,
        "sender_full_name": "Scott Waye",
        "timestamp": 1693312567
    },
    {
        "content": "<p>but with wasmtime_wasi 12 I don't think there is a  preview2::wasi</p>",
        "id": 387877148,
        "sender_full_name": "Scott Waye",
        "timestamp": 1693313860
    },
    {
        "content": "<p>I can attempt to add the whole commands, but it requires a different generic instance of the linker:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0277</span><span class=\"p\">]</span>: <span class=\"nc\">the</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">bound</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">Wasi</span><span class=\"o\">&lt;</span><span class=\"n\">numbers</span>::<span class=\"n\">MyImports</span><span class=\"o\">&gt;</span>: <span class=\"nc\">WasiView</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">satisfied</span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">tests</span><span class=\"err\">\\</span><span class=\"n\">runtime</span><span class=\"err\">\\</span><span class=\"n\">numbers</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">91</span>:<span class=\"mi\">61</span>\n<span class=\"w\">   </span><span class=\"o\">|</span>\n<span class=\"mi\">91</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">             </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">preview2</span>::<span class=\"n\">command</span>::<span class=\"n\">add_to_linker</span><span class=\"p\">(</span><span class=\"n\">linker</span><span class=\"p\">);</span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">             </span><span class=\"o\">-----------------------------------------------</span><span class=\"w\"> </span><span class=\"o\">^^^^^^</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">WasiView</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">implemented</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">Wasi</span><span class=\"o\">&lt;</span><span class=\"n\">numbers</span>::<span class=\"n\">MyImports</span><span class=\"o\">&gt;</span><span class=\"err\">`</span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">             </span><span class=\"o\">|</span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">             </span><span class=\"n\">required</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">bound</span><span class=\"w\"> </span><span class=\"n\">introduced</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">call</span>\n<span class=\"w\">   </span><span class=\"o\">|</span>\n</code></pre></div>",
        "id": 387886320,
        "sender_full_name": "Scott Waye",
        "timestamp": 1693316876
    },
    {
        "content": "<p>How was the error <a href=\"#narrow/stream/327223-wit-bindgen/topic/ComponentEncoder.20and.20fd_advise/near/387737580\">above</a> printed? If that's the only output you got then that's a bug in the error printing where it didn't print the full context.</p>",
        "id": 387887088,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1693317140
    },
    {
        "content": "<p>The WASI support for the component model is in a shaky state and you're sort of on your own to get things working right now</p>",
        "id": 387887149,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1693317169
    },
    {
        "content": "<p>it has not been in a \"finished\" state in wasmtime to-date yet</p>",
        "id": 387887170,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1693317179
    },
    {
        "content": "<p>so it requires chasing down changes between commits and adapter versions and such</p>",
        "id": 387887206,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1693317193
    },
    {
        "content": "<p>Ok, understood.  This was printed by <code>cargo test numbers -p wit-bindgen-cli --no-default-features -F csharp</code></p>",
        "id": 387887709,
        "sender_full_name": "Scott Waye",
        "timestamp": 1693317376
    },
    {
        "content": "<p>Oh sorry you mean the type mismatch</p>",
        "id": 387887790,
        "sender_full_name": "Scott Waye",
        "timestamp": 1693317409
    },
    {
        "content": "<p>But the answer is the same, from that command line and appears from the line <code>let (exports, _) = instantiate(&amp;mut store, &amp;component, &amp;linker)?;</code></p>",
        "id": 387888115,
        "sender_full_name": "Scott Waye",
        "timestamp": 1693317517
    },
    {
        "content": "<p>I did have it working from a prototype, just not from the runtime test.  I can investigate the trait difference and see if there is a way round that</p>",
        "id": 387888295,
        "sender_full_name": "Scott Waye",
        "timestamp": 1693317580
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">----</span><span class=\"w\"> </span><span class=\"n\">numbers</span>::<span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">stdout</span><span class=\"w\"> </span><span class=\"o\">----</span>\n<span class=\"n\">wasi</span><span class=\"w\"> </span><span class=\"n\">adapter</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"C:</span><span class=\"se\">\\\\</span><span class=\"s\">github</span><span class=\"se\">\\\\</span><span class=\"s\">wit-bindgen-csharp</span><span class=\"se\">\\\\</span><span class=\"s\">target</span><span class=\"se\">\\\\</span><span class=\"s\">debug</span><span class=\"se\">\\\\</span><span class=\"s\">build</span><span class=\"se\">\\\\</span><span class=\"s\">test-artifacts-477de5d9b736cf4f</span><span class=\"se\">\\\\</span><span class=\"s\">out</span><span class=\"se\">\\\\</span><span class=\"s\">wasm32-unknown-unknown/release/wasi_snapshot_preview1.wasm\"</span>\n<span class=\"s\">\"dotnet\"</span><span class=\"w\"> </span><span class=\"s\">\"publish\"</span><span class=\"w\"> </span><span class=\"s\">\"C:</span><span class=\"se\">\\\\</span><span class=\"s\">github</span><span class=\"se\">\\\\</span><span class=\"s\">wit-bindgen-csharp</span><span class=\"se\">\\\\</span><span class=\"s\">target</span><span class=\"se\">\\\\</span><span class=\"s\">runtime-tests</span><span class=\"se\">\\\\</span><span class=\"s\">numbers</span><span class=\"se\">\\\\</span><span class=\"s\">csharp-numbers</span><span class=\"se\">\\\\</span><span class=\"s\">Numbers.csproj\"</span><span class=\"w\"> </span><span class=\"s\">\"-r\"</span><span class=\"w\"> </span><span class=\"s\">\"wasi-wasm\"</span><span class=\"w\"> </span><span class=\"s\">\"-c\"</span><span class=\"w\"> </span><span class=\"s\">\"Debug\"</span><span class=\"w\"> </span><span class=\"s\">\"/p:PlatformTarget=AnyCPU\"</span><span class=\"w\"> </span><span class=\"s\">\"/p:MSBuildEnableWorkloadResolver=false\"</span><span class=\"w\"> </span><span class=\"s\">\"--self-contained\"</span><span class=\"w\"> </span><span class=\"s\">\"/p:UseAppHost=false\"</span><span class=\"w\"> </span><span class=\"s\">\"-o\"</span><span class=\"w\"> </span><span class=\"s\">\"C:</span><span class=\"se\">\\\\</span><span class=\"s\">github</span><span class=\"se\">\\\\</span><span class=\"s\">wit-bindgen-csharp</span><span class=\"se\">\\\\</span><span class=\"s\">target</span><span class=\"se\">\\\\</span><span class=\"s\">runtime-tests</span><span class=\"se\">\\\\</span><span class=\"s\">numbers</span><span class=\"se\">\\\\</span><span class=\"s\">csharp-numbers</span><span class=\"se\">\\\\</span><span class=\"s\">csharp-wasm\"</span>\n<span class=\"s\">\"C:</span><span class=\"se\">\\\\</span><span class=\"s\">github</span><span class=\"se\">\\\\</span><span class=\"s\">wit-bindgen-csharp</span><span class=\"se\">\\\\</span><span class=\"s\">target</span><span class=\"se\">\\\\</span><span class=\"s\">runtime-tests</span><span class=\"se\">\\\\</span><span class=\"s\">numbers</span><span class=\"se\">\\\\</span><span class=\"s\">csharp-numbers</span><span class=\"se\">\\\\</span><span class=\"s\">csharp-wasm</span><span class=\"se\">\\\\</span><span class=\"s\">csharp-wasm.wasm\"</span>\n<span class=\"n\">testing</span>\n<span class=\"n\">add</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">linker</span>\n<span class=\"n\">testwasi</span><span class=\"w\"> </span><span class=\"n\">add</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">linker</span>\n<span class=\"n\">instantiate</span>\n<span class=\"n\">Error</span>: <span class=\"nc\">import</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasi</span>:<span class=\"nc\">clocks</span><span class=\"o\">/</span><span class=\"n\">wall</span><span class=\"o\">-</span><span class=\"n\">clock</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">wrong</span><span class=\"w\"> </span><span class=\"k\">type</span>\n\n<span class=\"nc\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"mi\">0</span>: <span class=\"nc\">instance</span><span class=\"w\"> </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">now</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">wrong</span><span class=\"w\"> </span><span class=\"k\">type</span>\n    <span class=\"mi\">1</span>: <span class=\"nc\">expected</span><span class=\"w\"> </span><span class=\"n\">func</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"n\">nothing</span>\n\n\n<span class=\"n\">failures</span>:\n    <span class=\"nc\">numbers</span>::<span class=\"n\">run</span>\n\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">result</span>: <span class=\"nc\">FAILED</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">passed</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">failed</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">ignored</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">measured</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"w\"> </span><span class=\"n\">filtered</span><span class=\"w\"> </span><span class=\"n\">out</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">finished</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mf\">57.55</span><span class=\"n\">s</span>\n\n<span class=\"n\">error</span>: <span class=\"nc\">test</span><span class=\"w\"> </span><span class=\"n\">failed</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">rerun</span><span class=\"w\"> </span><span class=\"n\">pass</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"o\">-</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">bindgen</span><span class=\"o\">-</span><span class=\"n\">cli</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">runtime</span><span class=\"err\">`</span>\n</code></pre></div>\n<p>Is the whole output, reading it closer, I see it did also say \"expected func found nothing\", which could be the underlying cause although it could do with being less terse, or at least a comma, \"epxected func, found nothing\"</p>",
        "id": 387889690,
        "sender_full_name": "Scott Waye",
        "timestamp": 1693317968
    },
    {
        "content": "<p>ah ok that's good to know! Just wanted to make sure context wasn't being left out by accident</p>",
        "id": 387890314,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1693318192
    },
    {
        "content": "<p>and yeah the error message here is definitely not great</p>",
        "id": 387890347,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1693318202
    },
    {
        "content": "<p>I have made a bit of progress I think !   I think I need async bindgen macros because I have this error </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">numbers</span>::<span class=\"n\">run</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">must</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"n\">instantiation</span><span class=\"w\"> </span><span class=\"n\">when</span><span class=\"w\"> </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"n\">support</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">enabled</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">C</span>:<span class=\"err\">\\</span><span class=\"n\">Users</span><span class=\"err\">\\</span><span class=\"n\">scott</span><span class=\"err\">\\</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"err\">\\</span><span class=\"n\">registry</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">index</span><span class=\"p\">.</span><span class=\"n\">crates</span><span class=\"p\">.</span><span class=\"n\">io</span><span class=\"o\">-</span><span class=\"mi\">6</span><span class=\"n\">f17d22bba15001f</span><span class=\"err\">\\</span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"mf\">12.0.0</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">component</span><span class=\"err\">\\</span><span class=\"n\">linker</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">211</span>:<span class=\"mi\">9</span>\n</code></pre></div>\n<p>The macro is </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime</span>::<span class=\"n\">component</span>::<span class=\"n\">bindgen</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"s\">\"tests/runtime/numbers\"</span><span class=\"p\">);</span>\n</code></pre></div>\n<p>Is there a way to make that generate an async instantiate?</p>",
        "id": 388224937,
        "sender_full_name": "Scott Waye",
        "timestamp": 1693444783
    },
    {
        "content": "<p>Ah, this seems to be a bit of a rabbit hole, I can enable async with</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime</span>::<span class=\"n\">component</span>::<span class=\"n\">bindgen</span><span class=\"o\">!</span><span class=\"p\">({</span>\n<span class=\"w\">    </span><span class=\"n\">path</span>: <span class=\"s\">\"tests/runtime/numbers\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"k\">async</span><span class=\"w\"> </span>: <span class=\"nc\">true</span>\n<span class=\"p\">});</span>\n</code></pre></div>\n<p>But then it seems all the test methods need to be converted to async?</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0195</span><span class=\"p\">]</span>: <span class=\"nc\">lifetime</span><span class=\"w\"> </span><span class=\"n\">parameters</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">bounds</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">method</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">roundtrip_u8</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"kr\">do</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">declaration</span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">tests</span><span class=\"err\">\\</span><span class=\"n\">runtime</span><span class=\"err\">\\</span><span class=\"n\">numbers</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">15</span>:<span class=\"mi\">20</span>\n<span class=\"w\">   </span><span class=\"o\">|</span>\n<span class=\"mi\">4</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"n\">component</span>::<span class=\"n\">bindgen</span><span class=\"o\">!</span><span class=\"p\">({</span>\n<span class=\"mi\">5</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"n\">path</span>: <span class=\"s\">\"tests/runtime/numbers\"</span><span class=\"p\">,</span>\n<span class=\"mi\">6</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"k\">async</span><span class=\"w\"> </span>: <span class=\"nc\">true</span>\n<span class=\"mi\">7</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">});</span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">  </span><span class=\"o\">-</span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">  </span><span class=\"o\">|</span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">__lifetimes</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"kr\">do</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">method</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"k\">trait</span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">    </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">bound</span><span class=\"w\"> </span><span class=\"n\">might</span><span class=\"w\"> </span><span class=\"n\">be</span><span class=\"w\"> </span><span class=\"n\">missing</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"k\">impl</span>\n<span class=\"o\">..</span><span class=\"p\">.</span>\n<span class=\"mi\">15</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">       </span><span class=\"k\">fn</span> <span class=\"nf\">roundtrip_u8</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">val</span>: <span class=\"kt\">u8</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"kt\">u8</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                      </span><span class=\"o\">^</span><span class=\"w\"> </span><span class=\"n\">lifetimes</span><span class=\"w\"> </span><span class=\"kr\">do</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">method</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"k\">trait</span>\n</code></pre></div>",
        "id": 388226720,
        "sender_full_name": "Scott Waye",
        "timestamp": 1693445898
    },
    {
        "content": "<p>Yes everything is async by default with that configuration. You can replace true with a curly braced map or list to only have some functions be async. I forget what the exact syntax is</p>",
        "id": 388248341,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1693457299
    },
    {
        "content": "<p>Ah looks like I'm thinking of a feature of wiggle, not <code>bindgen!</code>, so let me go  add the feature to <code>bindgen!</code></p>",
        "id": 388331506,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1693490532
    },
    {
        "content": "<p>Ah, yes it seems to just want a bool at present, thanks!</p>",
        "id": 388334912,
        "sender_full_name": "Scott Waye",
        "timestamp": 1693491374
    },
    {
        "content": "<p>I've opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6942\">https://github.com/bytecodealliance/wasmtime/pull/6942</a> to add new configuration for making some imports sync</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/6942\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/9bd1fba61353614f6b1816792ca8dc4b3c1034c3\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f313862623563356430373566386361663865633633643839613433613138336536323135363566333033643430303364646164353066316338633234633465322f62797465636f6465616c6c69616e63652f7761736d74696d652f70756c6c2f36393432)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/6942\" title=\"Enhance `async` configuration of `bindgen!` macro by alexcrichton · Pull Request #6942 · bytecodealliance/wasmtime\">Enhance `async` configuration of `bindgen!` macro by alexcrichton · Pull Request #6942 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">This commit takes a leaf out of wiggle's book to enable bindings generation for async host functions where only some host functions are async instead of all of them. Unlike wiggle however the confi...</div></div></div>",
        "id": 388338196,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1693492220
    },
    {
        "content": "<p>Thank you!</p>",
        "id": 388346711,
        "sender_full_name": "Scott Waye",
        "timestamp": 1693494774
    },
    {
        "content": "<p>Will close this as I think I just need to work aroumd the async exports now</p>",
        "id": 388593276,
        "sender_full_name": "Scott Waye",
        "timestamp": 1693599498
    },
    {
        "content": "<p>THanks</p>",
        "id": 388593279,
        "sender_full_name": "Scott Waye",
        "timestamp": 1693599503
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"395878\">Scott Waye</span> has marked this topic as resolved.</p>",
        "id": 388593300,
        "sender_full_name": "Notification Bot",
        "timestamp": 1693599513
    }
]