[
    {
        "content": "<p>Per, <a href=\"https://github.com/dotnet/runtimelab/pull/2614#discussion_r1661386986\">https://github.com/dotnet/runtimelab/pull/2614#discussion_r1661386986</a>, I've been adding WASIp2 support to .NET, and the current approach involves checking the <code>wit-bindgen</code>-generated bindings into source control (along with a script to regenerate them as desired), analogous to what we've done in <code>wasi-libc</code>.</p>\n<p>However, the maintainers are concerned about the component type .o file being opaque and difficult to audit from a security perspective.  Do we have other options for making that information available to <code>wasm-component-ld</code>, e.g. emitting a WAT file that could be passed directly to <code>wasm-component-ld</code>?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/dotnet/runtimelab/pull/2614#discussion_r1661386986\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/6ac548fdb2988ea4d3857a914d2241256d3ee8de/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f663733643136656662636563656638313162386435336531313930383762316331376631373532336138333335336430303033626234623138383566636538372f646f746e65742f72756e74696d656c61622f70756c6c2f32363134&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/dotnet/runtimelab/pull/2614#discussion_r1661386986\" title=\"[NativeAOT-LLVM] support `System.Net.Http.HttpClient` on WASIp2 by dicej · Pull Request #2614 · dotnet/runtimelab\">[NativeAOT-LLVM] support `System.Net.Http.HttpClient` on WASIp2 by dicej · Pull Request #2614 · dotnet/runtimelab</a></div><div class=\"message_embed_description\">This adds WasiHttpHandler, a new implementation of HttpMessageHandler based on\nwasi:http/outgoing-handler, plus tweaks to System.Threading to allow async Tasks to work in a single-threaded context,...</div></div></div>",
        "id": 448408462,
        "sender_full_name": "Joel Dice",
        "timestamp": 1719858986
    },
    {
        "content": "<p>e.g. <code>clang -Wl,--component-type=foo.wat ...</code></p>",
        "id": 448409167,
        "sender_full_name": "Joel Dice",
        "timestamp": 1719859123
    },
    {
        "content": "<p>I went ahead and opened an issue: <a href=\"https://github.com/bytecodealliance/wit-bindgen/issues/994\">https://github.com/bytecodealliance/wit-bindgen/issues/994</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wit-bindgen/issues/994\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/8f906d46469a2243fb66947112220cfa8453ff46/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f613966393162366538383738623334653064633338356466383963636366386264333130303631623534656465326433663366356639333636303830613538652f62797465636f6465616c6c69616e63652f7769742d62696e6467656e2f6973737565732f393934&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wit-bindgen/issues/994\" title=\"Support generating and using a human-readable form of the component type · Issue #994 · bytecodealliance/wit-bindgen\">Support generating and using a human-readable form of the component type · Issue #994 · bytecodealliance/wit-bindgen</a></div><div class=\"message_embed_description\">Per, dotnet/runtimelab#2614 (comment), I've been adding WASIp2 support to .NET, and the current approach involves checking the wit-bindgen-generated bindings into source control (along with a scrip...</div></div></div>",
        "id": 448652854,
        "sender_full_name": "Joel Dice",
        "timestamp": 1719938226
    }
]