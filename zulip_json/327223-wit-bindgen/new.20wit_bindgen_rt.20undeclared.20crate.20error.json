[
    {
        "content": "<p>Hi, I wonder if anybody can help. I have a project using wasi-nn onnx that is built via github actions. It uses<br>\n<code>wit-bindgen = { version = \"0.16.0\", default-features = false, features = [\"realloc\"] }</code><br>\nand has been compiling fine via a gh workflow with no changes to the code base. I am using caching as part of the build action.<br>\nRecently I have run the build without the cache and now it will not build with the following compile error relating to bindings:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"mi\">16450</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"k\">pub</span><span class=\"p\">(</span><span class=\"k\">crate</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">__export_classify_impl</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">export</span><span class=\"p\">;</span>\n<span class=\"w\">      </span><span class=\"o\">|</span><span class=\"w\">                </span><span class=\"o\">^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span>\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0433</span><span class=\"p\">]</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">resolve</span>: <span class=\"nc\">use</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">undeclared</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wit_bindgen_rt</span><span class=\"err\">`</span>\n<span class=\"w\">     </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">src</span><span class=\"o\">/</span><span class=\"n\">bindings</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">16803</span>:<span class=\"mi\">5</span>\n<span class=\"w\">      </span><span class=\"o\">|</span>\n<span class=\"mi\">16803</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"n\">wit_bindgen_rt</span>::<span class=\"n\">maybe_link_cabi_realloc</span><span class=\"p\">();</span>\n<span class=\"w\">      </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"o\">^^^^^^^^^^^^^^</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">undeclared</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wit_bindgen_rt</span><span class=\"err\">`</span>\n<span class=\"w\">      </span><span class=\"o\">|</span>\n<span class=\"n\">help</span>: <span class=\"nc\">there</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">similar</span><span class=\"w\"> </span><span class=\"n\">name</span>\n<span class=\"w\">      </span><span class=\"o\">|</span>\n<span class=\"mi\">16803</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"n\">wit_bindgen</span>::<span class=\"n\">maybe_link_cabi_realloc</span><span class=\"p\">();</span>\n<span class=\"w\">      </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"o\">~~~~~~~~~~~</span>\n</code></pre></div>\n<p>The reason I have been using an earlier version of wit-bindgen was to utilise this unmerged wasi-nn onnx PR:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691/files#diff-621d8d857c5c84c6449bb6737193b5a3abc47a3e0c4a79a736bfc463570375a7\">https://github.com/bytecodealliance/wasmtime/pull/7691/files#diff-621d8d857c5c84c6449bb6737193b5a3abc47a3e0c4a79a736bfc463570375a7</a></p>\n<p>I am not sure when the error reference to wit_bindgen_rt has appeared as I have not seen this before, I have tried adding wit_bindgen_rt version 0.21.0 to Cargo.toml, however it results in new errors relating to my wit versions:<br>\n<code>error: failed to validate exported interface </code>wasi:cli/run@0.2.0-rc-2023-12-05` which are earlier than the currently released version. </p>\n<p>Any advice on the best way to go about resolving this would be much appreciated :)</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/7691/files#diff-621d8d857c5c84c6449bb6737193b5a3abc47a3e0c4a79a736bfc463570375a7\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/68780707b41daf2ecc14577047cd8f3640f83470\\/68747470733a2f2f617661746172732e67697468756275736572636f6e74656e742e636f6d2f752f3338363437333f733d34303026763d34)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691/files#diff-621d8d857c5c84c6449bb6737193b5a3abc47a3e0c4a79a736bfc463570375a7\" title=\"[WASI-NN] Add support for a ONNXruntime backend using ort by devigned 路 Pull Request #7691 路 bytecodealliance/wasmtime\">[WASI-NN] Add support for a ONNXruntime backend using ort by devigned 路 Pull Request #7691 路 bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">This change adds an ONNXruntime backend for WASI-NN. Since there is only one backend implemented, this will help to move the standardization of this proposal forward.\nAlso, the example usage of the...</div></div></div>",
        "id": 425410512,
        "sender_full_name": "Gareth",
        "timestamp": 1709852119
    },
    {
        "content": "<p>It seems like you're using cargo component, and you might need to hold back or install an older version of cargo-component perhaps if you want the same build from before to work.</p>\n<p><span class=\"user-mention\" data-user-id=\"253989\">@Peter Huene</span> may know more though. </p>\n<p>If you can share a bit more about how to reproduce with a repo or CI log or similar we can help some more too</p>",
        "id": 425413818,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1709853665
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"686440\">@Gareth</span> what version of <code>cargo-component</code> are you using and did it change?</p>",
        "id": 425414245,
        "sender_full_name": "Peter Huene",
        "timestamp": 1709853887
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"253994\">Alex Crichton</span> <a href=\"#narrow/stream/327223-wit-bindgen/topic/new.20wit_bindgen_rt.20undeclared.20crate.20error/near/425413818\">said</a>:</p>\n<blockquote>\n<p>It seems like you're using cargo component, and you might need to hold back or install an older version of cargo-component perhaps if you want the same build from before to work.</p>\n<p><span class=\"user-mention silent\" data-user-id=\"253989\">Peter Huene</span> may know more though. </p>\n<p>If you can share a bit more about how to reproduce with a repo or CI log or similar we can help some more too</p>\n</blockquote>\n<p>Thanks both, I reverted to explicitly using cargo component version 0.8.0 and it built successfully again :)</p>",
        "id": 425484375,
        "sender_full_name": "Gareth",
        "timestamp": 1709891792
    }
]