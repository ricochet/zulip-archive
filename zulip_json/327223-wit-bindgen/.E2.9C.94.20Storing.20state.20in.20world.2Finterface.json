[
    {
        "content": "<p>Hello!, I've been playing around with an idea to implement window manager api to use within wasm with wit-bindgen for my WIP Wayland compositor.</p>\n<p>I've noticed with the generated Rust code that there is no <code>&amp;mut self</code>/<code>&amp;self</code> on the interfaces marked as <code>export</code>. I'm guessing the expectation is that the Rust guest will store any state in a &amp;'static?</p>\n<p>Using one of the examples (result)</p>\n<p>The generated code for a world looks like this, showing there is no <code>&amp;mut self</code>/<code>&amp;self</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">test_exports</span>::<span class=\"n\">Guest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">Exports</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">string_error</span><span class=\"p\">(</span><span class=\"n\">a</span>: <span class=\"kt\">f32</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"kt\">f32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">String</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">test_imports</span>::<span class=\"n\">string_error</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"o\">..</span><span class=\"p\">.</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>Right now I have something like this (syntax may be wrong, still working through this):</p>\n<div class=\"codehilite\" data-code-language=\"wit\"><pre><span></span><code>world aerugo-wm {\n    export wm\n}\n\ninterface wm {\n    use self.types.toplevel\n\n    // where toplevel is a resource\n    new_toplevel: func(toplevel: own&lt;toplevel&gt;)\n}\n</code></pre></div>\n<p>In particular new_toplevel could be called at any time and the previous state needs to be preserved.</p>",
        "id": 393079899,
        "sender_full_name": "i509VCB",
        "timestamp": 1695665642
    },
    {
        "content": "<p>I think you're going to want to represent this as a <a href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/WIT.md#item-resource\">resource</a> rather than a freestanding function.  That will ensure that you get a <code>self</code> parameter.  Note that resource support is quite new in <code>wasm-tools</code> etc., so you'll need to make sure you have the latest versions of everything.<br>\nSounds like a cool project, by the way.</p>",
        "id": 393080754,
        "sender_full_name": "Joel Dice",
        "timestamp": 1695665933
    },
    {
        "content": "<p>Yes a WIT exported function is a top-level function that uses the entire memory as its state, so in rust you'd store that in a <code>static</code> or similar. Otherwise though I was gonna mention what Joel just did, so I'd recommend using that if you can</p>",
        "id": 393080823,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1695665956
    },
    {
        "content": "<p><code>resource</code> seems to line up better with what I was intending. Although now the problem I have is a proc macro error?</p>\n<p>Apparently generating</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"k\">super</span>::<span class=\"k\">super</span>::<span class=\"k\">super</span>::<span class=\"k\">super</span>::<span class=\"n\">ERROR</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">WmRes</span><span class=\"p\">;</span>\n</code></pre></div>",
        "id": 393091146,
        "sender_full_name": "i509VCB",
        "timestamp": 1695669454
    },
    {
        "content": "<p>For</p>\n<div class=\"codehilite\" data-code-language=\"wit\"><pre><span></span><code>world aerugo-wm {\n    export wm\n}\n\ninterface wm {\n    resource wm-res {\n        name: func() -&gt; string\n    }\n\n    create-wm: func() -&gt; result&lt;wm-res, string&gt;\n}\n</code></pre></div>",
        "id": 393091212,
        "sender_full_name": "i509VCB",
        "timestamp": 1695669474
    },
    {
        "content": "<p>(I'm guessing I might need to use the git main branch for now)</p>",
        "id": 393091652,
        "sender_full_name": "i509VCB",
        "timestamp": 1695669606
    },
    {
        "content": "<p>hm odd! wit-bindgen shouldn't successfully generate code with <code>ERROR</code>, so you may be hitting a bug</p>",
        "id": 393092244,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1695669810
    },
    {
        "content": "<p>do you know what version of wit-bindgen you're using?</p>",
        "id": 393092276,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1695669820
    },
    {
        "content": "<p>I just swapped to the main git branch and still have the error. Was using whatever was published on <a href=\"http://crates.io\">crates.io</a> earlier</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"http://crates.io\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/75f8c66509c680a2345cca9b6adaf7e2cdb6f41b\\/68747470733a2f2f6372617465732e696f2f6173736574732f6f672d696d6167652e706e67)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"http://crates.io\" title=\"crates.io: Rust Package Registry\">crates.io: Rust Package Registry</a></div></div></div>",
        "id": 393092387,
        "sender_full_name": "i509VCB",
        "timestamp": 1695669846
    },
    {
        "content": "<p>kk I'll dig in today and see if I can fix</p>",
        "id": 393092727,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1695669964
    },
    {
        "content": "<p>hm actually, how are you getting code generated? Are you invoking it via the <code>wit-bindgen</code> crate? If so what options are you providing?</p>",
        "id": 393092849,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1695670016
    },
    {
        "content": "<p>Proc macro in this case</p>",
        "id": 393092876,
        "sender_full_name": "i509VCB",
        "timestamp": 1695670024
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wit_bindgen</span>::<span class=\"n\">generate</span><span class=\"o\">!</span><span class=\"p\">({</span>\n<span class=\"w\">    </span><span class=\"n\">path</span>: <span class=\"s\">\"wm.wit\"</span><span class=\"p\">,</span>\n\n<span class=\"w\">    </span><span class=\"n\">world</span>: <span class=\"s\">\"aerugo-wm\"</span><span class=\"p\">,</span>\n\n<span class=\"w\">    </span><span class=\"n\">exports</span>: <span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"s\">\"aerugo:wm/wm\"</span>: <span class=\"nc\">Wm</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"s\">\"aerugo:wm/wm/wm-res\"</span>: <span class=\"nc\">WmRes</span>\n<span class=\"w\">    </span><span class=\"p\">},</span>\n<span class=\"p\">});</span>\n</code></pre></div>",
        "id": 393092909,
        "sender_full_name": "i509VCB",
        "timestamp": 1695670034
    },
    {
        "content": "<p>hm I'm not getting that error?</p>",
        "id": 393093498,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1695670245
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wit_bindgen</span>::<span class=\"n\">generate</span><span class=\"o\">!</span><span class=\"p\">({</span>\n<span class=\"w\">    </span><span class=\"n\">path</span>: <span class=\"s\">\"wm.wit\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">world</span>: <span class=\"s\">\"aerugo-wm\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">exports</span>: <span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"s\">\"aerugo:wm/wm\"</span>: <span class=\"nc\">Wm</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"s\">\"aerugo:wm/wm/wm-res\"</span>: <span class=\"nc\">WmRes</span>\n<span class=\"w\">    </span><span class=\"p\">},</span>\n<span class=\"p\">});</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"k\">crate</span>::<span class=\"n\">exports</span>::<span class=\"n\">aerugo</span>::<span class=\"n\">wm</span>::<span class=\"n\">wm</span>::<span class=\"n\">Guest</span><span class=\"p\">;</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"k\">crate</span>::<span class=\"n\">exports</span>::<span class=\"n\">aerugo</span>::<span class=\"n\">wm</span>::<span class=\"n\">wm</span>::<span class=\"n\">GuestWmRes</span><span class=\"p\">;</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wit_bindgen</span>::<span class=\"n\">Resource</span><span class=\"p\">;</span>\n\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"nc\">WmRes</span><span class=\"p\">;</span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">GuestWmRes</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">WmRes</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">name</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">String</span> <span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">loop</span><span class=\"w\"> </span><span class=\"p\">{}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"nc\">Wm</span><span class=\"p\">;</span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">Guest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">Wm</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">create_wm</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"n\">Resource</span><span class=\"o\">&lt;</span><span class=\"n\">WmRes</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">String</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">loop</span><span class=\"w\"> </span><span class=\"p\">{}</span>\n<span class=\"w\">        </span><span class=\"c1\">//</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>",
        "id": 393093536,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1695670262
    },
    {
        "content": "<p>that works for me</p>",
        "id": 393093544,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1695670264
    },
    {
        "content": "<p>still happening copy pasting that verbatim</p>",
        "id": 393094797,
        "sender_full_name": "i509VCB",
        "timestamp": 1695670685
    },
    {
        "content": "<p>I updated rust with rustup and still nothing new</p>",
        "id": 393094832,
        "sender_full_name": "i509VCB",
        "timestamp": 1695670704
    },
    {
        "content": "<p>hm can you try uploading a git repo with intructions?</p>",
        "id": 393095037,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1695670789
    },
    {
        "content": "<p>Uhh give me a min I can push my branch</p>",
        "id": 393095137,
        "sender_full_name": "i509VCB",
        "timestamp": 1695670822
    },
    {
        "content": "<p><a href=\"https://github.com/i509VCB/aerugo/tree/wayland-0.30/wm2\">https://github.com/i509VCB/aerugo/tree/wayland-0.30/wm2</a></p>",
        "id": 393095277,
        "sender_full_name": "i509VCB",
        "timestamp": 1695670880
    },
    {
        "content": "<p>aha it's the <code>@0.0.1</code> in the <code>package</code> header</p>",
        "id": 393095719,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1695671056
    },
    {
        "content": "<p>I'll work on fixing that</p>",
        "id": 393095736,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1695671065
    },
    {
        "content": "<p>if you remove that then it should work for now</p>",
        "id": 393095754,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1695671074
    },
    {
        "content": "<p>Yeah it was the version</p>",
        "id": 393097959,
        "sender_full_name": "i509VCB",
        "timestamp": 1695671818
    },
    {
        "content": "<p>ok should be fixed by <a href=\"https://github.com/bytecodealliance/wit-bindgen/pull/677\">https://github.com/bytecodealliance/wit-bindgen/pull/677</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wit-bindgen/pull/677\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/c7fb9e5b3f44f75da889d51478b74b92c236ab5d\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f633937643231363363323630666266333139613833636162316534613237326431396565316238356131623035633233306637343066333464663362386432622f62797465636f6465616c6c69616e63652f7769742d62696e6467656e2f70756c6c2f363737)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wit-bindgen/pull/677\" title=\"Fix the `exports` key for packages-with-versions by alexcrichton · Pull Request #677 · bytecodealliance/wit-bindgen\">Fix the `exports` key for packages-with-versions by alexcrichton · Pull Request #677 · bytecodealliance/wit-bindgen</a></div><div class=\"message_embed_description\">Previously one location looking up exports would account for the version and another wouldn't which caused the ERROR case to leak through by accident. These are now kept in sync to ensure that the ...</div></div></div>",
        "id": 393114982,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1695677646
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"653437\">i509VCB</span> has marked this topic as resolved.</p>",
        "id": 393119507,
        "sender_full_name": "Notification Bot",
        "timestamp": 1695679611
    }
]