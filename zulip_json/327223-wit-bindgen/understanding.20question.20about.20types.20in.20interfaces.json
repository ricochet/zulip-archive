[
    {
        "content": "<p>There is the following observation related to <strong>imported interfaces</strong> and <strong>types</strong> which I do not understand:</p>\n<p><strong>Given</strong> the following interface/world:</p>\n<div class=\"codehilite\" data-code-language=\"wit\"><pre><span></span><code>interface nicestuffhere {\n    my-function: func(v0: list&lt;u8&gt;) -&gt; float64\n}\n\ndefault world whatever {\n  import sth: self.nicestuffhere\n}\n</code></pre></div>\n<p><strong>When</strong> the implementation wants to call function <code>my-function</code> <br>\n<strong>Then</strong> its parameter <code>v0</code> has to be of type <code>&amp;[u8]</code> where <strong>my expectation was to call a <code>Vec&lt;u8&gt;</code></strong>. I thought so based on the assumption that among module/component boundaries data is exchanged in a <strong><em>shared nothing</em></strong> style which implies an exchange by value (in my head).</p>\n<p>My understanding is obviously wrong but in which way?</p>",
        "id": 349090649,
        "sender_full_name": "Christoph Brewing",
        "timestamp": 1681388017
    },
    {
        "content": "<p>The string is <em>copied</em> into the callee's linear memory.</p>",
        "id": 349098933,
        "sender_full_name": "Lann Martin",
        "timestamp": 1681389978
    },
    {
        "content": "<p>Another way of thinking about it is that passing a <code>Vec</code> isn't passing the string data by value, its passing a (smart) pointer to the string data.</p>",
        "id": 349103566,
        "sender_full_name": "Lann Martin",
        "timestamp": 1681390963
    },
    {
        "content": "<p>makes sense, thank you</p>",
        "id": 349116433,
        "sender_full_name": "Christoph Brewing",
        "timestamp": 1681393839
    }
]