[
    {
        "content": "<p>Hello, I am working on <a href=\"https://github.com/kajacx/wasm-bridge\">wasm-bridge</a>, a project to \"make wasmtime work on the web\". I am currently looking into a way to add component model support.</p>\n<p>When I invoke the <code>wasm_bridge::component::bindgen!</code> macro, the generated code uses the <code>wasmtime</code> crate. I was wondering if it would be possible to write my own proc macro, call the original bindgen macro with the same <code>TokenStream</code> input, and modify it's output.</p>\n<p>Something like this:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[proc_macro]</span>\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">my_bindgen</span><span class=\"p\">(</span><span class=\"n\">stream</span>: <span class=\"nc\">proc_macro</span>::<span class=\"n\">TokenStream</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">proc_macro</span>::<span class=\"n\">TokenStream</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">stream</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_component_macro</span>::<span class=\"n\">bindgen</span><span class=\"p\">(</span><span class=\"n\">stream</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Modify the stream</span>\n<span class=\"w\">    </span><span class=\"fm\">eprintln!</span><span class=\"p\">(</span><span class=\"s\">\"{stream:?}\"</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"n\">stream</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>But this gives a syntax error: <em>expected function, found macro <code>wasmtime_component_macro::bindgen</code></em></p>\n<p>Is it even possible to call a proc macro like a normal function with <code>TokenStream</code>, or do I need to do something else?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/kajacx/wasm-bridge\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/e8400b6f7a98cfaea3c30f7d76009e16253c07dc\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f333163393133356562353830313763303638376262366262663538303537663539653639613463316134373931313732393264326132356338343338623533342f6b616a6163782f7761736d2d627269646765)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/kajacx/wasm-bridge\" title=\"GitHub - kajacx/wasm-bridge: Proves a single unified API to run WASM modules on the dektop using wasmtime, or on the web using js-sys.\">GitHub - kajacx/wasm-bridge: Proves a single unified API to run WASM modules on the dektop using wasmtime, or on the web using js-sys.</a></div><div class=\"message_embed_description\">Proves a single unified API to run WASM modules on the dektop using wasmtime, or on the web using js-sys. - GitHub - kajacx/wasm-bridge: Proves a single unified API to run WASM modules on the dekto...</div></div></div>",
        "id": 372632433,
        "sender_full_name": "Karel Hrkal (kajacx)",
        "timestamp": 1688570927
    }
]