[
    {
        "content": "<p>Hello ! I’m learning everything webassembly for 3 days, my head’s gonna explode but I think I’m not that far to succeed! I think so.</p>\n<p>When, from a guest, you are generating from a wit. You make your struct, your methods implementing the generated interface… but why are there not self references anymore ? This would be so helpful to create wasm programs which are more than a « call and return »</p>",
        "id": 329090696,
        "sender_full_name": "bachrc",
        "timestamp": 1676942890
    },
    {
        "content": "<p>Well, I struggled to find any documentation, but it seems that what I need is the <code>resource</code> element. I'm gonna try this out.</p>",
        "id": 329171067,
        "sender_full_name": "bachrc",
        "timestamp": 1676980723
    },
    {
        "content": "<p>Resources are not implemented in the current iteration, they are planned to be added again for the next major version</p>\n<p>since each wasm component has entirely separate memory, I would suggest to use global state inside the component if there is data you want to persist between calls of component functions, in Rust that would be something like a OnceCell or lazy_static</p>",
        "id": 329173451,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1676981462
    },
    {
        "content": "<p>Not implemented? How can this issue be resolved then? <a href=\"https://github.com/bytecodealliance/wit-bindgen/issues/178\">https://github.com/bytecodealliance/wit-bindgen/issues/178</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wit-bindgen/issues/178\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/24ab13610f74fe86917de17afd2ed8e33ac834fa\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f643837366265313535316631316366366566336262383763326437326330326131653733646633386164323334653134323631613337356437633561646433312f62797465636f6465616c6c69616e63652f7769742d62696e6467656e2f6973737565732f313738)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wit-bindgen/issues/178\" title=\"Mutable methods in wit resources · Issue #178 · bytecodealliance/wit-bindgen\">Mutable methods in wit resources · Issue #178 · bytecodealliance/wit-bindgen</a></div><div class=\"message_embed_description\">I&#39;m looking into using resources with the following .wit file: resource aggregate { static new: function(id: string) -&gt; aggregate apply-events: function(event: list&lt;list&lt;u8&gt;&gt;) } ...</div></div></div>",
        "id": 329175752,
        "sender_full_name": "bachrc",
        "timestamp": 1676982078
    },
    {
        "content": "<blockquote>\n<p>in the current iteration&lt;</p>\n</blockquote>\n<p>the previous wit files were for wasi commands, which implemented wasi_snapshot_preview1. Right now we are almost at preview2, which is basing everything on the component model, but the component model does not yet have Resources</p>\n<p>you can use an old version of wasmtime if you want to play with the deprecated wasi format instead of the component model or you can wait a few more weeks to play witht he new version</p>",
        "id": 329176238,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1676982236
    },
    {
        "content": "<p>Okay I see! Thanks a lot for your answer and time, have a great day :)</p>",
        "id": 329176462,
        "sender_full_name": "bachrc",
        "timestamp": 1676982301
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"541537\">bachrc</span> has marked this topic as resolved.</p>",
        "id": 329176482,
        "sender_full_name": "Notification Bot",
        "timestamp": 1676982307
    },
    {
        "content": "<p>Will the resource be something handled by the component model at some time, or is it again a design?</p>",
        "id": 329178289,
        "sender_full_name": "bachrc",
        "timestamp": 1676982822
    },
    {
        "content": "<p>as far as I'm aware they will absolutely be in the final specification, but I don't know specifics what is blocking what currently</p>",
        "id": 329179778,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1676983293
    },
    {
        "content": "<p>Okay! Thanks a lot :)</p>",
        "id": 329187484,
        "sender_full_name": "bachrc",
        "timestamp": 1676985444
    }
]