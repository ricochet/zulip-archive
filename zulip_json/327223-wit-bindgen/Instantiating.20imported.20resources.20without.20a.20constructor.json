[
    {
        "content": "<p>Hi</p>\n<p>I'm trying to crate a wrapper around an existing interface which takes a resource (which doesn't declare a constructor) as an input. Is there a way to create a component which takes different inputs, creates and instance of that resource and calls the existing interface?</p>\n<p>Specifically I'm stuck on the fact that the generated bindings don't seem to include any way to instantiate the resource.</p>",
        "id": 493970091,
        "sender_full_name": "Maxim Schuwalow",
        "timestamp": 1736959370
    },
    {
        "content": "<p>To be usable, the inner interface either needs a constructor or some other function that returns a handle.</p>",
        "id": 493999646,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1736968808
    },
    {
        "content": "<p>In this case I want to wrap the <code>wasi:http/incoming-handler</code>, so I cannot modify it in any way.</p>\n<p>So there is not workaround to make this work and that interface just cannot be used from plain wasm?</p>",
        "id": 494000592,
        "sender_full_name": "Maxim Schuwalow",
        "timestamp": 1736969208
    },
    {
        "content": "<p>Ah, that's a good question. I don't know the answer.</p>",
        "id": 494002583,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1736969990
    },
    {
        "content": "<p>I think this is an artifact of the asymmetric API of <code>wasi:http@0.2.0</code>, where the underlying assumption is that the only party who should be creating instances of <code>incoming-request</code> is the one who is exporting that resource -- normally the host, but possibly a component.</p>\n<p>What you're trying to do is trivial in <a href=\"https://github.com/WebAssembly/wasi-http/tree/main/wit-0.3.0-draft\">the 0.3.0-draft</a> since there's only one <code>request</code> resource, which has a constructor that any component can call.  And in general WASIp3 will make virtualizing interfaces which involve I/O practical, which isn't really the case for WASIp2, unfortunately.  I've tried several times to virtualize <code>wasi:http@0.2.x</code> and failed, which is one of the reasons I'm so keen to get WASIp3 released.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/wasi-http/tree/main/wit-0.3.0-draft\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/2d71a0055509dd8ab88aa1479a2a984b05d4b99b/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f383032383433323666333639316363323132356430623765623663303439363431663138636630653732333534623630343563376263303661356531393234332f576562417373656d626c792f776173692d68747470&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/wasi-http/tree/main/wit-0.3.0-draft\" title=\"wasi-http/wit-0.3.0-draft at main · WebAssembly/wasi-http\">wasi-http/wit-0.3.0-draft at main · WebAssembly/wasi-http</a></div><div class=\"message_embed_description\">Contribute to WebAssembly/wasi-http development by creating an account on GitHub.</div></div></div>",
        "id": 494004206,
        "sender_full_name": "Joel Dice",
        "timestamp": 1736970631
    }
]