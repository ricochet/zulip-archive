[
    {
        "content": "<p>Hi, can I ask for a bit of help with a problem I have with the parameter name for a function.  The problem is that I am generating this code:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"n\">internal</span><span class=\"w\"> </span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"n\">void</span><span class=\"w\"> </span><span class=\"n\">A</span><span class=\"p\">(</span><span class=\"n\">string</span><span class=\"w\"> </span><span class=\"n\">p0</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">var</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"n\">IntPtr</span><span class=\"w\"> </span><span class=\"n\">interopString</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">InteropString</span><span class=\"p\">.</span><span class=\"n\">FromString</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">out</span><span class=\"w\"> </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">length</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">AInterop</span><span class=\"p\">.</span><span class=\"n\">wasmImportA</span><span class=\"p\">(</span><span class=\"n\">interopString</span><span class=\"p\">.</span><span class=\"n\">ToInt32</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"n\">length</span><span class=\"p\">);</span>\n</code></pre></div>\n<p>Where what I want is <br>\n    internal static void A(string p0)<br>\n    {<br>\n        var result = p0;</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">I</span><span class=\"p\">.</span><span class=\"n\">e</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">p0</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">x</span><span class=\"err\">`</span><span class=\"p\">.</span><span class=\"w\">  </span><span class=\"n\">The</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">x</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">comes</span><span class=\"w\"> </span><span class=\"n\">from</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">GetArg</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">instruction</span>:\n<span class=\"p\">[</span><span class=\"n\">image</span><span class=\"p\">.</span><span class=\"n\">png</span><span class=\"p\">](</span><span class=\"o\">/</span><span class=\"n\">user_uploads</span><span class=\"o\">/</span><span class=\"mi\">15107</span><span class=\"o\">/</span><span class=\"n\">fF4EE_QccOFok</span><span class=\"o\">-</span><span class=\"n\">SJwbuXhxPq</span><span class=\"o\">/</span><span class=\"n\">image</span><span class=\"p\">.</span><span class=\"n\">png</span><span class=\"p\">)</span>\n<span class=\"n\">And</span><span class=\"w\"> </span><span class=\"n\">my</span><span class=\"w\"> </span><span class=\"n\">question</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"k\">where</span><span class=\"w\"> </span><span class=\"n\">does</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">x</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">come</span><span class=\"w\"> </span><span class=\"n\">from</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">what</span><span class=\"w\"> </span><span class=\"n\">might</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"w\"> </span><span class=\"n\">have</span><span class=\"w\"> </span><span class=\"n\">done</span><span class=\"w\"> </span><span class=\"n\">wrong</span><span class=\"w\"> </span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"n\">that</span><span class=\"w\"> </span><span class=\"n\">it</span><span class=\"w\"> </span><span class=\"n\">doesn</span><span class=\"o\">'</span><span class=\"na\">t</span><span class=\"w\"> </span><span class=\"k\">match</span>\n</code></pre></div>\n<p>let sig = self.resolve.wasm_signature(AbiVariant::GuestImport, func);</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">sig</span><span class=\"p\">.</span><span class=\"n\">params</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"o\">?</span>\n\n<span class=\"n\">Thanks</span>\n</code></pre></div>",
        "id": 392122295,
        "sender_full_name": "Scott Waye",
        "timestamp": 1695217951
    },
    {
        "content": "<p><a href=\"/user_uploads/15107/lPW4TwiaCG4eG-ZEKt2R3Oe3/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/15107/lPW4TwiaCG4eG-ZEKt2R3Oe3/image.png\" title=\"image.png\"><img src=\"/user_uploads/15107/lPW4TwiaCG4eG-ZEKt2R3Oe3/image.png\"></a></div>",
        "id": 392122755,
        "sender_full_name": "Scott Waye",
        "timestamp": 1695218094
    },
    {
        "content": "<p>Param names should be available from <code>func.params</code> (<a href=\"https://docs.rs/wit-parser/0.11.1/wit_parser/type.Params.html\">https://docs.rs/wit-parser/0.11.1/wit_parser/type.Params.html</a>)</p>",
        "id": 392122784,
        "sender_full_name": "Lann Martin",
        "timestamp": 1695218107
    },
    {
        "content": "<p><code>sig</code> is a core wasm func signature; core func params don't have names</p>",
        "id": 392122972,
        "sender_full_name": "Lann Martin",
        "timestamp": 1695218163
    },
    {
        "content": "<p>So</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">Bindgen</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">FunctionBindgen</span><span class=\"o\">&lt;'</span><span class=\"nb\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"nb\">_</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">type</span> <span class=\"nc\">Operand</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">String</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">emit</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"n\">_resolve</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">Resolve</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"n\">inst</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">Instruction</span><span class=\"o\">&lt;'</span><span class=\"nb\">_</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"n\">operands</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"nb\">String</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"n\">results</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"nb\">String</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">inst</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"n\">Instruction</span>::<span class=\"n\">GetArg</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">nth</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">results</span><span class=\"p\">.</span><span class=\"n\">push</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">params</span><span class=\"p\">[</span><span class=\"o\">*</span><span class=\"n\">nth</span><span class=\"p\">].</span><span class=\"n\">clone</span><span class=\"p\">()),</span>\n</code></pre></div>\n<p>Is correct?</p>",
        "id": 392123201,
        "sender_full_name": "Scott Waye",
        "timestamp": 1695218229
    },
    {
        "content": "<p>I am not that familiar with bindgen; is <code>nth</code> referring to the component signature or the core signature?</p>",
        "id": 392123456,
        "sender_full_name": "Lann Martin",
        "timestamp": 1695218303
    },
    {
        "content": "<p>One component param could be lowered into multiple core params</p>",
        "id": 392123592,
        "sender_full_name": "Lann Martin",
        "timestamp": 1695218360
    },
    {
        "content": "<p>Right, what I'm after is the core params</p>",
        "id": 392124162,
        "sender_full_name": "Scott Waye",
        "timestamp": 1695218517
    },
    {
        "content": "<p>Interesting that core params don't have names, I wonder where \"x\" comes from</p>",
        "id": 392124700,
        "sender_full_name": "Scott Waye",
        "timestamp": 1695218649
    },
    {
        "content": "<p>Core params don't inherently have names. I see wasmtime bindgen for example just uses <code>argN</code></p>",
        "id": 392124703,
        "sender_full_name": "Lann Martin",
        "timestamp": 1695218650
    },
    {
        "content": "<p>Thanks, I'll have a look at the rust to see how it works</p>",
        "id": 392128161,
        "sender_full_name": "Scott Waye",
        "timestamp": 1695219587
    },
    {
        "content": "<p>Problem between keyboard and chair :-)</p>",
        "id": 392159064,
        "sender_full_name": "Scott Waye",
        "timestamp": 1695229143
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"395878\">Scott Waye</span> has marked this topic as resolved.</p>",
        "id": 392159070,
        "sender_full_name": "Notification Bot",
        "timestamp": 1695229145
    }
]