[
    {
        "content": "<p>I am trying to get a basic example up and running here: <a href=\"https://github.com/DougAnderson444/wit-wasm\">https://github.com/DougAnderson444/wit-wasm</a> </p>\n<p>It <strong>compiles fine</strong>, and <strong>runs fine</strong> until I try to use a host function <code>thunk</code> in the guest Component fn <code>think</code> at runtime I get this import error:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>Error:<span class=\"w\"> </span>import<span class=\"w\"> </span><span class=\"sb\">`</span>mypackage:smoke/imports<span class=\"sb\">`</span><span class=\"w\"> </span>has<span class=\"w\"> </span>the<span class=\"w\"> </span>wrong<span class=\"w\"> </span><span class=\"nb\">type</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">    </span><span class=\"m\">0</span>:<span class=\"w\"> </span>instance<span class=\"w\"> </span><span class=\"nb\">export</span><span class=\"w\"> </span><span class=\"sb\">`</span>thunk<span class=\"sb\">`</span><span class=\"w\"> </span>has<span class=\"w\"> </span>the<span class=\"w\"> </span>wrong<span class=\"w\"> </span><span class=\"nb\">type</span>\n<span class=\"w\">    </span><span class=\"m\">1</span>:<span class=\"w\"> </span>expected<span class=\"w\"> </span>func<span class=\"w\"> </span>found<span class=\"w\"> </span>nothing\n</code></pre></div>\n<p>Wit file:</p>\n<div class=\"codehilite\" data-code-language=\"wit\"><pre><span></span><code>package mypackage:smoke\n\ninterface imports {\n  thunk: func()\n}\n\nworld smoke {\n  import imports\n\n  export think: func()\n}\n</code></pre></div>\n<p>Component:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wit_bindgen</span>::<span class=\"n\">generate</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">\"smoke\"</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"s\">\"wit\"</span><span class=\"p\">);</span>\n<span class=\"k\">struct</span> <span class=\"nc\">Exports</span><span class=\"p\">;</span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">Smoke</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">Exports</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">think</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">mypackage</span>::<span class=\"n\">smoke</span>::<span class=\"n\">imports</span>::<span class=\"n\">thunk</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">export_smoke</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">Exports</span><span class=\"p\">);</span>\n</code></pre></div>\n<p>Thunk:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[async_trait::async_trait]</span>\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">mypackage</span>::<span class=\"n\">smoke</span>::<span class=\"n\">imports</span>::<span class=\"n\">Host</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">MyImports</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">thunk</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">hit</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"in the host\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>I am using this as a guide, but maybe it's overkill? <a href=\"https://github.com/bytecodealliance/wasmtime/blob/afd9aced3b91ae4eab7c72e0ed4cc241ef93dc89/crates/test-programs/tests/reactor.rs\">https://github.com/bytecodealliance/wasmtime/blob/afd9aced3b91ae4eab7c72e0ed4cc241ef93dc89/crates/test-programs/tests/reactor.rs</a></p>\n<p>I feel like it's close! Just missing something that I'm not seeing?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/DougAnderson444/wit-wasm\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/5991ecb4f975581b0dcac8bde7df00a97ba90b9c\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f626663383365666261376163633137626338663435393037363930396138663930376439383534343662363566303435616232306638376564646531373132392f446f7567416e646572736f6e3434342f7769742d7761736d)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/DougAnderson444/wit-wasm\" title=\"GitHub - DougAnderson444/wit-wasm\">GitHub - DougAnderson444/wit-wasm</a></div><div class=\"message_embed_description\">Contribute to DougAnderson444/wit-wasm development by creating an account on GitHub.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/afd9aced3b91ae4eab7c72e0ed4cc241ef93dc89/crates/test-programs/tests/reactor.rs\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/a7de633b8310803818260437e53810482993bf06\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f346264626261316236626439636437383134386234366239653237346434306434396665656166666566336565313438326630376636666164356562333663362f62797465636f6465616c6c69616e63652f7761736d74696d65)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/afd9aced3b91ae4eab7c72e0ed4cc241ef93dc89/crates/test-programs/tests/reactor.rs\" title=\"wasmtime/reactor.rs at afd9aced3b91ae4eab7c72e0ed4cc241ef93dc89 路 bytecodealliance/wasmtime\">wasmtime/reactor.rs at afd9aced3b91ae4eab7c72e0ed4cc241ef93dc89 路 bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A fast and secure runtime for WebAssembly. Contribute to bytecodealliance/wasmtime development by creating an account on GitHub.</div></div></div>",
        "id": 364652884,
        "sender_full_name": "DougAnderson444 | PeerPiper.io",
        "timestamp": 1686250624
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"623045\">@DougAnderson444</span> looks like you are missing adding <code>Smoke</code> to the linker; i.e. <code>Smoke::add_to_linker(&amp;mut linker, |x| x)?;</code> here <a href=\"https://github.com/DougAnderson444/wit-wasm/blob/master/examples/smoke.rs#LL80C1-L80C1\">https://github.com/DougAnderson444/wit-wasm/blob/master/examples/smoke.rs#LL80C1-L80C1</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/DougAnderson444/wit-wasm/blob/master/examples/smoke.rs#LL80C1-L80C1\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/5991ecb4f975581b0dcac8bde7df00a97ba90b9c\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f626663383365666261376163633137626338663435393037363930396138663930376439383534343662363566303435616232306638376564646531373132392f446f7567416e646572736f6e3434342f7769742d7761736d)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/DougAnderson444/wit-wasm/blob/master/examples/smoke.rs#LL80C1-L80C1\" title=\"wit-wasm/smoke.rs at master 路 DougAnderson444/wit-wasm\">wit-wasm/smoke.rs at master 路 DougAnderson444/wit-wasm</a></div><div class=\"message_embed_description\">Contribute to DougAnderson444/wit-wasm development by creating an account on GitHub.</div></div></div>",
        "id": 364674343,
        "sender_full_name": "Brian",
        "timestamp": 1686256828
    },
    {
        "content": "<p>THANK YOU <span class=\"user-mention\" data-user-id=\"269506\">@Brian</span> You just made my day!</p>",
        "id": 364681476,
        "sender_full_name": "DougAnderson444 | PeerPiper.io",
        "timestamp": 1686259518
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"623045\">DougAnderson444</span> has marked this topic as resolved.</p>",
        "id": 364681565,
        "sender_full_name": "Notification Bot",
        "timestamp": 1686259552
    }
]