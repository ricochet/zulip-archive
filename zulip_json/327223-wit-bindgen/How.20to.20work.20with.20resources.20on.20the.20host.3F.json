[
    {
        "content": "<p>Ok, I have been looking into resources in wit, and while the concept is very interesting and works well on the guest, it's a confusing mess on the host. Let's take this wit file:</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>Wit protocol</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>package example:protocol;\n\ninterface companies {\n  resource company {\n    constructor(name: string, max-salary: u32);\n    get-name: func() -&gt; string;\n    get-max-salary: func() -&gt; u32;\n  }\n}\n\ninterface employees {\n  resource employee {\n    constructor(name: string, min-salary: u32);\n    get-name: func() -&gt; string;\n    get-min-salary: func() -&gt; u32;\n  }\n}\n\nworld my-world {\n  import companies;\n  use companies.{company};\n\n  export employees;\n  use employees.{employee};\n\n  export find-job: func(employee: employee, companies: list&lt;company&gt;) -&gt; option&lt;company&gt;;\n  export find-employee: func(company: company, employees: list&lt;employee&gt;) -&gt; option&lt;employee&gt;;\n\n  export company-roundtrip-export: func(company: company) -&gt; company;\n  import company-roundtrip-import: func(company: company) -&gt; company;\n\n  export employee-roundtrip-export: func(employee: employee) -&gt; employee;\n  import employee-roundtrip-import: func(employee: employee) -&gt; employee;\n}\n</code></pre></div>\n</div></div>\n<p>It's pretty straight forward - company is a host resource (method impl defined by host), while employee is a guest resource (method impl defined by guess). And the guess code is very nice and intuitive:</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>Guest file</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wit_bindgen</span>::<span class=\"n\">generate</span><span class=\"o\">!</span><span class=\"p\">({</span>\n<span class=\"w\">    </span><span class=\"n\">path</span>: <span class=\"s\">\"../protocol.wit\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">world</span>: <span class=\"s\">\"my-world\"</span><span class=\"p\">,</span>\n<span class=\"p\">});</span>\n\n<span class=\"k\">struct</span> <span class=\"nc\">MyEmployees</span><span class=\"p\">;</span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">exports</span>::<span class=\"n\">example</span>::<span class=\"n\">protocol</span>::<span class=\"n\">employees</span>::<span class=\"n\">Guest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">MyEmployees</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">type</span> <span class=\"nc\">Employee</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">MyEmployee</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"nc\">MyEmployee</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">name</span>: <span class=\"nb\">String</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">min_salary</span>: <span class=\"kt\">u32</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">exports</span>::<span class=\"n\">example</span>::<span class=\"n\">protocol</span>::<span class=\"n\">employees</span>::<span class=\"n\">GuestEmployee</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">MyEmployee</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">new</span><span class=\"p\">(</span><span class=\"n\">name</span>: <span class=\"nb\">String</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">min_salary</span>: <span class=\"kt\">u32</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">Self</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"bp\">Self</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">name</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">min_salary</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">get_name</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">String</span> <span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">name</span><span class=\"p\">.</span><span class=\"n\">clone</span><span class=\"p\">()</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">get_min_salary</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">u32</span> <span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">min_salary</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">Guest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">MyEmployees</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">find_job</span><span class=\"p\">(</span><span class=\"n\">employee</span>: <span class=\"nc\">Employee</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">companies</span>: <span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"n\">Company</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Option</span><span class=\"o\">&lt;</span><span class=\"n\">Company</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">companies</span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">into_iter</span><span class=\"p\">()</span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"n\">company</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">employee</span><span class=\"p\">.</span><span class=\"n\">get_min_salary</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">&lt;=</span><span class=\"w\"> </span><span class=\"n\">company</span><span class=\"p\">.</span><span class=\"n\">get_max_salary</span><span class=\"p\">())</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">find_employee</span><span class=\"p\">(</span><span class=\"n\">company</span>: <span class=\"nc\">Company</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">employees</span>: <span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"n\">Employee</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Option</span><span class=\"o\">&lt;</span><span class=\"n\">Employee</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">employees</span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">into_iter</span><span class=\"p\">()</span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"n\">employee</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">employee</span><span class=\"p\">.</span><span class=\"n\">get_min_salary</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">&lt;=</span><span class=\"w\"> </span><span class=\"n\">company</span><span class=\"p\">.</span><span class=\"n\">get_max_salary</span><span class=\"p\">())</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">company_roundtrip_export</span><span class=\"p\">(</span><span class=\"n\">company</span>: <span class=\"nc\">Company</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">Company</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">_name</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">company</span><span class=\"p\">.</span><span class=\"n\">get_name</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"n\">company_roundtrip_import</span><span class=\"p\">(</span><span class=\"n\">company</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">employee_roundtrip_export</span><span class=\"p\">(</span><span class=\"n\">employee</span>: <span class=\"nc\">Employee</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">Employee</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">_name</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">employee</span><span class=\"p\">.</span><span class=\"n\">get_name</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"n\">employee_roundtrip_import</span><span class=\"p\">(</span><span class=\"n\">employee</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">export</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">MyEmployees</span><span class=\"p\">);</span>\n</code></pre></div>\n</div></div>\n<p>We define what the \"employee\" resource will be with an associative type, then implement the resource's methods on in, and in the exported functions, we can call the resource methods on both resources. Very nice and idiomatic.</p>\n<p>Now, on the host, it is anything but that. This is the host file by the way:</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>Host file</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">example</span>::<span class=\"n\">protocol</span>::<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">companies</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">employees</span>::<span class=\"p\">{</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">HostEmployee</span><span class=\"p\">},</span>\n<span class=\"p\">};</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">std</span>::<span class=\"n\">collections</span>::<span class=\"n\">HashMap</span><span class=\"p\">;</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">component</span>::<span class=\"p\">{</span><span class=\"n\">Component</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Linker</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Resource</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ResourceAny</span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"n\">Config</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">Result</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Store</span><span class=\"p\">,</span>\n<span class=\"p\">};</span>\n\n<span class=\"n\">wasmtime</span>::<span class=\"n\">component</span>::<span class=\"n\">bindgen</span><span class=\"o\">!</span><span class=\"p\">({</span>\n<span class=\"w\">    </span><span class=\"n\">path</span>: <span class=\"s\">\"../protocol.wit\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">world</span>: <span class=\"s\">\"my-world\"</span>\n<span class=\"p\">});</span>\n\n<span class=\"cp\">#[derive(Default, Clone)]</span>\n<span class=\"k\">struct</span> <span class=\"nc\">MyCompany</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">name</span>: <span class=\"nb\">String</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">max_salary</span>: <span class=\"kt\">u32</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"cp\">#[derive(Default, Clone)]</span>\n<span class=\"k\">struct</span> <span class=\"nc\">ResHolder</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">resources</span>: <span class=\"nc\">HashMap</span><span class=\"o\">&lt;</span><span class=\"kt\">u32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">next_id</span>: <span class=\"kt\">u32</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">impl</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">ResHolder</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">item</span>: <span class=\"nc\">T</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">u32</span> <span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">id</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">next_id</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">resources</span><span class=\"p\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">id</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">item</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">next_id</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"n\">id</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">get</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">id</span>: <span class=\"kt\">u32</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Option</span><span class=\"o\">&lt;&amp;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">resources</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">id</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">drop</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">id</span>: <span class=\"kt\">u32</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">resources</span><span class=\"p\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">id</span><span class=\"p\">).</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"n\">_</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">()).</span><span class=\"n\">ok_or</span><span class=\"p\">(())</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"cp\">#[derive(Default, Clone)]</span>\n<span class=\"k\">struct</span> <span class=\"nc\">State</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">companies</span>: <span class=\"nc\">ResHolder</span><span class=\"o\">&lt;</span><span class=\"n\">MyCompany</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">companies</span>::<span class=\"n\">HostCompany</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">State</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">name</span>: <span class=\"nb\">String</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">max_salary</span>: <span class=\"kt\">u32</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"n\">Resource</span><span class=\"o\">&lt;</span><span class=\"n\">companies</span>::<span class=\"n\">Company</span><span class=\"o\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">Resource</span>::<span class=\"n\">new_own</span><span class=\"p\">(</span>\n<span class=\"w\">            </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">companies</span><span class=\"p\">.</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">MyCompany</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">name</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">max_salary</span><span class=\"w\"> </span><span class=\"p\">}),</span>\n<span class=\"w\">        </span><span class=\"p\">))</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">get_name</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">self_</span>: <span class=\"nc\">Resource</span><span class=\"o\">&lt;</span><span class=\"n\">companies</span>::<span class=\"n\">Company</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"nb\">String</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">companies</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">self_</span><span class=\"p\">.</span><span class=\"n\">rep</span><span class=\"p\">()).</span><span class=\"n\">unwrap</span><span class=\"p\">().</span><span class=\"n\">name</span><span class=\"p\">.</span><span class=\"n\">clone</span><span class=\"p\">())</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">get_max_salary</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">self_</span>: <span class=\"nc\">Resource</span><span class=\"o\">&lt;</span><span class=\"n\">companies</span>::<span class=\"n\">Company</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"kt\">u32</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">companies</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">self_</span><span class=\"p\">.</span><span class=\"n\">rep</span><span class=\"p\">()).</span><span class=\"n\">unwrap</span><span class=\"p\">().</span><span class=\"n\">max_salary</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">drop</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rep</span>: <span class=\"nc\">Resource</span><span class=\"o\">&lt;</span><span class=\"n\">companies</span>::<span class=\"n\">Company</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">companies</span><span class=\"p\">.</span><span class=\"nb\">drop</span><span class=\"p\">(</span><span class=\"n\">rep</span><span class=\"p\">.</span><span class=\"n\">rep</span><span class=\"p\">()).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">companies</span>::<span class=\"n\">Host</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">State</span><span class=\"w\"> </span><span class=\"p\">{}</span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">HostEmployee</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">State</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">drop</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"n\">rep</span>: <span class=\"nc\">wasmtime</span>::<span class=\"n\">component</span>::<span class=\"n\">Resource</span><span class=\"o\">&lt;</span><span class=\"n\">employees</span>::<span class=\"n\">Employee</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">wasmtime</span>::<span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">get_min_salary</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"n\">self_</span>: <span class=\"nc\">wasmtime</span>::<span class=\"n\">component</span>::<span class=\"n\">Resource</span><span class=\"o\">&lt;</span><span class=\"n\">employees</span>::<span class=\"n\">Employee</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">wasmtime</span>::<span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"kt\">u32</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"mi\">50_000</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">get_name</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"n\">self_</span>: <span class=\"nc\">wasmtime</span>::<span class=\"n\">component</span>::<span class=\"n\">Resource</span><span class=\"o\">&lt;</span><span class=\"n\">employees</span>::<span class=\"n\">Employee</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">wasmtime</span>::<span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"nb\">String</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"s\">\"Anon\"</span><span class=\"p\">.</span><span class=\"n\">into</span><span class=\"p\">())</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">new</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"n\">name</span>: <span class=\"nb\">String</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"n\">min_salary</span>: <span class=\"kt\">u32</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">wasmtime</span>::<span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"n\">wasmtime</span>::<span class=\"n\">component</span>::<span class=\"n\">Resource</span><span class=\"o\">&lt;</span><span class=\"n\">employees</span>::<span class=\"n\">Employee</span><span class=\"o\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">Resource</span>::<span class=\"n\">new_own</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">))</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">employees</span>::<span class=\"n\">Host</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">State</span><span class=\"w\"> </span><span class=\"p\">{}</span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">MyWorldImports</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">State</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">company_roundtrip_import</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"n\">company</span>: <span class=\"nc\">wasmtime</span>::<span class=\"n\">component</span>::<span class=\"n\">Resource</span><span class=\"o\">&lt;</span><span class=\"n\">Company</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">wasmtime</span>::<span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"n\">wasmtime</span>::<span class=\"n\">component</span>::<span class=\"n\">Resource</span><span class=\"o\">&lt;</span><span class=\"n\">Company</span><span class=\"o\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">name</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">companies</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">company</span><span class=\"p\">.</span><span class=\"n\">rep</span><span class=\"p\">()).</span><span class=\"n\">unwrap</span><span class=\"p\">().</span><span class=\"n\">name</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"Company roundtrip: {name}\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">company</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">employee_roundtrip_import</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"n\">employee</span>: <span class=\"nc\">wasmtime</span>::<span class=\"n\">component</span>::<span class=\"n\">Resource</span><span class=\"o\">&lt;</span><span class=\"n\">Employee</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">wasmtime</span>::<span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"n\">wasmtime</span>::<span class=\"n\">component</span>::<span class=\"n\">Resource</span><span class=\"o\">&lt;</span><span class=\"n\">Employee</span><span class=\"o\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"Employee name: ???\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">employee</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"Starting...\"</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Config</span>::<span class=\"n\">new</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">wasm_component_model</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Engine</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">config</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Store</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">State</span>::<span class=\"n\">default</span><span class=\"p\">());</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">component_bytes</span><span class=\"w\"> </span><span class=\"o\">=</span>\n<span class=\"w\">        </span><span class=\"n\">std</span>::<span class=\"n\">fs</span>::<span class=\"n\">read</span><span class=\"p\">(</span><span class=\"s\">\"../guest-rust/target/wasm32-unknown-unknown/release/guest_rust.wasm\"</span><span class=\"p\">)</span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"s\">\"component bytes\"</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Component</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">store</span><span class=\"p\">.</span><span class=\"n\">engine</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">component_bytes</span><span class=\"p\">).</span><span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"s\">\"create component\"</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Linker</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">.</span><span class=\"n\">engine</span><span class=\"p\">());</span>\n\n<span class=\"w\">    </span><span class=\"n\">MyWorld</span>::<span class=\"n\">add_to_linker</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">state</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">state</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">my_world</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_instance</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">MyWorld</span>::<span class=\"n\">instantiate</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">component</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">linker</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">employees</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">my_world</span><span class=\"p\">.</span><span class=\"n\">example_protocol_employees</span><span class=\"p\">().</span><span class=\"n\">employee</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">employee</span>: <span class=\"nc\">ResourceAny</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">employees</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">call_constructor</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"Mike\"</span><span class=\"p\">.</span><span class=\"n\">into</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"mi\">50_000</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"s\">\"Employee name: {}\"</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"n\">employees</span><span class=\"p\">.</span><span class=\"n\">call_get_name</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">employee</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">()</span>\n<span class=\"w\">    </span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">company1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Resource</span>::<span class=\"n\">new_own</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">.</span><span class=\"n\">data_mut</span><span class=\"p\">().</span><span class=\"n\">companies</span><span class=\"p\">.</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">MyCompany</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">name</span>: <span class=\"s\">\"Company1\"</span><span class=\"p\">.</span><span class=\"n\">into</span><span class=\"p\">(),</span>\n<span class=\"w\">        </span><span class=\"n\">max_salary</span>: <span class=\"mi\">30_000</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">}));</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">employee</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Resource</span>::<span class=\"n\">new_own</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">my_world</span>\n<span class=\"w\">        </span><span class=\"c1\">// .example_protocol_employees()</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">call_find_job</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">employee</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"p\">[</span><span class=\"n\">company1</span><span class=\"p\">])</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"Find first job: {result:?}\"</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">company1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Resource</span>::<span class=\"n\">new_own</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">.</span><span class=\"n\">data_mut</span><span class=\"p\">().</span><span class=\"n\">companies</span><span class=\"p\">.</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">MyCompany</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">name</span>: <span class=\"s\">\"Company1\"</span><span class=\"p\">.</span><span class=\"n\">into</span><span class=\"p\">(),</span>\n<span class=\"w\">        </span><span class=\"n\">max_salary</span>: <span class=\"mi\">30_000</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">}));</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">company2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Resource</span>::<span class=\"n\">new_own</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">.</span><span class=\"n\">data_mut</span><span class=\"p\">().</span><span class=\"n\">companies</span><span class=\"p\">.</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">MyCompany</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">name</span>: <span class=\"s\">\"Company2\"</span><span class=\"p\">.</span><span class=\"n\">into</span><span class=\"p\">(),</span>\n<span class=\"w\">        </span><span class=\"n\">max_salary</span>: <span class=\"mi\">60_000</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">}));</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">employee</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Resource</span>::<span class=\"n\">new_own</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">my_world</span>\n<span class=\"w\">        </span><span class=\"c1\">// .example_protocol_employees()</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">call_find_job</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">employee</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"p\">[</span><span class=\"n\">company1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">company2</span><span class=\"p\">])</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"Find second job: {result:?}\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"s\">\"Second job name: {}\"</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"n\">store</span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">data</span><span class=\"p\">()</span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">companies</span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">.</span><span class=\"n\">unwrap</span><span class=\"p\">().</span><span class=\"n\">rep</span><span class=\"p\">())</span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">unwrap</span><span class=\"p\">()</span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">name</span>\n<span class=\"w\">    </span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n</div></div>\n<p>Now, there are <em>many</em> problems. First, I have to handle the companies myself in a custom <code>ResHolder</code> implementation. I would expect wasmtime to provide resource holding for host resources automatically, just like it provides resource holding for guest resources automatically.</p>\n<p>Next, working with any resources on the host is beyond painful. You get a handle, and need to manually find the resource you want. Wasmtime should manage the resources automatically for you and you should implement methods that takes a proper resource object, just like it is on the quest.</p>\n<p>But what is by far the most \"what the fuck\" thing is that there are actually two \"employee\" resources: one \"host resource\", and one \"guest resource\". How on earth does this happen??</p>\n<p>Also having to store the guest resource as <code>ResourceAny</code> is just sad, no type safety for what kind of resource it is. Is there any plan to properly fix all of this in a future version?</p>",
        "id": 436668853,
        "sender_full_name": "Karel Hrkal (kajacx)",
        "timestamp": 1714648195
    },
    {
        "content": "<p>I perfectly understand why you are horrified seeing this manual process as described in the examples or docs, IIRC. I have been in a similar place when I wrote host code with resources.</p>\n<p>I recall a ResourceTable type provided by wasmtime which made it bearable to me, see <a href=\"https://github.com/cpetig/resource-demo/blob/main/host-wasmtime/src/main.rs\">https://github.com/cpetig/resource-demo/blob/main/host-wasmtime/src/main.rs</a> for the code. Do you consider this adequate? </p>\n<p>But I feel this is or was hidden information, I mostly learned about it in wasmtime's source code.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/cpetig/resource-demo/blob/main/host-wasmtime/src/main.rs\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/993236403b4abfcf51471b0ca6162d4b228430b4/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f333435363837313130303462613965666135313133663265636131613138653466343361643962366362646238613564333239623330326235336562373664652f6370657469672f7265736f757263652d64656d6f&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/cpetig/resource-demo/blob/main/host-wasmtime/src/main.rs\" title=\"resource-demo/host-wasmtime/src/main.rs at main · cpetig/resource-demo\">resource-demo/host-wasmtime/src/main.rs at main · cpetig/resource-demo</a></div><div class=\"message_embed_description\">A demo showing WASM component model resources in various environments - cpetig/resource-demo</div></div></div>",
        "id": 436686644,
        "sender_full_name": "Christof Petig",
        "timestamp": 1714654431
    },
    {
        "content": "<p>Well, the Resource table makes managing resources slightly less painful, but you still need to convert the handle into the resource type instead of getting the resource type directly.</p>\n<p>Also, this doesn't address any of the other issues, but I 100% agree that there aren't really any good tutorials or examples that would explain how to work with resources.</p>",
        "id": 436690642,
        "sender_full_name": "Karel Hrkal (kajacx)",
        "timestamp": 1714655569
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"621586\">@Karel Hrkal (kajacx)</span> without commenting on the substance of your feedback about the API: please stop using this kind of tone. People wrote this code, and they didn't write it to offend you—and it's not okay to be offensive towards them.</p>\n<p>You used a question as the topic for this conversation, which is the right approach. Please stick to that approach in how you engage as well, instead of coming down extremely hard on other people's work</p>",
        "id": 436691078,
        "sender_full_name": "Till Schneidereit",
        "timestamp": 1714655684
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"234973\">@Till Schneidereit</span> Hello and sorry if I was too negative. I honestly don't know if this is the intended way to use resources or not, if I'm missing something (like a function somewhere) I would appreciate some help.</p>",
        "id": 436703021,
        "sender_full_name": "Karel Hrkal (kajacx)",
        "timestamp": 1714658865
    }
]