[
    {
        "content": "<p>While working to get more tests passing for the C# binding generator, I've hit some <code>todo!()</code> cases for <code>Instruction::GuestDeallocate</code> and friends.  They need to do the opposite of <code>cabi_realloc</code>, i.e. pass a <code>realloc</code>'d pointer to  <code>free</code>.  How can I call <code>free</code> from C# code?</p>",
        "id": 435455865,
        "sender_full_name": "Joel Dice",
        "timestamp": 1714074228
    },
    {
        "content": "<p>We drop down to <code>realloc</code> currently, so <code>free</code> would be appropriate.  <a href=\"https://github.com/bytecodealliance/wit-bindgen/blob/118e96f0ef4df353d2e917c6e53fb8de6199f93d/crates/csharp/src/lib.rs#L478-L496\">https://github.com/bytecodealliance/wit-bindgen/blob/118e96f0ef4df353d2e917c6e53fb8de6199f93d/crates/csharp/src/lib.rs#L478-L496</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wit-bindgen/blob/118e96f0ef4df353d2e917c6e53fb8de6199f93d/crates/csharp/src/lib.rs#L478-L496\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/3de388c3020d4e57b48964211d8a8bcca489483c/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f306665643063383233646363306134623133346264613238363137633737386432613961613938656635663561353433326630666132626538623434396439622f62797465636f6465616c6c69616e63652f7769742d62696e6467656e&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wit-bindgen/blob/118e96f0ef4df353d2e917c6e53fb8de6199f93d/crates/csharp/src/lib.rs#L478-L496\" title=\"wit-bindgen/crates/csharp/src/lib.rs at 118e96f0ef4df353d2e917c6e53fb8de6199f93d 路 bytecodealliance/wit-bindgen\">wit-bindgen/crates/csharp/src/lib.rs at 118e96f0ef4df353d2e917c6e53fb8de6199f93d 路 bytecodealliance/wit-bindgen</a></div><div class=\"message_embed_description\">A language binding generator for WebAssembly interface types - bytecodealliance/wit-bindgen</div></div></div>",
        "id": 435465125,
        "sender_full_name": "Scott Waye",
        "timestamp": 1714077977
    },
    {
        "content": "<p>Sure, I understand that part.  What I'm wondering is how to call <code>free</code> from C#.</p>",
        "id": 435465272,
        "sender_full_name": "Joel Dice",
        "timestamp": 1714078047
    },
    {
        "content": "<p>We support NativeAOT's DirectPinvoke function, an example is <a href=\"https://github.com/dotnet/runtimelab/tree/feature/NativeAOT-LLVM/src/tests/nativeaot/SmokeTests/PInvoke\">https://github.com/dotnet/runtimelab/tree/feature/NativeAOT-LLVM/src/tests/nativeaot/SmokeTests/PInvoke</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/dotnet/runtimelab/tree/feature/NativeAOT-LLVM/src/tests/nativeaot/SmokeTests/PInvoke\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/f1e7fa23aa2f80c50dccb3b163848cd29556e6b7/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f373963313865396366633532346563316365656534363566343138623431383138396434616138613334613764346431313861353465666134646634396438312f646f746e65742f72756e74696d656c6162&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/dotnet/runtimelab/tree/feature/NativeAOT-LLVM/src/tests/nativeaot/SmokeTests/PInvoke\" title=\"runtimelab/src/tests/nativeaot/SmokeTests/PInvoke at feature/NativeAOT-LLVM 路 dotnet/runtimelab\">runtimelab/src/tests/nativeaot/SmokeTests/PInvoke at feature/NativeAOT-LLVM 路 dotnet/runtimelab</a></div><div class=\"message_embed_description\">This repo is for experimentation and exploring new ideas that may or may not make it into the main dotnet/runtime repo. - dotnet/runtimelab</div></div></div>",
        "id": 435466937,
        "sender_full_name": "Scott Waye",
        "timestamp": 1714078739
    },
    {
        "content": "<p>Thanks, I'll experiment with that</p>",
        "id": 435467339,
        "sender_full_name": "Joel Dice",
        "timestamp": 1714078899
    },
    {
        "content": "<p>Would we need to do something different for Mono?</p>",
        "id": 435467443,
        "sender_full_name": "Joel Dice",
        "timestamp": 1714078928
    },
    {
        "content": "<p>I dont _think_ so as the c# is standard, but I'm not sure :-)</p>",
        "id": 435468803,
        "sender_full_name": "Scott Waye",
        "timestamp": 1714079549
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"395878\">Scott Waye</span> <a href=\"#narrow/stream/327223-wit-bindgen/topic/Calling.20libc.20functions.20from.20C.23/near/435468803\">said</a>:</p>\n<blockquote>\n<p>I dont _think_ so as the c# is standard, but I'm not sure :-)</p>\n</blockquote>\n<p>If there are differences, we can resolve them.</p>",
        "id": 435481972,
        "sender_full_name": "Larry Ewing",
        "timestamp": 1714087392
    }
]