[
    {
        "content": "<p>The wit documentation <a href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/WIT.md#item-resource\">defines the <code>resource</code>item</a> but this appears to be removed from <code>wit-bindgen</code>. What is the status of this?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/WIT.md#item-resource\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/3e5cd47a5d617034fe2b707367841afcbd2b9fee\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f376531383762333434646632386339633664306339626439363131353332396431346538383265306638616163363431643331303633643734323565643262612f576562417373656d626c792f636f6d706f6e656e742d6d6f64656c)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/WIT.md#item-resource\" title=\"component-model/WIT.md at main · WebAssembly/component-model\">component-model/WIT.md at main · WebAssembly/component-model</a></div><div class=\"message_embed_description\">Repository for design and specification of the Component Model - component-model/WIT.md at main · WebAssembly/component-model</div></div></div>",
        "id": 308998924,
        "sender_full_name": "Nathaniel McCallum",
        "timestamp": 1668090133
    },
    {
        "content": "<p>The status is that resources are a very important feature but are not yet described by the component-model spec. wit-bindgen had a prototype implementation, but it's been removed in order to simplify other component implementation work, and because the semantics of handles are expected to be a little different from what was prototyped.</p>",
        "id": 309925600,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1668451125
    },
    {
        "content": "<p>Luke and others are actively working on the new resource+handle design in the component model, as it's a high priority for a lot of use cases.</p>",
        "id": 309925717,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1668451161
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"254083\">@Dan Gohman</span> Is the expectation to install <code>wit-bindgen</code> from git?</p>",
        "id": 310485039,
        "sender_full_name": "Nathaniel McCallum",
        "timestamp": 1668627342
    },
    {
        "content": "<p>Yes</p>",
        "id": 310486901,
        "sender_full_name": "Lann Martin",
        "timestamp": 1668627976
    },
    {
        "content": "<p>Intentionally (I think) not on <a href=\"http://crates.io\">crates.io</a> because of how unstable it is known to be</p>",
        "id": 310487007,
        "sender_full_name": "Lann Martin",
        "timestamp": 1668628020
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span> I see that world file syntax has landed. Can you give me a pointer to the documentation for that syntax?</p>",
        "id": 311679891,
        "sender_full_name": "Nathaniel McCallum",
        "timestamp": 1669141253
    },
    {
        "content": "<p>I found this: <a href=\"https://github.com/WebAssembly/component-model/blob/8a5669d4b6e534f3cd70a4b90f482ab94e4e891d/design/mvp/WIT.md#item-world\">https://github.com/WebAssembly/component-model/blob/8a5669d4b6e534f3cd70a4b90f482ab94e4e891d/design/mvp/WIT.md#item-world</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/component-model/blob/8a5669d4b6e534f3cd70a4b90f482ab94e4e891d/design/mvp/WIT.md#item-world\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/559af6aa83496a41f2415142bdfa1daeb2aeac52\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f633935393433323036663066633931626237383236386132306165666462333365343337623166323961613433656230363465616235653463333462313031362f576562417373656d626c792f636f6d706f6e656e742d6d6f64656c)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/component-model/blob/8a5669d4b6e534f3cd70a4b90f482ab94e4e891d/design/mvp/WIT.md#item-world\" title=\"component-model/WIT.md at 8a5669d4b6e534f3cd70a4b90f482ab94e4e891d · WebAssembly/component-model\">component-model/WIT.md at 8a5669d4b6e534f3cd70a4b90f482ab94e4e891d · WebAssembly/component-model</a></div><div class=\"message_embed_description\">Repository for design and specification of the Component Model - component-model/WIT.md at 8a5669d4b6e534f3cd70a4b90f482ab94e4e891d · WebAssembly/component-model</div></div></div>",
        "id": 311680327,
        "sender_full_name": "Nathaniel McCallum",
        "timestamp": 1669141387
    },
    {
        "content": "<p>But that document still has resources, etc in the syntax.</p>",
        "id": 311680733,
        "sender_full_name": "Nathaniel McCallum",
        "timestamp": 1669141526
    },
    {
        "content": "<p>I'd recommend reading tests and such for now, it's not documented yet</p>",
        "id": 311681508,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1669141755
    },
    {
        "content": "<p>Has the <code>use</code> keyword been removed?</p>",
        "id": 311682925,
        "sender_full_name": "Nathaniel McCallum",
        "timestamp": 1669142168
    },
    {
        "content": "<p>yes, as part of the implementation of parsing worlds; much like resource, it was removed in anticipation of doing it \"for real\" with a proper spec</p>",
        "id": 311685518,
        "sender_full_name": "Peter Huene",
        "timestamp": 1669143046
    },
    {
        "content": "<p>Is it possible to use a type defined in one interface in another interface?</p>",
        "id": 311687067,
        "sender_full_name": "Nathaniel McCallum",
        "timestamp": 1669143572
    },
    {
        "content": "<p>With <code>use</code> being temporarily removed, no, you'll need to copy/paste</p>",
        "id": 311687522,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1669143694
    },
    {
        "content": "<p>It's expected to not take too long before re-adding <code>use</code></p>",
        "id": 311687551,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1669143703
    },
    {
        "content": "<p>Does <code>use</code> also export the values specified by <code>use</code>?</p>",
        "id": 311687719,
        "sender_full_name": "Nathaniel McCallum",
        "timestamp": 1669143743
    },
    {
        "content": "<p>Sorry I don't know how best to answer that since <code>use</code> isn't currently implemented</p>",
        "id": 311691704,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1669145175
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span> I'm implementing it now. So I'm asking what the preferred implementation should be. Sorry for lack of clarity.</p>",
        "id": 311696584,
        "sender_full_name": "Nathaniel McCallum",
        "timestamp": 1669146739
    },
    {
        "content": "<p>Have you talked with Luke or Brian or others? There's a number of design questions about <code>use</code> which are unresolved which were why the initial implementation was removed and deferred temporarily.</p>",
        "id": 311696733,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1669146787
    },
    {
        "content": "<p>Nope. But I'm happy to chat.</p>",
        "id": 311696849,
        "sender_full_name": "Nathaniel McCallum",
        "timestamp": 1669146832
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span> Which Brian?</p>",
        "id": 311696920,
        "sender_full_name": "Nathaniel McCallum",
        "timestamp": 1669146843
    },
    {
        "content": "<p>this one -- <a href=\"https://github.com/fibonacci1729/\">https://github.com/fibonacci1729/</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/fibonacci1729/\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/29ede38e9a3e3e203c2468062093ef078df495e0\\/68747470733a2f2f617661746172732e67697468756275736572636f6e74656e742e636f6d2f752f373630353136353f763d343f733d343030)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/fibonacci1729/\" title=\"fibonacci1729 - Overview\">fibonacci1729 - Overview</a></div><div class=\"message_embed_description\">fibonacci1729 has 78 repositories available. Follow their code on GitHub.</div></div></div>",
        "id": 311697141,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1669146914
    },
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey Nathaniel, happy to chat</p>",
        "id": 311697174,
        "sender_full_name": "Brian",
        "timestamp": 1669146932
    },
    {
        "content": "<p>I think we'll try to meet next week once everyone's back to talk about things, ahead of time I do not personally have a complete picture of what <code>use</code> should look like</p>",
        "id": 311697188,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1669146937
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253998\">@Luke Wagner</span> ?</p>",
        "id": 311697207,
        "sender_full_name": "Nathaniel McCallum",
        "timestamp": 1669146944
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253998\">@Luke Wagner</span> Are you available?</p>",
        "id": 311697293,
        "sender_full_name": "Nathaniel McCallum",
        "timestamp": 1669146963
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"269506\">@Brian</span> Available now?</p>",
        "id": 311697714,
        "sender_full_name": "Nathaniel McCallum",
        "timestamp": 1669147093
    },
    {
        "content": "<p>I'll be available at the top of the hour</p>",
        "id": 311697792,
        "sender_full_name": "Brian",
        "timestamp": 1669147121
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span> <span class=\"user-mention\" data-user-id=\"253998\">@Luke Wagner</span> <span class=\"user-mention\" data-user-id=\"269506\">@Brian</span>  <a href=\"https://meet.google.com/kjj-rqog-kni\">https://meet.google.com/kjj-rqog-kni</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://meet.google.com/kjj-rqog-kni\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/1183a25140494ae7aab345419814bfa7d7d6dd81\\/68747470733a2f2f666f6e74732e677374617469632e636f6d2f732f692f70726f647563746c6f676f732f6d6565745f3230323071342f76312f7765622d393664702f6c6f676f5f6d6565745f3230323071345f636f6c6f725f32785f7765625f393664702e706e67)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://meet.google.com/kjj-rqog-kni\" title=\"Meet\">Meet</a></div><div class=\"message_embed_description\">Real-time meetings by Google. Using your browser, share your video, desktop, and presentations with teammates and customers.</div></div></div>",
        "id": 311697883,
        "sender_full_name": "Nathaniel McCallum",
        "timestamp": 1669147148
    },
    {
        "content": "<p>sorry I'm not personally available to meet about this today, but y'all are of course welcome to</p>",
        "id": 311697973,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1669147181
    },
    {
        "content": "<p>No worries. I think I have enough to go on given my reading of the AST.</p>",
        "id": 311698068,
        "sender_full_name": "Nathaniel McCallum",
        "timestamp": 1669147204
    },
    {
        "content": "<p>I'm happy to jump in now or later.</p>",
        "id": 311701082,
        "sender_full_name": "Luke Wagner",
        "timestamp": 1669148252
    },
    {
        "content": "<p>Just chatted with Nathaniel and he is working to re-add <code>use</code> to enable sharing types between interfaces defined in the same <code>*.wit</code> file, improving  the usability of <code>*.wit</code> today. This makes sense to me since most of the design questions around <code>use</code> arise from wits that are spread across multiple files.</p>",
        "id": 311704349,
        "sender_full_name": "Brian",
        "timestamp": 1669149382
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"269506\">@Brian</span> Having now torn a bunch of this apart, I think defaulting to \"private\" imports doesn't really make sense. You basically only import types for the purposes of re-exporting them OR using them as params/results for functions. In the later case, the types must be public otherwise the functions aren't callable.</p>",
        "id": 311712367,
        "sender_full_name": "Nathaniel McCallum",
        "timestamp": 1669152514
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"260875\">@Nathaniel McCallum</span> So instead of what we discussed (i.e. re-exporting via a type alias),<br>\nare you suggesting something like:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">interface</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">type</span> <span class=\"nc\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">string</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"n\">interface</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"n\">from</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"n\">interface</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"n\">from</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 311715300,
        "sender_full_name": "Brian",
        "timestamp": 1669153628
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"269506\">@Brian</span> Yes, precisely.</p>",
        "id": 311719340,
        "sender_full_name": "Nathaniel McCallum",
        "timestamp": 1669155281
    },
    {
        "content": "<p>Hi! Apologies for resurrecting this thread, but I was wondering if there had been any progress on same-file type sharing between interfaces. I'd like to share types between my imports and exports, but I'm guessing this isn't supported yet: <code>error: expected </code>type<code> or </code>func<code>, found keyword </code>use<code>` for a </code>use * from common<code> in the </code>interface`.</p>\n<p>Will this be implemented soon, and if not, what's the best way to handle type-sharing? (i.e. before updating, I had duplicate types that I had to manually merge together in the host code. Is that still necessary?)</p>\n<p>Cheers!</p>",
        "id": 320685975,
        "sender_full_name": "Philpax",
        "timestamp": 1673438788
    },
    {
        "content": "<p>Progress is being made! <a href=\"https://github.com/bytecodealliance/wasm-tools/pull/867\">https://github.com/bytecodealliance/wasm-tools/pull/867</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasm-tools/pull/867\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/311e2633ef9718e49180f1aaef98c5e471e9960b\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f333836623932323832656335316533663338636630363731323934316535636463616634393534646430363935306464316238653036353338613337323963652f62797465636f6465616c6c69616e63652f7761736d2d746f6f6c732f70756c6c2f383637)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasm-tools/pull/867\" title=\"WIP: Sync WIT with upstream specification, `use`, packages, and all by alexcrichton · Pull Request #867 · bytecodealliance/wasm-tools\">WIP: Sync WIT with upstream specification, `use`, packages, and all by alexcrichton · Pull Request #867 · bytecodealliance/wasm-tools</a></div><div class=\"message_embed_description\">I'm opening this up now to share some early work on this. This is unfortunately going to again be a very large PR due to the sheer amount of infrastructure required to pull in all the WIT updates, ...</div></div></div>",
        "id": 320686624,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1673438978
    },
    {
        "content": "<p>Oh wow, that's awesome, thank you! Looks promising; I'll see if I can postpone this update until that lands.</p>",
        "id": 320700646,
        "sender_full_name": "Philpax",
        "timestamp": 1673443247
    }
]