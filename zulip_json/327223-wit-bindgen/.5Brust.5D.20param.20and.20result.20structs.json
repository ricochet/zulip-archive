[
    {
        "content": "<p>Hello, I am a little lost with param and result structs generated by wit-bindgen.<br>\nActually, function take in parameters Param structs. Those param struct does not have any ownership on their data, but I don't know how I can construct those param structs before sending them.</p>",
        "id": 339720924,
        "sender_full_name": "bachrc",
        "timestamp": 1678034576
    },
    {
        "content": "<p>with param objects i only have those</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0515</span><span class=\"p\">]</span>: <span class=\"nc\">cannot</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"n\">referencing</span><span class=\"w\"> </span><span class=\"n\">temporary</span><span class=\"w\"> </span><span class=\"n\">value</span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">src</span><span class=\"o\">/</span><span class=\"n\">file_document</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">25</span>:<span class=\"mi\">9</span>\n<span class=\"w\">   </span><span class=\"o\">|</span>\n<span class=\"mi\">25</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\">         </span><span class=\"n\">Document</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"mi\">26</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">             </span><span class=\"n\">identifier</span>: <span class=\"nc\">self</span><span class=\"p\">.</span><span class=\"n\">id</span><span class=\"p\">.</span><span class=\"n\">to_string</span><span class=\"p\">().</span><span class=\"n\">as_str</span><span class=\"p\">(),</span>\n<span class=\"mi\">27</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">             </span><span class=\"n\">fields</span>: <span class=\"kp\">&amp;</span><span class=\"p\">[</span>\n<span class=\"mi\">28</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">                 </span><span class=\"n\">Field</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">name</span>: <span class=\"s\">\"filename\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">value</span>: <span class=\"nc\">Text</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">filename</span><span class=\"p\">.</span><span class=\"n\">to_string</span><span class=\"p\">().</span><span class=\"n\">as_str</span><span class=\"p\">())</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"mi\">29</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">                 </span><span class=\"n\">Field</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">name</span>: <span class=\"s\">\"path\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">value</span>: <span class=\"nc\">Text</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">to_string_lossy</span><span class=\"p\">().</span><span class=\"n\">as_ref</span><span class=\"p\">())</span><span class=\"w\"> </span><span class=\"p\">},</span>\n</code></pre></div>",
        "id": 339722580,
        "sender_full_name": "bachrc",
        "timestamp": 1678035543
    },
    {
        "content": "<p>I cannot construct my param object. Do you have any idea? I am totally stuck</p>",
        "id": 339722680,
        "sender_full_name": "bachrc",
        "timestamp": 1678035607
    },
    {
        "content": "<p>I'm sorry to ask such a \"Rust-ish\" question, but I really tried everything to do these commands</p>",
        "id": 339764150,
        "sender_full_name": "bachrc",
        "timestamp": 1678066972
    },
    {
        "content": "<p>If I inline the param struct in the function call it's okay, but I cannot inline everytime</p>",
        "id": 339764242,
        "sender_full_name": "bachrc",
        "timestamp": 1678067049
    },
    {
        "content": "<p>More context would help in answering your question (a full example source file)</p>",
        "id": 339890801,
        "sender_full_name": "Lann Martin",
        "timestamp": 1678114716
    },
    {
        "content": "<p>Sorry for the delay, I've been busy at work.<br>\nThis is as simple as this code :</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">push_file_to_index</span><span class=\"p\">(</span><span class=\"n\">file</span>: <span class=\"nc\">FileDocument</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">michel_api</span>::<span class=\"n\">new_document_for_index</span><span class=\"p\">(</span><span class=\"s\">\"files\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">DocumentParam</span>::<span class=\"n\">from</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">));</span>\n\n<span class=\"w\">    </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>In another file, I wanted to implement the From trait to the wit generated DocumentParam :</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">impl</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"nb\">From</span><span class=\"o\">&lt;</span><span class=\"n\">FileDocument</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">DocumentParam</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">from</span><span class=\"p\">(</span><span class=\"n\">value</span>: <span class=\"nc\">FileDocument</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">Self</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">DocumentParam</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"n\">identifier</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">value</span><span class=\"p\">.</span><span class=\"n\">filename</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"n\">fields</span>: <span class=\"nc\">vec</span><span class=\"o\">!</span><span class=\"p\">[</span>\n<span class=\"w\">                </span><span class=\"n\">FieldParam</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">name</span>: <span class=\"s\">\"filename\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">value</span>: <span class=\"nc\">Text</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">value</span><span class=\"p\">.</span><span class=\"n\">filename</span><span class=\"p\">.</span><span class=\"n\">to_string</span><span class=\"p\">().</span><span class=\"n\">as_ref</span><span class=\"p\">())</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">                </span><span class=\"n\">FieldParam</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">name</span>: <span class=\"s\">\"path\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">value</span>: <span class=\"nc\">Text</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">value</span><span class=\"p\">.</span><span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">to_string_lossy</span><span class=\"p\">().</span><span class=\"n\">as_ref</span><span class=\"p\">())</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">            </span><span class=\"p\">].</span><span class=\"n\">deref</span><span class=\"p\">(),</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>This is one of the things I tried, but I failed everywhere.</p>\n<p>My FileDocument is a basic struct like this : </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"nc\">FileDocument</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">id</span>: <span class=\"nc\">Uuid</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">filename</span>: <span class=\"nb\">String</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">path</span>: <span class=\"nc\">PathBuf</span>\n<span class=\"p\">}</span>\n</code></pre></div>",
        "id": 340588770,
        "sender_full_name": "bachrc",
        "timestamp": 1678363728
    },
    {
        "content": "<p>There isn't a simple way to do exactly what you want. wit-bindgen param structs borrow their strings which in this case means you have to turn e.g. <code>Uuid</code> into a String that lives long enough to pass to the function call</p>",
        "id": 340700348,
        "sender_full_name": "Lann Martin",
        "timestamp": 1678391784
    },
    {
        "content": "<p>As a couple of options:</p>\n<ul>\n<li>convert <code>FileDocument</code> to a e.g. <code>Document</code> type which owns its fields (which wit-bindgen might already have created for you as <code>DocumentResult</code>, depending on the rest of the wit) and then borrow <code>DocumentParam</code> from _that_</li>\n<li>wrap <code>new_document_for_index</code> in a function that borrows directly from <code>FileDocument</code></li>\n</ul>\n<p>As you say this is more of a general Rust problem and there are lots of ways to accomplish this</p>",
        "id": 340700922,
        "sender_full_name": "Lann Martin",
        "timestamp": 1678391974
    },
    {
        "content": "<p>Thank you for your kind answer, I'm gonna work on this</p>",
        "id": 340807538,
        "sender_full_name": "bachrc",
        "timestamp": 1678441475
    }
]