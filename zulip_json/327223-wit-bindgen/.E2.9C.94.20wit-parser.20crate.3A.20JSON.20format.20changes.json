[
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span> ! I’m adding support for @since and @unstable to <code>wit-bindgen-go</code> and had a couple questions:</p>\n<ol>\n<li><code>wit-bindgen-go</code> shells out to <code>wasm-tools component wit -j</code> to parse WIT into JSON. The addition of feature gates means that the caller must pass in specific <code>--features a,b,c</code> arguments in order for the emitted JSON to faithfully represent  the original WIT. Would you be amenable to a change that effectively enables <code>--all-features</code> when converting the WIT to JSON?</li>\n<li>The JSON representation (via <code>serde</code>) for the <code>Stability</code> enum is inconsistent with other enums used in a <code>Resolve</code>, e.g. your commit added <code>tag = \"type\"</code>, which emits the following JSON:</li>\n</ol>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"unstable\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">\"feature\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"foo\"</span><span class=\"w\"> </span><span class=\"p\">}</span>\n</code></pre></div>\n<p>TL;DR: In the Go representation (<code>wasm-tools-go</code>), enums are represented as a Go interface, with a set of types that implement that interface. Parsing the JSON with <code>tag = \"type\"</code> is trickier because it requires an intermediate representation before finalizing to one of the cases.</p>\n<p>Would you accept a patch that makes it consistent with other enums? e.g.:</p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nt\">\"unstable\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nt\">\"feature\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"foo\"</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"p\">}</span>\n</code></pre></div>\n<p>The change is effectively changing crates/wit-parser/lib.rs:830 to:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[cfg_attr(feature = </span><span class=\"s\">\"serde\"</span><span class=\"cp\">, serde(rename_all = </span><span class=\"s\">\"lowercase\"</span><span class=\"cp\">))]</span>\n</code></pre></div>",
        "id": 443516048,
        "sender_full_name": "Randy Reddig",
        "timestamp": 1717876790
    },
    {
        "content": "<p>Both changes sound reasonable to me! I was thinking as well that we'll want <code>--all-features</code> but I ended up forgetting to add that, so would be great to add <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span>. Also happy to change the JSON output if you find an alternative structure easier to parse. Would you like to send a PR for these changes? If not that's ok and I can try to find some time next week as well</p>",
        "id": 443542909,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1717898891
    },
    {
        "content": "<p>JSON schema PR done: <a href=\"https://github.com/bytecodealliance/wasm-tools/pull/1598\">https://github.com/bytecodealliance/wasm-tools/pull/1598</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasm-tools/pull/1598\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/bf6c933ff59b909c83cc8fd59403c285a8387d95/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f363764393763653437386663356437636538323036623139333530636165373531353935386437616237343263383138356164643862343162626532336531642f62797465636f6465616c6c69616e63652f7761736d2d746f6f6c732f70756c6c2f31353938&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasm-tools/pull/1598\" title=\"wit-parser: change serde format for enum Stability by ydnar · Pull Request #1598 · bytecodealliance/wasm-tools\">wit-parser: change serde format for enum Stability by ydnar · Pull Request #1598 · bytecodealliance/wasm-tools</a></div><div class=\"message_embed_description\">This PR makes the JSON representation of enum Stability consistent with other enums in this crate, using the externally tagged representation: https://serde.rs/enum-representations.html#externally-...</div></div></div>",
        "id": 443629057,
        "sender_full_name": "Randy Reddig",
        "timestamp": 1717961047
    },
    {
        "content": "<p>And second PR that adds <code>--all-features</code>. Confirmed this works via uncommitted changes to <code>wit-bindgen-go</code>. Happy to take feedback on the coding style.</p>\n<p><a href=\"https://github.com/bytecodealliance/wasm-tools/pull/1599\">https://github.com/bytecodealliance/wasm-tools/pull/1599</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasm-tools/pull/1599\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/164a11eac7527a7d42637880ab43862452486475/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f343765373762323332663363326431663630303033646565376331653037623239346366633137366364336164303838373533623363326533303262363330642f62797465636f6465616c6c69616e63652f7761736d2d746f6f6c732f70756c6c2f31353939&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasm-tools/pull/1599\" title=\"wasm-tools, wit-parser: add --all-features to enable all features gated with @unstable by ydnar · Pull Request #1599 · bytecodealliance/wasm-tools\">wasm-tools, wit-parser: add --all-features to enable all features gated with @unstable by ydnar · Pull Request #1599 · bytecodealliance/wasm-tools</a></div><div class=\"message_embed_description\">This PR adds the --all-features option to wasm-tools component, primarily so wasm-tools component wit -j can emit a JSON representation of the original WIT with all @unstable gated features intact....</div></div></div>",
        "id": 443638577,
        "sender_full_name": "Randy Reddig",
        "timestamp": 1717965773
    },
    {
        "content": "<p>Thanks for this!</p>",
        "id": 443792112,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1718031945
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"639636\">Randy Reddig</span> has marked this topic as resolved.</p>",
        "id": 443867223,
        "sender_full_name": "Notification Bot",
        "timestamp": 1718054840
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span> when’s the next <code>warm-tools </code> scheduled release?</p>",
        "id": 443868775,
        "sender_full_name": "Randy Reddig",
        "timestamp": 1718055595
    },
    {
        "content": "<p>Ah I tried to document that <a href=\"https://github.com/bytecodealliance/wasm-tools?tab=readme-ov-file#versioning-and-releases\">here</a> in that there's no release cadence right now, it's all request-based at this time, but I can go kick it off</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasm-tools?tab=readme-ov-file#versioning-and-releases\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/3d2b814cc16a90d9cb7ca7b02724f6137b697bb8/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f313965656230363638313830623566336336663037643964326562643136366662316538363238636132653930633536633065343537303733333333626334652f62797465636f6465616c6c69616e63652f7761736d2d746f6f6c73&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasm-tools?tab=readme-ov-file#versioning-and-releases\" title=\"GitHub - bytecodealliance/wasm-tools: CLI and Rust libraries for low-level manipulation of WebAssembly modules\">GitHub - bytecodealliance/wasm-tools: CLI and Rust libraries for low-level manipulation of WebAssembly modules</a></div><div class=\"message_embed_description\"> CLI and Rust libraries for low-level manipulation of WebAssembly modules  - GitHub - bytecodealliance/wasm-tools: CLI and Rust libraries for low-level manipulation of WebAssembly modules</div></div></div>",
        "id": 443868911,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1718055642
    },
    {
        "content": "<p>apologies I forgot to hit approve until just now</p>",
        "id": 443876746,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1718059622
    }
]