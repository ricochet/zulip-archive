[
    {
        "content": "<p>I suspect that is a wasm-tools issue, but I thought I'd ask anyway. I was following the README example in the wit-bindgen repo and (apart from some <a href=\"https://github.com/bytecodealliance/wit-bindgen/pull/512\">minor fixups</a>) I ended up with a valid wasm file for the component. I downloaded the WASI preview adapter wasm as well (also valid wasm). But once I linked them using <code>wasm-tools</code>, I get a Wasm file with an invalid magic number that is also not accepted by wasmtime.</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$<span class=\"w\"> </span>wasm-tools<span class=\"w\"> </span>component<span class=\"w\"> </span>new<span class=\"w\"> </span>./target/wasm32-wasi/debug/wit.wasm<span class=\"w\"> </span>-o<span class=\"w\"> </span>comp.wasm<span class=\"w\"> </span>--adapt<span class=\"w\"> </span>./wasi_snapshot_preview1.wasm\n\n$<span class=\"w\"> </span>file<span class=\"w\"> </span>comp.wasm\ncomp.wasm:<span class=\"w\"> </span>WebAssembly<span class=\"w\"> </span><span class=\"o\">(</span>wasm<span class=\"o\">)</span><span class=\"w\"> </span>binary<span class=\"w\"> </span>module<span class=\"w\"> </span>version<span class=\"w\"> </span>0x1000c\n\n$<span class=\"w\"> </span>wasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>comp.wasm\nError:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>run<span class=\"w\"> </span>main<span class=\"w\"> </span>module<span class=\"w\"> </span><span class=\"sb\">`</span>comp.wasm<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">    </span><span class=\"m\">0</span>:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>parse<span class=\"w\"> </span>WebAssembly<span class=\"w\"> </span>module\n<span class=\"w\">    </span><span class=\"m\">1</span>:<span class=\"w\"> </span>Invalid<span class=\"w\"> </span>input<span class=\"w\"> </span>WebAssembly<span class=\"w\"> </span>code<span class=\"w\"> </span>at<span class=\"w\"> </span>offset<span class=\"w\"> </span><span class=\"m\">4</span>:<span class=\"w\"> </span>unknown<span class=\"w\"> </span>binary<span class=\"w\"> </span>version\n</code></pre></div>\n<p>Am I holding it wrong or is this a bug?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wit-bindgen/pull/512\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/b704163c702bd8840b18a9d6853e225c6a7d27b1\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f313131646438623661326234663163626631353465393766326630343837626133666366373161323231323633326263353063336163303661636261666462372f62797465636f6465616c6c69616e63652f7769742d62696e6467656e2f70756c6c2f353132)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wit-bindgen/pull/512\" title=\"Minor fixes for the README by surma · Pull Request #512 · bytecodealliance/wit-bindgen\">Minor fixes for the README by surma · Pull Request #512 · bytecodealliance/wit-bindgen</a></div><div class=\"message_embed_description\">A language binding generator for WebAssembly interface types - Minor fixes for the README by surma · Pull Request #512 · bytecodealliance/wit-bindgen</div></div></div>",
        "id": 328441643,
        "sender_full_name": "Surma",
        "timestamp": 1676632314
    },
    {
        "content": "<p>You likely need to build wasmtime from source to get an updated decoder</p>",
        "id": 328483503,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1676644141
    },
    {
        "content": "<p>So <code>0x1000c</code> is intentional, yea?</p>",
        "id": 328487501,
        "sender_full_name": "Surma",
        "timestamp": 1676645137
    },
    {
        "content": "<p>... In retrospect, I probably should have tried <code>wasm-tools parse</code>, which works just fine</p>",
        "id": 328487688,
        "sender_full_name": "Surma",
        "timestamp": 1676645183
    },
    {
        "content": "<p>yeah that's the expected current version</p>",
        "id": 328491514,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1676646208
    },
    {
        "content": "<p>So I built <code>wasm-tools</code> with <code>-F component</code> and built <code>wasmtime</code> with  <code>-F component-model</code>, which has slightly altered the error message, but it is still failing to run the module:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>wasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>--wasm-features<span class=\"w\"> </span>component-model<span class=\"w\"> </span>./comp.wasm\nError:<span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span>you<span class=\"err\">'</span>re<span class=\"w\"> </span>trying<span class=\"w\"> </span>to<span class=\"w\"> </span>run<span class=\"w\"> </span>a<span class=\"w\"> </span>precompiled<span class=\"w\"> </span>module,<span class=\"w\"> </span>pass<span class=\"w\"> </span>--allow-precompiled\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">    </span><span class=\"m\">0</span>:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>parse<span class=\"w\"> </span>WebAssembly<span class=\"w\"> </span>module\n<span class=\"w\">    </span><span class=\"m\">1</span>:<span class=\"w\"> </span>Unsupported<span class=\"w\"> </span>feature:<span class=\"w\"> </span>component<span class=\"w\"> </span>model\n</code></pre></div>",
        "id": 328496403,
        "sender_full_name": "Surma",
        "timestamp": 1676647419
    },
    {
        "content": "<p>juust to make sure since I made that error a few days ago and somebody helped me: are you certain you use the latest git versions of everything? Cargo.lock remembers which revision it used and won't let cargo fetch newer code unless you delete the lockfile</p>",
        "id": 328496920,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1676647548
    },
    {
        "content": "<p>I’m specifying full paths to my local build artifacts, so I don’t think  that’s the issue here. But let me triple-check</p>",
        "id": 328497341,
        "sender_full_name": "Surma",
        "timestamp": 1676647637
    },
    {
        "content": "<p>I think this only applies if you depend directly on git in Cargo.toml, right</p>",
        "id": 328497417,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1676647663
    },
    {
        "content": "<p>that error message indicates you're not passing <code>--wasm-features component-model</code> to the runtime of wasmtime, but you clearly are, so I'm not entirely sure</p>",
        "id": 328501553,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1676648715
    },
    {
        "content": "<p>it may be that enabling the <code>component-model</code> feature of the CLI didn't work or the <code>wasmtime</code> executable you're using isn't the one that you built?</p>",
        "id": 328501627,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1676648729
    },
    {
        "content": "<p>Yeah that’s why I’m so confused. I am specifying the full path to the wasm binary:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>~/src/github.com/bytecodealliance/wasmtime/target/release/wasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>--wasm-features<span class=\"w\"> </span>component-model<span class=\"w\"> </span>./comp.wasm\n</code></pre></div>",
        "id": 328505555,
        "sender_full_name": "Surma",
        "timestamp": 1676649724
    },
    {
        "content": "<p>The CLI even lists the component model in the help</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$<span class=\"w\"> </span>~/src/github.com/bytecodealliance/wasmtime/target/release/wasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>--help<span class=\"w\">                                                                                   </span><span class=\"m\">130</span><span class=\"w\"> </span>↵\nwasmtime-run\nRuns<span class=\"w\"> </span>a<span class=\"w\"> </span>WebAssembly<span class=\"w\"> </span>module\n\nUSAGE:\n<span class=\"w\">    </span>wasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span><span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span><span class=\"w\"> </span>&lt;MODULE&gt;<span class=\"w\"> </span><span class=\"o\">[</span>--<span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span>ARGS<span class=\"o\">]</span>...\n\n...<span class=\"w\"> </span>bla<span class=\"w\"> </span>bla<span class=\"w\"> </span>bla<span class=\"w\"> </span>...\n\nSupported<span class=\"w\"> </span>values<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"sb\">`</span>--wasm-features<span class=\"sb\">`</span>:\n\nall<span class=\"w\">               </span>enables<span class=\"w\"> </span>all<span class=\"w\"> </span>supported<span class=\"w\"> </span>WebAssembly<span class=\"w\"> </span>features\nbulk-memory<span class=\"w\">       </span>enables<span class=\"w\"> </span>support<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>bulk<span class=\"w\"> </span>memory<span class=\"w\"> </span>instructions\nmulti-memory<span class=\"w\">      </span>enables<span class=\"w\"> </span>support<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>the<span class=\"w\"> </span>multi-memory<span class=\"w\"> </span>proposal\nmulti-value<span class=\"w\">       </span>enables<span class=\"w\"> </span>support<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>multi-value<span class=\"w\"> </span>functions\nreference-types<span class=\"w\">   </span>enables<span class=\"w\"> </span>support<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>reference<span class=\"w\"> </span>types\nsimd<span class=\"w\">              </span>enables<span class=\"w\"> </span>support<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>proposed<span class=\"w\"> </span>SIMD<span class=\"w\"> </span>instructions\nthreads<span class=\"w\">           </span>enables<span class=\"w\"> </span>support<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>WebAssembly<span class=\"w\"> </span>threads\nmemory64<span class=\"w\">          </span>enables<span class=\"w\"> </span>support<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"m\">64</span>-bit<span class=\"w\"> </span>memories\ncomponent-model<span class=\"w\">   </span>enables<span class=\"w\"> </span>support<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>the<span class=\"w\"> </span>component<span class=\"w\"> </span>model<span class=\"w\">            </span>&lt;---<span class=\"w\"> </span>!!\n\n...<span class=\"w\"> </span>bla<span class=\"w\"> </span>bla<span class=\"w\"> </span>bla\n</code></pre></div>",
        "id": 328505839,
        "sender_full_name": "Surma",
        "timestamp": 1676649797
    },
    {
        "content": "<p>hm that may be a bug somewhere else then, can you share the component you have?</p>",
        "id": 328507259,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1676650149
    },
    {
        "content": "<p>Literally the stuff created by following the README. Here’s the files that I am using:</p>\n<ul>\n<li><a href=\"/user_uploads/15107/j7_l-XI5j2I3rYs_26-VxrDF/comp.wasm\">comp.wasm</a>  (output of <code>wasm-tools component new...</code>)</li>\n<li><a href=\"/user_uploads/15107/tWjjbRMU4sIzgA021UoTwd9O/wasi_snapshot_preview1.wasm\">wasi_snapshot_preview1.wasm</a> </li>\n<li><a href=\"/user_uploads/15107/TcCwa9fUmpcz0zmRhbfXsxx_/wit.wasm\">wit.wasm</a> (output of <code>cargo build --target=wasm32-wasi</code>)</li>\n</ul>",
        "id": 328507925,
        "sender_full_name": "Surma",
        "timestamp": 1676650333
    },
    {
        "content": "<p>oh sorry I remember now, <code>wasmtime run</code> doens't have support for components</p>",
        "id": 328509155,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1676650642
    },
    {
        "content": "<p>and that's a bad error message I think of compiling a component with a <code>Module</code></p>",
        "id": 328509235,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1676650663
    },
    {
        "content": "<p>Oh, I am just now grasping that wasmtime-the-crate can run components, but wasmtime-the-cli can not (yet). So I guess I have to build my own thing for now</p>",
        "id": 328516693,
        "sender_full_name": "Surma",
        "timestamp": 1676652648
    },
    {
        "content": "<p>yeah this is largely blocked on more WASI support and stabilization</p>",
        "id": 328517613,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1676652884
    },
    {
        "content": "<p>the work in the preview2-prototyping repository will eventually move into the wasmtime repository and there'll be a similar set up to <code>wasi-common</code></p>",
        "id": 328517668,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1676652901
    },
    {
        "content": "<p>and once there's support for WIT-defined WASI APIs then we'll add CLI support</p>",
        "id": 328517707,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1676652912
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span> - Is this still the case \"wasmtime run doens't have support for components\"</p>",
        "id": 373150465,
        "sender_full_name": "Mikkel Mørk Hegnhøj",
        "timestamp": 1688724301
    },
    {
        "content": "<p>I don't see the feature in <code>wasmtime run --help</code></p>",
        "id": 373150581,
        "sender_full_name": "Mikkel Mørk Hegnhøj",
        "timestamp": 1688724326
    },
    {
        "content": "<p>Yes, that is still the case. The preview2 implementation still ongoing - I'm guessing CLI support wouldn't come until that is (more) complete.</p>",
        "id": 373201762,
        "sender_full_name": "Lann Martin",
        "timestamp": 1688734651
    },
    {
        "content": "<p>Yes wasmtime doesn't currently support components in the CLI, and that'll get enabled when preview2 support is ready</p>",
        "id": 373242919,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1688742563
    }
]