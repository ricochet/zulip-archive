[
    {
        "content": "<p>Hey, I'm trying to use wit-bindgen to create a module that will be used in both node and python, but currently I an error <code>thread '&lt;unnamed&gt;' panicked at 'called `Option::unwrap()` on a `None` value', crates/c-api/src/linker.rs:105:80</code> when I try to call any function in the generated bindings. I hope we can use this as a tool until wasm-bindgen gets back into wasmtime-py</p>",
        "id": 288911782,
        "sender_full_name": "Jens Gåsemyr Magnus",
        "timestamp": 1657268772
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"264278\">@bjorn3</span> answered the underlying issue here, was context needs to be set.</p>\n<p><a href=\"#narrow/stream/217126-wasmtime/topic/wasmtime-py.20canonical_abi_realloc.20failure/near/288922974\">https://bytecodealliance.zulipchat.com/#narrow/stream/217126-wasmtime/topic/wasmtime-py.20canonical_abi_realloc.20failure/near/288922974</a></p>",
        "id": 288948466,
        "sender_full_name": "Jens Gåsemyr Magnus",
        "timestamp": 1657290992
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"512924\">Jens Gåsemyr Magnus</span> has marked this topic as resolved.</p>",
        "id": 288972733,
        "sender_full_name": "Notification Bot",
        "timestamp": 1657302851
    },
    {
        "content": "<p>I was looking at the <code>wit-parser</code> crate  and noticed the <code>Interface</code>Token/AST. Is this still a thing or a future thing?</p>",
        "id": 289389811,
        "sender_full_name": "Brian",
        "timestamp": 1657662317
    },
    {
        "content": "<p>At the moment, they're a potential future thing.</p>",
        "id": 289391419,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1657663261
    },
    {
        "content": "<p>Hey everyone, love the project! I am looking to implement rust plugins where the guests and host would be written in rust. The idea is to have an indexer (server listening to blockhain events) that can use plugins that handle writing to different data stores. This would be an open source project for anyone to run their own indexers, so I want to confirm the rust APIs are stable enough to use for this purpose. For a little more information on the application, I essentially just need a single function for interfacing but it would need to transfer a large nested complex type consisting of Options, Vectors, Strings, [u8]'s, Enums, and a bunch of primitives. Thanks</p>",
        "id": 309022730,
        "sender_full_name": "Cole Roberts",
        "timestamp": 1668096650
    },
    {
        "content": "<p>Options, Strings, [u8]s, Enums, and primitive values are all usable at this point. Whether the APIs are stable enough probably depends on your specific needs.</p>",
        "id": 309926083,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1668451275
    }
]