[
    {
        "content": "<p>Hello, very much a newbie with wasi32 and wasm in general - used to using wasm-pack. Struggling to export rust compiled to wasm32-wasi into javascript. Wondering if I am doing the right thing using wit-bindgen for this purpose?</p>",
        "id": 372724249,
        "sender_full_name": "Jack Gilcrest",
        "timestamp": 1688595733
    },
    {
        "content": "<p>wit-bindgen is part of the picture here, however there are now also higher-level tools that do more of the work for you. <a href=\"https://github.com/bytecodealliance/cargo-component/\">cargo-component</a> can produce wasm components written in Rust, and <a href=\"https://github.com/bytecodealliance/jco\">jco</a> can help them run in a JS environment so you can use them from JS.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/cargo-component/\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/540d40fca5b090daa35fb93f878259488dd43f3d\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f373831323033373332346239646437383862323338666638313137666530613964306165623063363664333231306530363063353039613430343931653935612f62797465636f6465616c6c69616e63652f636172676f2d636f6d706f6e656e74)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/cargo-component/\" title=\"GitHub - bytecodealliance/cargo-component: A Cargo subcommand for creating WebAssembly components based on the component model proposal.\">GitHub - bytecodealliance/cargo-component: A Cargo subcommand for creating WebAssembly components based on the component model proposal.</a></div><div class=\"message_embed_description\">A Cargo subcommand for creating WebAssembly components based on the component model proposal. - GitHub - bytecodealliance/cargo-component: A Cargo subcommand for creating WebAssembly components bas...</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/jco\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/31bcdf6ef4d99e588dd352a6084d26d69fc250cf\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f393665393038383735313735333832383064663463393266363934613162383231656536383761616462393964333362643164633234653464393836616237342f62797465636f6465616c6c69616e63652f6a636f)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/jco\" title=\"GitHub - bytecodealliance/jco: JavaScript tooling for working with WebAssembly Components\">GitHub - bytecodealliance/jco: JavaScript tooling for working with WebAssembly Components</a></div><div class=\"message_embed_description\">JavaScript tooling for working with WebAssembly Components - GitHub - bytecodealliance/jco: JavaScript tooling for working with WebAssembly Components</div></div></div>",
        "id": 372724854,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1688596076
    },
    {
        "content": "<p><a href=\"https://www.youtube.com/watch?v=JCIwpc7x4jU\">This video</a> includes a walkthrough of using these tools together.</p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"JCIwpc7x4jU\" href=\"https://www.youtube.com/watch?v=JCIwpc7x4jU\"><img src=\"https://uploads.zulipusercontent.net/3164acb8e44c3966d0ea6f94ed1208f507a90e41/68747470733a2f2f692e7974696d672e636f6d2f76692f4a43497770633778346a552f64656661756c742e6a7067\"></a></div>",
        "id": 372724981,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1688596141
    },
    {
        "content": "<p>awesome! digging in now, tysm</p>",
        "id": 372725610,
        "sender_full_name": "Jack Gilcrest",
        "timestamp": 1688596451
    },
    {
        "content": "<p>Hello <span class=\"user-mention\" data-user-id=\"630245\">@Jack Gilcrest</span>, to run rust-compiled-to-wasm with wit bindgen, you can check out <a href=\"https://github.com/kajacx/wasm-playground/tree/wit-bindgen\">this example repo</a> at the <code>wit-bindgen</code> branch.</p>\n<p>In folder <code>plguin-rust</code>, you have the Rust code that will run in the browser, and in <code>runtime-web-jco</code> you have the JS implementation. The code is very messy becauseI was testing something, but you should be able to read how to put it together. See also the <code>build-and-run-web.sh</code> script.</p>\n<p>One note is that this is using <code>wasm32-unknown-unkown</code> target and not wasi, so this might not work for you if you need wasi capabilities.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/kajacx/wasm-playground/tree/wit-bindgen\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/b4537c76ff72a9a422892ba16537c87a11a28fe3\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f353735333536656563356263346461623263373336633165636533353633373436393863646231613937353133393430343338646632353131363165376364632f6b616a6163782f7761736d2d706c617967726f756e64)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/kajacx/wasm-playground/tree/wit-bindgen\" title=\"GitHub - kajacx/wasm-playground at wit-bindgen\">GitHub - kajacx/wasm-playground at wit-bindgen</a></div><div class=\"message_embed_description\">Various projects related to WASM, each in it's own branch, so that I don't have 50 repositories. - GitHub - kajacx/wasm-playground at wit-bindgen</div></div></div>",
        "id": 372791581,
        "sender_full_name": "Karel Hrkal (kajacx)",
        "timestamp": 1688627720
    }
]