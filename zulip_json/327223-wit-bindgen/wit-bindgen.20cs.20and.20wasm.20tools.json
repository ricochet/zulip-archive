[
    {
        "content": "<p>Hi, we are continuing the effort for cs-bind-gen that we started at componentize the world with <span class=\"user-mention\" data-user-id=\"443063\">@Dan Chiarlone (danbugs)</span>. </p>\n<p>We are trying the <a href=\"https://github.com/bytecodealliance/component-docs/tree/main/component-model/examples/tutorial\">demo from the component docs</a> to test a simple example but getting the following error.  We've build a csharp component for the Adder world but after generating the wasi component with --adapt we get an error.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasm</span><span class=\"o\">-</span><span class=\"n\">tools</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"w\"> </span><span class=\"n\">embed</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">world</span><span class=\"w\"> </span><span class=\"n\">adder</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"o\">/</span><span class=\"n\">calculator</span><span class=\"p\">.</span><span class=\"n\">wit</span><span class=\"w\"> </span><span class=\"n\">Adder_CS</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">Debug</span><span class=\"o\">/</span><span class=\"n\">net7</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"o\">/</span><span class=\"n\">Adder_CS</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">embed</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"n\">wasm</span><span class=\"o\">-</span><span class=\"n\">tools</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"w\"> </span><span class=\"n\">new</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">embed</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">adapt</span><span class=\"w\"> </span><span class=\"n\">wasi_snapshot_preview1</span><span class=\"p\">.</span><span class=\"n\">reactor</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">component</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"n\">wasm</span><span class=\"o\">-</span><span class=\"n\">tools</span><span class=\"w\"> </span><span class=\"n\">validate</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">component</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">features</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"o\">-</span><span class=\"n\">model</span>\n#<span class=\"n\">success</span>\n\n<span class=\"n\">wasm</span><span class=\"o\">-</span><span class=\"n\">tools</span><span class=\"w\"> </span><span class=\"n\">compose</span><span class=\"w\"> </span><span class=\"n\">calculator</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">calculator</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">d</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">component</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">composed</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"n\">wasm</span><span class=\"o\">-</span><span class=\"n\">tools</span><span class=\"w\"> </span><span class=\"n\">compose</span><span class=\"w\"> </span><span class=\"n\">command</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">command</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">d</span><span class=\"w\"> </span><span class=\"n\">composed</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">command</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"o\">**</span><span class=\"n\">error</span>: <span class=\"nc\">cannot</span><span class=\"w\"> </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">instance</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"n\">name</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasi</span>:<span class=\"nc\">io</span><span class=\"o\">/</span><span class=\"n\">streams</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"n\">instantiation</span><span class=\"w\"> </span><span class=\"n\">argument</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">composed</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">because</span><span class=\"w\"> </span><span class=\"n\">it</span><span class=\"w\"> </span><span class=\"n\">conflicts</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"n\">imported</span><span class=\"w\"> </span><span class=\"n\">instantiation</span><span class=\"w\"> </span><span class=\"n\">argument</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"cp\">$input</span><span class=\"err\">`</span><span class=\"o\">**</span>\n</code></pre></div>\n<p>We determined this  instantiation argument  is coming after running <code>wasm-tools component new main.embed.wasm --adapt wasi_snapshot_preview1.reactor.wasm</code>.  Any ideas what might be going wrong?  We don't see this output when using the Rust Adder Component.</p>",
        "id": 390814836,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1694645353
    },
    {
        "content": "<p>Without knowing many details here, is that perhaps the adapters and/or WASI APIs being out-of-sync? WASI is defined by the <code>wasi_snapshot_preview1.reactor.wasm</code> argument you're providing but the <code>*/target/wasm32-wasi/release/*.wasm</code> files, which I'm assuming are created with <code>cargo component</code>, additionally have their own adapter inside of them. If they all disagree on how WASI is defined it may cause that error</p>",
        "id": 390815449,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1694645741
    },
    {
        "content": "<p>you can test this out I think by <a href=\"https://github.com/bytecodealliance/cargo-component/tree/main/adapters/134dddc\">using the adapters from <code>cargo component</code></a> rather than those downloaded from the <code>dev</code> release of Wasmtime (unless you're already doing this in which case ignore me)</p>",
        "id": 390815529,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1694645776
    },
    {
        "content": "<p>we can try that, Is there any to see those versions in the components themselves?</p>",
        "id": 390815648,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1694645870
    },
    {
        "content": "<p>oh there is! if you do <code>wasm-tools print</code> you can hunt for <code>@producers</code> which I think should have a git rev</p>",
        "id": 390815714,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1694645893
    },
    {
        "content": "<p>nope I take that back, looks like I may be lying</p>",
        "id": 390815750,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1694645934
    },
    {
        "content": "<p>I don't think there's an easy way to learn that, no, but that is a really good idea!</p>",
        "id": 390815784,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1694645968
    },
    {
        "content": "<p>Might even add that to the compose, if those versions don't match then give warning or error?</p>",
        "id": 390815918,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1694646025
    },
    {
        "content": "<p>Ok so using the cargo component <code>wasi_snapshot_preview1.reactor.wasm</code> got past that error but now we are getting </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">W</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"o\">-</span><span class=\"n\">model</span><span class=\"w\"> </span><span class=\"n\">command</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"n\">add</span>\n<span class=\"n\">Error</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">command</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"err\">`</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"mi\">0</span>: <span class=\"nc\">import</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasi</span>:<span class=\"nc\">io</span><span class=\"o\">/</span><span class=\"n\">streams</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">wrong</span><span class=\"w\"> </span><span class=\"k\">type</span>\n    <span class=\"mi\">1</span>: <span class=\"nc\">instance</span><span class=\"w\"> </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">write</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">wrong</span><span class=\"w\"> </span><span class=\"k\">type</span>\n    <span class=\"mi\">2</span>: <span class=\"nc\">type</span><span class=\"w\"> </span><span class=\"n\">mismatch</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"n\">results</span>\n<span class=\"w\">    </span><span class=\"mi\">3</span>: <span class=\"nc\">expected</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"o\">-</span><span class=\"n\">tuple</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"o\">-</span><span class=\"n\">tuple</span>\n</code></pre></div>",
        "id": 390816324,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1694646302
    },
    {
        "content": "<p>we are using the dev version of the wasmtime executable, should we be using the 12.0.1 release version?</p>",
        "id": 390816638,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1694646501
    },
    {
        "content": "<p>ah ok yeah that's definitely mismatched WASI definitions</p>",
        "id": 390817088,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1694646834
    },
    {
        "content": "<p>12.0.1 doesn't have component model support in the CLI</p>",
        "id": 390817140,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1694646845
    },
    {
        "content": "<p>the 13.0.1 release should work though, but you'll still need to make sure all adapters are in sync</p>",
        "id": 390817172,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1694646869
    },
    {
        "content": "<p>where do we get 13?  We built from main and ended up with version 14. I don't see any tags for 13</p>",
        "id": 390817371,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1694647016
    },
    {
        "content": "<p>oh I see a branch release-13.0.0</p>",
        "id": 390817496,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1694647101
    },
    {
        "content": "<p>is there a commit that would be 13.0.1?  we are still having issues after building from the release-13.0.0 branch</p>",
        "id": 390818475,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1694647780
    },
    {
        "content": "<p>ok, we went to the commit <a href=\"https://github.com/bytecodealliance/wasmtime/commit/134dddc\">https://github.com/bytecodealliance/wasmtime/commit/134dddc</a> and we are now executing the wasm module</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/commit/134dddc\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/eef2c6707e53a2c9938694749ff5374dc87c95b6\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f316139643361656538383361646365623530373965383162616134636263623930646261333430333262613065366234653234613331373230646134313261352f62797465636f6465616c6c69616e63652f7761736d74696d652f636f6d6d69742f31333464646463386465356639303131616137653463663330636238653966396661343834653837)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/commit/134dddc\" title=\"riscv64: Load constants from the constant pool (#6933) · bytecodealliance/wasmtime@134dddc\">riscv64: Load constants from the constant pool (#6933) · bytecodealliance/wasmtime@134dddc</a></div><div class=\"message_embed_description\">* riscv64: Use `Inst::load_u64_constant` when loading load offsets\n\n* riscv64: Load ISLE constants from pool\n\n* riscv64: Delete `offset32_imm`\n\n* riscv64: Delete `pack_float_rounding_mode`\n\n* riscv...</div></div></div>",
        "id": 390819224,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1694648244
    },
    {
        "content": "<p>this matched to the cargo component version</p>",
        "id": 390819262,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1694648266
    },
    {
        "content": "<p>Ah yeah that works as well, but 13 isn't released yet and the branch has what will become the release in a week on the 20th</p>",
        "id": 390819444,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1694648373
    },
    {
        "content": "<p>thanks we can execute modules now, but our module has a bug in it.  Going to look into that tomorrow, are there wasm debugging tools? we have a stack trace but its says things are mostly &lt;unknown&gt;</p>",
        "id": 390820962,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1694649437
    },
    {
        "content": "<p>Currently stack traces are the main debugging, and it's up to your compiler to fill in the unknown</p>",
        "id": 390822010,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1694650229
    },
    {
        "content": "<p>With C/C++ that's -g</p>",
        "id": 390822015,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1694650238
    },
    {
        "content": "<p>NativveAot-llvm will populate the stack trace.</p>",
        "id": 390908019,
        "sender_full_name": "Scott Waye",
        "timestamp": 1694690468
    },
    {
        "content": "<p>Thanks for the help last week! We did get a prototype working <a href=\"https://github.com/danbugs/wit-bindgen-cs\">https://github.com/danbugs/wit-bindgen-cs</a>. There is a short video at the end of the readme.md that shows it in action</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/danbugs/wit-bindgen-cs\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/0b1b58d78b9abb60d2b00296896038518e6cd29d\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f616538393366306533373936323061623936313638353131326635366131313937626237303133656162313966346535623133333730326136376339306565322f64616e627567732f7769742d62696e6467656e2d6373)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/danbugs/wit-bindgen-cs\" title=\"GitHub - danbugs/wit-bindgen-cs\">GitHub - danbugs/wit-bindgen-cs</a></div><div class=\"message_embed_description\">Contribute to danbugs/wit-bindgen-cs development by creating an account on GitHub.</div></div></div>",
        "id": 391765466,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1695066834
    }
]