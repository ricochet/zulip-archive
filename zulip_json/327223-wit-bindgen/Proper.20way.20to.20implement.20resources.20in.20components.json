[
    {
        "content": "<p>Not sure if this is the right stream, but what is the right way to implement a resource? I'm trying to implement a connector component that provides a connection resource. The goal is to abstract the different kinds of connections via a resource.</p>\n<p>Now, this connection resource is getting generated as a zero variant enum (Connection) by wit-bindgen. But I can't push that to the resource table, so I'm pushing my real object (odbc_api::Connection) into the table, getting the rep, and returning an ad hoc Connection resource with that rep. And when I get the method call, I'm using the rep value to look up the odbc_api::Connection in the table.</p>\n<p>Is this the right way? It seems a bit hacky and I was wondering if there is a better/more direct way.</p>",
        "id": 431327451,
        "sender_full_name": "Sekhar Ravinutala",
        "timestamp": 1712241181
    },
    {
        "content": "<p>In Wasmtime you'll probably want to use <code>with: { ... }</code> to customize the resource type to your own type so you can use the methods of <code>ResourceTable</code> natively</p>",
        "id": 431331264,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1712242127
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span>, yeah I was able to map it to my own enum with the connection variants I care about.</p>",
        "id": 431358698,
        "sender_full_name": "Sekhar Ravinutala",
        "timestamp": 1712249034
    }
]