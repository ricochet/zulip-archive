[
    {
        "content": "<p>Hey there, I defined a <code>record</code> in a wit file, imported by two other wit files, one to produce and one to consume. The problem is that these two bindings have different mods, and so they don't work together. Is it possible to unify them by generating a common mod library to be consumed by bindings that uses this library? </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wit_bindgen_rust</span>::<span class=\"n\">import</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">\"a.wit\"</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"n\">wit_bindgen_rust</span>::<span class=\"n\">import</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">\"consume.wit\"</span><span class=\"p\">);</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">common</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">a</span>::<span class=\"n\">get_common_a</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">consume</span>::<span class=\"n\">consume_common</span><span class=\"p\">(</span><span class=\"n\">common</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>error<span class=\"o\">[</span>E0308<span class=\"o\">]</span>: mismatched types\n --&gt; src/main.rs:8:29\n  <span class=\"p\">|</span>\n<span class=\"m\">8</span> <span class=\"p\">|</span>     consume::consume_common<span class=\"o\">(</span>common<span class=\"o\">)</span><span class=\"p\">;</span>\n  <span class=\"p\">|</span>                             ^^^^^^ expected struct <span class=\"sb\">`</span>consume::Common<span class=\"sb\">`</span>, found struct <span class=\"sb\">`</span>a::Common<span class=\"sb\">`</span>\n</code></pre></div>",
        "id": 288608848,
        "sender_full_name": "Mossaka (Joe)",
        "timestamp": 1657067891
    },
    {
        "content": "<p>Ah I just saw <a href=\"https://github.com/bytecodealliance/wit-bindgen/issues/266\">this issue</a>, which effectively is talking about the same thing as I asked here.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wit-bindgen/issues/266\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/f7bbd56d46f3106e60d60248ff2096391947d210\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f333939303838373561623138303937616232313961643535363936346136353061623935663433386438653834626262383831343235363764323132623830662f62797465636f6465616c6c69616e63652f7769742d62696e6467656e2f6973737565732f323636)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wit-bindgen/issues/266\" title=\"Wit-bindgen support for linking multiple wit files together to produce unified bindings · Issue #266 · bytecodealliance/wit-bindgen\">Wit-bindgen support for linking multiple wit files together to produce unified bindings · Issue #266 · bytecodealliance/wit-bindgen</a></div><div class=\"message_embed_description\">A language binding generator for WebAssembly interface types - Wit-bindgen support for linking multiple wit files together to produce unified bindings · Issue #266 · bytecodealliance/wit-bindgen</div></div></div>",
        "id": 288609471,
        "sender_full_name": "Mossaka (Joe)",
        "timestamp": 1657068446
    },
    {
        "content": "<p>Yes. That's unfortunately not supported yet, though it's something we know we'll need.</p>",
        "id": 288609941,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1657068924
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 288911695,
        "sender_full_name": "Jens Gåsemyr Magnus",
        "timestamp": 1657268727
    }
]