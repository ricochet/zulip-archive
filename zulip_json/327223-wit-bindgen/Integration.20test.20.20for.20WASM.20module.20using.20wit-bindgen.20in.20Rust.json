[
    {
        "content": "<p>I'm struggling with the imports for the integration test. </p>\n<p>I have the following structure:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>file/\n│\n├──<span class=\"w\"> </span>src/\n│<span class=\"w\">   </span>├──<span class=\"w\"> </span>bindings.rs\n│<span class=\"w\">   </span>└──<span class=\"w\"> </span>lib.rs\n│\n├──<span class=\"w\"> </span>tests/\n│<span class=\"w\">   </span>└──<span class=\"w\"> </span>calc_test.rs\n│\n└──<span class=\"w\"> </span>Cargo.toml\n</code></pre></div>\n<p>My <a href=\"http://lib.rs\">lib.rs</a> looks like this</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">mod</span><span class=\"w\"> </span><span class=\"nn\">bindings</span><span class=\"p\">;</span>\n\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">bindings</span><span class=\"p\">::</span><span class=\"n\">Guest</span><span class=\"p\">;</span>\n\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">Calculator</span><span class=\"p\">;</span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">Guest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">Calculator</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">add</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kt\">f64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kt\">f64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">f64</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">b</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">bindings</span><span class=\"p\">::</span><span class=\"n\">export</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">Calculator</span><span class=\"w\"> </span><span class=\"n\">with_types_in</span><span class=\"w\"> </span><span class=\"n\">bindings</span><span class=\"p\">);</span>\n</code></pre></div>\n<p>In my integration test <code>calc_test.rs</code> I try declare the import with <code>use calc::Calculator</code> and get  <strong>rustc: unresolved import <code>calc</code> use of undeclared crate or module <code>calc</code></strong>. Using just <code>use calc;</code> doesn't return any error.  How should I declare the import?</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">calc</span><span class=\"p\">::</span><span class=\"n\">Calculator</span><span class=\"p\">;</span>\n\n<span class=\"cp\">#[test]</span>\n<span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">test_calc</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"fm\">assert_eq!</span><span class=\"p\">(</span><span class=\"mf\">2.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Calculator</span><span class=\"p\">::</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">));</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>Other files in the project.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">.</span><span class=\"n\">wit</span><span class=\"w\"> </span><span class=\"n\">file</span>\n<span class=\"n\">package</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"p\">:</span><span class=\"nc\">ext</span><span class=\"p\">;</span>\n\n<span class=\"n\">world</span><span class=\"w\"> </span><span class=\"n\">calculator</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"n\">add</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">float64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">float64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">float64</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>Cargo.toml</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">[</span><span class=\"n\">package</span><span class=\"p\">]</span>\n<span class=\"n\">name</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"calc\"</span>\n<span class=\"n\">version</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"0.1.0\"</span>\n<span class=\"n\">edition</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"2021\"</span>\n\n<span class=\"p\">[</span><span class=\"n\">dependencies</span><span class=\"p\">]</span>\n<span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">bindgen</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">version</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"0.24.0\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">default</span><span class=\"o\">-</span><span class=\"n\">features</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">features</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">    </span><span class=\"s\">\"realloc\"</span><span class=\"p\">,</span>\n<span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">bindgen</span><span class=\"o\">-</span><span class=\"n\">rt</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"0.24.0\"</span>\n<span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">cli</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"0.0.0\"</span>\n\n<span class=\"p\">[</span><span class=\"n\">lib</span><span class=\"p\">]</span>\n<span class=\"k\">crate</span><span class=\"o\">-</span><span class=\"k\">type</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"cdylib\"</span><span class=\"p\">]</span>\n\n<span class=\"p\">[</span><span class=\"n\">package</span><span class=\"p\">.</span><span class=\"n\">metadata</span><span class=\"p\">.</span><span class=\"n\">component</span><span class=\"p\">]</span>\n<span class=\"n\">package</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"test:ext\"</span>\n\n<span class=\"p\">[</span><span class=\"n\">package</span><span class=\"p\">.</span><span class=\"n\">metadata</span><span class=\"p\">.</span><span class=\"n\">component</span><span class=\"p\">.</span><span class=\"n\">dependencies</span><span class=\"p\">]</span>\n</code></pre></div>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"http://lib.rs\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/a025d1dfcfcdb4f622e82e9f608412cba3162ba3/68747470733a2f2f6c69622e72732f6372617465732d6c6f676f2e706e67&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"http://lib.rs\" title=\"Lib.rs — home for Rust crates // Lib.rs\">Lib.rs — home for Rust crates // Lib.rs</a></div><div class=\"message_embed_description\">List of Rust libraries and applications. An unofficial experimental opinionated alternative to crates.io</div></div></div>",
        "id": 484588221,
        "sender_full_name": "Utilize3214",
        "timestamp": 1732651775
    },
    {
        "content": "<p>Have you tried changing the <code>crate-type = [\"cdylib\"]</code> line in your Cargo.toml to <code>crate-type = [\"cdylib\", \"rlib\"]</code>?</p>",
        "id": 484590659,
        "sender_full_name": "Joel Dice",
        "timestamp": 1732652837
    }
]