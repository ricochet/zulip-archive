[
    {
        "content": "<p>Is there a recommended way to share a wit file between different projects? e.g. between the host system (rust), and the guest system?</p>",
        "id": 425368451,
        "sender_full_name": "CircuitSacul",
        "timestamp": 1709835902
    },
    {
        "content": "<p>Not yet. This has been a pain for all of us but took a back seat to wasi 0.2 implementation work in the recent past. I think there will be some improvements in the relatively near future.</p>",
        "id": 425370328,
        "sender_full_name": "Lann Martin",
        "timestamp": 1709836612
    },
    {
        "content": "<p>I suppose I should make the simplest recommendation in case it isn't obvious: wit tooling can generally take a path to the directory holding the wit files; if your project structure allows for that kind of sharing then I recommend it <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 425370629,
        "sender_full_name": "Lann Martin",
        "timestamp": 1709836733
    },
    {
        "content": "<p>Thanks. I hope there's a nicer solution in the future.</p>\n<p>My use case requires that it be shared between users and an arbitrary number of guest systems.</p>\n<p>The best solution I could come up with so far is to:</p>\n<ol>\n<li>Have a separate repo to store the wit files</li>\n<li>Add that repo as a sub-repo to the host system, and bindgen from that path</li>\n<li>Add that repo as a sub-repo to the guest helper crate, which will do some fancy macro stuff to include_str it from path and inject it into the bindgen! macro directly. Then I can release the crate and it can be directly used by guest systems.</li>\n</ol>\n<p>An alternative is to fetch the file at compile time, but depending on network access to github at compile-time seems like a bad idea.</p>",
        "id": 425372336,
        "sender_full_name": "CircuitSacul",
        "timestamp": 1709837343
    }
]