[
    {
        "content": "<p>Hello! I'm trying to better understand what <code>--adapt</code> is doing in <code>wasm-tools component</code>.</p>\n<p>My current, self assembled, potentially completely incorrect understanding is..</p>\n<hr>\n<p>When compiling the guest program to the<code> wasm32-wasi target</code>; a bunch of wasi specific imports are included</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"o\">-</span><span class=\"n\">tools</span><span class=\"w\"> </span><span class=\"n\">print</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">grep</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"p\">(</span><span class=\"n\">import</span><span class=\"o\">'</span>\n\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"s\">\"fd_write\"</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"w\"> </span><span class=\"cp\">$_ZN4wasi13lib_generated22wasi_snapshot_preview18fd_write17h03249cfaa96a4902E</span><span class=\"w\"> </span><span class=\"p\">(;</span><span class=\"mi\">0</span><span class=\"p\">;)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">5</span><span class=\"p\">)))</span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"s\">\"environ_get\"</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"w\"> </span><span class=\"cp\">$__imported_wasi_snapshot_preview1_environ_get</span><span class=\"w\"> </span><span class=\"p\">(;</span><span class=\"mi\">1</span><span class=\"p\">;)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">2</span><span class=\"p\">)))</span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"s\">\"environ_sizes_get\"</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"w\"> </span><span class=\"cp\">$__imported_wasi_snapshot_preview1_environ_sizes_get</span><span class=\"w\"> </span><span class=\"p\">(;</span><span class=\"mi\">2</span><span class=\"p\">;)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">2</span><span class=\"p\">)))</span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"s\">\"proc_exit\"</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"w\"> </span><span class=\"cp\">$__imported_wasi_snapshot_preview1_proc_exit</span><span class=\"w\"> </span><span class=\"p\">(;</span><span class=\"mi\">3</span><span class=\"p\">;)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">0</span><span class=\"p\">)))</span>\n</code></pre></div>\n<p>Running the adapt command injects a bunch of i32 refs in the guest program table which the host provides at those addresses. </p>\n<p>gist of longer output - <a href=\"https://gist.github.com/SuddenlyHazel/bf0ce95f5753c70fd72cc0937066e569\">https://gist.github.com/SuddenlyHazel/bf0ce95f5753c70fd72cc0937066e569</a></p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(</span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"s\">\"\"</span><span class=\"w\"> </span><span class=\"s\">\"1\"</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"w\"> </span><span class=\"p\">(;</span><span class=\"mi\">1</span><span class=\"p\">;)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">1</span><span class=\"p\">)))</span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">interface</span><span class=\"w\"> </span><span class=\"s\">\"wasi:io/streams\"</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"w\"> </span><span class=\"p\">(;</span><span class=\"mi\">1</span><span class=\"p\">;)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">1</span><span class=\"p\">)))</span>\n</code></pre></div>\n<hr>\n<p>Thank you!</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://gist.github.com/SuddenlyHazel/bf0ce95f5753c70fd72cc0937066e569\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/2aafd906f69f8f71c7544060163ba3e419b173e8\\/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f67697374732f676973742d6f672d696d6167652e706e67)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://gist.github.com/SuddenlyHazel/bf0ce95f5753c70fd72cc0937066e569\" title=\"gist:bf0ce95f5753c70fd72cc0937066e569\">gist:bf0ce95f5753c70fd72cc0937066e569</a></div><div class=\"message_embed_description\">GitHub Gist: instantly share code, notes, and snippets.</div></div></div>",
        "id": 389472277,
        "sender_full_name": "Hazel Rowell",
        "timestamp": 1694017239
    },
    {
        "content": "<p>Sort of, but also sort of not. The premise of <code>--adapt</code> is that there's difficult-to-update code, such as a language standard library or a preexisting framework or preexisting binary, which is using preview1 functions. These preview1 functions do not map to the component model, but at the same time the preview2 definitions are able to be used to implement the preview1 definitions. This is where the adapter comes in.</p>\n<p>The adapter is an implementation of preview1 in terms of preview2 within wasm itself. The imports of preview1 functions are then hooked up to the exports of the adapter and then the adapter only imports preview2 things. In the end only component-model things are imported and a component is created.</p>\n<p>There's a whole bunch of details about how exactly the adapter works with indirect calls, instantiation ordering, how memory works, etc. That's not super relevant for the high-level picture though which is how this is basically all about implementing preview1 in terms of preview2 in-content</p>",
        "id": 389476834,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1694018395
    },
    {
        "content": "<p>Thank you! I think I have a better understanding now.. </p>\n<p>So, at the highest level, the adaptor is being used to provide interoperability?  </p>\n<p>I ended up going down this rabbit-hole when I received an </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">import</span><span class=\"w\">  </span><span class=\"n\">wasi</span>:<span class=\"nc\">io</span><span class=\"o\">/</span><span class=\"n\">streams</span><span class=\"w\">  </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">wrong</span><span class=\"w\"> </span><span class=\"k\">type</span>\n</code></pre></div>\n<p>error. I believe it's because I downloaded the dev version of the adaptor and not the <code>v12.0.1 release</code>; the version my <code>wasmtime</code> and <code>wasmtime-wasi</code> deps use. just trying to figure out \"why\" its not working</p>",
        "id": 389482689,
        "sender_full_name": "Hazel Rowell",
        "timestamp": 1694019857
    },
    {
        "content": "<p>Correct yeah, it's interop between preview1 and preview2. What you'll need to do though in your situation is ensure the version of the adapter matches the version of wasmtime to get the types to line up</p>",
        "id": 389483538,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1694020097
    },
    {
        "content": "<p>Yup! It took me awhile but I eventually figured out the mismatch there. I've been compiling these little \"gotchas\" together in a document. Might be useful to share once I have a better understanding of the holistic picture. I'm going to dive into <code>resource</code>s and <code>handle</code>s next <span aria-label=\"partying face\" class=\"emoji emoji-1f973\" role=\"img\" title=\"partying face\">:partying_face:</span> , before discovering <code>wit</code> I had reached a similar stage with my own weird custom integration pattern.. </p>\n<p>Thank you for your time, I expect to be back here again soon <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> ..</p>",
        "id": 389485415,
        "sender_full_name": "Hazel Rowell",
        "timestamp": 1694020913
    },
    {
        "content": "<p>Sounds good, and collecting gotchas is much appreciated! We definitely like to keep a list of those around to know what to burn down.</p>",
        "id": 389485961,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1694021135
    },
    {
        "content": "<p>One thing I'll say on resources is that they're still relatively new in terms of an implementation so there may be some rough corners, but all the basics and ideas should be there</p>",
        "id": 389486004,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1694021160
    },
    {
        "content": "<p>got a working example of resources <br>\n<a href=\"https://github.com/MyceliaNetwork/mycelia/pull/2\">https://github.com/MyceliaNetwork/mycelia/pull/2</a></p>\n<p>The above is using a static representation id. </p>\n<p>Haven't dug in more just yet.. But, I'm guessing if I wanted something a bit better I want to at-least check the table for conflicts?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/MyceliaNetwork/mycelia/pull/2\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/1d27635212ae11487f04106a9507e49f3b2cdcd6\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f373038353266313534303461616334323261383035396264616463653034373961333232393437633934396133393133633235353334306233363038623366322f4d7963656c69614e6574776f726b2f6d7963656c69612f70756c6c2f32)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/MyceliaNetwork/mycelia/pull/2\" title=\"Resource Example by SuddenlyHazel · Pull Request #2 · MyceliaNetwork/mycelia\">Resource Example by SuddenlyHazel · Pull Request #2 · MyceliaNetwork/mycelia</a></div><div class=\"message_embed_description\">Building up some examples context for us..</div></div></div>",
        "id": 389527230,
        "sender_full_name": "Hazel Rowell",
        "timestamp": 1694040162
    }
]