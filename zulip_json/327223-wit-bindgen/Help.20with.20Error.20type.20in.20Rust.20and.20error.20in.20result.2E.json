[
    {
        "content": "<p>I'm trying to write wit definitions to use with wit-bindgen to turn my wasi v1 module into a wasi v2 component, and I'm stumbling on the result type.</p>\n<p>I have a Rust function that returns this and the error defined here</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wit_bindgen</span>::<span class=\"n\">generate</span><span class=\"o\">!</span><span class=\"p\">({</span>\n<span class=\"w\">    </span><span class=\"n\">world</span>: <span class=\"s\">\"femark\"</span><span class=\"p\">,</span>\n\n<span class=\"w\">    </span><span class=\"n\">exports</span>: <span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">world</span>: <span class=\"nc\">MyFemark</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">},</span>\n<span class=\"p\">});</span>\n\n<span class=\"k\">struct</span> <span class=\"nc\">MyFemark</span><span class=\"p\">;</span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">Guest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">MyFemark</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">run</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">print</span><span class=\"p\">(</span><span class=\"s\">\"Hello, world!\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">process_markdown_to_html</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"n\">input</span>: <span class=\"nb\">String</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">std</span>::<span class=\"n\">result</span>::<span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"n\">HTMLOutput</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">HighlighterError</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">process_markdown_to_html</span><span class=\"p\">(</span><span class=\"n\">input</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n</code></pre></div>\n<p>and I tried to define it in wit like so:</p>\n<div class=\"codehilite\" data-code-language=\"wit\"><pre><span></span><code>// wit/femark.wit\npackage example:host;\n\nworld femark {\n\n  record html-output{\n        toc: option&lt;string&gt;,\n        content: string,\n    }\n\n  /// The set of errors which may be raised by the function\n  variant highlightererror {\n        model-not-supported,\n        runtime-error(string),\n        invalid-input(string)\n  }\n\n  export process-markdown-to-html: func(input: string) -&gt; result&lt;html-output, highlightererror&gt;;\n}\n</code></pre></div>\n<p>However no matter what combination of things I define, I get errors in validation. Some versions say that I need to make the result type in Rust match Highlightererror. If I do that it complains about conflicting Error impls and duplicate definitions. Any chance someone can point out my mistake?</p>",
        "id": 423117446,
        "sender_full_name": "benwis",
        "timestamp": 1708736544
    },
    {
        "content": "<p>Can you paste the full error message? I can get your example compiling by removing the <code>run</code> function and changing <code>HTMLOutput</code> to <code>HtmlOutput</code> and changing <code>HilighterError</code> to <code>Highlightererror</code> myself</p>",
        "id": 423117819,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1708736873
    },
    {
        "content": "<p>For full context, the crate I'm trying to get into wasi is here: <a href=\"https://github.com/benwis/femark/tree/wasi\">https://github.com/benwis/femark/tree/wasi</a><br>\nI'm able to compile it into wasi(with some help) by installing the wasi-sdk and building it with <code>RUSTFLAGS='-L /opt/wasi-sdk-21.0/share/wasi-sysroot/lib/wasm32-wasi' CXXSTDLIB=c++ CC=/opt/wasi-sdk-21.0/bin/clang CXX=/opt/wasi-sdk-21.0/bin/clang  cargo build --target wasm32-wasi</code></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/benwis/femark/tree/wasi\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/b21f9fc59514ad135de8f62a6a1f9bae33b73921\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f663735643739333538366532343263353731393464613935333433646530393561383064393134323437383233636334343266636339303464393434343935612f62656e7769732f66656d61726b)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/benwis/femark/tree/wasi\" title=\"GitHub - benwis/femark at wasi\">GitHub - benwis/femark at wasi</a></div><div class=\"message_embed_description\">A Markdown to HTML compiler and Syntax Highlighter, built using Rust's pulldown-cmark and tree-sitter-highlight crates. Compiled for use via the Node FFI. - GitHub - benwis/femark at wasi</div></div></div>",
        "id": 423119501,
        "sender_full_name": "benwis",
        "timestamp": 1708738167
    },
    {
        "content": "<p>Here is the error I get trying to add the wit-bindgen stuff</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0428</span><span class=\"p\">]</span>: <span class=\"nc\">the</span><span class=\"w\"> </span><span class=\"n\">name</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">HtmlOutput</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">defined</span><span class=\"w\"> </span><span class=\"n\">multiple</span><span class=\"w\"> </span><span class=\"n\">times</span>\n<span class=\"w\">   </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">src</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">323</span>:<span class=\"mi\">1</span>\n<span class=\"w\">    </span><span class=\"o\">|</span>\n<span class=\"mi\">15</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">wit_bindgen</span>::<span class=\"n\">generate</span><span class=\"o\">!</span><span class=\"p\">({</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">-----------------------</span><span class=\"w\"> </span><span class=\"n\">previous</span><span class=\"w\"> </span><span class=\"n\">definition</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"err\">`</span><span class=\"n\">HtmlOutput</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">here</span>\n<span class=\"o\">..</span><span class=\"p\">.</span>\n<span class=\"mi\">323</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"nc\">HtmlOutput</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">^^^^^^^^^^^^^^^^^^^^^</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">HtmlOutput</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">redefined</span><span class=\"w\"> </span><span class=\"n\">here</span>\n<span class=\"w\">    </span><span class=\"o\">|</span>\n<span class=\"w\">    </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">note</span>: <span class=\"err\">`</span><span class=\"n\">HtmlOutput</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">must</span><span class=\"w\"> </span><span class=\"n\">be</span><span class=\"w\"> </span><span class=\"n\">defined</span><span class=\"w\"> </span><span class=\"n\">only</span><span class=\"w\"> </span><span class=\"n\">once</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">namespace</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">module</span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0428</span><span class=\"p\">]</span>: <span class=\"nc\">the</span><span class=\"w\"> </span><span class=\"n\">name</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">HighlighterError</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">defined</span><span class=\"w\"> </span><span class=\"n\">multiple</span><span class=\"w\"> </span><span class=\"n\">times</span>\n<span class=\"w\">   </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">src</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">504</span>:<span class=\"mi\">1</span>\n<span class=\"w\">    </span><span class=\"o\">|</span>\n<span class=\"mi\">15</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">wit_bindgen</span>::<span class=\"n\">generate</span><span class=\"o\">!</span><span class=\"p\">({</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">-----------------------</span><span class=\"w\"> </span><span class=\"n\">previous</span><span class=\"w\"> </span><span class=\"n\">definition</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"err\">`</span><span class=\"n\">HighlighterError</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">here</span>\n<span class=\"o\">..</span><span class=\"p\">.</span>\n<span class=\"mi\">504</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"k\">enum</span> <span class=\"nc\">HighlighterError</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">^^^^^^^^^^^^^^^^^^^^^</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">HighlighterError</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">redefined</span><span class=\"w\"> </span><span class=\"n\">here</span>\n<span class=\"w\">    </span><span class=\"o\">|</span>\n<span class=\"w\">    </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">note</span>: <span class=\"err\">`</span><span class=\"n\">HighlighterError</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">must</span><span class=\"w\"> </span><span class=\"n\">be</span><span class=\"w\"> </span><span class=\"n\">defined</span><span class=\"w\"> </span><span class=\"n\">only</span><span class=\"w\"> </span><span class=\"n\">once</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">namespace</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">module</span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0119</span><span class=\"p\">]</span>: <span class=\"nc\">conflicting</span><span class=\"w\"> </span><span class=\"n\">implementations</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">Debug</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"err\">`</span><span class=\"n\">HighlighterError</span><span class=\"err\">`</span>\n<span class=\"w\">   </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">src</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">503</span>:<span class=\"mi\">10</span>\n<span class=\"w\">    </span><span class=\"o\">|</span>\n<span class=\"mi\">15</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"n\">wit_bindgen</span>::<span class=\"n\">generate</span><span class=\"o\">!</span><span class=\"p\">({</span>\n<span class=\"mi\">16</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"c1\">// the name of the world in the `*.wit` input file</span>\n<span class=\"mi\">17</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"n\">world</span>: <span class=\"s\">\"femark\"</span><span class=\"p\">,</span>\n<span class=\"mi\">18</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span>\n<span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\">   </span><span class=\"o\">|</span>\n<span class=\"mi\">25</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"p\">},</span>\n<span class=\"mi\">26</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">});</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">__</span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">first</span><span class=\"w\"> </span><span class=\"n\">implementation</span><span class=\"w\"> </span><span class=\"n\">here</span>\n<span class=\"o\">..</span><span class=\"p\">.</span>\n<span class=\"mi\">503</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">   </span><span class=\"cp\">#[derive(Debug, thiserror::Error)]</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">            </span><span class=\"o\">^^^^^</span><span class=\"w\"> </span><span class=\"n\">conflicting</span><span class=\"w\"> </span><span class=\"n\">implementation</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">HighlighterError</span><span class=\"err\">`</span>\n<span class=\"w\">    </span><span class=\"o\">|</span>\n<span class=\"w\">    </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">note</span>: <span class=\"nc\">this</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"n\">originates</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">derive</span><span class=\"w\"> </span><span class=\"kr\">macro</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">Debug</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">Nightly</span><span class=\"w\"> </span><span class=\"n\">builds</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Z</span><span class=\"w\"> </span><span class=\"kr\">macro</span><span class=\"o\">-</span><span class=\"n\">backtrace</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">more</span><span class=\"w\"> </span><span class=\"n\">info</span><span class=\"p\">)</span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0119</span><span class=\"p\">]</span>: <span class=\"nc\">conflicting</span><span class=\"w\"> </span><span class=\"n\">implementations</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">std</span>::<span class=\"n\">fmt</span>::<span class=\"n\">Display</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"err\">`</span><span class=\"n\">HighlighterError</span><span class=\"err\">`</span>\n<span class=\"w\">   </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">src</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">503</span>:<span class=\"mi\">17</span>\n<span class=\"w\">    </span><span class=\"o\">|</span>\n<span class=\"mi\">15</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"n\">wit_bindgen</span>::<span class=\"n\">generate</span><span class=\"o\">!</span><span class=\"p\">({</span>\n<span class=\"mi\">16</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"c1\">// the name of the world in the `*.wit` input file</span>\n<span class=\"mi\">17</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"n\">world</span>: <span class=\"s\">\"femark\"</span><span class=\"p\">,</span>\n<span class=\"mi\">18</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span>\n<span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\">   </span><span class=\"o\">|</span>\n<span class=\"mi\">25</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"p\">},</span>\n<span class=\"mi\">26</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">});</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">__</span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">first</span><span class=\"w\"> </span><span class=\"n\">implementation</span><span class=\"w\"> </span><span class=\"n\">here</span>\n<span class=\"o\">..</span><span class=\"p\">.</span>\n<span class=\"mi\">503</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">   </span><span class=\"cp\">#[derive(Debug, thiserror::Error)]</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">                   </span><span class=\"o\">^^^^^^^^^^^^^^^^</span><span class=\"w\"> </span><span class=\"n\">conflicting</span><span class=\"w\"> </span><span class=\"n\">implementation</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">HighlighterError</span><span class=\"err\">`</span>\n<span class=\"w\">    </span><span class=\"o\">|</span>\n<span class=\"w\">    </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">note</span>: <span class=\"nc\">this</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"n\">originates</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">derive</span><span class=\"w\"> </span><span class=\"kr\">macro</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">thiserror</span>::<span class=\"n\">Error</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">Nightly</span><span class=\"w\"> </span><span class=\"n\">builds</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Z</span><span class=\"w\"> </span><span class=\"kr\">macro</span><span class=\"o\">-</span><span class=\"n\">backtrace</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">more</span><span class=\"w\"> </span><span class=\"n\">info</span><span class=\"p\">)</span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0119</span><span class=\"p\">]</span>: <span class=\"nc\">conflicting</span><span class=\"w\"> </span><span class=\"n\">implementations</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">StdError</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"err\">`</span><span class=\"n\">HighlighterError</span><span class=\"err\">`</span>\n<span class=\"w\">   </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">src</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">503</span>:<span class=\"mi\">17</span>\n<span class=\"w\">    </span><span class=\"o\">|</span>\n<span class=\"mi\">15</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"n\">wit_bindgen</span>::<span class=\"n\">generate</span><span class=\"o\">!</span><span class=\"p\">({</span>\n<span class=\"mi\">16</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"c1\">// the name of the world in the `*.wit` input file</span>\n<span class=\"mi\">17</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"n\">world</span>: <span class=\"s\">\"femark\"</span><span class=\"p\">,</span>\n<span class=\"mi\">18</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span>\n<span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\">   </span><span class=\"o\">|</span>\n<span class=\"mi\">25</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"p\">},</span>\n<span class=\"mi\">26</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">});</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">__</span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">first</span><span class=\"w\"> </span><span class=\"n\">implementation</span><span class=\"w\"> </span><span class=\"n\">here</span>\n<span class=\"o\">..</span><span class=\"p\">.</span>\n<span class=\"mi\">503</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">   </span><span class=\"cp\">#[derive(Debug, thiserror::Error)]</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">                   </span><span class=\"o\">^^^^^^^^^^^^^^^^</span><span class=\"w\"> </span><span class=\"n\">conflicting</span><span class=\"w\"> </span><span class=\"n\">implementation</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">HighlighterError</span><span class=\"err\">`</span>\n<span class=\"w\">    </span><span class=\"o\">|</span>\n<span class=\"w\">    </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">note</span>: <span class=\"nc\">this</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"n\">originates</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">derive</span><span class=\"w\"> </span><span class=\"kr\">macro</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">thiserror</span>::<span class=\"n\">Error</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">Nightly</span><span class=\"w\"> </span><span class=\"n\">builds</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Z</span><span class=\"w\"> </span><span class=\"kr\">macro</span><span class=\"o\">-</span><span class=\"n\">backtrace</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">more</span><span class=\"w\"> </span><span class=\"n\">info</span><span class=\"p\">)</span>\n\n<span class=\"nb\">Some</span><span class=\"w\"> </span><span class=\"n\">errors</span><span class=\"w\"> </span><span class=\"n\">have</span><span class=\"w\"> </span><span class=\"n\">detailed</span><span class=\"w\"> </span><span class=\"n\">explanations</span>: <span class=\"nc\">E0119</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">E0428</span><span class=\"p\">.</span>\n<span class=\"n\">For</span><span class=\"w\"> </span><span class=\"n\">more</span><span class=\"w\"> </span><span class=\"n\">information</span><span class=\"w\"> </span><span class=\"n\">about</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kr\">try</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">rustc</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">explain</span><span class=\"w\"> </span><span class=\"n\">E0119</span><span class=\"err\">`</span><span class=\"p\">.</span>\n<span class=\"n\">error</span>: <span class=\"nc\">could</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">compile</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">femark</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">lib</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">due</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"n\">previous</span><span class=\"w\"> </span><span class=\"n\">errors</span>\n</code></pre></div>",
        "id": 423119629,
        "sender_full_name": "benwis",
        "timestamp": 1708738246
    },
    {
        "content": "<p>I think what's throwing me for a loop right now is that functions are defined in Rust, but possibly the return/input types from those functions are defined in wit and then autogenerated and reused in Rust? So if I want an Error type, I have to accept whatever error type gets generated from the wit binding, and not have my own defined somewhere . Currently I thought the macro was trying to match my rust error type with the wit one, but it sounds like that is not so</p>",
        "id": 423122013,
        "sender_full_name": "benwis",
        "timestamp": 1708740494
    },
    {
        "content": "<p>I think you are right that wit-bindgen will unconditionally define its own types and you need to export them to users of your library.</p>\n<p>For resources (opaque objects referenced on the other side) at least the host side supports the <code>with</code> keyword to interact with types defined in non-autogenerated code. See <a href=\"https://github.com/cpetig/resource-demo/blob/main/host-wasmtime/src/main.rs#L16\">this small demo</a> for details.</p>",
        "id": 423153005,
        "sender_full_name": "Christof Petig",
        "timestamp": 1708766290
    }
]