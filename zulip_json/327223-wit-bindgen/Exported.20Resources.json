[
    {
        "content": "<p>I just wanted to confirm that this is a bug and that I'm not doing something wrong before I report it.</p>\n<p>If I have the following, both <code>resource-a</code> and <code>resource-b</code> are treated as exported GuestResources as I'd expect.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">world</span><span class=\"w\"> </span><span class=\"n\">example</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"n\">some</span><span class=\"o\">-</span><span class=\"n\">interface</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">interface</span><span class=\"w\"> </span><span class=\"n\">some</span><span class=\"o\">-</span><span class=\"n\">interface</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">resource</span><span class=\"w\"> </span><span class=\"n\">resource</span><span class=\"o\">-</span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"p\">{</span>\n\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">resource</span><span class=\"w\"> </span><span class=\"n\">resource</span><span class=\"o\">-</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">get</span><span class=\"o\">-</span><span class=\"n\">a</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">result</span><span class=\"o\">&lt;</span><span class=\"n\">resource</span><span class=\"o\">-</span><span class=\"n\">a</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>However, if I define them in separate interfaces, only resource-b seems to be treated as an exported resource.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">world</span><span class=\"w\"> </span><span class=\"n\">example</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"n\">some</span><span class=\"o\">-</span><span class=\"n\">other</span><span class=\"o\">-</span><span class=\"n\">interface</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">interface</span><span class=\"w\"> </span><span class=\"n\">some</span><span class=\"o\">-</span><span class=\"n\">interface</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">resource</span><span class=\"w\"> </span><span class=\"n\">resource</span><span class=\"o\">-</span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"p\">{</span>\n\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">interface</span><span class=\"w\"> </span><span class=\"n\">some</span><span class=\"o\">-</span><span class=\"n\">other</span><span class=\"o\">-</span><span class=\"n\">interface</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">some</span><span class=\"o\">-</span><span class=\"n\">interface</span><span class=\"p\">.{</span><span class=\"n\">resource</span><span class=\"o\">-</span><span class=\"n\">a</span><span class=\"p\">};</span>\n\n<span class=\"w\">    </span><span class=\"n\">resource</span><span class=\"w\"> </span><span class=\"n\">resource</span><span class=\"o\">-</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">get</span><span class=\"o\">-</span><span class=\"n\">a</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">result</span><span class=\"o\">&lt;</span><span class=\"n\">resource</span><span class=\"o\">-</span><span class=\"n\">a</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>",
        "id": 465837269,
        "sender_full_name": "Joe Sylve",
        "timestamp": 1724873905
    },
    {
        "content": "<p>I believe that is intended behavior, and it's also been a recurring source of confusion.  See <a href=\"https://github.com/WebAssembly/component-model/issues/208\">https://github.com/WebAssembly/component-model/issues/208</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/component-model/issues/208\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/7f0fc2304d2567f932795fe1e9cc9ed96b423f01/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f353639646633646139353162306137626637383166313862633264306238303334323635643638646666313033316132303239333566616334316163666636662f576562417373656d626c792f636f6d706f6e656e742d6d6f64656c2f6973737565732f323038&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/component-model/issues/208\" title=\"Resolving transitive dependencies of WIT exports 路 Issue #208 路 WebAssembly/component-model\">Resolving transitive dependencies of WIT exports 路 Issue #208 路 WebAssembly/component-model</a></div><div class=\"message_embed_description\">One of the subtelties of imports and exports in WIT is that they both need to somehow resolve their transitive dependencies. For example this world: package foo:bar interface foo { type t = u32 } i...</div></div></div>",
        "id": 465838233,
        "sender_full_name": "Joel Dice",
        "timestamp": 1724874297
    },
    {
        "content": "<p>If you add <code>export some-interface;</code> to your world in the second example, it should work like the first example.</p>",
        "id": 465838576,
        "sender_full_name": "Joel Dice",
        "timestamp": 1724874419
    },
    {
        "content": "<p>That is confusing.  I would expect that a resource that is exported via an exported function (either in the interface, world, or an exported resource) would also be exported regardless.  Thanks for the insight.  I'll read through that issue and comment if necessary.</p>",
        "id": 465839136,
        "sender_full_name": "Joe Sylve",
        "timestamp": 1724874603
    }
]