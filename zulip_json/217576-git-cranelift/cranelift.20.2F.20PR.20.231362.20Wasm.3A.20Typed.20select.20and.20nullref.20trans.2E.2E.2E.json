[
    {
        "content": "<p>eqrion opened <a href=\"https://github.com/bytecodealliance/cranelift/pull/1362\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1362\">PR #1362</a> from <code>sm/ref-2</code> to <code>master</code>:</p>\n<blockquote>\n<p>The reftypes proposal has introduced a typed select instruction to ensure efficient validation in the future with complex subtyping relationships. In addition, a proper 'nullref' type has been added. Both of these changes are supported in <code>wasmparser</code> but there are some additional updates needed to <code>cranelift-wasm</code>.</p>\n</blockquote>",
        "id": 186430882,
        "sender_full_name": "GitHub",
        "timestamp": 1579810621
    },
    {
        "content": "<p><strong>eqrion</strong> requested <a href=\"https://github.com/yurydelendik\" target=\"_blank\" title=\"https://github.com/yurydelendik\">yurydelendik</a> for a review on <a href=\"https://github.com/bytecodealliance/cranelift/pull/1362\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1362\">PR #1362</a>.</p>",
        "id": 186430916,
        "sender_full_name": "GitHub",
        "timestamp": 1579810637
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1362#pullrequestreview-347593814\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1362#pullrequestreview-347593814\">PR Review</a>.</p>",
        "id": 186433822,
        "sender_full_name": "GitHub",
        "timestamp": 1579812673
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1362#discussion_r370347036\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1362#discussion_r370347036\">PR Review Comment</a>:</p>\n<blockquote>\n<p>We should also add a test like</p>\n<div class=\"codehilite\"><pre><span></span>(func (param anyref) (result anyref)\n    ref.null\n    local.get 0\n    i32.const 1\n    select (result anyref))\n</pre></div>\n\n\n<p>to exercise when the values are distinct subtypes of the typed select's result type. Would be even better if we had enough support for <code>ref.func</code> that we could have turn either a <code>nullref</code> or a <code>funcref</code> into an <code>anyref</code> but I don't think we are there yet, are we?</p>\n</blockquote>",
        "id": 186433823,
        "sender_full_name": "GitHub",
        "timestamp": 1579812673
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1362#pullrequestreview-347593814\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1362#pullrequestreview-347593814\">PR Review</a>.</p>",
        "id": 186433824,
        "sender_full_name": "GitHub",
        "timestamp": 1579812673
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1362#discussion_r370344167\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1362#discussion_r370344167\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Just to make sure I understand correctly: the reason we don't care about <code>ty</code> is because we already validated the wasm (either in wasmtime or spidermonkey) and know that it is a supertype of both <code>arg1</code> and <code>arg2</code>, and the <code>builder.ins().select(..)</code> just treats them all reference types as <code>r32</code> or <code>r64</code>, right?</p>\n</blockquote>",
        "id": 186433825,
        "sender_full_name": "GitHub",
        "timestamp": 1579812673
    },
    {
        "content": "<p>eqrion created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1362#discussion_r370373672\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1362#discussion_r370373672\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Yes, <code>wasmparser</code> itself contains validation code which will check that <code>arg1</code> and <code>arg2</code> are subtypes of the specified type. Spidermonkey uses its own equivalent code. And after validation, there's not a need for a stricter type in Cranelift IR, so it all becomes R32/R64.</p>\n<p>I'll add a comment to this effect in the code here.</p>\n</blockquote>",
        "id": 186439998,
        "sender_full_name": "GitHub",
        "timestamp": 1579816232
    },
    {
        "content": "<p>eqrion submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1362#pullrequestreview-347632149\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1362#pullrequestreview-347632149\">PR Review</a>.</p>",
        "id": 186439999,
        "sender_full_name": "GitHub",
        "timestamp": 1579816232
    },
    {
        "content": "<p>eqrion submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1362#pullrequestreview-347637723\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1362#pullrequestreview-347637723\">PR Review</a>.</p>",
        "id": 186441042,
        "sender_full_name": "GitHub",
        "timestamp": 1579816870
    },
    {
        "content": "<p>eqrion created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1362#discussion_r370378045\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1362#discussion_r370378045\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Good idea, I'll add that test.</p>\n<p>I'm not sure if we can test <code>funcref</code> well. Right now the DummyEnvironment used in wasmtests will convert a wasm <code>ref.func</code> into a clif <code>r32/64.null</code>. So while it would test wasmparser's validation (which has it's own tests), the CL IR would be the same as the other test. (that's if I understand the purpose of wasmtests correctly)</p>\n</blockquote>",
        "id": 186441043,
        "sender_full_name": "GitHub",
        "timestamp": 1579816870
    },
    {
        "content": "<p>eqrion updated <a href=\"https://github.com/bytecodealliance/cranelift/pull/1362\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1362\">PR #1362</a> from <code>sm/ref-2</code> to <code>master</code>:</p>\n<blockquote>\n<p>The reftypes proposal has introduced a typed select instruction to ensure efficient validation in the future with complex subtyping relationships. In addition, a proper 'nullref' type has been added. Both of these changes are supported in <code>wasmparser</code> but there are some additional updates needed to <code>cranelift-wasm</code>.</p>\n</blockquote>",
        "id": 186442300,
        "sender_full_name": "GitHub",
        "timestamp": 1579817728
    },
    {
        "content": "<p>eqrion merged <a href=\"https://github.com/bytecodealliance/cranelift/pull/1362\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1362\">PR #1362</a>.</p>",
        "id": 186443535,
        "sender_full_name": "GitHub",
        "timestamp": 1579818696
    }
]