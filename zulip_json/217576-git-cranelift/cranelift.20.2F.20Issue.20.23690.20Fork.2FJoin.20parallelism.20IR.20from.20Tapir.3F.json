[
    {
        "content": "<p>alexcrichton transferred <a href=\"https://github.com/bytecodealliance/cranelift/issues/690\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/690\">Issue #690</a>:</p>\n<blockquote>\n<p>The subject of <a href=\"https://c.wsmoses.com/papers/tapir.pdf\" target=\"_blank\" title=\"https://c.wsmoses.com/papers/tapir.pdf\">Tapir</a> came up in <a href=\"https://internals.rust-lang.org/t/scoped-threads-in-the-nursery-maybe-with-rayon/4942/24\" target=\"_blank\" title=\"https://internals.rust-lang.org/t/scoped-threads-in-the-nursery-maybe-with-rayon/4942/24\">this thread</a> a little while ago.  Put simply, Tapir added 3 new instructions to LLVM's IR to make it possible to express parallelism in code such that the various optimizers in the middle/back end could do intelligent things, and it looks like they got pretty good performance improvements by doing so.  Would it be worth considering adding these instructions to Cranelift's IR?  </p>\n</blockquote>",
        "id": 189361408,
        "sender_full_name": "GitHub",
        "timestamp": 1582932333
    }
]