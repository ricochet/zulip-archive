[
    {
        "content": "<p>novacrazy <a href=\"https://github.com/bytecodealliance/cranelift/issues/900#issuecomment-568815107\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/900#issuecomment-568815107\">commented</a> on <a href=\"https://github.com/bytecodealliance/cranelift/issues/900\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/900\">Issue #900</a>:</p>\n<blockquote>\n<p>I think this has been fixed by that LLVM patch. It's extremely odd that it was still failing before the LLVM 9 upgrade back in August, but oh well. The SimpleJIT example compiles and runs fine now.</p>\n</blockquote>",
        "id": 184195548,
        "sender_full_name": "GitHub",
        "timestamp": 1577234928
    },
    {
        "content": "<p>novacrazy closed <a href=\"https://github.com/bytecodealliance/cranelift/issues/900\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/900\">Issue #900</a>:</p>\n<blockquote>\n<p>When attempting to add <code>cranelift</code> to a project of mine for use as a JIT compiler, I get:</p>\n<div class=\"codehilite\"><pre><span></span>error: failed to run custom build command for `cranelift-codegen v0.38.0`\n\nCaused by:\n  process didn&#39;t exit successfully: `F:\\code\\projects\\active\\untitled\\target\\debug\\build\\cranelift-codegen-c6b973378c2b1052\\build-script-build` (exit code: 0xc0000005, STATUS_ACCESS_VIOLATION)\n--- stdout\ncargo:rerun-if-changed=C:\\Users\\novacrazy\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cranelift-codegen-0.38.0\\build.rs\n\nwarning: build failed, waiting for other jobs to finish...\nerror: build failed\n</pre></div>\n\n\n<p>This seems to be caused by my build configuration in <code>Cargo.toml</code>:</p>\n<p>&lt;details&gt;</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">[profile.dev]</span>\n<span class=\"n\">debug</span> <span class=\"o\">=</span> <span class=\"kc\">true</span>\n<span class=\"n\">opt-level</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"n\">incremental</span> <span class=\"o\">=</span> <span class=\"kc\">false</span>\n<span class=\"n\">debug-assertions</span> <span class=\"o\">=</span> <span class=\"kc\">true</span>\n<span class=\"n\">codegen-units</span> <span class=\"o\">=</span> <span class=\"mi\">32</span>\n\n<span class=\"k\">[profile.release]</span>\n<span class=\"n\">opt-level</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n<span class=\"n\">debug</span> <span class=\"o\">=</span> <span class=\"n\">true</span> <span class=\"c1\"># helps with profiling</span>\n<span class=\"n\">lto</span> <span class=\"o\">=</span> <span class=\"s\">&#39;fat&#39;</span>\n<span class=\"n\">incremental</span> <span class=\"o\">=</span> <span class=\"kc\">false</span>\n<span class=\"n\">debug-assertions</span> <span class=\"o\">=</span> <span class=\"kc\">false</span>\n<span class=\"n\">codegen-units</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n\n<span class=\"k\">[profile.bench]</span>\n<span class=\"n\">opt-level</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n<span class=\"n\">debug</span> <span class=\"o\">=</span> <span class=\"kc\">false</span>\n<span class=\"n\">lto</span> <span class=\"o\">=</span> <span class=\"s\">&#39;fat&#39;</span>\n<span class=\"n\">debug-assertions</span> <span class=\"o\">=</span> <span class=\"kc\">false</span>\n<span class=\"n\">incremental</span> <span class=\"o\">=</span> <span class=\"kc\">false</span>\n<span class=\"n\">codegen-units</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n</pre></div>\n\n\n<p>&lt;/details&gt;</p>\n<p>which upon adding to the SimpleJIT demo config causes the same <code>STATUS_ACCESS_VIOLATION</code></p>\n<p>I'm on Windows 10 Pro for Workstations with a AMD Zen 1 Threadripper 1950X, compiling with <code>RUSTFLAGS = \"-C target-cpu=native\"</code>, so <code>znver1</code>.</p>\n<p>Compiling without <code>target-cpu=native</code> seems to work, but I kind of use that... </p>\n<p>So it's a mix of those config options and <code>target-cpu=native</code>. </p>\n<p>I'm using <code>rustc 1.38.0-nightly (60960a260 2019-08-12)</code>, which is after an LLVM update <a href=\"https://github.com/rust-lang/rust/issues/63361\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/63361\">known to cause issues on Zen 1</a></p>\n</blockquote>",
        "id": 184195549,
        "sender_full_name": "GitHub",
        "timestamp": 1577234928
    }
]