[
    {
        "content": "<p>yurydelendik opened <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320\">PR #1320</a> from <code>unwind-fde</code> to <code>master</code>:</p>\n<blockquote>\n<p>Currently, codegen produces unwind information only for Windows platform. We need to produce this type of information for all platforms to properly produce backtrace. See <a href=\"https://github.com/bytecodealliance/wasmtime/pull/759\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/759\">https://github.com/bytecodealliance/wasmtime/pull/759</a></p>\n<p>TODO (and requires feedback):</p>\n<ul>\n<li>[ ] use feature to cfg existing unwind logic</li>\n<li>[ ] agree on location for FDE/UNWIND_INFO logic</li>\n<li>[ ] borrow reg mapper from #902</li>\n</ul>\n<p>cc @peterhuene @iximeow </p>\n</blockquote>",
        "id": 185054354,
        "sender_full_name": "GitHub",
        "timestamp": 1578430953
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-339549868\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-339549868\">PR Review</a>.</p>",
        "id": 185062266,
        "sender_full_name": "GitHub",
        "timestamp": 1578436462
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-339549868\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-339549868\">PR Review</a>.</p>",
        "id": 185062267,
        "sender_full_name": "GitHub",
        "timestamp": 1578436462
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r363983856\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r363983856\">PR Review Comment</a>:</p>\n<blockquote>\n<p>On macOS DWARF relocations need to be section relative and not symbol relative.</p>\n</blockquote>",
        "id": 185062268,
        "sender_full_name": "GitHub",
        "timestamp": 1578436462
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r363984077\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r363984077\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Leftover?</p>\n</blockquote>",
        "id": 185062269,
        "sender_full_name": "GitHub",
        "timestamp": 1578436463
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r363984671\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r363984671\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This only works when compiling for one isa during the full process execution and is not thread safe.</p>\n</blockquote>",
        "id": 185062270,
        "sender_full_name": "GitHub",
        "timestamp": 1578436463
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r363985389\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r363985389\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Maybe Seh and Dwarf?</p>\n</blockquote>",
        "id": 185062363,
        "sender_full_name": "GitHub",
        "timestamp": 1578436548
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-339551709\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-339551709\">PR Review</a>.</p>",
        "id": 185062365,
        "sender_full_name": "GitHub",
        "timestamp": 1578436548
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-339551709\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-339551709\">PR Review</a>.</p>",
        "id": 185062366,
        "sender_full_name": "GitHub",
        "timestamp": 1578436548
    },
    {
        "content": "<p>yurydelendik submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-339555470\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-339555470\">PR Review</a>.</p>",
        "id": 185063026,
        "sender_full_name": "GitHub",
        "timestamp": 1578437079
    },
    {
        "content": "<p>yurydelendik created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r363988441\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r363988441\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Yes. Currently I'm just looking feedback on API design -- I'll tie ends with FDE support in a day or two.</p>\n</blockquote>",
        "id": 185063027,
        "sender_full_name": "GitHub",
        "timestamp": 1578437079
    },
    {
        "content": "<p>yurydelendik updated <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320\">PR #1320</a> from <code>unwind-fde</code> to <code>master</code>:</p>\n<blockquote>\n<p>Currently, codegen produces unwind information only for Windows platform. We need to produce this type of information for all platforms to properly produce backtrace. See <a href=\"https://github.com/bytecodealliance/wasmtime/pull/759\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/759\">https://github.com/bytecodealliance/wasmtime/pull/759</a></p>\n<p>TODO (and requires feedback):</p>\n<ul>\n<li>[ ] use feature to cfg existing unwind logic</li>\n<li>[ ] agree on location for FDE/UNWIND_INFO logic</li>\n<li>[ ] borrow reg mapper from #902</li>\n</ul>\n<p>cc @peterhuene @iximeow </p>\n</blockquote>",
        "id": 185064041,
        "sender_full_name": "GitHub",
        "timestamp": 1578437896
    },
    {
        "content": "<p>yurydelendik submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-339561440\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-339561440\">PR Review</a>.</p>",
        "id": 185064121,
        "sender_full_name": "GitHub",
        "timestamp": 1578437969
    },
    {
        "content": "<p>yurydelendik created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r363993161\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r363993161\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Not sure if it is applied here: the FDE entry is for <code>__register_frame</code></p>\n</blockquote>",
        "id": 185064122,
        "sender_full_name": "GitHub",
        "timestamp": 1578437969
    },
    {
        "content": "<p>yurydelendik updated <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320\">PR #1320</a> from <code>unwind-fde</code> to <code>master</code>:</p>\n<blockquote>\n<p>Currently, codegen produces unwind information only for Windows platform. We need to produce this type of information for all platforms to properly produce backtrace. See <a href=\"https://github.com/bytecodealliance/wasmtime/pull/759\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/759\">https://github.com/bytecodealliance/wasmtime/pull/759</a></p>\n<p>TODO (and requires feedback):</p>\n<ul>\n<li>[ ] use feature to cfg existing unwind logic</li>\n<li>[ ] agree on location for FDE/UNWIND_INFO logic</li>\n<li>[ ] borrow reg mapper from #902</li>\n</ul>\n<p>cc @peterhuene @iximeow </p>\n</blockquote>",
        "id": 185064433,
        "sender_full_name": "GitHub",
        "timestamp": 1578438163
    },
    {
        "content": "<p>yurydelendik submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-339562842\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-339562842\">PR Review</a>.</p>",
        "id": 185064449,
        "sender_full_name": "GitHub",
        "timestamp": 1578438179
    },
    {
        "content": "<p>yurydelendik created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r363994312\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r363994312\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Changed to <code>Libunwind</code></p>\n</blockquote>",
        "id": 185064450,
        "sender_full_name": "GitHub",
        "timestamp": 1578438179
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-339557402\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-339557402\">PR Review</a>.</p>",
        "id": 185067711,
        "sender_full_name": "GitHub",
        "timestamp": 1578441186
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-339557402\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-339557402\">PR Review</a>.</p>",
        "id": 185067712,
        "sender_full_name": "GitHub",
        "timestamp": 1578441186
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r363989966\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r363989966\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Can we derive the kind from the <code>TargetIsa</code> (i.e. internal to its <code>emit_unwind_info</code> implementation) so it doesn't need to be passed in?  I don't particularly see a need for requesting a different kind of unwind info that doesn't match the ISA's calling convention.</p>\n</blockquote>",
        "id": 185067713,
        "sender_full_name": "GitHub",
        "timestamp": 1578441186
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r364007645\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r364007645\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I think we'll want to pass the sink on down into <code>UnwindInfo::emit</code> so we're not double buffering these bytes (once here and then presumably in the caller's sink impl).</p>\n</blockquote>",
        "id": 185067714,
        "sender_full_name": "GitHub",
        "timestamp": 1578441186
    },
    {
        "content": "<p>peterhuene edited <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r363989966\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r363989966\">PR Review Comment</a>.</p>",
        "id": 185067737,
        "sender_full_name": "GitHub",
        "timestamp": 1578441214
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r364008268\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r364008268\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Also, I'm totally open to renaming <code>UnwindInfo</code> so it's more specific to Windows so this gets less confusing.</p>\n</blockquote>",
        "id": 185067843,
        "sender_full_name": "GitHub",
        "timestamp": 1578441314
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-339580014\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-339580014\">PR Review</a>.</p>",
        "id": 185067844,
        "sender_full_name": "GitHub",
        "timestamp": 1578441314
    },
    {
        "content": "<p>yurydelendik submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-340085654\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-340085654\">PR Review</a>.</p>",
        "id": 185146835,
        "sender_full_name": "GitHub",
        "timestamp": 1578511051
    },
    {
        "content": "<p>yurydelendik created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r364398930\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r364398930\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Right, but now I need to specify in which format the data was produced. The caller now have to react on type of data it receives.</p>\n</blockquote>",
        "id": 185146836,
        "sender_full_name": "GitHub",
        "timestamp": 1578511051
    },
    {
        "content": "<p>yurydelendik edited <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r364398930\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r364398930\">PR Review Comment</a>.</p>",
        "id": 185146857,
        "sender_full_name": "GitHub",
        "timestamp": 1578511066
    },
    {
        "content": "<p>yurydelendik submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-340085972\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-340085972\">PR Review</a>.</p>",
        "id": 185146921,
        "sender_full_name": "GitHub",
        "timestamp": 1578511084
    },
    {
        "content": "<p>yurydelendik created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r364399181\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r364399181\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Not an issue atm.</p>\n</blockquote>",
        "id": 185146923,
        "sender_full_name": "GitHub",
        "timestamp": 1578511084
    },
    {
        "content": "<p>yurydelendik edited <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320\">PR #1320</a> from <code>unwind-fde</code> to <code>master</code>:</p>\n<blockquote>\n<p>Currently, codegen produces unwind information only for Windows platform. We need to produce this type of information for all platforms to properly produce backtrace. See <a href=\"https://github.com/bytecodealliance/wasmtime/pull/759\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/759\">https://github.com/bytecodealliance/wasmtime/pull/759</a></p>\n<p>TODO (and requires feedback):</p>\n<ul>\n<li>[ ] use feature to cfg existing unwind logic</li>\n<li>[x] agree on location for FDE/UNWIND_INFO logic</li>\n<li>[ ] borrow reg mapper from #902</li>\n</ul>\n<p>cc @peterhuene @iximeow </p>\n</blockquote>",
        "id": 185146946,
        "sender_full_name": "GitHub",
        "timestamp": 1578511103
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-340115671\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-340115671\">PR Review</a>.</p>",
        "id": 185151756,
        "sender_full_name": "GitHub",
        "timestamp": 1578514239
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r364421466\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r364421466\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I see.  Are you planning on having a sink implementation that differs based on the unwind kind then?</p>\n</blockquote>",
        "id": 185151757,
        "sender_full_name": "GitHub",
        "timestamp": 1578514239
    },
    {
        "content": "<p>yurydelendik updated <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320\">PR #1320</a> from <code>unwind-fde</code> to <code>master</code>:</p>\n<blockquote>\n<p>Currently, codegen produces unwind information only for Windows platform. We need to produce this type of information for all platforms to properly produce backtrace. See <a href=\"https://github.com/bytecodealliance/wasmtime/pull/759\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/759\">https://github.com/bytecodealliance/wasmtime/pull/759</a></p>\n<p>TODO (and requires feedback):</p>\n<ul>\n<li>[ ] use feature to cfg existing unwind logic</li>\n<li>[x] agree on location for FDE/UNWIND_INFO logic</li>\n<li>[ ] borrow reg mapper from #902</li>\n</ul>\n<p>cc @peterhuene @iximeow </p>\n</blockquote>",
        "id": 185153318,
        "sender_full_name": "GitHub",
        "timestamp": 1578515285
    },
    {
        "content": "<p>yurydelendik edited <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320\">PR #1320</a> from <code>unwind-fde</code> to <code>master</code>:</p>\n<blockquote>\n<p>Currently, codegen produces unwind information only for Windows platform. We need to produce this type of information for all platforms to properly produce backtrace. See <a href=\"https://github.com/bytecodealliance/wasmtime/pull/759\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/759\">https://github.com/bytecodealliance/wasmtime/pull/759</a></p>\n<p>TODO (and requires feedback):</p>\n<ul>\n<li>[ ] use feature to cfg existing unwind logic</li>\n<li>[x] agree on location for FDE/UNWIND_INFO logic</li>\n<li>[x] borrow reg mapper from #902</li>\n</ul>\n<p>cc @peterhuene @iximeow </p>\n</blockquote>",
        "id": 185153327,
        "sender_full_name": "GitHub",
        "timestamp": 1578515295
    },
    {
        "content": "<p>yurydelendik created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r364429070\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r364429070\">PR Review Comment</a>:</p>\n<blockquote>\n<p>That's depend on the consumer, but in case of wasmtime, I planned to have one.</p>\n</blockquote>",
        "id": 185153503,
        "sender_full_name": "GitHub",
        "timestamp": 1578515424
    },
    {
        "content": "<p>yurydelendik submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-340125980\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-340125980\">PR Review</a>.</p>",
        "id": 185153504,
        "sender_full_name": "GitHub",
        "timestamp": 1578515424
    },
    {
        "content": "<p>yurydelendik edited <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r364429070\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r364429070\">PR Review Comment</a>.</p>",
        "id": 185153524,
        "sender_full_name": "GitHub",
        "timestamp": 1578515443
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r364430138\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r364430138\">PR Review Comment</a>:</p>\n<blockquote>\n<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> </p>\n</blockquote>",
        "id": 185153733,
        "sender_full_name": "GitHub",
        "timestamp": 1578515597
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-340127460\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-340127460\">PR Review</a>.</p>",
        "id": 185153734,
        "sender_full_name": "GitHub",
        "timestamp": 1578515597
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-340153643\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-340153643\">PR Review</a>.</p>",
        "id": 185158757,
        "sender_full_name": "GitHub",
        "timestamp": 1578518777
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-340153643\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-340153643\">PR Review</a>.</p>",
        "id": 185158758,
        "sender_full_name": "GitHub",
        "timestamp": 1578518777
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r364449705\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r364449705\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Please check that the isa is x86_64 for both <code>map_reg</code> and <code>RETURN_ADDRESS_REGISTER</code>.</p>\n</blockquote>",
        "id": 185158759,
        "sender_full_name": "GitHub",
        "timestamp": 1578518777
    },
    {
        "content": "<p>yurydelendik created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r364461711\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r364461711\">PR Review Comment</a>:</p>\n<blockquote>\n<p>okay, I probably just need to implement that for X86 too.</p>\n</blockquote>",
        "id": 185160985,
        "sender_full_name": "GitHub",
        "timestamp": 1578520410
    },
    {
        "content": "<p>yurydelendik submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-340169244\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-340169244\">PR Review</a>.</p>",
        "id": 185160986,
        "sender_full_name": "GitHub",
        "timestamp": 1578520410
    },
    {
        "content": "<p>yurydelendik updated <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320\">PR #1320</a> from <code>unwind-fde</code> to <code>master</code>:</p>\n<blockquote>\n<p>Currently, codegen produces unwind information only for Windows platform. We need to produce this type of information for all platforms to properly produce backtrace. See <a href=\"https://github.com/bytecodealliance/wasmtime/pull/759\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/759\">https://github.com/bytecodealliance/wasmtime/pull/759</a></p>\n<p>TODO (and requires feedback):</p>\n<ul>\n<li>[ ] use feature to cfg existing unwind logic</li>\n<li>[x] agree on location for FDE/UNWIND_INFO logic</li>\n<li>[x] borrow reg mapper from #902</li>\n</ul>\n<p>cc @peterhuene @iximeow </p>\n</blockquote>",
        "id": 185164708,
        "sender_full_name": "GitHub",
        "timestamp": 1578522852
    },
    {
        "content": "<p>yurydelendik updated <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320\">PR #1320</a> from <code>unwind-fde</code> to <code>master</code>:</p>\n<blockquote>\n<p>Currently, codegen produces unwind information only for Windows platform. We need to produce this type of information for all platforms to properly produce backtrace. See <a href=\"https://github.com/bytecodealliance/wasmtime/pull/759\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/759\">https://github.com/bytecodealliance/wasmtime/pull/759</a></p>\n<p>TODO (and requires feedback):</p>\n<ul>\n<li>[ ] use feature to cfg existing unwind logic</li>\n<li>[x] agree on location for FDE/UNWIND_INFO logic</li>\n<li>[x] borrow reg mapper from #902</li>\n</ul>\n<p>cc @peterhuene @iximeow </p>\n</blockquote>",
        "id": 185165279,
        "sender_full_name": "GitHub",
        "timestamp": 1578523257
    },
    {
        "content": "<p>yurydelendik edited <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320\">PR #1320</a> from <code>unwind-fde</code> to <code>master</code>:</p>\n<blockquote>\n<p>Currently, codegen produces unwind information only for Windows platform. We need to produce this type of information for all platforms to properly produce backtrace. See <a href=\"https://github.com/bytecodealliance/wasmtime/pull/759\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/759\">https://github.com/bytecodealliance/wasmtime/pull/759</a></p>\n<p>TODO (and requires feedback):</p>\n<ul>\n<li>[x] use feature to cfg existing unwind logic</li>\n<li>[x] agree on location for FDE/UNWIND_INFO logic</li>\n<li>[x] borrow reg mapper from #902</li>\n</ul>\n<p>cc @peterhuene @iximeow </p>\n</blockquote>",
        "id": 185165302,
        "sender_full_name": "GitHub",
        "timestamp": 1578523272
    },
    {
        "content": "<p>philipc submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-340377422\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-340377422\">PR Review</a>.</p>",
        "id": 185194917,
        "sender_full_name": "GitHub",
        "timestamp": 1578561281
    },
    {
        "content": "<p>philipc created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r364628029\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r364628029\">PR Review Comment</a>:</p>\n<blockquote>\n<p>You should change this to only enable the \"write\" feature (also see <a href=\"https://github.com/gimli-rs/gimli/pull/466\" target=\"_blank\" title=\"https://github.com/gimli-rs/gimli/pull/466\">https://github.com/gimli-rs/gimli/pull/466</a> which reduces the number of dependencies for this).</p>\n<div class=\"codehilite\"><pre><span></span>gimli = { version = &quot;0.19.0&quot;, default-features = false, features = [&quot;write&quot;], optional = true }\n</pre></div>\n\n\n</blockquote>",
        "id": 185194918,
        "sender_full_name": "GitHub",
        "timestamp": 1578561281
    },
    {
        "content": "<p>yurydelendik updated <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320\">PR #1320</a> from <code>unwind-fde</code> to <code>master</code>:</p>\n<blockquote>\n<p>Currently, codegen produces unwind information only for Windows platform. We need to produce this type of information for all platforms to properly produce backtrace. See <a href=\"https://github.com/bytecodealliance/wasmtime/pull/759\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/759\">https://github.com/bytecodealliance/wasmtime/pull/759</a></p>\n<p>TODO (and requires feedback):</p>\n<ul>\n<li>[x] use feature to cfg existing unwind logic</li>\n<li>[x] agree on location for FDE/UNWIND_INFO logic</li>\n<li>[x] borrow reg mapper from #902</li>\n</ul>\n<p>cc @peterhuene @iximeow </p>\n</blockquote>",
        "id": 185222823,
        "sender_full_name": "GitHub",
        "timestamp": 1578584214
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-340836759\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-340836759\">PR Review</a>.</p>",
        "id": 185259902,
        "sender_full_name": "GitHub",
        "timestamp": 1578606584
    },
    {
        "content": "<p>yurydelendik updated <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320\">PR #1320</a> from <code>unwind-fde</code> to <code>master</code>:</p>\n<blockquote>\n<p>Currently, codegen produces unwind information only for Windows platform. We need to produce this type of information for all platforms to properly produce backtrace. See <a href=\"https://github.com/bytecodealliance/wasmtime/pull/759\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/759\">https://github.com/bytecodealliance/wasmtime/pull/759</a></p>\n<p>TODO (and requires feedback):</p>\n<ul>\n<li>[x] use feature to cfg existing unwind logic</li>\n<li>[x] agree on location for FDE/UNWIND_INFO logic</li>\n<li>[x] borrow reg mapper from #902</li>\n</ul>\n<p>cc @peterhuene @iximeow </p>\n</blockquote>",
        "id": 185267775,
        "sender_full_name": "GitHub",
        "timestamp": 1578612354
    },
    {
        "content": "<p>yurydelendik updated <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320\">PR #1320</a> from <code>unwind-fde</code> to <code>master</code>:</p>\n<blockquote>\n<p>Currently, codegen produces unwind information only for Windows platform. We need to produce this type of information for all platforms to properly produce backtrace. See <a href=\"https://github.com/bytecodealliance/wasmtime/pull/759\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/759\">https://github.com/bytecodealliance/wasmtime/pull/759</a></p>\n<p>TODO (and requires feedback):</p>\n<ul>\n<li>[x] use feature to cfg existing unwind logic</li>\n<li>[x] agree on location for FDE/UNWIND_INFO logic</li>\n<li>[x] borrow reg mapper from #902</li>\n</ul>\n<p>cc @peterhuene @iximeow </p>\n</blockquote>",
        "id": 185319028,
        "sender_full_name": "GitHub",
        "timestamp": 1578669627
    },
    {
        "content": "<p>yurydelendik updated <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320\">PR #1320</a> from <code>unwind-fde</code> to <code>master</code>:</p>\n<blockquote>\n<p>Currently, codegen produces unwind information only for Windows platform. We need to produce this type of information for all platforms to properly produce backtrace. See <a href=\"https://github.com/bytecodealliance/wasmtime/pull/759\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/759\">https://github.com/bytecodealliance/wasmtime/pull/759</a></p>\n<p>TODO (and requires feedback):</p>\n<ul>\n<li>[x] use feature to cfg existing unwind logic</li>\n<li>[x] agree on location for FDE/UNWIND_INFO logic</li>\n<li>[x] borrow reg mapper from #902</li>\n</ul>\n<p>cc @peterhuene @iximeow </p>\n</blockquote>",
        "id": 185356683,
        "sender_full_name": "GitHub",
        "timestamp": 1578694237
    },
    {
        "content": "<p>yurydelendik updated <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320\">PR #1320</a> from <code>unwind-fde</code> to <code>master</code>:</p>\n<blockquote>\n<p>Currently, codegen produces unwind information only for Windows platform. We need to produce this type of information for all platforms to properly produce backtrace. See <a href=\"https://github.com/bytecodealliance/wasmtime/pull/759\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/759\">https://github.com/bytecodealliance/wasmtime/pull/759</a></p>\n<p>TODO (and requires feedback):</p>\n<ul>\n<li>[x] use feature to cfg existing unwind logic</li>\n<li>[x] agree on location for FDE/UNWIND_INFO logic</li>\n<li>[x] borrow reg mapper from #902</li>\n</ul>\n<p>cc @peterhuene @iximeow </p>\n</blockquote>",
        "id": 185356763,
        "sender_full_name": "GitHub",
        "timestamp": 1578694322
    },
    {
        "content": "<p>yurydelendik updated <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320\">PR #1320</a> from <code>unwind-fde</code> to <code>master</code>:</p>\n<blockquote>\n<p>Currently, codegen produces unwind information only for Windows platform. We need to produce this type of information for all platforms to properly produce backtrace. See <a href=\"https://github.com/bytecodealliance/wasmtime/pull/759\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/759\">https://github.com/bytecodealliance/wasmtime/pull/759</a></p>\n<p>TODO (and requires feedback):</p>\n<ul>\n<li>[x] use feature to cfg existing unwind logic</li>\n<li>[x] agree on location for FDE/UNWIND_INFO logic</li>\n<li>[x] borrow reg mapper from #902</li>\n</ul>\n<p>cc @peterhuene @iximeow </p>\n</blockquote>",
        "id": 185359256,
        "sender_full_name": "GitHub",
        "timestamp": 1578696755
    },
    {
        "content": "<p>yurydelendik merged <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320\">PR #1320</a>.</p>",
        "id": 185509717,
        "sender_full_name": "GitHub",
        "timestamp": 1578933178
    },
    {
        "content": "<p>iximeow submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-342113077\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-342113077\">PR Review</a>.</p>",
        "id": 185533196,
        "sender_full_name": "GitHub",
        "timestamp": 1578946788
    },
    {
        "content": "<p>iximeow created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r366008236\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r366008236\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I don't think 8-byte absolute relocations are necessarily available for all targets - specifically, as far as I know, MachO objects only permit up to dword-size relocations. This is one of the reasons I used the address encoding <code>SDATA4</code> in #902. Are qword relocations available in MachO targets? If so, I also prefer absolute relocations, but I'd like to not exclude macos here.</p>\n</blockquote>",
        "id": 185533197,
        "sender_full_name": "GitHub",
        "timestamp": 1578946788
    },
    {
        "content": "<p>iximeow submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-342114664\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-342114664\">PR Review</a>.</p>",
        "id": 185533490,
        "sender_full_name": "GitHub",
        "timestamp": 1578946974
    },
    {
        "content": "<p>iximeow created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r366009432\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r366009432\">PR Review Comment</a>:</p>\n<blockquote>\n<p>checking that <code>pointer_bits()</code> is 64 is a good call, I'd neglected to think about 32-bit targets. That said, I'll put up a PR to extend these to support i686 register numbers (<code>gimli</code> already has constants for them!).</p>\n<p>With 32-bit register numbers, the assert would just be <code>assert!(isa.name() == \"x86\")</code>, which seems redundant given that this is in isa/<strong>x86</strong>/fde.rs.</p>\n</blockquote>",
        "id": 185533491,
        "sender_full_name": "GitHub",
        "timestamp": 1578946974
    },
    {
        "content": "<p>iximeow submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-342116821\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-342116821\">PR Review</a>.</p>",
        "id": 185533819,
        "sender_full_name": "GitHub",
        "timestamp": 1578947210
    },
    {
        "content": "<p>iximeow created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r366011034\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r366011034\">PR Review Comment</a>:</p>\n<blockquote>\n<p>other than the register mapping, and possibly code/data alignment, <code>FDE</code> generation is architecture-agnostic. I assume you rather this code in <code>cranelift-codegen</code> for use in wasmtime, but I'd like to have a very clear path to supporting other architectures. Is there another reason this would be in <code>isa/x86/</code>? If not I'd like to move it to somewhere like <code>cranelift-codegen/src/binemit/unwind.rs</code> that is more clearly independent of a specific architecture.</p>\n</blockquote>",
        "id": 185533820,
        "sender_full_name": "GitHub",
        "timestamp": 1578947210
    },
    {
        "content": "<p>iximeow submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-342117962\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-342117962\">PR Review</a>.</p>",
        "id": 185534017,
        "sender_full_name": "GitHub",
        "timestamp": 1578947342
    },
    {
        "content": "<p>iximeow created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r366011901\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r366011901\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Also on the point of being architecture agnostic, I'd specifically wanted <code>DwarfRegMapper</code> to clearly indicate how to add support for non-x86_64 architectures. You mentioned wanting <code>cranelift-module</code> changed for other reasons, is there something unsuitable about <code>struct DwarfRegMapper</code> in #902? If it was sufficient, and we're just deferring non-x86 thought for the moment, I'd like to revive <code>DwarfRegMapper</code> in a subsequent PR.</p>\n</blockquote>",
        "id": 185534018,
        "sender_full_name": "GitHub",
        "timestamp": 1578947343
    },
    {
        "content": "<p>iximeow created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r366012782\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r366012782\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I strongly prefer <code>isa::RegUnit</code> here for debugging reasons - going backwards from <code>Register</code> to <code>isa::RegUnit</code>. Does something necessitate this being <code>gimli::Register</code>?</p>\n</blockquote>",
        "id": 185534193,
        "sender_full_name": "GitHub",
        "timestamp": 1578947471
    },
    {
        "content": "<p>iximeow submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-342119095\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-342119095\">PR Review</a>.</p>",
        "id": 185534195,
        "sender_full_name": "GitHub",
        "timestamp": 1578947471
    },
    {
        "content": "<p>iximeow submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-342119722\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-342119722\">PR Review</a>.</p>",
        "id": 185534315,
        "sender_full_name": "GitHub",
        "timestamp": 1578947547
    },
    {
        "content": "<p>iximeow created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r366013257\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r366013257\">PR Review Comment</a>:</p>\n<blockquote>\n<p>quibble: if <code>X86_64::RA</code> were replaced with <code>return_address_reg(isa)</code>, <code>to_cfi</code> would not have any x86-specific details anymore</p>\n</blockquote>",
        "id": 185534316,
        "sender_full_name": "GitHub",
        "timestamp": 1578947547
    },
    {
        "content": "<p>iximeow submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-342120119\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-342120119\">PR Review</a>.</p>",
        "id": 185534369,
        "sender_full_name": "GitHub",
        "timestamp": 1578947590
    },
    {
        "content": "<p>iximeow created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r366013540\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r366013540\">PR Review Comment</a>:</p>\n<blockquote>\n<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span>! I'd not thought about basic blocks possibly being out of order in the layout.</p>\n</blockquote>",
        "id": 185534370,
        "sender_full_name": "GitHub",
        "timestamp": 1578947590
    },
    {
        "content": "<p>iximeow submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-342121288\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-342121288\">PR Review</a>.</p>",
        "id": 185534550,
        "sender_full_name": "GitHub",
        "timestamp": 1578947724
    },
    {
        "content": "<p>iximeow created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r366014477\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r366014477\">PR Review Comment</a>:</p>\n<blockquote>\n<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span>! I was extremely unsure how to test that #902 generated expected unwind information, other than checking that Lucet could unwind correctly with those patches. This is great, thank you.</p>\n</blockquote>",
        "id": 185534551,
        "sender_full_name": "GitHub",
        "timestamp": 1578947724
    },
    {
        "content": "<p>iximeow submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-342123979\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-342123979\">PR Review</a>.</p>",
        "id": 185535066,
        "sender_full_name": "GitHub",
        "timestamp": 1578948027
    },
    {
        "content": "<p>iximeow created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r366016546\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r366016546\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I'm not sure if this just snuck by in review or not, but I'd at the very least want an explanation next to this pointer read with why it will be safe. I'd like to replace this with <code>u32::from_le_bytes(bytes.as_slice()[..8].try_into())</code> - since the checks here aren't in a particularly hot path it seems like that shouldn't be an issue?</p>\n</blockquote>",
        "id": 185535067,
        "sender_full_name": "GitHub",
        "timestamp": 1578948027
    },
    {
        "content": "<p>yurydelendik submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-342136713\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-342136713\">PR Review</a>.</p>",
        "id": 185537251,
        "sender_full_name": "GitHub",
        "timestamp": 1578949397
    },
    {
        "content": "<p>yurydelendik created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r366026424\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r366026424\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This serialization targets specific use case of libunwind (in context of JIT), and it requires FDE in specific format. This PR will not address other use cases.</p>\n</blockquote>",
        "id": 185537252,
        "sender_full_name": "GitHub",
        "timestamp": 1578949397
    },
    {
        "content": "<p>yurydelendik submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-342137767\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-342137767\">PR Review</a>.</p>",
        "id": 185537393,
        "sender_full_name": "GitHub",
        "timestamp": 1578949513
    },
    {
        "content": "<p>yurydelendik created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r366027204\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r366027204\">PR Review Comment</a>:</p>\n<blockquote>\n<blockquote>\n<p>the assert would just be assert!(isa.name() == \"x86\"), which seems redundant given that this is in isa/x86/fde.rs.</p>\n</blockquote>\n<p>yes, I just wanted to address the reviewer's comment to complete satisfaction and note that function is indeed x86 specific.</p>\n</blockquote>",
        "id": 185537394,
        "sender_full_name": "GitHub",
        "timestamp": 1578949513
    },
    {
        "content": "<p>yurydelendik submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-342138822\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-342138822\">PR Review</a>.</p>",
        "id": 185537599,
        "sender_full_name": "GitHub",
        "timestamp": 1578949628
    },
    {
        "content": "<p>yurydelendik created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r366027977\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r366027977\">PR Review Comment</a>:</p>\n<blockquote>\n<p>yep, that's a bug</p>\n</blockquote>",
        "id": 185537600,
        "sender_full_name": "GitHub",
        "timestamp": 1578949628
    },
    {
        "content": "<p>iximeow submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-342144750\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-342144750\">PR Review</a>.</p>",
        "id": 185538603,
        "sender_full_name": "GitHub",
        "timestamp": 1578950252
    },
    {
        "content": "<p>iximeow created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r366032722\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r366032722\">PR Review Comment</a>:</p>\n<blockquote>\n<p>good to know, thank you - I'll be revising #902 to support writing .eh_frame to object files, and I'll make sure to preserve this relocation style.</p>\n</blockquote>",
        "id": 185538605,
        "sender_full_name": "GitHub",
        "timestamp": 1578950252
    },
    {
        "content": "<p>philipc submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-342881056\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-342881056\">PR Review</a>.</p>",
        "id": 185647858,
        "sender_full_name": "GitHub",
        "timestamp": 1579040803
    },
    {
        "content": "<p>philipc created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r366605936\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r366605936\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Use <code>eh_frame.0</code> instead of <code>eh_frame.clone()</code>.</p>\n</blockquote>",
        "id": 185647859,
        "sender_full_name": "GitHub",
        "timestamp": 1579040803
    },
    {
        "content": "<p>philipc submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-342883315\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#pullrequestreview-342883315\">PR Review</a>.</p>",
        "id": 185648309,
        "sender_full_name": "GitHub",
        "timestamp": 1579041092
    },
    {
        "content": "<p>philipc created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r366607644\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1320#discussion_r366607644\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This whole thing is fighting against the gimli API a bit. You're using <code>FrameTable</code> to write a single CIE and FDE, and then trying to figure out the FDE offset.</p>\n<p>How about if gimli made the CIE/FDE write methods public, and then you can call those methods instead of using <code>FrameTable</code>, and get the FDE offset simply as <code>bytes.len()</code> prior to calling the FDE write?</p>\n</blockquote>",
        "id": 185648310,
        "sender_full_name": "GitHub",
        "timestamp": 1579041092
    }
]