[
    {
        "content": "<p>iximeow opened <a href=\"https://github.com/bytecodealliance/cranelift/issues/1353\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1353\">Issue #1353</a>:</p>\n<blockquote>\n<p>Now that <code>finalize_definitions</code> is called by default when finalizing a module (since #1290), calling it in an application using Cranelift is likely either an unintentional second call to <code>finalize_definitions</code>, or an outright error. If the lifecycle of finalization is entirely internal to <code>Module</code> (as it seems it ought to be), we ought to make this non-public and avoid some misuse.</p>\n<p>I happened to trip across this when revisiting some code written before this change was made, where this might have more clearly signalled what changed in the mean time.</p>\n</blockquote>",
        "id": 185873387,
        "sender_full_name": "GitHub",
        "timestamp": 1579217303
    },
    {
        "content": "<p>philipc <a href=\"https://github.com/bytecodealliance/cranelift/issues/1353#issuecomment-575406602\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1353#issuecomment-575406602\">commented</a> on <a href=\"https://github.com/bytecodealliance/cranelift/issues/1353\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1353\">Issue #1353</a>:</p>\n<blockquote>\n<p>This is true for <code>cranelift-faerie</code> and <code>cranelift-object</code>, but I don't think it is true for <code>cranelift-simplejit</code>. I'm not very familiar with <code>cranelift-simplejit</code> (who uses it?),  but it seems to me that for it you need to call <code>finalize_definitions</code>, then run the code, then call <code>finish</code> when you are done (e.g. see <a href=\"https://github.com/bjorn3/rustc_codegen_cranelift/blob/160dcefab87e6b1feb64b43339657debcd8eee30/src/driver.rs#L65-L87\" target=\"_blank\" title=\"https://github.com/bjorn3/rustc_codegen_cranelift/blob/160dcefab87e6b1feb64b43339657debcd8eee30/src/driver.rs#L65-L87\">rustc_codegen_cranelift</a>).</p>\n<p>So maybe a better fix is to revert #1290 and handle the <code>cranelift-object</code> relocations in <code>finish</code> instead of <code>finalize_definitions</code>.</p>\n<p>Also, I thought you were using <code>cranelift-faerie</code>, and I thought it doesn't do anything to finalize anyway? Did I miss something?</p>\n</blockquote>",
        "id": 185875998,
        "sender_full_name": "GitHub",
        "timestamp": 1579219946
    },
    {
        "content": "<p>iximeow <a href=\"https://github.com/bytecodealliance/cranelift/issues/1353#issuecomment-575425010\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1353#issuecomment-575425010\">commented</a> on <a href=\"https://github.com/bytecodealliance/cranelift/issues/1353\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1353\">Issue #1353</a>:</p>\n<blockquote>\n<p>I _think_ <code>cranelift-simplejit</code> is only used in a demo (there was an issue reported a little while ago related to said demo being bitrotted, even?) but generally if we can't guarantee <code>finalize_definitions</code> must be called before <code>finish</code> then I agree we probably should revert #1290 and adjust <code>cranelift-object</code> appropriately.</p>\n<p>re. <code>cranelift-faerie</code>, I'm revisiting #902 for unwinding in lucet-runtime, which <a href=\"https://github.com/bytecodealliance/cranelift/pull/902/files#diff-d7afe207f401b8b8ea597ee075eb7237L311\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/902/files#diff-d7afe207f401b8b8ea597ee075eb7237L311\">does add logic to publish</a>. I think that would need to stick around even if much of the rest has been supplanted by the FDE work merged this week, but I'm still figuring that out.</p>\n</blockquote>",
        "id": 185879970,
        "sender_full_name": "GitHub",
        "timestamp": 1579224791
    },
    {
        "content": "<p>philipc <a href=\"https://github.com/bytecodealliance/cranelift/issues/1353#issuecomment-575430338\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1353#issuecomment-575430338\">commented</a> on <a href=\"https://github.com/bytecodealliance/cranelift/issues/1353\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1353\">Issue #1353</a>:</p>\n<blockquote>\n<p>Could that logic you added in <code>publish</code> be moved to <code>finish</code> too?</p>\n</blockquote>",
        "id": 185881073,
        "sender_full_name": "GitHub",
        "timestamp": 1579226340
    },
    {
        "content": "<p>iximeow <a href=\"https://github.com/bytecodealliance/cranelift/issues/1353#issuecomment-575434955\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1353#issuecomment-575434955\">commented</a> on <a href=\"https://github.com/bytecodealliance/cranelift/issues/1353\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1353\">Issue #1353</a>:</p>\n<blockquote>\n<p>I don't see a reason why not. Pretty sure I picked <code>finalize_definitions</code> because it seemed like writing <code>.eh_frame</code> is part of finalizing definitions in a module, but it fits with <code>finish</code> fine. I'd add that the doc comment on <code>finalize_definitions</code> might be better off referencing <code>cranelift-simplejit</code> for an example of what applicable logic for <code>finalize_definitions</code> is.</p>\n</blockquote>",
        "id": 185881892,
        "sender_full_name": "GitHub",
        "timestamp": 1579227653
    },
    {
        "content": "<p>jyn514 <a href=\"https://github.com/bytecodealliance/cranelift/issues/1353#issuecomment-575444819\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1353#issuecomment-575444819\">commented</a> on <a href=\"https://github.com/bytecodealliance/cranelift/issues/1353\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1353\">Issue #1353</a>:</p>\n<blockquote>\n<blockquote>\n<p>I'm not very familiar with cranelift-simplejit (who uses it?), but it seems to me that for it you need to call finalize_definitions, then run the code, then call finish when you are done (e.g. see rustc_codegen_cranelift).</p>\n</blockquote>\n<p>Since there's a valid use case for calling <code>finalize_definitions</code> before <code>finish</code>, is there a reason not to keep both functions as public?</p>\n</blockquote>",
        "id": 185883915,
        "sender_full_name": "GitHub",
        "timestamp": 1579230646
    },
    {
        "content": "<p>philipc <a href=\"https://github.com/bytecodealliance/cranelift/issues/1353#issuecomment-575446828\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1353#issuecomment-575446828\">commented</a> on <a href=\"https://github.com/bytecodealliance/cranelift/issues/1353\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1353\">Issue #1353</a>:</p>\n<blockquote>\n<blockquote>\n<p>Since there's a valid use case for calling finalize_definitions before finish, is there a reason not to keep both functions as public?</p>\n</blockquote>\n<p>Right, so what I'm proposing is keep them both public, and move <code>cranelift-object</code>'s relocation processing to <code>finish</code>, and then #1290 is no longer necessary. (This is also what I proposed in  <a href=\"https://github.com/bytecodealliance/cranelift/issues/1288#issuecomment-565753519\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1288#issuecomment-565753519\">https://github.com/bytecodealliance/cranelift/issues/1288#issuecomment-565753519</a>).</p>\n</blockquote>",
        "id": 185884321,
        "sender_full_name": "GitHub",
        "timestamp": 1579231248
    },
    {
        "content": "<p>jyn514 <a href=\"https://github.com/bytecodealliance/cranelift/issues/1353#issuecomment-575447652\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1353#issuecomment-575447652\">commented</a> on <a href=\"https://github.com/bytecodealliance/cranelift/issues/1353\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1353\">Issue #1353</a>:</p>\n<blockquote>\n<p>Ok, in that case I think there should be more documentation about what it means to 'finish' a module vs 'finalize_definitions'. I know it's meant to be independent of the backend, but you could give examples that <code>cranelift-object</code> and <code>cranelift-faerie</code> emits relocations after <code>finish()</code> and <code>cranelift-simplejit</code> compiles functions after <code>finalize_definitions</code>.</p>\n</blockquote>",
        "id": 185884487,
        "sender_full_name": "GitHub",
        "timestamp": 1579231477
    },
    {
        "content": "<p>bnjbvr <a href=\"https://github.com/bytecodealliance/cranelift/issues/1353#issuecomment-576368417\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1353#issuecomment-576368417\">commented</a> on <a href=\"https://github.com/bytecodealliance/cranelift/issues/1353\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1353\">Issue #1353</a>:</p>\n<blockquote>\n<p>As a random thought, it would be good to rename both \"finish\" and \"finalize_definitions\" into some things that are more self-explanatory and help distinguishing between the twos, if we could.</p>\n</blockquote>",
        "id": 186120208,
        "sender_full_name": "GitHub",
        "timestamp": 1579541046
    },
    {
        "content": "<p>philipc <a href=\"https://github.com/bytecodealliance/cranelift/issues/1353#issuecomment-576507169\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1353#issuecomment-576507169\">commented</a> on <a href=\"https://github.com/bytecodealliance/cranelift/issues/1353\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1353\">Issue #1353</a>:</p>\n<blockquote>\n<p>@iximeow I can work on fixing this if you haven't already.</p>\n</blockquote>",
        "id": 186151056,
        "sender_full_name": "GitHub",
        "timestamp": 1579578772
    },
    {
        "content": "<p>iximeow <a href=\"https://github.com/bytecodealliance/cranelift/issues/1353#issuecomment-576777530\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1353#issuecomment-576777530\">commented</a> on <a href=\"https://github.com/bytecodealliance/cranelift/issues/1353\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1353\">Issue #1353</a>:</p>\n<blockquote>\n<p>@philipc go for it, i'm pretty sure i have my week cut out for me already</p>\n</blockquote>",
        "id": 186203149,
        "sender_full_name": "GitHub",
        "timestamp": 1579625952
    },
    {
        "content": "<p>bnjbvr closed <a href=\"https://github.com/bytecodealliance/cranelift/issues/1353\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1353\">Issue #1353</a>:</p>\n<blockquote>\n<p>Now that <code>finalize_definitions</code> is called by default when finalizing a module (since #1290), calling it in an application using Cranelift is likely either an unintentional second call to <code>finalize_definitions</code>, or an outright error. If the lifecycle of finalization is entirely internal to <code>Module</code> (as it seems it ought to be), we ought to make this non-public and avoid some misuse.</p>\n<p>I happened to trip across this when revisiting some code written before this change was made, where this might have more clearly signalled what changed in the mean time.</p>\n</blockquote>",
        "id": 187804373,
        "sender_full_name": "GitHub",
        "timestamp": 1581331333
    }
]