[
    {
        "content": "<p>froydnj opened <a href=\"https://github.com/bytecodealliance/cranelift/pull/1400\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1400\">PR #1400</a> from <code>raw-output</code> to <code>master</code>:</p>\n<blockquote>\n<ul>\n<li>[X] This has been discussed in issue #1386.</li>\n<li>[X] A short description of what this does, why it is needed: for certain functions (<code>lucet</code>'s stack probe code is the motivating example), generating them via cranelift is not necessarily feasible.  Other compilers have recognized this and provided inline assembly for such cases.  This interface can be thought of as a very primitive form of inline assembly (and a limited form; e.g. relocations are not currently supported).  The overarching intent is to make <code>cranelift-module</code>'s API rich enough that <code>lucet</code> can operate entirely within <code>cranelift-module</code>'s API and not have to drop down to <code>faerie</code> or <code>object</code>.  See #1386 for more details.</li>\n<li>[X] This PR does not contain test cases.</li>\n<li>[X] A reviewer from the core maintainer team has been assigned for this PR.</li>\n</ul>\n</blockquote>",
        "id": 188752882,
        "sender_full_name": "GitHub",
        "timestamp": 1582305325
    },
    {
        "content": "<p><strong>froydnj</strong> requested <a href=\"https://github.com/iximeow\" target=\"_blank\" title=\"https://github.com/iximeow\">iximeow</a> for a review on <a href=\"https://github.com/bytecodealliance/cranelift/pull/1400\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1400\">PR #1400</a>.</p>",
        "id": 188752901,
        "sender_full_name": "GitHub",
        "timestamp": 1582305336
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1400#pullrequestreview-362787651\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1400#pullrequestreview-362787651\">PR Review</a>.</p>",
        "id": 188753512,
        "sender_full_name": "GitHub",
        "timestamp": 1582305664
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1400#pullrequestreview-362787651\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1400#pullrequestreview-362787651\">PR Review</a>.</p>",
        "id": 188753513,
        "sender_full_name": "GitHub",
        "timestamp": 1582305664
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1400#discussion_r382705894\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1400#discussion_r382705894\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Maybe extract this as a function to be used in <code>define_function</code> too.</p>\n</blockquote>",
        "id": 188753514,
        "sender_full_name": "GitHub",
        "timestamp": 1582305664
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1400#discussion_r382704877\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1400#discussion_r382704877\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Nit: comments missing trailing dots.</p>\n</blockquote>",
        "id": 188753515,
        "sender_full_name": "GitHub",
        "timestamp": 1582305664
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1400#discussion_r382706104\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1400#discussion_r382706104\">PR Review Comment</a>:</p>\n<blockquote>\n<div class=\"codehilite\"><pre><span></span>            relocs: vec![],\n</pre></div>\n\n\n</blockquote>",
        "id": 188753516,
        "sender_full_name": "GitHub",
        "timestamp": 1582305664
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1400#pullrequestreview-362871580\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1400#pullrequestreview-362871580\">PR Review</a>.</p>",
        "id": 188766953,
        "sender_full_name": "GitHub",
        "timestamp": 1582314095
    },
    {
        "content": "<p>froydnj updated <a href=\"https://github.com/bytecodealliance/cranelift/pull/1400\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1400\">PR #1400</a> from <code>raw-output</code> to <code>master</code>:</p>\n<blockquote>\n<ul>\n<li>[X] This has been discussed in issue #1386.</li>\n<li>[X] A short description of what this does, why it is needed: for certain functions (<code>lucet</code>'s stack probe code is the motivating example), generating them via cranelift is not necessarily feasible.  Other compilers have recognized this and provided inline assembly for such cases.  This interface can be thought of as a very primitive form of inline assembly (and a limited form; e.g. relocations are not currently supported).  The overarching intent is to make <code>cranelift-module</code>'s API rich enough that <code>lucet</code> can operate entirely within <code>cranelift-module</code>'s API and not have to drop down to <code>faerie</code> or <code>object</code>.  See #1386 for more details.</li>\n<li>[X] This PR does not contain test cases.</li>\n<li>[X] A reviewer from the core maintainer team has been assigned for this PR.</li>\n</ul>\n</blockquote>",
        "id": 188772793,
        "sender_full_name": "GitHub",
        "timestamp": 1582318148
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1400#pullrequestreview-362909416\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1400#pullrequestreview-362909416\">PR Review</a>.</p>",
        "id": 188773059,
        "sender_full_name": "GitHub",
        "timestamp": 1582318332
    },
    {
        "content": "<p>iximeow submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1400#pullrequestreview-362910096\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1400#pullrequestreview-362910096\">PR Review</a>.</p>",
        "id": 188773159,
        "sender_full_name": "GitHub",
        "timestamp": 1582318412
    },
    {
        "content": "<p>froydnj updated <a href=\"https://github.com/bytecodealliance/cranelift/pull/1400\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1400\">PR #1400</a> from <code>raw-output</code> to <code>master</code>:</p>\n<blockquote>\n<ul>\n<li>[X] This has been discussed in issue #1386.</li>\n<li>[X] A short description of what this does, why it is needed: for certain functions (<code>lucet</code>'s stack probe code is the motivating example), generating them via cranelift is not necessarily feasible.  Other compilers have recognized this and provided inline assembly for such cases.  This interface can be thought of as a very primitive form of inline assembly (and a limited form; e.g. relocations are not currently supported).  The overarching intent is to make <code>cranelift-module</code>'s API rich enough that <code>lucet</code> can operate entirely within <code>cranelift-module</code>'s API and not have to drop down to <code>faerie</code> or <code>object</code>.  See #1386 for more details.</li>\n<li>[X] This PR does not contain test cases.</li>\n<li>[X] A reviewer from the core maintainer team has been assigned for this PR.</li>\n</ul>\n</blockquote>",
        "id": 188779531,
        "sender_full_name": "GitHub",
        "timestamp": 1582322964
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1400#pullrequestreview-362949239\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1400#pullrequestreview-362949239\">PR Review</a>.</p>",
        "id": 188779793,
        "sender_full_name": "GitHub",
        "timestamp": 1582323214
    },
    {
        "content": "<p>pchickey merged <a href=\"https://github.com/bytecodealliance/cranelift/pull/1400\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1400\">PR #1400</a>.</p>",
        "id": 188783799,
        "sender_full_name": "GitHub",
        "timestamp": 1582326879
    }
]