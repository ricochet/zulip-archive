[
    {
        "content": "<p>EliSnow <a href=\"https://github.com/bytecodealliance/cranelift/issues/1260#issuecomment-572141363\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1260#issuecomment-572141363\">commented</a> on <a href=\"https://github.com/bytecodealliance/cranelift/issues/1260\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1260\">Issue #1260</a>:</p>\n<blockquote>\n<p>Along with this is it possible to dealloc global values which are used by a jitted function?</p>\n</blockquote>",
        "id": 185128356,
        "sender_full_name": "GitHub",
        "timestamp": 1578499986
    },
    {
        "content": "<p>alexcrichton transferred <a href=\"https://github.com/bytecodealliance/cranelift/issues/1260\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1260\">Issue #1260</a>:</p>\n<blockquote>\n<ul>\n<li>What is the feature or code improvement you would like to do in Cranelift? See title.</li>\n<li>What is the value of adding this in Cranelift? This makes it possible to implement a JIT repl which deallocs any functions which won't be used anymore, for example because it has changed.</li>\n<li>\n<p>Do you have an implementation plan, and/or ideas for data structures or<br>\n  algorithms to use?</p>\n</li>\n<li>\n<p>Have you considered alternative implementations? If so, how are they better<br>\n  or worse than your proposal?</p>\n</li>\n</ul>\n<p>See <a href=\"https://zulip-archive.rust-lang.org/131828tcompiler/81358REPLCraneliftbackend.html#182197469\" target=\"_blank\" title=\"https://zulip-archive.rust-lang.org/131828tcompiler/81358REPLCraneliftbackend.html#182197469\">https://zulip-archive.rust-lang.org/131828tcompiler/81358REPLCraneliftbackend.html#182197469</a> for context.</p>\n</blockquote>",
        "id": 189361669,
        "sender_full_name": "GitHub",
        "timestamp": 1582932466
    }
]