[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/cranelift/issues/1408\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1408\">Issue #1408</a>:</p>\n<blockquote>\n<p>Discussed at yesterday's meeting I wanted to open an issue tracking progress for merging the wasmtime/cranelift repositories. I think there are three major work items that need to happen:</p>\n<h2>Performing the actual merge</h2>\n<p>There's a few different ways to do the merge here, but I'd like to propose that the following steps are done. </p>\n<ul>\n<li>Run <code>git filter-branch --tree-filter $HOME/rewrite-cranelift.sh HEAD</code> in the cranelift repository on the commit we want to merge in. The script <a href=\"https://gist.github.com/alexcrichton/c85fa26854af2d58142b6675027961b3\" target=\"_blank\" title=\"https://gist.github.com/alexcrichton/c85fa26854af2d58142b6675027961b3\">looks like this</a>.</li>\n<li>Next create a merge commit with the wasmtime head commit and this new commit. The state at this point would look like <a href=\"https://github.com/alexcrichton/wasmtime/tree/cranelift-merge\" target=\"_blank\" title=\"https://github.com/alexcrichton/wasmtime/tree/cranelift-merge\">https://github.com/alexcrichton/wasmtime/tree/cranelift-merge</a><ul>\n<li>This needs the <code>--allow-unrelated-histories</code> flag</li>\n</ul>\n</li>\n<li>Next do a bunch of manual work including:<ul>\n<li>Merge CI systems</li>\n<li>Tidy up readmes/top-level markdowns/licenses/etc</li>\n<li>Tidy up workspaces so there's only one</li>\n<li>Update various scripts for testing</li>\n</ul>\n</li>\n</ul>\n<p>I suspect the last part is going to be pretty significant here, so I'll be prototyping that before we actually do the merge since we want the \"shut down window\" to be as small as possible. I'll post here with the work when I get it set up. If folks have workflows though that go beyond <code>cargo test</code> and want to make sure any scripts and such keep working, let me know! I'll try to make sure they work in the new repository.</p>\n<h2>Transferring open issues</h2>\n<p>This will involve creating a script to migrate all open issues from the bytecodealliance/cranelift repository to bytecodealliance/wasmtime. I don't believe such a script exists, but it'll get gisted here before the move is done.</p>\n<h2>Making it easier to migrate open PRs</h2>\n<p>I'm on the hook for creating <em>something</em> to make it easy-ish to transfer open PRs to the wasmtime repository. My current thinking is the script would look like:</p>\n<ul>\n<li>Fork wasmtime</li>\n<li>Go into your local cranelift repository</li>\n<li>Check out your PR</li>\n<li>Squash your commits into one commit, <code>$pr</code></li>\n<li>`git remote add wasmtime <a href=\"https://github.com/bytecodealliance/wasmtime\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime\">https://github.com/bytecodealliance/wasmtime</a></li>\n<li><code>git fetch wasmtime</code></li>\n<li><code>git merge-base $pr wasmtime/master</code> -- record this as <code>$base</code></li>\n<li>Run <code>git diff $base...$pr &gt; foo.patch</code></li>\n<li>Somehow edit the paths in <code>foo.patch</code> to all point to <code>crates/cranelift/*</code> instead of <code>cranelift-*</code></li>\n<li>Save <code>foo.patch</code> somewhere else</li>\n<li><code>git reset --hard wasmtime/master</code></li>\n<li><code>patch -Np1 &lt; foo.patch</code></li>\n<li><code>git commit -C $pr</code></li>\n<li>Push that commit as a PR against wasmtime</li>\n</ul>\n<p>I'll run through this myself and confirm this works, posting the results here.</p>\n</blockquote>",
        "id": 189048564,
        "sender_full_name": "GitHub",
        "timestamp": 1582656555
    },
    {
        "content": "<p>iximeow <a href=\"https://github.com/bytecodealliance/cranelift/issues/1408#issuecomment-591010420\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1408#issuecomment-591010420\">commented</a> on <a href=\"https://github.com/bytecodealliance/cranelift/issues/1408\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1408\">Issue #1408</a>:</p>\n<blockquote>\n<p>Has there been discussion of _why_ we want to merge the Cranelift and Wasmtime repos somewhere? I know it's been on the cranelift meeting agenda for the past few weeks but I never saw context for it there either.</p>\n</blockquote>",
        "id": 189048942,
        "sender_full_name": "GitHub",
        "timestamp": 1582656853
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/cranelift/issues/1408#issuecomment-591012182\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1408#issuecomment-591012182\">commented</a> on <a href=\"https://github.com/bytecodealliance/cranelift/issues/1408\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1408\">Issue #1408</a>:</p>\n<blockquote>\n<ul>\n<li>\n<p>Can the crates be moved to <code>cranelift/*</code> instead of <code>crates/cranelift/*</code>, to avoid a level of indirection?</p>\n</li>\n<li>\n<p>How should open PR's be migrated? Re-opening them in the new repo will loose scatter the discussion.</p>\n</li>\n<li>\n<p>Merging Cranelift and Wasmtime doesn't make much sense to me. Cranelift is independent of Wasmtime, and is a dependency of many other projects, like wasmer, lucet, rustc_codegen_cranelift, ... By merging the Cranelift and Wasmtime repo's people will likely think that Cranelift is tightly coupled to Wasmtime.</p>\n</li>\n</ul>\n</blockquote>",
        "id": 189049257,
        "sender_full_name": "GitHub",
        "timestamp": 1582657074
    },
    {
        "content": "<p>bjorn3 edited a <a href=\"https://github.com/bytecodealliance/cranelift/issues/1408#issuecomment-591012182\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1408#issuecomment-591012182\">comment</a> on <a href=\"https://github.com/bytecodealliance/cranelift/issues/1408\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1408\">Issue #1408</a>:</p>\n<blockquote>\n<ul>\n<li>\n<p>Can the crates be moved to <code>cranelift/*</code> instead of <code>crates/cranelift/*</code>, to avoid a level of indirection?</p>\n</li>\n<li>\n<p>Re-opening PR's on the new repo will scatter the discussion between the old cranelift repo and the new wasmtime + cranelift repo.</p>\n</li>\n<li>\n<p>Merging Cranelift and Wasmtime doesn't make much sense to me. Cranelift is independent of Wasmtime, and is a dependency of many other projects, like wasmer, lucet, rustc_codegen_cranelift, ... By merging the Cranelift and Wasmtime repo's people will likely think that Cranelift is tightly coupled to Wasmtime.</p>\n</li>\n</ul>\n</blockquote>",
        "id": 189049376,
        "sender_full_name": "GitHub",
        "timestamp": 1582657135
    },
    {
        "content": "<p>bjorn3 edited a <a href=\"https://github.com/bytecodealliance/cranelift/issues/1408#issuecomment-591012182\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1408#issuecomment-591012182\">comment</a> on <a href=\"https://github.com/bytecodealliance/cranelift/issues/1408\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1408\">Issue #1408</a>:</p>\n<blockquote>\n<ul>\n<li>\n<p>Can the crates be moved to <code>cranelift/*</code> instead of <code>crates/cranelift/*</code>, to avoid a level of indirection?</p>\n</li>\n<li>\n<p>Re-opening PR's on the new repo will scatter the discussion between the old cranelift repo and the new wasmtime + cranelift repo.</p>\n</li>\n<li>\n<p>Merging Cranelift and Wasmtime doesn't make much sense to me. Cranelift is independent of Wasmtime, and is a dependency of many other projects, like wasmer, lucet, rustc_codegen_cranelift, ... By merging the Cranelift and Wasmtime repo's people will likely think that Cranelift is tightly coupled to Wasmtime.</p>\n</li>\n<li>\n<p>By merging Cranelift and Wasmtime, I either have to accept that I will get notifications about Wasmtime issues and PR's, which I am <strong>not</strong> interested in, or I have to unwatch the combined repo, in which case I will miss Cranelift issues and PR's, which I <strong>am</strong> interested in.</p>\n</li>\n</ul>\n</blockquote>",
        "id": 189049565,
        "sender_full_name": "GitHub",
        "timestamp": 1582657262
    },
    {
        "content": "<p>alexcrichton edited <a href=\"https://github.com/bytecodealliance/cranelift/issues/1408\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1408\">Issue #1408</a>:</p>\n<blockquote>\n<p>Discussed at yesterday's meeting I wanted to open an issue tracking progress for merging the wasmtime/cranelift repositories. I think there are three major work items that need to happen:</p>\n<h2>Performing the actual merge</h2>\n<p>There's a few different ways to do the merge here, but I'd like to propose that the following steps are done. </p>\n<ul>\n<li>Run <code>git filter-branch --tree-filter $HOME/rewrite-cranelift.sh HEAD</code> in the cranelift repository on the commit we want to merge in. The script <a href=\"https://gist.github.com/alexcrichton/c85fa26854af2d58142b6675027961b3\" target=\"_blank\" title=\"https://gist.github.com/alexcrichton/c85fa26854af2d58142b6675027961b3\">looks like this</a>.</li>\n<li>Next create a merge commit with the wasmtime head commit and this new commit. The state at this point would look like <a href=\"https://github.com/alexcrichton/wasmtime/tree/cranelift-merge\" target=\"_blank\" title=\"https://github.com/alexcrichton/wasmtime/tree/cranelift-merge\">https://github.com/alexcrichton/wasmtime/tree/cranelift-merge</a><ul>\n<li>This needs the <code>--allow-unrelated-histories</code> flag</li>\n</ul>\n</li>\n<li>Next do a bunch of manual work including:<ul>\n<li>Merge CI systems</li>\n<li>Tidy up readmes/top-level markdowns/licenses/etc</li>\n<li>Tidy up workspaces so there's only one</li>\n<li>Update various scripts for testing</li>\n<li><a href=\"https://github.com/alexcrichton/wasmtime/commits/cranelift-merge-afterwards\" target=\"_blank\" title=\"https://github.com/alexcrichton/wasmtime/commits/cranelift-merge-afterwards\">You can see a preview of this work</a> and what all got merged/moved</li>\n</ul>\n</li>\n</ul>\n<p>If folks have workflows though that go beyond <code>cargo test</code> and want to make sure any scripts and such keep working, let me know! I'll try to make sure they work in the new repository.</p>\n<h2>Transferring open issues</h2>\n<p>This will involve creating a script to migrate all open issues from the bytecodealliance/cranelift repository to bytecodealliance/wasmtime. I don't believe such a script exists, but it'll get gisted here before the move is done.</p>\n<p>I think the general guidelines for this will be:</p>\n<ul>\n<li>Audit <a href=\"https://github.com/bytecodealliance/wasmtime/labels\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/labels\">wasmtime labels</a> to ensure that they contain all relevant <a href=\"https://github.com/bytecodealliance/cranelift/labels\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/labels\">cranelift labels</a>. We should have a mapping from all cranelift labels to wasmtime labels.</li>\n<li>Use GitHub's transfer issue feature to transfer all issues, using the above label mapping, to transfer issues to the wasmtime repository.</li>\n</ul>\n<h2>Making it easier to migrate open PRs</h2>\n<p>I'm on the hook for creating <em>something</em> to make it easy-ish to transfer open PRs to the wasmtime repository. My current thinking is the script would look like:</p>\n<ul>\n<li>Fork wasmtime</li>\n<li>Go into your local cranelift repository</li>\n<li>Check out your PR</li>\n<li>Squash your commits into one commit, <code>$pr</code></li>\n<li>`git remote add wasmtime <a href=\"https://github.com/bytecodealliance/wasmtime\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime\">https://github.com/bytecodealliance/wasmtime</a></li>\n<li><code>git fetch wasmtime</code></li>\n<li><code>git merge-base $pr wasmtime/master</code> -- record this as <code>$base</code></li>\n<li>Run <code>git diff $base...$pr &gt; foo.patch</code></li>\n<li>Somehow edit the paths in <code>foo.patch</code> to all point to <code>crates/cranelift/*</code> instead of <code>cranelift-*</code></li>\n<li>Save <code>foo.patch</code> somewhere else</li>\n<li><code>git reset --hard wasmtime/master</code></li>\n<li><code>patch -Np1 &lt; foo.patch</code></li>\n<li><code>git commit -C $pr</code></li>\n<li>Push that commit as a PR against wasmtime</li>\n</ul>\n<p>I'll run through this myself and confirm this works, posting the results here.</p>\n</blockquote>",
        "id": 189055451,
        "sender_full_name": "GitHub",
        "timestamp": 1582661034
    },
    {
        "content": "<p>tschneidereit <a href=\"https://github.com/bytecodealliance/cranelift/issues/1408#issuecomment-591050388\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1408#issuecomment-591050388\">commented</a> on <a href=\"https://github.com/bytecodealliance/cranelift/issues/1408\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1408\">Issue #1408</a>:</p>\n<blockquote>\n<p>The merge was discussed a few months ago. Originally we had wanted to do this as part of the move to the Bytecode Alliance GitHub org, but then had to put it on the backburner because it became clear that the complications @alexcrichton mentions above would take longer to work through.</p>\n<p>I'll give a longer explanation below, but to put one thing front-and-center, <strong>the merge is not in any way about tightly coupling Cranelift to Wasmtime</strong>. Speaking with my Mozilla hat on, that doesn't make sense, because SpiderMonkey is, if anything, the more important embedding. And neither does it make sense from a Bytecode Alliance perspective: as @bjorn3 points out, with Lucet we have another embedding that's in production and really important. And we're also big fans of rustc_codegen_cranelift, and certainly don't want that to not be supported.</p>\n<p>The current setup causes us to have significant inefficiencies in our workflows, because we often have to do things in Cranelift and a runtime in parallel, and coordinate landing and CI runs, etc. We realized this will become much worse over time, because we need to be able to fully test features that have tight compiler/runtime interactions.</p>\n<p>Right now, we have somewhat rudimentary support for testing these kinds of features in Cranelift, but with various upcoming features—such as Interface Types, Linking, and GC—we need something much more sophisticated. We came to the conclusion that by far the best way to do this is to have that runtime be Wasmtime, because otherwise we'd end up duplicating a lot of functionality. And we'd not really have something that's production-quality, meaning that the quality of the integration would always be worse than what it could be with Wasmtime.</p>\n<p>Unfortunately, this is currently not possible: circular dependencies are hugely painful across separate repositories, and just doesn't seem viable. Hence the plan to merge the repositories.</p>\n<p>We believe the downsides this brings are solidly outweighed by the advantage of improving the productivity of people working on both Cranelift and Wasmtime—and thus ultimately also benefit other embeddings of Cranelift.</p>\n<p>We’ll of course continue doing individual crate releases on <a href=\"http://crates.io\" target=\"_blank\" title=\"http://crates.io\">crates.io</a>, and we’ll make sure to have good Cranelift documentation independent from Wasmtime. We’ll provide more info about good workflows (including things around notification handling) based on these merged repositories once we get closer to actually doing the merge.</p>\n</blockquote>",
        "id": 189057206,
        "sender_full_name": "GitHub",
        "timestamp": 1582662152
    },
    {
        "content": "<p>alexcrichton edited <a href=\"https://github.com/bytecodealliance/cranelift/issues/1408\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1408\">Issue #1408</a>:</p>\n<blockquote>\n<p>Discussed at yesterday's meeting I wanted to open an issue tracking progress for merging the wasmtime/cranelift repositories. I think there are three major work items that need to happen:</p>\n<h2>Performing the actual merge</h2>\n<p>There's a few different ways to do the merge here, but I'd like to propose that the following steps are done. </p>\n<ul>\n<li>Run <code>git filter-branch --tree-filter $HOME/rewrite-cranelift.sh HEAD</code> in the cranelift repository on the commit we want to merge in. The script <a href=\"https://gist.github.com/alexcrichton/c85fa26854af2d58142b6675027961b3\" target=\"_blank\" title=\"https://gist.github.com/alexcrichton/c85fa26854af2d58142b6675027961b3\">looks like this</a>.</li>\n<li>Next create a merge commit with the wasmtime head commit and this new commit. The state at this point would look like <a href=\"https://github.com/alexcrichton/wasmtime/tree/cranelift-merge\" target=\"_blank\" title=\"https://github.com/alexcrichton/wasmtime/tree/cranelift-merge\">https://github.com/alexcrichton/wasmtime/tree/cranelift-merge</a><ul>\n<li>This needs the <code>--allow-unrelated-histories</code> flag</li>\n</ul>\n</li>\n<li>Next do a bunch of manual work including:<ul>\n<li>Merge CI systems</li>\n<li>Tidy up readmes/top-level markdowns/licenses/etc</li>\n<li>Tidy up workspaces so there's only one</li>\n<li>Update various scripts for testing</li>\n<li><a href=\"https://github.com/alexcrichton/wasmtime/commits/cranelift-merge-afterwards\" target=\"_blank\" title=\"https://github.com/alexcrichton/wasmtime/commits/cranelift-merge-afterwards\">You can see a preview of this work</a> and what all got merged/moved</li>\n</ul>\n</li>\n</ul>\n<p>If folks have workflows though that go beyond <code>cargo test</code> and want to make sure any scripts and such keep working, let me know! I'll try to make sure they work in the new repository.</p>\n<h2>Transferring open issues</h2>\n<p>This will involve creating a script to migrate all open issues from the bytecodealliance/cranelift repository to bytecodealliance/wasmtime. </p>\n<p>I think the general guidelines for this will be:</p>\n<ul>\n<li>Audit <a href=\"https://github.com/bytecodealliance/wasmtime/labels\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/labels\">wasmtime labels</a> to ensure that they contain all relevant <a href=\"https://github.com/bytecodealliance/cranelift/labels\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/labels\">cranelift labels</a>. We should have a mapping from all cranelift labels to wasmtime labels.</li>\n<li>Use GitHub's transfer issue feature to transfer all issues, using the above label mapping, to transfer issues to the wasmtime repository.</li>\n</ul>\n<p>script: <a href=\"https://gist.github.com/alexcrichton/ef102cb315e548c92fd671c198da9aa2\" target=\"_blank\" title=\"https://gist.github.com/alexcrichton/ef102cb315e548c92fd671c198da9aa2\">https://gist.github.com/alexcrichton/ef102cb315e548c92fd671c198da9aa2</a></p>\n<h2>Making it easier to migrate open PRs</h2>\n<p>I'm on the hook for creating <em>something</em> to make it easy-ish to transfer open PRs to the wasmtime repository. My current thinking is the script would look like:</p>\n<ul>\n<li>Fork wasmtime</li>\n<li>Go into your local cranelift repository</li>\n<li>Check out your PR</li>\n<li>Squash your commits into one commit, <code>$pr</code></li>\n<li>`git remote add wasmtime <a href=\"https://github.com/bytecodealliance/wasmtime\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime\">https://github.com/bytecodealliance/wasmtime</a></li>\n<li><code>git fetch wasmtime</code></li>\n<li><code>git merge-base $pr wasmtime/master</code> -- record this as <code>$base</code></li>\n<li>Run <code>git diff $base...$pr &gt; foo.patch</code></li>\n<li>Somehow edit the paths in <code>foo.patch</code> to all point to <code>crates/cranelift/*</code> instead of <code>cranelift-*</code></li>\n<li>Save <code>foo.patch</code> somewhere else</li>\n<li><code>git reset --hard wasmtime/master</code></li>\n<li><code>patch -Np1 &lt; foo.patch</code></li>\n<li><code>git commit -C $pr</code></li>\n<li>Push that commit as a PR against wasmtime</li>\n</ul>\n<p>I'll run through this myself and confirm this works, posting the results here.</p>\n</blockquote>",
        "id": 189077950,
        "sender_full_name": "GitHub",
        "timestamp": 1582679419
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/cranelift/issues/1408#issuecomment-591182868\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1408#issuecomment-591182868\">commented</a> on <a href=\"https://github.com/bytecodealliance/cranelift/issues/1408\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1408\">Issue #1408</a>:</p>\n<blockquote>\n<p>Ok I've created a sample repository of what the final merge looks like -- <a href=\"https://github.com/alexcrichton/wasmtime/commits/cranelift-merge-afterwards\" target=\"_blank\" title=\"https://github.com/alexcrichton/wasmtime/commits/cranelift-merge-afterwards\">https://github.com/alexcrichton/wasmtime/commits/cranelift-merge-afterwards</a> -- which has merges of CI, fuzzers, documentation, etc. Feel free to play around in that repo and let me know if you find any issues! </p>\n<p>I've also created a script -- <a href=\"https://gist.github.com/alexcrichton/ef102cb315e548c92fd671c198da9aa2\" target=\"_blank\" title=\"https://gist.github.com/alexcrichton/ef102cb315e548c92fd671c198da9aa2\">https://gist.github.com/alexcrichton/ef102cb315e548c92fd671c198da9aa2</a> -- to transfer all issues from one repository to another, while preserving labels. Tomorrow I'll work on how to transfer PRs in an \"easy\" fashion.</p>\n</blockquote>",
        "id": 189077977,
        "sender_full_name": "GitHub",
        "timestamp": 1582679496
    },
    {
        "content": "<p>alexcrichton edited <a href=\"https://github.com/bytecodealliance/cranelift/issues/1408\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1408\">Issue #1408</a>:</p>\n<blockquote>\n<p>Discussed at yesterday's meeting I wanted to open an issue tracking progress for merging the wasmtime/cranelift repositories. I think there are three major work items that need to happen:</p>\n<h2>Performing the actual merge</h2>\n<p>There's a few different ways to do the merge here, but I'd like to propose that the following steps are done. </p>\n<ul>\n<li>Run <code>git filter-branch --tree-filter $HOME/rewrite-cranelift.sh HEAD</code> in the cranelift repository on the commit we want to merge in. The script <a href=\"https://gist.github.com/alexcrichton/c85fa26854af2d58142b6675027961b3\" target=\"_blank\" title=\"https://gist.github.com/alexcrichton/c85fa26854af2d58142b6675027961b3\">looks like this</a>.</li>\n<li>Next create a merge commit with the wasmtime head commit and this new commit. The state at this point would look like <a href=\"https://github.com/alexcrichton/wasmtime/tree/cranelift-merge\" target=\"_blank\" title=\"https://github.com/alexcrichton/wasmtime/tree/cranelift-merge\">https://github.com/alexcrichton/wasmtime/tree/cranelift-merge</a><ul>\n<li>This needs the <code>--allow-unrelated-histories</code> flag</li>\n</ul>\n</li>\n<li>Next do a bunch of manual work including:<ul>\n<li>Merge CI systems</li>\n<li>Tidy up readmes/top-level markdowns/licenses/etc</li>\n<li>Tidy up workspaces so there's only one</li>\n<li>Update various scripts for testing</li>\n<li><a href=\"https://github.com/alexcrichton/wasmtime/commits/cranelift-merge-afterwards\" target=\"_blank\" title=\"https://github.com/alexcrichton/wasmtime/commits/cranelift-merge-afterwards\">You can see a preview of this work</a> and what all got merged/moved</li>\n</ul>\n</li>\n</ul>\n<p>If folks have workflows though that go beyond <code>cargo test</code> and want to make sure any scripts and such keep working, let me know! I'll try to make sure they work in the new repository.</p>\n<h2>Transferring open issues</h2>\n<p>This will involve creating a script to migrate all open issues from the bytecodealliance/cranelift repository to bytecodealliance/wasmtime. </p>\n<p>I think the general guidelines for this will be:</p>\n<ul>\n<li>Audit <a href=\"https://github.com/bytecodealliance/wasmtime/labels\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/labels\">wasmtime labels</a> to ensure that they contain all relevant <a href=\"https://github.com/bytecodealliance/cranelift/labels\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/labels\">cranelift labels</a>. We should have a mapping from all cranelift labels to wasmtime labels.</li>\n<li>Use GitHub's transfer issue feature to transfer all issues, using the above label mapping, to transfer issues to the wasmtime repository.</li>\n</ul>\n<p>script: <a href=\"https://gist.github.com/alexcrichton/ef102cb315e548c92fd671c198da9aa2\" target=\"_blank\" title=\"https://gist.github.com/alexcrichton/ef102cb315e548c92fd671c198da9aa2\">https://gist.github.com/alexcrichton/ef102cb315e548c92fd671c198da9aa2</a></p>\n<h2>Making it easier to migrate open PRs</h2>\n<p>I've <a href=\"https://gist.github.com/alexcrichton/8cb3f4ef7c25317ba6824ee31e3e53aa\" target=\"_blank\" title=\"https://gist.github.com/alexcrichton/8cb3f4ef7c25317ba6824ee31e3e53aa\">created a script</a> which should ideally make it easy to transfer PRs from one repository to another. The general gist of that script is something like this:</p>\n<ul>\n<li>We'll pick a commit to merge cranelift into wasmtime. We'll push two commits into this <code>cranelift</code> repository at that time: <code>before-merge</code> and <code>after-move</code>. The <code>before-merge</code> commit is the one we decided to merge into wasmtime. The <code>after-move</code> commit is a single extra commit with the rewrite script from the first step applied.</li>\n<li>You'll check out your local branch and run the provided script here, that will do the following...</li>\n<li>First it will fetch cranelift remote information</li>\n<li>Next it will rebase on <code>before-merge</code>, to make sure your PR is up-to-date. You may want to do this manually first.</li>\n<li>Next it rebase onto the <code>after-move</code> commit. Git should automatically detect all your renamed files, and everything should get moved around automatically.</li>\n<li>Next it'll fetch wasmtime's information (currently my own temporary repository and temporary branch)</li>\n<li>Finally it'll cherry-pick your changes, which are changes at the right paths, onto the wasmtime repository.</li>\n</ul>\n<p>At that point you should have a local git commit you can push up to your wasmtime fork and send as a PR. We'll need to, however, close PRs as they're reopened on wasmtime. </p>\n<p>Once this all actually happens I can drop a comment on each PR with precise instructions with an updated script that has all the variables sorted out.</p>\n</blockquote>",
        "id": 189129625,
        "sender_full_name": "GitHub",
        "timestamp": 1582733993
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/cranelift/issues/1408#issuecomment-591513263\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1408#issuecomment-591513263\">commented</a> on <a href=\"https://github.com/bytecodealliance/cranelift/issues/1408\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1408\">Issue #1408</a>:</p>\n<blockquote>\n<p>Ok I've now also created a script -- <a href=\"https://gist.github.com/alexcrichton/8cb3f4ef7c25317ba6824ee31e3e53aa\" target=\"_blank\" title=\"https://gist.github.com/alexcrichton/8cb3f4ef7c25317ba6824ee31e3e53aa\">https://gist.github.com/alexcrichton/8cb3f4ef7c25317ba6824ee31e3e53aa</a> -- to rebase a PR on the <code>wasmtime</code> repository. The tl;dr; is that you use <code>git rebase</code> to move all the files for you, then you <code>cherry-pick</code> all the commits onto the wasmtime repo. </p>\n<p>I've updated the description above, and that should make it so we're all set from a tooling perspective. I think now we just need a good time to pull the trigger!</p>\n</blockquote>",
        "id": 189129759,
        "sender_full_name": "GitHub",
        "timestamp": 1582734071
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/cranelift/issues/1408#issuecomment-591680559\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1408#issuecomment-591680559\">commented</a> on <a href=\"https://github.com/bytecodealliance/cranelift/issues/1408\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1408\">Issue #1408</a>:</p>\n<blockquote>\n<p>I've created a <a href=\"#narrow/stream/217117-cranelift/topic/merge.20repo.20with.20wasmtime\" title=\"#narrow/stream/217117-cranelift/topic/merge.20repo.20with.20wasmtime\">zulip stream</a> if folks want to chat about this as well, and also as a less \"email the world on everything\" way to coordinate.</p>\n</blockquote>",
        "id": 189168079,
        "sender_full_name": "GitHub",
        "timestamp": 1582756641
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/cranelift/issues/1408#issuecomment-592593379\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1408#issuecomment-592593379\">commented</a> on <a href=\"https://github.com/bytecodealliance/cranelift/issues/1408\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1408\">Issue #1408</a>:</p>\n<blockquote>\n<p>Ok unless there's any objects that come up, I plan on tackling this in the afternoon today and performing the actual merge. If you've got any concerns it's best to <a href=\"#narrow/stream/217117-cranelift/topic/merge.20repo.20with.20wasmtime\" title=\"#narrow/stream/217117-cranelift/topic/merge.20repo.20with.20wasmtime\">bring them up in zulip</a> and @-mention me. </p>\n<p>One final question being considered is the final crate organization. The example above has <code>crates/cranelift/$crate</code>, but it sounds like we're now leaning towards <code>cranelift/$crate</code> or <code>cranelift/crates/$crate</code></p>\n</blockquote>",
        "id": 189326135,
        "sender_full_name": "GitHub",
        "timestamp": 1582907772
    },
    {
        "content": "<p>alexcrichton transferred <a href=\"https://github.com/bytecodealliance/cranelift/issues/1408\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1408\">Issue #1408</a>:</p>\n<blockquote>\n<p>Discussed at yesterday's meeting I wanted to open an issue tracking progress for merging the wasmtime/cranelift repositories. I think there are three major work items that need to happen:</p>\n<h2>Performing the actual merge</h2>\n<p>There's a few different ways to do the merge here, but I'd like to propose that the following steps are done. </p>\n<ul>\n<li>Run <code>git filter-branch --tree-filter $HOME/rewrite-cranelift.sh HEAD</code> in the cranelift repository on the commit we want to merge in. The script <a href=\"https://gist.github.com/alexcrichton/c85fa26854af2d58142b6675027961b3\" target=\"_blank\" title=\"https://gist.github.com/alexcrichton/c85fa26854af2d58142b6675027961b3\">looks like this</a>.</li>\n<li>Next create a merge commit with the wasmtime head commit and this new commit. The state at this point would look like <a href=\"https://github.com/alexcrichton/wasmtime/tree/cranelift-merge\" target=\"_blank\" title=\"https://github.com/alexcrichton/wasmtime/tree/cranelift-merge\">https://github.com/alexcrichton/wasmtime/tree/cranelift-merge</a><ul>\n<li>This needs the <code>--allow-unrelated-histories</code> flag</li>\n</ul>\n</li>\n<li>Next do a bunch of manual work including:<ul>\n<li>Merge CI systems</li>\n<li>Tidy up readmes/top-level markdowns/licenses/etc</li>\n<li>Tidy up workspaces so there's only one</li>\n<li>Update various scripts for testing</li>\n<li><a href=\"https://github.com/alexcrichton/wasmtime/commits/cranelift-merge-afterwards\" target=\"_blank\" title=\"https://github.com/alexcrichton/wasmtime/commits/cranelift-merge-afterwards\">You can see a preview of this work</a> and what all got merged/moved</li>\n</ul>\n</li>\n</ul>\n<p>If folks have workflows though that go beyond <code>cargo test</code> and want to make sure any scripts and such keep working, let me know! I'll try to make sure they work in the new repository.</p>\n<h2>Transferring open issues</h2>\n<p>This will involve creating a script to migrate all open issues from the bytecodealliance/cranelift repository to bytecodealliance/wasmtime. </p>\n<p>I think the general guidelines for this will be:</p>\n<ul>\n<li>Audit <a href=\"https://github.com/bytecodealliance/wasmtime/labels\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/labels\">wasmtime labels</a> to ensure that they contain all relevant <a href=\"https://github.com/bytecodealliance/cranelift/labels\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/labels\">cranelift labels</a>. We should have a mapping from all cranelift labels to wasmtime labels.</li>\n<li>Use GitHub's transfer issue feature to transfer all issues, using the above label mapping, to transfer issues to the wasmtime repository.</li>\n</ul>\n<p>script: <a href=\"https://gist.github.com/alexcrichton/ef102cb315e548c92fd671c198da9aa2\" target=\"_blank\" title=\"https://gist.github.com/alexcrichton/ef102cb315e548c92fd671c198da9aa2\">https://gist.github.com/alexcrichton/ef102cb315e548c92fd671c198da9aa2</a></p>\n<h2>Making it easier to migrate open PRs</h2>\n<p>I've <a href=\"https://gist.github.com/alexcrichton/8cb3f4ef7c25317ba6824ee31e3e53aa\" target=\"_blank\" title=\"https://gist.github.com/alexcrichton/8cb3f4ef7c25317ba6824ee31e3e53aa\">created a script</a> which should ideally make it easy to transfer PRs from one repository to another. The general gist of that script is something like this:</p>\n<ul>\n<li>We'll pick a commit to merge cranelift into wasmtime. We'll push two commits into this <code>cranelift</code> repository at that time: <code>before-merge</code> and <code>after-move</code>. The <code>before-merge</code> commit is the one we decided to merge into wasmtime. The <code>after-move</code> commit is a single extra commit with the rewrite script from the first step applied.</li>\n<li>You'll check out your local branch and run the provided script here, that will do the following...</li>\n<li>First it will fetch cranelift remote information</li>\n<li>Next it will rebase on <code>before-merge</code>, to make sure your PR is up-to-date. You may want to do this manually first.</li>\n<li>Next it rebase onto the <code>after-move</code> commit. Git should automatically detect all your renamed files, and everything should get moved around automatically.</li>\n<li>Next it'll fetch wasmtime's information (currently my own temporary repository and temporary branch)</li>\n<li>Finally it'll cherry-pick your changes, which are changes at the right paths, onto the wasmtime repository.</li>\n</ul>\n<p>At that point you should have a local git commit you can push up to your wasmtime fork and send as a PR. We'll need to, however, close PRs as they're reopened on wasmtime. </p>\n<p>Once this all actually happens I can drop a comment on each PR with precise instructions with an updated script that has all the variables sorted out.</p>\n</blockquote>",
        "id": 189361789,
        "sender_full_name": "GitHub",
        "timestamp": 1582932540
    }
]