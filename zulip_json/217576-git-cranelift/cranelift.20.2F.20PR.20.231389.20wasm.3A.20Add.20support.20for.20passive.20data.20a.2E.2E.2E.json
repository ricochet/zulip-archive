[
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/eqrion\" target=\"_blank\" title=\"https://github.com/eqrion\">eqrion</a> for a review on <a href=\"https://github.com/bytecodealliance/cranelift/pull/1389\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1389\">PR #1389</a>.</p>",
        "id": 188085356,
        "sender_full_name": "GitHub",
        "timestamp": 1581580884
    },
    {
        "content": "<p>fitzgen opened <a href=\"https://github.com/bytecodealliance/cranelift/pull/1389\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1389\">PR #1389</a> from <code>passive-elems-and-passive-data</code> to <code>master</code>:</p>\n<blockquote>\n<ul>\n<li>\n<p>[X] This has been discussed in issue <a href=\"https://github.com/bytecodealliance/wasmtime/issues/928\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/928\">https://github.com/bytecodealliance/wasmtime/issues/928</a></p>\n</li>\n<li>\n<p>[X] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n<p>This is part of the bulk memory and reference types proposals.</p>\n</li>\n<li>\n<p>[X] This PR contains test cases, if meaningful.</p>\n</li>\n<li>\n<p>[X] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so and/or ping<br>\n<code>bnjbvr</code>. The list of suggested reviewers on the right can help you.</p>\n</li>\n</ul>\n<p>&lt;!-- Please ensure all communication adheres to the <a href=\"https://github.com/CraneStation/cranelift/blob/master/CODE_OF_CONDUCT.md\" target=\"_blank\" title=\"https://github.com/CraneStation/cranelift/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>. --&gt;</p>\n</blockquote>",
        "id": 188085357,
        "sender_full_name": "GitHub",
        "timestamp": 1581580884
    },
    {
        "content": "<p>eqrion submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1389#pullrequestreview-359149320\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1389#pullrequestreview-359149320\">PR Review</a>.</p>",
        "id": 188234442,
        "sender_full_name": "GitHub",
        "timestamp": 1581706441
    },
    {
        "content": "<p>eqrion created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1389#discussion_r379590605\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1389#discussion_r379590605\">PR Review Comment</a>:</p>\n<blockquote>\n<p>What's idiomatic rust for unused function arguments? In <code>dummy.rs</code> I see unused function arguments prefixed with <code>_</code>, and here we're adding a <code>_</code> use inside of the function def. I'm fine with either, but would prefer it to be consistent.</p>\n</blockquote>",
        "id": 188234443,
        "sender_full_name": "GitHub",
        "timestamp": 1581706441
    },
    {
        "content": "<p>eqrion submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1389#pullrequestreview-359152322\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1389#pullrequestreview-359152322\">PR Review</a>.</p>",
        "id": 188235009,
        "sender_full_name": "GitHub",
        "timestamp": 1581706735
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1389#pullrequestreview-359155172\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1389#pullrequestreview-359155172\">PR Review</a>.</p>",
        "id": 188235560,
        "sender_full_name": "GitHub",
        "timestamp": 1581707040
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1389#discussion_r379595033\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1389#discussion_r379595033\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Prefixing the argument with <code>_</code> is the most common. (I haven't every seen it this way :) )</p>\n</blockquote>",
        "id": 188235561,
        "sender_full_name": "GitHub",
        "timestamp": 1581707041
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1389#pullrequestreview-359370512\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1389#pullrequestreview-359370512\">PR Review</a>.</p>",
        "id": 188302112,
        "sender_full_name": "GitHub",
        "timestamp": 1581807160
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1389#discussion_r379861183\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1389#discussion_r379861183\">PR Review Comment</a>:</p>\n<blockquote>\n<p>It is true that one would usually use <code>_prefix</code>, but because it is in a trait method's default implementation, that underscore would become part of the variable names in the auto-generated rustdocs. The separate underscore is to avoid underscore-prefixed variable names in the rustdocs.</p>\n</blockquote>",
        "id": 188302113,
        "sender_full_name": "GitHub",
        "timestamp": 1581807160
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/cranelift/pull/1389\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1389\">PR #1389</a>.</p>",
        "id": 188302125,
        "sender_full_name": "GitHub",
        "timestamp": 1581807214
    }
]