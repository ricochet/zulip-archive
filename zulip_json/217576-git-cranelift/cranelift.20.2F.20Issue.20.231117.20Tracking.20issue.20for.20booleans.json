[
    {
        "content": "<p>EliSnow <a href=\"https://github.com/bytecodealliance/cranelift/issues/1117#issuecomment-570496828\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1117#issuecomment-570496828\">commented</a> on <a href=\"https://github.com/bytecodealliance/cranelift/issues/1117\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1117\">Issue #1117</a>:</p>\n<blockquote>\n<p><code>bxor_not</code> seems to also not work with a boolean value</p>\n</blockquote>",
        "id": 184717071,
        "sender_full_name": "GitHub",
        "timestamp": 1578038820
    },
    {
        "content": "<p>alexcrichton transferred <a href=\"https://github.com/bytecodealliance/cranelift/issues/1117\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1117\">Issue #1117</a>:</p>\n<blockquote>\n<p>See vaguely #922, #466, and <a href=\"https://github.com/jyn514/rcc/issues/92\" target=\"_blank\" title=\"https://github.com/jyn514/rcc/issues/92\">https://github.com/jyn514/rcc/issues/92</a>. An easy way to do this might be to convert from bool -&gt; int -&gt; bool and back as suggested in <a href=\"https://github.com/CraneStation/cranelift/issues/922#issuecomment-523931097\" target=\"_blank\" title=\"https://github.com/CraneStation/cranelift/issues/922#issuecomment-523931097\">https://github.com/CraneStation/cranelift/issues/922#issuecomment-523931097</a>.</p>\n<ul>\n<li>[ ] bnot<br>\nOnly occurs if you return the value (maybe would also happen for function calls?)</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span>function u0:0() -&gt; i32 system_v {\nebb0:\n    v0 = iconst.i32 1\n    v1 = icmp_imm ne v0, 0\n    v2 = bnot v1\n    v3 = bint.i32 v2\n    return v3\n}\n\ncodegen error: Compilation error: Verifier errors:\n\n- inst2: v2 is a real GPR value defined by a ghost instruction\n</pre></div>\n\n\n<ul>\n<li>[ ] bnz<br>\nNote: this only occurs when the values are <code>i8</code>, not for <code>i32</code>, and it occurs during codegen, not verification.</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span>function u0:0() system_v {\nebb0:\n    v0 = iconst.i8 0\n    v1 = iconst.i8 0\n    v2 = icmp ne v0, v1\n    brz v2, ebb1\n    return\n\nebb1:\n    return\n}\n\ncodegen error: Compilation error: Verifier errors:\n\n- inst3: Branch must have an encoding\n</pre></div>\n\n\n<ul>\n<li>[ ] <code>store</code></li>\n</ul>\n<div class=\"codehilite\"><pre><span></span>function u0:0() -&gt; i32 system_v {\n    ss0 = explicit_slot 1\n\nebb0:\n    v0 = bconst.b1 true\n    v1 = stack_addr.i64 ss0\n    store v0, v1\n    v2 = iconst.i32 0\n    return v2\n}\n\nfatal: - inst2: has an invalid controlling type b1\n</pre></div>\n\n\n<ul>\n<li>[ ] <code>bor</code></li>\n</ul>\n<div class=\"codehilite\"><pre><span></span>function u0:0() -&gt; i32 system_v {\n    ss0 = explicit_slot 1\n\nebb0:\n    v0 = stack_addr.i64 ss0\n    v1 = bconst.b1 true\n    v2 = load.b1 v0\n    v3 = bor v2, v1\n    store v3, v0\n    v4 = iconst.i32 0\n    return v4\n}\n\nfatal: - inst2: has an invalid controlling type b1\n\n- inst4: has an invalid controlling type b1\n</pre></div>\n\n\n</blockquote>",
        "id": 189361610,
        "sender_full_name": "GitHub",
        "timestamp": 1582932428
    }
]