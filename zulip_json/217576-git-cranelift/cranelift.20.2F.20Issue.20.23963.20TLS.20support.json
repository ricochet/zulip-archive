[
    {
        "content": "<p>abrown closed <a href=\"https://github.com/bytecodealliance/cranelift/issues/963\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/963\">Issue #963</a>:</p>\n<blockquote>\n<ul>\n<li>What is the feature or code improvement you would like to do in Cranelift? Supporting native TLS.</li>\n<li>What is the value of adding this in Cranelift? This is required for <a href=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/388\" target=\"_blank\" title=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/388\">https://github.com/bjorn3/rustc_codegen_cranelift/issues/388</a> (support multithreading in cg_clif)</li>\n<li>\n<p>Do you have an implementation plan, and/or ideas for data structures or<br>\n  algorithms to use? Do the same thing as LLVM</p>\n</li>\n<li>\n<p>Have you considered alternative implementations? If so, how are they better<br>\n  or worse than your proposal?<br>\n    * Use a TLS base like Spidermonkey. That would make it impossible to interface with TLS variables created by LLVM or any other compiler which uses the native TLS facilities. It also wouldn't work when linking multiple objects together, as the native linker doesn't understand anything about it. Lastly it requires reserving a register, which won't work well when interfacing with C.</p>\n</li>\n</ul>\n<p>Edit: filled in new issue template</p>\n</blockquote>",
        "id": 189079780,
        "sender_full_name": "GitHub",
        "timestamp": 1582681806
    }
]