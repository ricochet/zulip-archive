[
    {
        "content": "<p>bjorn3 edited <a href=\"https://github.com/bytecodealliance/cranelift/pull/1174\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1174\">PR #1174</a> from <code>tls_support</code> to <code>master</code>:</p>\n<blockquote>\n<p>This adds TLS (thread local storage) support for ELF targets to Cranelift</p>\n<ul>\n<li>[x] ASM of the <code>tls_example.clif</code> file has been verifier to match the ASM emitted by LLVM at <a href=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-531466812\" target=\"_blank\" title=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-531466812\">https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-531466812</a></li>\n<li>[x] Test runtime: object::write doesn't have enough TLS support yet to test execution.</li>\n<li>[ ] Verify encodings are correct and idiomatic.</li>\n<li>[x] Rustfmt</li>\n<li>[x] Add flag to switch between TLS styles (ELF, machO) and set it automatically from either codegen or backends.</li>\n<li>\n<p>[ ] Add tests</p>\n</li>\n<li>\n<p>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so and/or ping<br>\n<code>bnjbvr</code>. &lt;strike&gt;The list of suggested reviewers on the right can help you.&lt;/strike&gt; No list of suggested reviewers shown on the right side.</p>\n</li>\n</ul>\n<p>Fixes #963</p>\n<p>cc @philipc <a href=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-526909856\" target=\"_blank\" title=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-526909856\">https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-526909856</a><br>\ncc @abrown Because you implemented SIMD support for x86, I think you know enough of x86 encodings to verify that the encodings are correct.</p>\n</blockquote>",
        "id": 186621464,
        "sender_full_name": "GitHub",
        "timestamp": 1580044682
    },
    {
        "content": "<p>bjorn3 updated <a href=\"https://github.com/bytecodealliance/cranelift/pull/1174\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1174\">PR #1174</a> from <code>tls_support</code> to <code>master</code>:</p>\n<blockquote>\n<p>This adds TLS (thread local storage) support for ELF targets to Cranelift</p>\n<ul>\n<li>[x] ASM of the <code>tls_example.clif</code> file has been verifier to match the ASM emitted by LLVM at <a href=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-531466812\" target=\"_blank\" title=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-531466812\">https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-531466812</a></li>\n<li>[x] Test runtime: object::write doesn't have enough TLS support yet to test execution.</li>\n<li>[ ] Verify encodings are correct and idiomatic.</li>\n<li>[x] Rustfmt</li>\n<li>[x] Add flag to switch between TLS styles (ELF, machO) and set it automatically from either codegen or backends.</li>\n<li>\n<p>[ ] Add tests</p>\n</li>\n<li>\n<p>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so and/or ping<br>\n<code>bnjbvr</code>. &lt;strike&gt;The list of suggested reviewers on the right can help you.&lt;/strike&gt; No list of suggested reviewers shown on the right side.</p>\n</li>\n</ul>\n<p>Fixes #963</p>\n<p>cc @philipc <a href=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-526909856\" target=\"_blank\" title=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-526909856\">https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-526909856</a><br>\ncc @abrown Because you implemented SIMD support for x86, I think you know enough of x86 encodings to verify that the encodings are correct.</p>\n</blockquote>",
        "id": 188143532,
        "sender_full_name": "GitHub",
        "timestamp": 1581623554
    },
    {
        "content": "<p>bjorn3 updated <a href=\"https://github.com/bytecodealliance/cranelift/pull/1174\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1174\">PR #1174</a> from <code>tls_support</code> to <code>master</code>:</p>\n<blockquote>\n<p>This adds TLS (thread local storage) support for ELF targets to Cranelift</p>\n<ul>\n<li>[x] ASM of the <code>tls_example.clif</code> file has been verifier to match the ASM emitted by LLVM at <a href=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-531466812\" target=\"_blank\" title=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-531466812\">https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-531466812</a></li>\n<li>[x] Test runtime: object::write doesn't have enough TLS support yet to test execution.</li>\n<li>[ ] Verify encodings are correct and idiomatic.</li>\n<li>[x] Rustfmt</li>\n<li>[x] Add flag to switch between TLS styles (ELF, machO) and set it automatically from either codegen or backends.</li>\n<li>\n<p>[ ] Add tests</p>\n</li>\n<li>\n<p>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so and/or ping<br>\n<code>bnjbvr</code>. &lt;strike&gt;The list of suggested reviewers on the right can help you.&lt;/strike&gt; No list of suggested reviewers shown on the right side.</p>\n</li>\n</ul>\n<p>Fixes #963</p>\n<p>cc @philipc <a href=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-526909856\" target=\"_blank\" title=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-526909856\">https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-526909856</a><br>\ncc @abrown Because you implemented SIMD support for x86, I think you know enough of x86 encodings to verify that the encodings are correct.</p>\n</blockquote>",
        "id": 188208398,
        "sender_full_name": "GitHub",
        "timestamp": 1581689091
    },
    {
        "content": "<p>bjorn3 updated <a href=\"https://github.com/bytecodealliance/cranelift/pull/1174\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1174\">PR #1174</a> from <code>tls_support</code> to <code>master</code>:</p>\n<blockquote>\n<p>This adds TLS (thread local storage) support for ELF targets to Cranelift</p>\n<ul>\n<li>[x] ASM of the <code>tls_example.clif</code> file has been verifier to match the ASM emitted by LLVM at <a href=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-531466812\" target=\"_blank\" title=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-531466812\">https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-531466812</a></li>\n<li>[x] Test runtime: object::write doesn't have enough TLS support yet to test execution.</li>\n<li>[ ] Verify encodings are correct and idiomatic.</li>\n<li>[x] Rustfmt</li>\n<li>[x] Add flag to switch between TLS styles (ELF, machO) and set it automatically from either codegen or backends.</li>\n<li>\n<p>[ ] Add tests</p>\n</li>\n<li>\n<p>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so and/or ping<br>\n<code>bnjbvr</code>. &lt;strike&gt;The list of suggested reviewers on the right can help you.&lt;/strike&gt; No list of suggested reviewers shown on the right side.</p>\n</li>\n</ul>\n<p>Fixes #963</p>\n<p>cc @philipc <a href=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-526909856\" target=\"_blank\" title=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-526909856\">https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-526909856</a><br>\ncc @abrown Because you implemented SIMD support for x86, I think you know enough of x86 encodings to verify that the encodings are correct.</p>\n</blockquote>",
        "id": 188215283,
        "sender_full_name": "GitHub",
        "timestamp": 1581693838
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1174#pullrequestreview-363569382\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1174#pullrequestreview-363569382\">PR Review</a>.</p>",
        "id": 188948609,
        "sender_full_name": "GitHub",
        "timestamp": 1582566316
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1174#pullrequestreview-363569382\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1174#pullrequestreview-363569382\">PR Review</a>.</p>",
        "id": 188948610,
        "sender_full_name": "GitHub",
        "timestamp": 1582566316
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1174#discussion_r383407878\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1174#discussion_r383407878\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Instead of having a <code>tls_value</code> instruction, would it work to just continue to use <code>symbol_value</code> here, and use the <code>tls</code> flag of <code>gv</code> to determine whether it's TLS or not? You could add a <code>is_tls_data</code> predicate function which could work the same way as <code>is_colocated_data</code>, <code>FormatPredicateKind::IsColocatedData</code>, and so on, and then <code>define_entity_ref</code> in cranelift-codegen/meta/src/isa/x86/encodings.rs could use that to decide when to apply the TLS legalizations.</p>\n</blockquote>",
        "id": 188948611,
        "sender_full_name": "GitHub",
        "timestamp": 1582566316
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1174#discussion_r383413608\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1174#discussion_r383413608\">PR Review Comment</a>:</p>\n<blockquote>\n<p>The ELF and Mach-O instructions here have the same signature, and essentially represent the same functionality, except that they record which target to codegen for. Would it simplify the code to just have one instruction, and move the target check into the encoding phase?</p>\n</blockquote>",
        "id": 188948612,
        "sender_full_name": "GitHub",
        "timestamp": 1582566316
    },
    {
        "content": "<p>abrown assigned <a href=\"https://github.com/bytecodealliance/cranelift/pull/1174\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1174\">PR #1174</a>.</p>",
        "id": 188949216,
        "sender_full_name": "GitHub",
        "timestamp": 1582566804
    },
    {
        "content": "<p>bjorn3 edited <a href=\"https://github.com/bytecodealliance/cranelift/pull/1174\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1174\">PR #1174</a> (assigned to abrown) from <code>tls_support</code> to <code>master</code>:</p>\n<blockquote>\n<p>This adds TLS (thread local storage) support for ELF targets to Cranelift</p>\n<ul>\n<li>[x] ASM of the <code>tls_example.clif</code> file has been verifier to match the ASM emitted by LLVM at <a href=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-531466812\" target=\"_blank\" title=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-531466812\">https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-531466812</a></li>\n<li>[x] Test runtime: object::write doesn't have enough TLS support yet to test execution.</li>\n<li>[ ] Verify encodings are correct and idiomatic.</li>\n<li>[x] Rustfmt</li>\n<li>[x] Add flag to switch between TLS styles (ELF, machO) and set it automatically from either codegen or backends.</li>\n<li>\n<p>[x] Add tests</p>\n</li>\n<li>\n<p>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so and/or ping<br>\n<code>bnjbvr</code>. &lt;strike&gt;The list of suggested reviewers on the right can help you.&lt;/strike&gt; No list of suggested reviewers shown on the right side.</p>\n</li>\n</ul>\n<p>Fixes #963</p>\n<p>cc @philipc <a href=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-526909856\" target=\"_blank\" title=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-526909856\">https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-526909856</a><br>\ncc @abrown Because you implemented SIMD support for x86, I think you know enough of x86 encodings to verify that the encodings are correct.</p>\n</blockquote>",
        "id": 188953713,
        "sender_full_name": "GitHub",
        "timestamp": 1582570048
    },
    {
        "content": "<p>bjorn3 edited <a href=\"https://github.com/bytecodealliance/cranelift/pull/1174\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1174\">PR #1174</a> (assigned to abrown) from <code>tls_support</code> to <code>master</code>:</p>\n<blockquote>\n<p>This adds TLS (thread local storage) support for ELF targets to Cranelift</p>\n<ul>\n<li>[x] ASM of the <code>tls_example.clif</code> file has been verifier to match the ASM emitted by LLVM at <a href=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-531466812\" target=\"_blank\" title=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-531466812\">https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-531466812</a></li>\n<li>[x] Test runtime: object::write doesn't have enough TLS support yet to test execution.</li>\n<li>[x] Verify encodings are correct and idiomatic.</li>\n<li>[x] Rustfmt</li>\n<li>[x] Add flag to switch between TLS styles (ELF, machO) and set it automatically from either codegen or backends.</li>\n<li>\n<p>[x] Add tests</p>\n</li>\n<li>\n<p>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so and/or ping<br>\n<code>bnjbvr</code>. &lt;strike&gt;The list of suggested reviewers on the right can help you.&lt;/strike&gt; No list of suggested reviewers shown on the right side.</p>\n</li>\n</ul>\n<p>Fixes #963</p>\n<p>cc @philipc <a href=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-526909856\" target=\"_blank\" title=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-526909856\">https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-526909856</a><br>\ncc @abrown Because you implemented SIMD support for x86, I think you know enough of x86 encodings to verify that the encodings are correct.</p>\n</blockquote>",
        "id": 188953719,
        "sender_full_name": "GitHub",
        "timestamp": 1582570052
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1174#discussion_r383455914\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1174#discussion_r383455914\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Both <code>x86_elf_tls_get_addr</code> and <code>x86_macho_tls_get_addr</code> happen to clobber a register. I am currently representing this as an extra output value. In the future there may be other TLS models added that don't clobber exactly one, but zero, two or more registers. In that case a separate instruction is needed. For symmetry I think it would be nice to keep separate instructions for ELF and Mach-O too.</p>\n</blockquote>",
        "id": 188955537,
        "sender_full_name": "GitHub",
        "timestamp": 1582571165
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1174#pullrequestreview-363628185\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1174#pullrequestreview-363628185\">PR Review</a>.</p>",
        "id": 188955538,
        "sender_full_name": "GitHub",
        "timestamp": 1582571165
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1174#pullrequestreview-363628724\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1174#pullrequestreview-363628724\">PR Review</a>.</p>",
        "id": 188955579,
        "sender_full_name": "GitHub",
        "timestamp": 1582571218
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1174#discussion_r383456357\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1174#discussion_r383456357\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Makes sense!</p>\n</blockquote>",
        "id": 188955580,
        "sender_full_name": "GitHub",
        "timestamp": 1582571218
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1174#pullrequestreview-363633210\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1174#pullrequestreview-363633210\">PR Review</a>.</p>",
        "id": 188956309,
        "sender_full_name": "GitHub",
        "timestamp": 1582571666
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1174#discussion_r383460015\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1174#discussion_r383460015\">PR Review Comment</a>:</p>\n<blockquote>\n<p><code>symbol_value</code> can directly be encoded, while <code>tls_value</code> needs to be legalized to the correct instruction for the respective object format. See comment below for why. As far as I know, unlike an encoding, there is no way to predicate a legalization.</p>\n</blockquote>",
        "id": 188956310,
        "sender_full_name": "GitHub",
        "timestamp": 1582571666
    },
    {
        "content": "<p>bjorn3 updated <a href=\"https://github.com/bytecodealliance/cranelift/pull/1174\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1174\">PR #1174</a> (assigned to abrown) from <code>tls_support</code> to <code>master</code>:</p>\n<blockquote>\n<p>This adds TLS (thread local storage) support for ELF targets to Cranelift</p>\n<ul>\n<li>[x] ASM of the <code>tls_example.clif</code> file has been verifier to match the ASM emitted by LLVM at <a href=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-531466812\" target=\"_blank\" title=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-531466812\">https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-531466812</a></li>\n<li>[x] Test runtime: object::write doesn't have enough TLS support yet to test execution.</li>\n<li>[x] Verify encodings are correct and idiomatic.</li>\n<li>[x] Rustfmt</li>\n<li>[x] Add flag to switch between TLS styles (ELF, machO) and set it automatically from either codegen or backends.</li>\n<li>\n<p>[x] Add tests</p>\n</li>\n<li>\n<p>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so and/or ping<br>\n<code>bnjbvr</code>. &lt;strike&gt;The list of suggested reviewers on the right can help you.&lt;/strike&gt; No list of suggested reviewers shown on the right side.</p>\n</li>\n</ul>\n<p>Fixes #963</p>\n<p>cc @philipc <a href=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-526909856\" target=\"_blank\" title=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-526909856\">https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-526909856</a><br>\ncc @abrown Because you implemented SIMD support for x86, I think you know enough of x86 encodings to verify that the encodings are correct.</p>\n</blockquote>",
        "id": 189056923,
        "sender_full_name": "GitHub",
        "timestamp": 1582661939
    },
    {
        "content": "<p>bjorn3 updated <a href=\"https://github.com/bytecodealliance/cranelift/pull/1174\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1174\">PR #1174</a> (assigned to abrown) from <code>tls_support</code> to <code>master</code>:</p>\n<blockquote>\n<p>This adds TLS (thread local storage) support for ELF targets to Cranelift</p>\n<ul>\n<li>[x] ASM of the <code>tls_example.clif</code> file has been verifier to match the ASM emitted by LLVM at <a href=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-531466812\" target=\"_blank\" title=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-531466812\">https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-531466812</a></li>\n<li>[x] Test runtime: object::write doesn't have enough TLS support yet to test execution.</li>\n<li>[x] Verify encodings are correct and idiomatic.</li>\n<li>[x] Rustfmt</li>\n<li>[x] Add flag to switch between TLS styles (ELF, machO) and set it automatically from either codegen or backends.</li>\n<li>\n<p>[x] Add tests</p>\n</li>\n<li>\n<p>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so and/or ping<br>\n<code>bnjbvr</code>. &lt;strike&gt;The list of suggested reviewers on the right can help you.&lt;/strike&gt; No list of suggested reviewers shown on the right side.</p>\n</li>\n</ul>\n<p>Fixes #963</p>\n<p>cc @philipc <a href=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-526909856\" target=\"_blank\" title=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-526909856\">https://github.com/bjorn3/rustc_codegen_cranelift/issues/388#issuecomment-526909856</a><br>\ncc @abrown Because you implemented SIMD support for x86, I think you know enough of x86 encodings to verify that the encodings are correct.</p>\n</blockquote>",
        "id": 189057083,
        "sender_full_name": "GitHub",
        "timestamp": 1582662077
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1174#pullrequestreview-364575022\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1174#pullrequestreview-364575022\">PR Review</a>.</p>",
        "id": 189079730,
        "sender_full_name": "GitHub",
        "timestamp": 1582681770
    },
    {
        "content": "<p>abrown merged <a href=\"https://github.com/bytecodealliance/cranelift/pull/1174\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1174\">PR #1174</a>.</p>",
        "id": 189079781,
        "sender_full_name": "GitHub",
        "timestamp": 1582681807
    }
]