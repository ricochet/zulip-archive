[
    {
        "content": "<p>nalmt opened <a href=\"https://github.com/bytecodealliance/cranelift/pull/1391\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1391\">PR #1391</a> from <code>pathological_case_951</code> to <code>master</code>:</p>\n<blockquote>\n<p>To fix this case that may take forever to compile (issue #951):<br>\nfunction %a() {<br>\nebb477777777:<br>\n}</p>\n<p>We decide to define a maximum threshold for the number of ebbs in functions.</p>\n<p>Based on a large WASM program (<a href=\"https://github.com/mozilla/perf-automation/blob/master/benchmarks/wasm-misc/AngryBots.wasm\" target=\"_blank\" title=\"https://github.com/mozilla/perf-automation/blob/master/benchmarks/wasm-misc/AngryBots.wasm\">https://github.com/mozilla/perf-automation/blob/master/benchmarks/wasm-misc/AngryBots.wasm</a>), its IR functions does not exceed 1414 ebbs.<br>\nA number 100 times greater seems (currently) enough to define our maximum threshold.</p>\n<p>static MAX_EBBS_IN_A_FUNCTION: u32 = 100000;</p>\n<p>if ebb_num.as_u32() &gt; MAX_EBBS_IN_A_FUNCTION {<br>\n    return Err(self.error(\"too many ebbs\"));<br>\n}</p>\n</blockquote>",
        "id": 188141187,
        "sender_full_name": "GitHub",
        "timestamp": 1581622134
    },
    {
        "content": "<p><strong>nalmt</strong> requested <a href=\"https://github.com/bnjbvr\" target=\"_blank\" title=\"https://github.com/bnjbvr\">bnjbvr</a> for a review on <a href=\"https://github.com/bytecodealliance/cranelift/pull/1391\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1391\">PR #1391</a>.</p>",
        "id": 188141556,
        "sender_full_name": "GitHub",
        "timestamp": 1581622318
    },
    {
        "content": "<p>nalmt updated <a href=\"https://github.com/bytecodealliance/cranelift/pull/1391\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1391\">PR #1391</a> from <code>pathological_case_951</code> to <code>master</code>:</p>\n<blockquote>\n<p>To fix this case that may take forever to compile (issue #951):<br>\nfunction %a() {<br>\nebb477777777:<br>\n}</p>\n<p>We decide to define a maximum threshold for the number of ebbs in functions.</p>\n<p>Based on a large WASM program (<a href=\"https://github.com/mozilla/perf-automation/blob/master/benchmarks/wasm-misc/AngryBots.wasm\" target=\"_blank\" title=\"https://github.com/mozilla/perf-automation/blob/master/benchmarks/wasm-misc/AngryBots.wasm\">https://github.com/mozilla/perf-automation/blob/master/benchmarks/wasm-misc/AngryBots.wasm</a>), its IR functions does not exceed 1414 ebbs.<br>\nA number 100 times greater seems (currently) enough to define our maximum threshold.</p>\n<p>static MAX_EBBS_IN_A_FUNCTION: u32 = 100000;</p>\n<p>if ebb_num.as_u32() &gt; MAX_EBBS_IN_A_FUNCTION {<br>\n    return Err(self.error(\"too many ebbs\"));<br>\n}</p>\n</blockquote>",
        "id": 188214108,
        "sender_full_name": "GitHub",
        "timestamp": 1581692961
    },
    {
        "content": "<p>nalmt updated <a href=\"https://github.com/bytecodealliance/cranelift/pull/1391\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1391\">PR #1391</a> from <code>pathological_case_951</code> to <code>master</code>:</p>\n<blockquote>\n<p>To fix this case that may take forever to compile (issue #951):<br>\nfunction %a() {<br>\nebb477777777:<br>\n}</p>\n<p>We decide to define a maximum threshold for the number of ebbs in functions.</p>\n<p>Based on a large WASM program (<a href=\"https://github.com/mozilla/perf-automation/blob/master/benchmarks/wasm-misc/AngryBots.wasm\" target=\"_blank\" title=\"https://github.com/mozilla/perf-automation/blob/master/benchmarks/wasm-misc/AngryBots.wasm\">https://github.com/mozilla/perf-automation/blob/master/benchmarks/wasm-misc/AngryBots.wasm</a>), its IR functions does not exceed 1414 ebbs.<br>\nA number 100 times greater seems (currently) enough to define our maximum threshold.</p>\n<p>static MAX_EBBS_IN_A_FUNCTION: u32 = 100000;</p>\n<p>if ebb_num.as_u32() &gt; MAX_EBBS_IN_A_FUNCTION {<br>\n    return Err(self.error(\"too many ebbs\"));<br>\n}</p>\n</blockquote>",
        "id": 188214248,
        "sender_full_name": "GitHub",
        "timestamp": 1581693065
    },
    {
        "content": "<p>nalmt updated <a href=\"https://github.com/bytecodealliance/cranelift/pull/1391\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1391\">PR #1391</a> from <code>pathological_case_951</code> to <code>master</code>:</p>\n<blockquote>\n<p>To fix this case that may take forever to compile (issue #951):<br>\nfunction %a() {<br>\nebb477777777:<br>\n}</p>\n<p>We decide to define a maximum threshold for the number of ebbs in functions.</p>\n<p>Based on a large WASM program (<a href=\"https://github.com/mozilla/perf-automation/blob/master/benchmarks/wasm-misc/AngryBots.wasm\" target=\"_blank\" title=\"https://github.com/mozilla/perf-automation/blob/master/benchmarks/wasm-misc/AngryBots.wasm\">https://github.com/mozilla/perf-automation/blob/master/benchmarks/wasm-misc/AngryBots.wasm</a>), its IR functions does not exceed 1414 ebbs.<br>\nA number 100 times greater seems (currently) enough to define our maximum threshold.</p>\n<p>static MAX_EBBS_IN_A_FUNCTION: u32 = 100000;</p>\n<p>if ebb_num.as_u32() &gt; MAX_EBBS_IN_A_FUNCTION {<br>\n    return Err(self.error(\"too many ebbs\"));<br>\n}</p>\n</blockquote>",
        "id": 188214367,
        "sender_full_name": "GitHub",
        "timestamp": 1581693148
    },
    {
        "content": "<p>nalmt updated <a href=\"https://github.com/bytecodealliance/cranelift/pull/1391\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1391\">PR #1391</a> from <code>pathological_case_951</code> to <code>master</code>:</p>\n<blockquote>\n<p>To fix this case that may take forever to compile (issue #951):<br>\nfunction %a() {<br>\nebb477777777:<br>\n}</p>\n<p>We decide to define a maximum threshold for the number of ebbs in functions.</p>\n<p>Based on a large WASM program (<a href=\"https://github.com/mozilla/perf-automation/blob/master/benchmarks/wasm-misc/AngryBots.wasm\" target=\"_blank\" title=\"https://github.com/mozilla/perf-automation/blob/master/benchmarks/wasm-misc/AngryBots.wasm\">https://github.com/mozilla/perf-automation/blob/master/benchmarks/wasm-misc/AngryBots.wasm</a>), its IR functions does not exceed 1414 ebbs.<br>\nA number 100 times greater seems (currently) enough to define our maximum threshold.</p>\n<p>static MAX_EBBS_IN_A_FUNCTION: u32 = 100000;</p>\n<p>if ebb_num.as_u32() &gt; MAX_EBBS_IN_A_FUNCTION {<br>\n    return Err(self.error(\"too many ebbs\"));<br>\n}</p>\n</blockquote>",
        "id": 188215486,
        "sender_full_name": "GitHub",
        "timestamp": 1581693945
    },
    {
        "content": "<p>nalmt closed without merge <a href=\"https://github.com/bytecodealliance/cranelift/pull/1391\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1391\">PR #1391</a>.</p>",
        "id": 188217624,
        "sender_full_name": "GitHub",
        "timestamp": 1581695162
    }
]