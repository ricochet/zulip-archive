[
    {
        "content": "<p>abrown opened <a href=\"https://github.com/bytecodealliance/cranelift/pull/1376\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1376\">PR #1376</a> from <code>integer-min-max</code> to <code>master</code>:</p>\n<blockquote>\n<ul>\n<li>[x] This has not been discussed in an issue.</li>\n<li>\n<p>[x] A short description of what this does, why it is needed: <br>\nThe Wasm SIMD spec added <a href=\"https://github.com/WebAssembly/simd/blob/master/proposals/simd/SIMD.md#lane-wise-integer-minimum\" target=\"_blank\" title=\"https://github.com/WebAssembly/simd/blob/master/proposals/simd/SIMD.md#lane-wise-integer-minimum\">integer min/max instructions</a>. For x86 codegen, Cranelift already had encodings for the instructions to emit (e.g. <code>x86_pmins</code>) but did not have shared instructions with which to translate the Wasm integer min/max. This change adds <code>[i|u]min</code> and <code>[i|u]max</code> to do just that and legalizes these new Cranelift instructions to the pre-existing x86 instructions. At some point we could remove the x86 instructions entirely and attach their encodings directly on <code>[i|u]min</code> and <code>[i|u]max</code>.</p>\n</li>\n<li>\n<p>[x] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[x] A reviewer from the core maintainer team has been assigned for this PR.</li>\n</ul>\n<p>&lt;!-- Please ensure all communication adheres to the <a href=\"https://github.com/CraneStation/cranelift/blob/master/CODE_OF_CONDUCT.md\" target=\"_blank\" title=\"https://github.com/CraneStation/cranelift/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>. --&gt;</p>\n</blockquote>",
        "id": 187379779,
        "sender_full_name": "GitHub",
        "timestamp": 1580837600
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/bnjbvr\" target=\"_blank\" title=\"https://github.com/bnjbvr\">bnjbvr</a> for a review on <a href=\"https://github.com/bytecodealliance/cranelift/pull/1376\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1376\">PR #1376</a>.</p>",
        "id": 187379780,
        "sender_full_name": "GitHub",
        "timestamp": 1580837600
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1376#pullrequestreview-362740777\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1376#pullrequestreview-362740777\">PR Review</a>.</p>",
        "id": 188746651,
        "sender_full_name": "GitHub",
        "timestamp": 1582301575
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1376#pullrequestreview-362740777\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1376#pullrequestreview-362740777\">PR Review</a>.</p>",
        "id": 188746652,
        "sender_full_name": "GitHub",
        "timestamp": 1582301575
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1376#discussion_r382668288\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1376#discussion_r382668288\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Forgot to tell in the previous review for average (and if you could apply it there too that'd be great), but as a way to make sure we stop regressing build-step compile time, can you put these in a different function marked as <code>#[inline(never)]</code> please? (No need to move all the existing instructions.) This for instance could go into a <code>simd_comparisons</code> function, or something appropriately named like this. Thanks!</p>\n</blockquote>",
        "id": 188746653,
        "sender_full_name": "GitHub",
        "timestamp": 1582301575
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/cranelift/pull/1376\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1376\">PR #1376</a> from <code>integer-min-max</code> to <code>master</code>:</p>\n<blockquote>\n<ul>\n<li>[x] This has not been discussed in an issue.</li>\n<li>\n<p>[x] A short description of what this does, why it is needed: <br>\nThe Wasm SIMD spec added <a href=\"https://github.com/WebAssembly/simd/blob/master/proposals/simd/SIMD.md#lane-wise-integer-minimum\" target=\"_blank\" title=\"https://github.com/WebAssembly/simd/blob/master/proposals/simd/SIMD.md#lane-wise-integer-minimum\">integer min/max instructions</a>. For x86 codegen, Cranelift already had encodings for the instructions to emit (e.g. <code>x86_pmins</code>) but did not have shared instructions with which to translate the Wasm integer min/max. This change adds <code>[i|u]min</code> and <code>[i|u]max</code> to do just that and legalizes these new Cranelift instructions to the pre-existing x86 instructions. At some point we could remove the x86 instructions entirely and attach their encodings directly on <code>[i|u]min</code> and <code>[i|u]max</code>.</p>\n</li>\n<li>\n<p>[x] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[x] A reviewer from the core maintainer team has been assigned for this PR.</li>\n</ul>\n<p>&lt;!-- Please ensure all communication adheres to the <a href=\"https://github.com/CraneStation/cranelift/blob/master/CODE_OF_CONDUCT.md\" target=\"_blank\" title=\"https://github.com/CraneStation/cranelift/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>. --&gt;</p>\n</blockquote>",
        "id": 188753445,
        "sender_full_name": "GitHub",
        "timestamp": 1582305606
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1376#pullrequestreview-362789965\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1376#pullrequestreview-362789965\">PR Review</a>.</p>",
        "id": 188753574,
        "sender_full_name": "GitHub",
        "timestamp": 1582305706
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1376#discussion_r382706696\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1376#discussion_r382706696\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I went with <code>define_simd_arithmetic</code> since it seems to be in that section in the <a href=\"https://github.com/WebAssembly/simd/blob/master/proposals/simd/SIMD.md#lane-wise-integer-minimum\" target=\"_blank\" title=\"https://github.com/WebAssembly/simd/blob/master/proposals/simd/SIMD.md#lane-wise-integer-minimum\">spec</a>.</p>\n</blockquote>",
        "id": 188753575,
        "sender_full_name": "GitHub",
        "timestamp": 1582305706
    },
    {
        "content": "<p>abrown merged <a href=\"https://github.com/bytecodealliance/cranelift/pull/1376\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1376\">PR #1376</a>.</p>",
        "id": 188754749,
        "sender_full_name": "GitHub",
        "timestamp": 1582306426
    }
]