[
    {
        "content": "<p>sstangl opened <a href=\"https://github.com/bytecodealliance/cranelift/pull/1298\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1298\">PR #1298</a> from <code>rex2</code> to <code>master</code>:</p>\n<blockquote>\n<ul>\n<li>[x] This has been discussed in <a href=\"https://github.com/bytecodealliance/cranelift/pull/1173\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1173\">https://github.com/bytecodealliance/cranelift/pull/1173</a>. The original approach was to avoid using Templates, but it was extremely complicated. This approach is much better to reduce the number of recipes.</li>\n<li>[x] This patch adds a third mode for templates: REX inference is requestable at template instantiation time. This reduces the number of recipes by removing rex()/nonrex() redundancy for many instructions. In the common case of <code>i32_i64</code> and <code>b32_b64</code> encodings, this inferrable-REX mode is used.</li>\n<li>[x] This PR contains test cases, if meaningful. (It's covered by the filetests.)</li>\n<li>[x] A reviewer from the core maintainer team has been assigned for this PR.</li>\n</ul>\n<p>I understand that this is work will likely be overridden by what Chris is working on. However, I believe this is still a good idea to land, because:</p>\n<ol>\n<li>It is a strict decrease in the number of recipes.</li>\n<li>It makes more of the REX-related code explicit, and therefore visible. Removing implicit logic makes the code easier to reason about, and therefore easier to refactor later.</li>\n<li>Because the recipe count decreases, there should be a small performance improvement due to faster encoding -- there are fewer options from which to select.</li>\n<li>The transformation is fairly mechanical and I believe not difficult to review.</li>\n</ol>\n<p>This invalidates the work in <a href=\"https://github.com/bytecodealliance/cranelift/pull/1173\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1173\">https://github.com/bytecodealliance/cranelift/pull/1173</a>. That approach did not work because it tried to avoid using Templates. Removing templates at the same time as making this change resulted in too many moving parts -- it was overly complicated and error-prone.</p>\n</blockquote>",
        "id": 183788617,
        "sender_full_name": "GitHub",
        "timestamp": 1576701951
    },
    {
        "content": "<p><strong>sstangl</strong> requested <a href=\"https://github.com/bnjbvr\" target=\"_blank\" title=\"https://github.com/bnjbvr\">bnjbvr</a> for a review on <a href=\"https://github.com/bytecodealliance/cranelift/pull/1298\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1298\">PR #1298</a>.</p>",
        "id": 183788618,
        "sender_full_name": "GitHub",
        "timestamp": 1576701951
    },
    {
        "content": "<p>iximeow created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1298#discussion_r359604782\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1298#discussion_r359604782\">PR Review Comment</a>:</p>\n<blockquote>\n<p>small quibble: this PR doesn't touch REX prefixes for instructions with memory operands, but this is also a correct check for if the index register in a memory operand needs <code>X</code>. How do you feel about naming this simply <code>is_extended_reg</code>?</p>\n</blockquote>",
        "id": 183798579,
        "sender_full_name": "GitHub",
        "timestamp": 1576709420
    },
    {
        "content": "<p>iximeow submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1298#pullrequestreview-334304685\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1298#pullrequestreview-334304685\">PR Review</a>.</p>",
        "id": 183798580,
        "sender_full_name": "GitHub",
        "timestamp": 1576709420
    },
    {
        "content": "<p>iximeow created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1298#discussion_r359607432\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1298#discussion_r359607432\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This applies to all the <code>size_with_inferred_rex*</code> here - how do you feel about structuring bodies like:</p>\n<div class=\"codehilite\"><pre><span></span>let needs_rex = (bits.rex_w() != 0) || // it&#39;d be handy if `rex_w` could be obtained as a bool, alas\n  test_input(0, inst, divert, func, needs_rex_rb) ||\n  test_input(1, inst, divert, func, needs_rex_rb);\n\nsizing.base_size + if needs_rex { 1 } else { 0 }\n</pre></div>\n\n\n<p>? Where <code>input_test</code> and <code>output_test</code> are <code>additional_size_if</code> but returning only the predicate? Admittedly I'm not a huge fan of <code>additional_size_if</code> because it's a bit eager in turning \"we need a prefix\" into \"it will be so-and-so many bytes\" (which would be complicating with @abrown's mention of VEX/EVEX!), so having a generic \"is this true for this operand\" which we can use to later decide \"we do want a REX prefix, and that's one byte\", seems nice. I also personally like avoiding the early returns with hardcoded sizes, YMMV!</p>\n</blockquote>",
        "id": 183798581,
        "sender_full_name": "GitHub",
        "timestamp": 1576709420
    },
    {
        "content": "<p>iximeow submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1298#pullrequestreview-334304685\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1298#pullrequestreview-334304685\">PR Review</a>.</p>",
        "id": 183798582,
        "sender_full_name": "GitHub",
        "timestamp": 1576709420
    },
    {
        "content": "<p>iximeow created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1298#discussion_r359601522\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1298#discussion_r359601522\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Same here, but for <code>div</code>'s GPR argument. Also thought that the index was off by one, but <code>2</code> made me go check the use first :)</p>\n</blockquote>",
        "id": 183798583,
        "sender_full_name": "GitHub",
        "timestamp": 1576709420
    },
    {
        "content": "<p>iximeow created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1298#discussion_r359601256\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1298#discussion_r359601256\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Can this comment be adjusted to indicate that this refers specifically to the second operand, <code>inreg1</code>, for <code>mulx</code>? Reading this independently had me thinking the operand index was off by one</p>\n</blockquote>",
        "id": 183798584,
        "sender_full_name": "GitHub",
        "timestamp": 1576709420
    },
    {
        "content": "<p>iximeow submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1298#pullrequestreview-334304685\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1298#pullrequestreview-334304685\">PR Review</a>.</p>",
        "id": 183798600,
        "sender_full_name": "GitHub",
        "timestamp": 1576709447
    },
    {
        "content": "<p>iximeow submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1298#pullrequestreview-334304685\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1298#pullrequestreview-334304685\">PR Review</a>.</p>",
        "id": 183798610,
        "sender_full_name": "GitHub",
        "timestamp": 1576709460
    },
    {
        "content": "<p>sstangl submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1298#pullrequestreview-334318472\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1298#pullrequestreview-334318472\">PR Review</a>.</p>",
        "id": 183799291,
        "sender_full_name": "GitHub",
        "timestamp": 1576710050
    },
    {
        "content": "<p>sstangl created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1298#discussion_r359612086\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1298#discussion_r359612086\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I like it. Will make that change.</p>\n</blockquote>",
        "id": 183799292,
        "sender_full_name": "GitHub",
        "timestamp": 1576710050
    },
    {
        "content": "<p>sstangl updated <a href=\"https://github.com/bytecodealliance/cranelift/pull/1298\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1298\">PR #1298</a> from <code>rex2</code> to <code>master</code>:</p>\n<blockquote>\n<ul>\n<li>[x] This has been discussed in <a href=\"https://github.com/bytecodealliance/cranelift/pull/1173\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1173\">https://github.com/bytecodealliance/cranelift/pull/1173</a>. The original approach was to avoid using Templates, but it was extremely complicated. This approach is much better to reduce the number of recipes.</li>\n<li>[x] This patch adds a third mode for templates: REX inference is requestable at template instantiation time. This reduces the number of recipes by removing rex()/nonrex() redundancy for many instructions. In the common case of <code>i32_i64</code> and <code>b32_b64</code> encodings, this inferrable-REX mode is used.</li>\n<li>[x] This PR contains test cases, if meaningful. (It's covered by the filetests.)</li>\n<li>[x] A reviewer from the core maintainer team has been assigned for this PR.</li>\n</ul>\n<p>I understand that this is work will likely be overridden by what Chris is working on. However, I believe this is still a good idea to land, because:</p>\n<ol>\n<li>It is a strict decrease in the number of recipes.</li>\n<li>It makes more of the REX-related code explicit, and therefore visible. Removing implicit logic makes the code easier to reason about, and therefore easier to refactor later.</li>\n<li>Because the recipe count decreases, there should be a small performance improvement due to faster encoding -- there are fewer options from which to select.</li>\n<li>The transformation is fairly mechanical and I believe not difficult to review.</li>\n</ol>\n<p>This invalidates the work in <a href=\"https://github.com/bytecodealliance/cranelift/pull/1173\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1173\">https://github.com/bytecodealliance/cranelift/pull/1173</a>. That approach did not work because it tried to avoid using Templates. Removing templates at the same time as making this change resulted in too many moving parts -- it was overly complicated and error-prone.</p>\n</blockquote>",
        "id": 183800717,
        "sender_full_name": "GitHub",
        "timestamp": 1576711326
    },
    {
        "content": "<p>iximeow submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1298#pullrequestreview-334327904\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1298#pullrequestreview-334327904\">PR Review</a>.</p>",
        "id": 183801065,
        "sender_full_name": "GitHub",
        "timestamp": 1576711625
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1298#pullrequestreview-334492558\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1298#pullrequestreview-334492558\">PR Review</a>.</p>",
        "id": 183828957,
        "sender_full_name": "GitHub",
        "timestamp": 1576747869
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1298#discussion_r359753654\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1298#discussion_r359753654\">PR Review Comment</a>:</p>\n<blockquote>\n<p>nit: here and below, can you expand \"in-regs\" to \"input regs\" in comments, please? (and if it's pre-existing, replace it in other places in this file too)</p>\n</blockquote>",
        "id": 183828958,
        "sender_full_name": "GitHub",
        "timestamp": 1576747869
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1298#discussion_r359755084\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1298#discussion_r359755084\">PR Review Comment</a>:</p>\n<blockquote>\n<p>ditto \"two_in_regs\" =&gt; \"inreg_0_1\" or \"2inregs\"? (or conversely, use the longer form for all if you think it's more readable)</p>\n</blockquote>",
        "id": 183828959,
        "sender_full_name": "GitHub",
        "timestamp": 1576747869
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1298#pullrequestreview-334492558\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1298#pullrequestreview-334492558\">PR Review</a>.</p>",
        "id": 183828960,
        "sender_full_name": "GitHub",
        "timestamp": 1576747869
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1298#discussion_r359754668\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1298#discussion_r359754668\">PR Review Comment</a>:</p>\n<blockquote>\n<p>nit: for naming consistency with the other functions, how about <code>size_with_inferred_rex_for_inreg0</code>?</p>\n</blockquote>",
        "id": 183828961,
        "sender_full_name": "GitHub",
        "timestamp": 1576747869
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1298#discussion_r359755438\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1298#discussion_r359755438\">PR Review Comment</a>:</p>\n<blockquote>\n<p>nit: please expand \"out-reg\" in comments</p>\n</blockquote>",
        "id": 183828962,
        "sender_full_name": "GitHub",
        "timestamp": 1576747869
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1298#discussion_r359757080\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1298#discussion_r359757080\">PR Review Comment</a>:</p>\n<blockquote>\n<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> Can you open an issue for this and write the issue number here please?</p>\n</blockquote>",
        "id": 183828963,
        "sender_full_name": "GitHub",
        "timestamp": 1576747869
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1298#discussion_r359757737\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1298#discussion_r359757737\">PR Review Comment</a>:</p>\n<blockquote>\n<p>oops, preexisting: these are called Templates since the migration to Rust, not TailRecipes anymore. (a few times below too)</p>\n</blockquote>",
        "id": 183828964,
        "sender_full_name": "GitHub",
        "timestamp": 1576747869
    },
    {
        "content": "<p>sstangl merged <a href=\"https://github.com/bytecodealliance/cranelift/pull/1298\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1298\">PR #1298</a>.</p>",
        "id": 183893381,
        "sender_full_name": "GitHub",
        "timestamp": 1576795902
    },
    {
        "content": "<p>sstangl updated <a href=\"https://github.com/bytecodealliance/cranelift/pull/1298\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1298\">PR #1298</a> from <code>rex2</code> to <code>master</code>:</p>\n<blockquote>\n<ul>\n<li>[x] This has been discussed in <a href=\"https://github.com/bytecodealliance/cranelift/pull/1173\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1173\">https://github.com/bytecodealliance/cranelift/pull/1173</a>. The original approach was to avoid using Templates, but it was extremely complicated. This approach is much better to reduce the number of recipes.</li>\n<li>[x] This patch adds a third mode for templates: REX inference is requestable at template instantiation time. This reduces the number of recipes by removing rex()/nonrex() redundancy for many instructions. In the common case of <code>i32_i64</code> and <code>b32_b64</code> encodings, this inferrable-REX mode is used.</li>\n<li>[x] This PR contains test cases, if meaningful. (It's covered by the filetests.)</li>\n<li>[x] A reviewer from the core maintainer team has been assigned for this PR.</li>\n</ul>\n<p>I understand that this is work will likely be overridden by what Chris is working on. However, I believe this is still a good idea to land, because:</p>\n<ol>\n<li>It is a strict decrease in the number of recipes.</li>\n<li>It makes more of the REX-related code explicit, and therefore visible. Removing implicit logic makes the code easier to reason about, and therefore easier to refactor later.</li>\n<li>Because the recipe count decreases, there should be a small performance improvement due to faster encoding -- there are fewer options from which to select.</li>\n<li>The transformation is fairly mechanical and I believe not difficult to review.</li>\n</ol>\n<p>This invalidates the work in <a href=\"https://github.com/bytecodealliance/cranelift/pull/1173\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1173\">https://github.com/bytecodealliance/cranelift/pull/1173</a>. That approach did not work because it tried to avoid using Templates. Removing templates at the same time as making this change resulted in too many moving parts -- it was overly complicated and error-prone.</p>\n</blockquote>",
        "id": 183893382,
        "sender_full_name": "GitHub",
        "timestamp": 1576795903
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1298#pullrequestreview-335572390\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1298#pullrequestreview-335572390\">PR Review</a>.</p>",
        "id": 183986538,
        "sender_full_name": "GitHub",
        "timestamp": 1576887724
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1298#discussion_r360613678\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1298#discussion_r360613678\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Doc says 0F (as emitted), yet compared with 04.</p>\n</blockquote>",
        "id": 183986539,
        "sender_full_name": "GitHub",
        "timestamp": 1576887724
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1298#discussion_r360612947\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1298#discussion_r360612947\">PR Review Comment</a>:</p>\n<blockquote>\n<p>*REZ.X</p>\n</blockquote>",
        "id": 183986540,
        "sender_full_name": "GitHub",
        "timestamp": 1576887724
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1298#pullrequestreview-335572390\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1298#pullrequestreview-335572390\">PR Review</a>.</p>",
        "id": 183986541,
        "sender_full_name": "GitHub",
        "timestamp": 1576887724
    },
    {
        "content": "<p>bjorn3 edited <a href=\"https://github.com/bytecodealliance/cranelift/pull/1298#discussion_r360612947\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1298#discussion_r360612947\">PR Review Comment</a>.</p>",
        "id": 183986566,
        "sender_full_name": "GitHub",
        "timestamp": 1576887755
    },
    {
        "content": "<p>sstangl created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1298#discussion_r360619343\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1298#discussion_r360619343\">PR Review Comment</a>:</p>\n<blockquote>\n<p>That assertion is copied from 'put_rexopt2()<code>. These assertions should definitely not open-code the bit-patterns, but should be changed to use the new </code>EncodingBits` struct.</p>\n</blockquote>",
        "id": 183988874,
        "sender_full_name": "GitHub",
        "timestamp": 1576891069
    },
    {
        "content": "<p>sstangl submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1298#pullrequestreview-335579899\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1298#pullrequestreview-335579899\">PR Review</a>.</p>",
        "id": 183988875,
        "sender_full_name": "GitHub",
        "timestamp": 1576891069
    }
]