[
    {
        "content": "<p>peterdelevoryas opened <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385\">PR #1385</a> from <code>master</code> to <code>master</code>:</p>\n<blockquote>\n<ul>\n<li>Closes #1383 </li>\n<li>Cranelift already has custom legalization for ineg on vector integer types, might as well add it for scalar integer types!</li>\n<li>This PR includes one new test case, it's relatively meager, maybe I could add cases for all the integer type variants? (i8, i16, i32, i64). Not sure if that's too much or not!</li>\n<li>I don't know who could review this, maybe <code>bnjbvr</code> or <code>bjorn3</code>?</li>\n</ul>\n<p>I added some comments in the diff that refer to concerns I had</p>\n</blockquote>",
        "id": 187898977,
        "sender_full_name": "GitHub",
        "timestamp": 1581416345
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-356583775\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-356583775\">PR Review</a>.</p>",
        "id": 187903688,
        "sender_full_name": "GitHub",
        "timestamp": 1581420617
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r377578763\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r377578763\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This will need to be added to widen too to legalize i8 and i16.</p>\n</blockquote>",
        "id": 187903689,
        "sender_full_name": "GitHub",
        "timestamp": 1581420617
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r377579300\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r377579300\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This is necessary to get the arg passes to ineg. Adding an <code>unreachable!()</code> as else would be nice though.</p>\n</blockquote>",
        "id": 187903690,
        "sender_full_name": "GitHub",
        "timestamp": 1581420617
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-356583775\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-356583775\">PR Review</a>.</p>",
        "id": 187903691,
        "sender_full_name": "GitHub",
        "timestamp": 1581420617
    },
    {
        "content": "<p>peterdelevoryas submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-356587297\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-356587297\">PR Review</a>.</p>",
        "id": 187904022,
        "sender_full_name": "GitHub",
        "timestamp": 1581420940
    },
    {
        "content": "<p>peterdelevoryas created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r377581614\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r377581614\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Ohhhh ok, I was trying to find widen and couldn't find it, let me check again</p>\n</blockquote>",
        "id": 187904023,
        "sender_full_name": "GitHub",
        "timestamp": 1581420940
    },
    {
        "content": "<p>peterdelevoryas submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-356589851\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-356589851\">PR Review</a>.</p>",
        "id": 187904340,
        "sender_full_name": "GitHub",
        "timestamp": 1581421221
    },
    {
        "content": "<p>peterdelevoryas created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r377583589\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r377583589\">PR Review Comment</a>:</p>\n<blockquote>\n<p>ohhh I get it now, ok I'll make a widen group and add the custom legalization there just for x86, now in the shared-common one, since all this ineg stuff is in x86 right now.</p>\n</blockquote>",
        "id": 187904341,
        "sender_full_name": "GitHub",
        "timestamp": 1581421221
    },
    {
        "content": "<p>peterdelevoryas edited <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r377583589\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r377583589\">PR Review Comment</a>.</p>",
        "id": 187904347,
        "sender_full_name": "GitHub",
        "timestamp": 1581421232
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-356892874\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-356892874\">PR Review</a>.</p>",
        "id": 187939565,
        "sender_full_name": "GitHub",
        "timestamp": 1581445855
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r377818587\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r377818587\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I think so; I see that type of thing up above. Something like the following would be good to get both the type and the legalization that failed: <code>panic!(\"Can't convert ineg of {}\", valuetype)</code>.</p>\n</blockquote>",
        "id": 187939566,
        "sender_full_name": "GitHub",
        "timestamp": 1581445855
    },
    {
        "content": "<p>peterdelevoryas submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-356959323\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-356959323\">PR Review</a>.</p>",
        "id": 187949525,
        "sender_full_name": "GitHub",
        "timestamp": 1581451790
    },
    {
        "content": "<p>peterdelevoryas created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r377871046\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r377871046\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Hey, I tried adding this to the widen TransformGroup, but that didn't seem to work. I saw a comment in another file about ordering being significant: maybe I need to add the widen group legalizations before or after the narrow/expand additions?</p>\n</blockquote>",
        "id": 187949526,
        "sender_full_name": "GitHub",
        "timestamp": 1581451790
    },
    {
        "content": "<p>peterdelevoryas updated <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385\">PR #1385</a> from <code>master</code> to <code>master</code>:</p>\n<blockquote>\n<ul>\n<li>Closes #1383 </li>\n<li>Cranelift already has custom legalization for ineg on vector integer types, might as well add it for scalar integer types!</li>\n<li>This PR includes one new test case, it's relatively meager, maybe I could add cases for all the integer type variants? (i8, i16, i32, i64). Not sure if that's too much or not!</li>\n<li>I don't know who could review this, maybe <code>bnjbvr</code> or <code>bjorn3</code>?</li>\n</ul>\n<p>I added some comments in the diff that refer to concerns I had</p>\n</blockquote>",
        "id": 187956186,
        "sender_full_name": "GitHub",
        "timestamp": 1581455685
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-357002785\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-357002785\">PR Review</a>.</p>",
        "id": 187956583,
        "sender_full_name": "GitHub",
        "timestamp": 1581455923
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r377904568\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r377904568\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I think using x86_widen instead of widen at <a href=\"https://github.com/bytecodealliance/cranelift/blob/23e9bdb2d99fb8f554793cb87f1578cc543c355f/cranelift-codegen/meta/src/isa/x86/mod.rs#L36\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/blob/23e9bdb2d99fb8f554793cb87f1578cc543c355f/cranelift-codegen/meta/src/isa/x86/mod.rs#L36\">https://github.com/bytecodealliance/cranelift/blob/23e9bdb2d99fb8f554793cb87f1578cc543c355f/cranelift-codegen/meta/src/isa/x86/mod.rs#L36</a> should fix it.</p>\n</blockquote>",
        "id": 187956584,
        "sender_full_name": "GitHub",
        "timestamp": 1581455923
    },
    {
        "content": "<p>abrown assigned <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385\">PR #1385</a>.</p>",
        "id": 187964996,
        "sender_full_name": "GitHub",
        "timestamp": 1581461839
    },
    {
        "content": "<p>peterdelevoryas submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-357131646\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-357131646\">PR Review</a>.</p>",
        "id": 187973858,
        "sender_full_name": "GitHub",
        "timestamp": 1581470173
    },
    {
        "content": "<p>peterdelevoryas created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r377992612\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r377992612\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I thought this would be sufficient to get the transformation to apply to i8/i16, but it doesn't seem to be working? I'm getting stuck debugging this because I can't seem to find the place where we apply the transformations. Maybe this is in the generated Rust file?</p>\n</blockquote>",
        "id": 187973859,
        "sender_full_name": "GitHub",
        "timestamp": 1581470173
    },
    {
        "content": "<p>peterdelevoryas created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r377994044\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r377994044\">PR Review Comment</a>:</p>\n<blockquote>\n<p>nvm, I think I see the spot where x86_narrow/etc gets tied to the x86 legalization, maybe I can fix this</p>\n</blockquote>",
        "id": 187974068,
        "sender_full_name": "GitHub",
        "timestamp": 1581470520
    },
    {
        "content": "<p>peterdelevoryas submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-357133381\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-357133381\">PR Review</a>.</p>",
        "id": 187974069,
        "sender_full_name": "GitHub",
        "timestamp": 1581470520
    },
    {
        "content": "<p>peterdelevoryas submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-357170590\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-357170590\">PR Review</a>.</p>",
        "id": 187979092,
        "sender_full_name": "GitHub",
        "timestamp": 1581478669
    },
    {
        "content": "<p>peterdelevoryas created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r378025496\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r378025496\">PR Review Comment</a>:</p>\n<blockquote>\n<p>That did fix it! And I added a test for i16 and that worked too. So, i8, i16, and i32 work. But, i64 doesn't: I think these changes made sure <code>convert_ineg</code> is added to widen, narrow, and expand, is there something missing still?</p>\n<div class=\"codehilite\"><pre><span></span>---- filetests stdout ----\nFAIL filetests/isa/x86/legalize-custom.clif: legalizer(%ineg_legalized_i):\nfilecheck failed:\n#0 regex: V=v\\d+\n#1 regex: BB=block\\d+\n#2 check: v2 = iconst.i32 1\n#3 check: v3 = iconst.i32 0\n#4 check: v0 = iconcat v2, v3\n#5 nextln: v1 = isub v2, v0\n&gt; function %ineg_legalized_i() fast {\n&gt;                                 block0:\n&gt; [Op1pu_id#b8]                       v2 = iconst.i32 1\n                                      ^~~~~~~~~~~~~~~~~\nMatched #2: \\bv2 = iconst\\.i32 1\\b\n&gt; [Op1pu_id#b8]                       v3 = iconst.i32 0\n                                      ^~~~~~~~~~~~~~~~~\nMatched #3: \\bv3 = iconst\\.i32 0\\b\n&gt; [-]                                 v0 = iconcat v2, v3\n                                      ^~~~~~~~~~~~~~~~~~~\nMatched #4: \\bv0 = iconcat v2, v3\\b\n&gt; [-]                                 v1 = ineg v0\nMissed #5: \\bv1 = isub v2, v0\\b\n&gt; [Op1ret#c3]                         return\n&gt; }\n</pre></div>\n\n\n</blockquote>",
        "id": 187979093,
        "sender_full_name": "GitHub",
        "timestamp": 1581478669
    },
    {
        "content": "<p>peterdelevoryas updated <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385\">PR #1385</a> (assigned to abrown) from <code>master</code> to <code>master</code>:</p>\n<blockquote>\n<ul>\n<li>Closes #1383 </li>\n<li>Cranelift already has custom legalization for ineg on vector integer types, might as well add it for scalar integer types!</li>\n<li>This PR includes one new test case, it's relatively meager, maybe I could add cases for all the integer type variants? (i8, i16, i32, i64). Not sure if that's too much or not!</li>\n<li>I don't know who could review this, maybe <code>bnjbvr</code> or <code>bjorn3</code>?</li>\n</ul>\n<p>I added some comments in the diff that refer to concerns I had</p>\n</blockquote>",
        "id": 187979154,
        "sender_full_name": "GitHub",
        "timestamp": 1581478747
    },
    {
        "content": "<p>peterdelevoryas updated <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385\">PR #1385</a> (assigned to abrown) from <code>master</code> to <code>master</code>:</p>\n<blockquote>\n<ul>\n<li>Closes #1383 </li>\n<li>Cranelift already has custom legalization for ineg on vector integer types, might as well add it for scalar integer types!</li>\n<li>This PR includes one new test case, it's relatively meager, maybe I could add cases for all the integer type variants? (i8, i16, i32, i64). Not sure if that's too much or not!</li>\n<li>I don't know who could review this, maybe <code>bnjbvr</code> or <code>bjorn3</code>?</li>\n</ul>\n<p>I added some comments in the diff that refer to concerns I had</p>\n</blockquote>",
        "id": 187979215,
        "sender_full_name": "GitHub",
        "timestamp": 1581478829
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-357173965\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-357173965\">PR Review</a>.</p>",
        "id": 187979634,
        "sender_full_name": "GitHub",
        "timestamp": 1581479547
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r378028565\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r378028565\">PR Review Comment</a>:</p>\n<blockquote>\n<p>\"Legalize instructions by widening\"?</p>\n</blockquote>",
        "id": 187979635,
        "sender_full_name": "GitHub",
        "timestamp": 1581479548
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-357175654\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-357175654\">PR Review</a>.</p>",
        "id": 187979829,
        "sender_full_name": "GitHub",
        "timestamp": 1581479933
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r378029925\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r378029925\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Not sure I get why v2 and v3 have different types initially: shouldn't they both start out as <code>i8</code>s and be extended? And we have to extend and then reduce because we don't have an encoding for <code>isub.i8</code>? (@peterdelevoryas, no need to answer; this is more for @bjorn3 as he is more familiar with this than I am)</p>\n</blockquote>",
        "id": 187979830,
        "sender_full_name": "GitHub",
        "timestamp": 1581479934
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r378030083\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r378030083\">PR Review Comment</a>:</p>\n<blockquote>\n<p>@bjorn3, I would not expect this <code>iconcat</code>; can't we directly encode an <code>iconst.i64</code>?</p>\n</blockquote>",
        "id": 187979846,
        "sender_full_name": "GitHub",
        "timestamp": 1581479987
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-357175873\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-357175873\">PR Review</a>.</p>",
        "id": 187979847,
        "sender_full_name": "GitHub",
        "timestamp": 1581479987
    },
    {
        "content": "<p>peterdelevoryas submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-357207689\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-357207689\">PR Review</a>.</p>",
        "id": 187984303,
        "sender_full_name": "GitHub",
        "timestamp": 1581487717
    },
    {
        "content": "<p>peterdelevoryas created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r378055670\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r378055670\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Ah woops thanks for catching that!</p>\n</blockquote>",
        "id": 187984304,
        "sender_full_name": "GitHub",
        "timestamp": 1581487717
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-357222826\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-357222826\">PR Review</a>.</p>",
        "id": 187986111,
        "sender_full_name": "GitHub",
        "timestamp": 1581490623
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r378068246\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r378068246\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This file has <code>target i686</code> before <code>target x86_64</code>. How is that handled? Does it test both or only the first?</p>\n</blockquote>",
        "id": 187986112,
        "sender_full_name": "GitHub",
        "timestamp": 1581490623
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-357224480\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-357224480\">PR Review</a>.</p>",
        "id": 187986273,
        "sender_full_name": "GitHub",
        "timestamp": 1581490899
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r378069557\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r378069557\">PR Review Comment</a>:</p>\n<blockquote>\n<p>iconst.i8 is legalized as iconst.i32 + ireduce.i8. isub.i8 is legalized as uextend.i32 + isub.i32 + ireduce.i8.</p>\n</blockquote>",
        "id": 187986274,
        "sender_full_name": "GitHub",
        "timestamp": 1581490899
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-357652208\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-357652208\">PR Review</a>.</p>",
        "id": 188033640,
        "sender_full_name": "GitHub",
        "timestamp": 1581529070
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r378406801\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r378406801\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Learn something new every day: apparently parsing tests <a href=\"https://github.com/bytecodealliance/cranelift/blob/master/cranelift-reader/src/parser.rs#L992-L1025\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/blob/master/cranelift-reader/src/parser.rs#L992-L1025\">accumulates the targets</a> and <code>test_tuples</code> will expand the different targets (in this case since the legalizer <code>needs_isa</code> we should have a test tuple for each <code>target</code> from <a href=\"https://github.com/bytecodealliance/cranelift/blob/master/cranelift-filetests/src/runone.rs#L121-L125\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/blob/master/cranelift-filetests/src/runone.rs#L121-L125\">here</a>). </p>\n<p>But then this doesn't make sense: how could these checks pass when <code>target x86_64</code> is set? Is that the build failure? No, it looks like the current build failure happens because <code>ineg</code> isn't getting legalized at all for <code>i64</code>?</p>\n</blockquote>",
        "id": 188033642,
        "sender_full_name": "GitHub",
        "timestamp": 1581529070
    },
    {
        "content": "<p>peterdelevoryas submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-357726121\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-357726121\">PR Review</a>.</p>",
        "id": 188044994,
        "sender_full_name": "GitHub",
        "timestamp": 1581535690
    },
    {
        "content": "<p>peterdelevoryas created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r378464857\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r378464857\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Yeah the build failure is happening because <code>ineg</code> still isn't getting legalized for <code>i64</code>, I still haven't figured out why that is. This must be because I need to extend another transform group right? That was the reason for <code>i8</code> and <code>i16</code> not getting legalized initially (I think)</p>\n</blockquote>",
        "id": 188044995,
        "sender_full_name": "GitHub",
        "timestamp": 1581535690
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-357733092\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-357733092\">PR Review</a>.</p>",
        "id": 188046037,
        "sender_full_name": "GitHub",
        "timestamp": 1581536326
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r378470299\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r378470299\">PR Review Comment</a>:</p>\n<blockquote>\n<p>There is also the <code>narrow</code> group for ints &gt; pointer size.</p>\n</blockquote>",
        "id": 188046040,
        "sender_full_name": "GitHub",
        "timestamp": 1581536327
    },
    {
        "content": "<p>peterdelevoryas updated <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385\">PR #1385</a> (assigned to abrown) from <code>master</code> to <code>master</code>:</p>\n<blockquote>\n<ul>\n<li>Closes #1383 </li>\n<li>Cranelift already has custom legalization for ineg on vector integer types, might as well add it for scalar integer types!</li>\n<li>This PR includes one new test case, it's relatively meager, maybe I could add cases for all the integer type variants? (i8, i16, i32, i64). Not sure if that's too much or not!</li>\n<li>I don't know who could review this, maybe <code>bnjbvr</code> or <code>bjorn3</code>?</li>\n</ul>\n<p>I added some comments in the diff that refer to concerns I had</p>\n</blockquote>",
        "id": 188220212,
        "sender_full_name": "GitHub",
        "timestamp": 1581696636
    },
    {
        "content": "<p>peterdelevoryas updated <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385\">PR #1385</a> (assigned to abrown) from <code>master</code> to <code>master</code>:</p>\n<blockquote>\n<ul>\n<li>Closes #1383 </li>\n<li>Cranelift already has custom legalization for ineg on vector integer types, might as well add it for scalar integer types!</li>\n<li>This PR includes one new test case, it's relatively meager, maybe I could add cases for all the integer type variants? (i8, i16, i32, i64). Not sure if that's too much or not!</li>\n<li>I don't know who could review this, maybe <code>bnjbvr</code> or <code>bjorn3</code>?</li>\n</ul>\n<p>I added some comments in the diff that refer to concerns I had</p>\n</blockquote>",
        "id": 188220717,
        "sender_full_name": "GitHub",
        "timestamp": 1581696946
    },
    {
        "content": "<p>peterdelevoryas submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-359055670\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-359055670\">PR Review</a>.</p>",
        "id": 188220828,
        "sender_full_name": "GitHub",
        "timestamp": 1581697001
    },
    {
        "content": "<p>peterdelevoryas created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r379518854\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r379518854\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Ok, this should be fixed now</p>\n</blockquote>",
        "id": 188220829,
        "sender_full_name": "GitHub",
        "timestamp": 1581697001
    },
    {
        "content": "<p>peterdelevoryas submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-359055946\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-359055946\">PR Review</a>.</p>",
        "id": 188220866,
        "sender_full_name": "GitHub",
        "timestamp": 1581697025
    },
    {
        "content": "<p>peterdelevoryas created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r379519069\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r379519069\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I added this panic message</p>\n</blockquote>",
        "id": 188220869,
        "sender_full_name": "GitHub",
        "timestamp": 1581697025
    },
    {
        "content": "<p>peterdelevoryas submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-359056194\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-359056194\">PR Review</a>.</p>",
        "id": 188220891,
        "sender_full_name": "GitHub",
        "timestamp": 1581697046
    },
    {
        "content": "<p>peterdelevoryas created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r379519265\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r379519265\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Added an <code>else { unreachable!() }</code> clause</p>\n</blockquote>",
        "id": 188220893,
        "sender_full_name": "GitHub",
        "timestamp": 1581697046
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-359074781\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-359074781\">PR Review</a>.</p>",
        "id": 188223230,
        "sender_full_name": "GitHub",
        "timestamp": 1581698632
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-359135797\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-359135797\">PR Review</a>.</p>",
        "id": 188232233,
        "sender_full_name": "GitHub",
        "timestamp": 1581704978
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r379580262\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r379580262\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I want to make sure I understand this: x86_narrow is chained with narrow_flags so this just makes <code>x86_32</code> consistent with <code>x86_64</code>--i.e. was this necessary to get this patch to work?</p>\n</blockquote>",
        "id": 188232234,
        "sender_full_name": "GitHub",
        "timestamp": 1581704978
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-359136268\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-359136268\">PR Review</a>.</p>",
        "id": 188232332,
        "sender_full_name": "GitHub",
        "timestamp": 1581705024
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r379580620\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r379580620\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Perhaps we should rename this to <code>x86_widen</code> (here and where used) to be very clear what is going on.</p>\n</blockquote>",
        "id": 188232333,
        "sender_full_name": "GitHub",
        "timestamp": 1581705024
    },
    {
        "content": "<p>abrown edited <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r379580620\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r379580620\">PR Review Comment</a>.</p>",
        "id": 188232348,
        "sender_full_name": "GitHub",
        "timestamp": 1581705034
    },
    {
        "content": "<p>peterdelevoryas created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r379581194\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r379581194\">PR Review Comment</a>:</p>\n<blockquote>\n<p>That's correct, I think before this, the legalization of <code>ineg.i64</code> was not being applied on i686. I'll double check really quickly though and show the error here</p>\n</blockquote>",
        "id": 188232417,
        "sender_full_name": "GitHub",
        "timestamp": 1581705098
    },
    {
        "content": "<p>peterdelevoryas submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-359137003\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-359137003\">PR Review</a>.</p>",
        "id": 188232418,
        "sender_full_name": "GitHub",
        "timestamp": 1581705098
    },
    {
        "content": "<p>peterdelevoryas submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-359137137\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-359137137\">PR Review</a>.</p>",
        "id": 188232431,
        "sender_full_name": "GitHub",
        "timestamp": 1581705112
    },
    {
        "content": "<p>peterdelevoryas created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r379581286\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r379581286\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Oh yeah I can definitely do that!</p>\n</blockquote>",
        "id": 188232432,
        "sender_full_name": "GitHub",
        "timestamp": 1581705112
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-359139275\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-359139275\">PR Review</a>.</p>",
        "id": 188232767,
        "sender_full_name": "GitHub",
        "timestamp": 1581705352
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r379582923\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r379582923\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Sounds good, I'll merge this after your push.</p>\n</blockquote>",
        "id": 188232768,
        "sender_full_name": "GitHub",
        "timestamp": 1581705352
    },
    {
        "content": "<p>peterdelevoryas created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r379616247\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#discussion_r379616247\">PR Review Comment</a>:</p>\n<blockquote>\n<div class=\"codehilite\"><pre><span></span>running 1 test\ntest filetests ... FAILED\n\nfailures:\n\n---- filetests stdout ----\nFAIL filetests/isa/x86/legalize-i64.clif: legalizer(%ineg_legalized_i):\nfilecheck failed:\n#0 regex: V=v\\d+\n#1 check: v2 = iconst.i32 1\n#2 nextln: v3 = iconst.i32 0\n#3 nextln: v0 = iconcat v2, v3\n#4 nextln: v5 = iconst.i32 0\n#5 nextln: v6 = iconst.i32 0\n#6 nextln: v4 = iconcat v5, v6\n#7 nextln: v7, v8 = isub_ifbout v5, v2\n#8 nextln: v9 = isub_ifbin v6, v3, v8\n#9 nextln: v1 = iconcat v7, v9\n&gt; function %ineg_legalized_i() fast {\n&gt;                                 block0:\n&gt; [Op1pu_id#b8]                       v2 = iconst.i32 1\n                                      ^~~~~~~~~~~~~~~~~\nMatched #1: \\bv2 = iconst\\.i32 1\\b\n&gt; [Op1pu_id#b8]                       v3 = iconst.i32 0\n                                      ^~~~~~~~~~~~~~~~~\nMatched #2: \\bv3 = iconst\\.i32 0\\b\n&gt; [-]                                 v0 = iconcat v2, v3\n                                      ^~~~~~~~~~~~~~~~~~~\nMatched #3: \\bv0 = iconcat v2, v3\\b\n&gt; [-]                                 v1 = ineg v0\nMissed #4: \\bv5 = iconst\\.i32 0\\b\n&gt; [Op1ret#c3]                         return\n&gt; }\n</pre></div>\n\n\n<p>(with this diff from the current stuff)</p>\n<div class=\"codehilite\"><pre><span></span>diff --git a/cranelift-codegen/meta/src/isa/x86/mod.rs b/cranelift-codegen/meta/src/isa/x86/mod.rs\nindex 52d03f54..3fbd78b7 100644\n--- a/cranelift-codegen/meta/src/isa/x86/mod.rs\n+++ b/cranelift-codegen/meta/src/isa/x86/mod.rs\n@@ -32,12 +32,13 @@ pub(crate) fn define(shared_defs: &amp;mut SharedDefinitions) -&gt; TargetIsa {\n     let mut x86_32 = CpuMode::new(&quot;I32&quot;);\n\n     let expand_flags = shared_defs.transform_groups.by_name(&quot;expand_flags&quot;);\n\n+    let narrow_flags = shared_defs.transform_groups.by_name(&quot;narrow_flags&quot;);\n     let widen = shared_defs.transform_groups.by_name(&quot;x86_widen&quot;);\n     let x86_narrow = shared_defs.transform_groups.by_name(&quot;x86_narrow&quot;);\n     let x86_expand = shared_defs.transform_groups.by_name(&quot;x86_expand&quot;);\n\n     x86_32.legalize_monomorphic(expand_flags);\n\n-    x86_32.legalize_default(x86_narrow);\n+    x86_32.legalize_default(narrow_flags);\n     x86_32.legalize_type(B1, expand_flags);\n     x86_32.legalize_type(I8, widen);\n     x86_32.legalize_type(I16, widen);\n</pre></div>\n\n\n</blockquote>",
        "id": 188240444,
        "sender_full_name": "GitHub",
        "timestamp": 1581710019
    },
    {
        "content": "<p>peterdelevoryas submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-359183045\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-359183045\">PR Review</a>.</p>",
        "id": 188240445,
        "sender_full_name": "GitHub",
        "timestamp": 1581710019
    },
    {
        "content": "<p>peterdelevoryas updated <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385\">PR #1385</a> (assigned to abrown) from <code>master</code> to <code>master</code>:</p>\n<blockquote>\n<ul>\n<li>Closes #1383 </li>\n<li>Cranelift already has custom legalization for ineg on vector integer types, might as well add it for scalar integer types!</li>\n<li>This PR includes one new test case, it's relatively meager, maybe I could add cases for all the integer type variants? (i8, i16, i32, i64). Not sure if that's too much or not!</li>\n<li>I don't know who could review this, maybe <code>bnjbvr</code> or <code>bjorn3</code>?</li>\n</ul>\n<p>I added some comments in the diff that refer to concerns I had</p>\n</blockquote>",
        "id": 188240767,
        "sender_full_name": "GitHub",
        "timestamp": 1581710227
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-359223200\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385#pullrequestreview-359223200\">PR Review</a>.</p>",
        "id": 188247646,
        "sender_full_name": "GitHub",
        "timestamp": 1581714952
    },
    {
        "content": "<p>abrown merged <a href=\"https://github.com/bytecodealliance/cranelift/pull/1385\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1385\">PR #1385</a>.</p>",
        "id": 188247701,
        "sender_full_name": "GitHub",
        "timestamp": 1581714965
    }
]