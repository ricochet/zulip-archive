[
    {
        "content": "<p>alexcrichton transferred <a href=\"https://github.com/bytecodealliance/cranelift/issues/762\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/762\">Issue #762</a>:</p>\n<blockquote>\n<p>Hi,</p>\n<p>In doing my MIPS64 port I found a couple of blockers that impede support for other RISC architectures as well.</p>\n<ul>\n<li><code>iconst</code> can't load immediates larger than the instruction's slot; and</li>\n<li><code>brz</code> <code>brnz</code> and possibly other instructions can only operate on native-sized operands.</li>\n</ul>\n<p>How do we best implement constant materialization for RISC architectures, an arch-specific approach or a generic one with knowledge of things like <code>li/lui/shl/or</code>?</p>\n<p>As for the latter, I tried <code>widen</code> but it didn't work. I think that's because <code>brz</code> and similar instructions is not \"polymorphic\" like with those named <code>foo.iB</code>. How do I specify the correct widening behavior in this case?</p>\n</blockquote>",
        "id": 189361447,
        "sender_full_name": "GitHub",
        "timestamp": 1582932357
    }
]