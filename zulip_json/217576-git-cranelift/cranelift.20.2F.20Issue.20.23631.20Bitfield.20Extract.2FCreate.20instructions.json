[
    {
        "content": "<p>alexcrichton transferred <a href=\"https://github.com/bytecodealliance/cranelift/issues/631\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/631\">Issue #631</a>:</p>\n<blockquote>\n<p>This would add two new instructions to cranelift, <code>bextr</code> and <code>bmak</code>. They provide a easy to optimize, and easy to generate mechanism for bitfield manipulation.</p>\n<h2>bextr</h2>\n<div class=\"codehilite\"><pre><span></span>a = bextr target, size, offset\n</pre></div>\n\n\n<p>bextr will extract a _n_ bit large field at the provided offset, and return it in <code>a</code>, shifted so that the LSB of the field is also the LSB of <code>a</code>.<br>\n<code>a</code>'s type is inferred from <code>target</code></p>\n<h3>Visual example</h3>\n<div class=\"codehilite\"><pre><span></span>offset = 4\nsize = 4\ntypeof target = i8\n\nxxxx **** \n\\__/----V\n0000 xxxx\n</pre></div>\n\n\n<h2>bmak</h2>\n<div class=\"codehilite\"><pre><span></span>a = bmak target, size, offset\n</pre></div>\n\n\n<p>bmak will fill a _n_ bit large field at the provided offset with 1s, the rest with 0. The generated field will then be applied to <code>target</code> using a bitwise AND, and the result will be returned in <code>a</code>.<br>\n<code>a</code>'s type is inferred from <code>target</code><br>\nbmak is designed so that you can simply use a bitwise or to combine the fields.</p>\n<h3>Visual Example</h3>\n<div class=\"codehilite\"><pre><span></span>offset = 2\nsize = 4\ntypeof target = i8\n\nxx0101xx\n  \\__/\n  /  \\\n00010100\n</pre></div>\n\n\n</blockquote>",
        "id": 189361395,
        "sender_full_name": "GitHub",
        "timestamp": 1582932323
    }
]