[
    {
        "content": "<p>eqrion <a href=\"https://github.com/bytecodealliance/cranelift/pull/1317#issuecomment-573859445\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1317#issuecomment-573859445\">commented</a> on <a href=\"https://github.com/bytecodealliance/cranelift/pull/1317\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1317\">Issue #1317</a>:</p>\n<blockquote>\n<p>I've found an issue through more extensive testing, this isn't ready for review.</p>\n</blockquote>",
        "id": 185534938,
        "sender_full_name": "GitHub",
        "timestamp": 1578947956
    },
    {
        "content": "<p>eqrion <a href=\"https://github.com/bytecodealliance/cranelift/pull/1317#issuecomment-576776877\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1317#issuecomment-576776877\">commented</a> on <a href=\"https://github.com/bytecodealliance/cranelift/pull/1317\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1317\">Issue #1317</a>:</p>\n<blockquote>\n<blockquote>\n<p>I've found an issue through more extensive testing, this isn't ready for review.</p>\n</blockquote>\n<p>That was a false alarm, I was getting a timeout in a non-standard configuration. Upon further investigation, it looks like it's just caused by a very slow implementation of barriers. So this should be ready for review.</p>\n</blockquote>",
        "id": 186202999,
        "sender_full_name": "GitHub",
        "timestamp": 1579625871
    },
    {
        "content": "<p>eqrion <a href=\"https://github.com/bytecodealliance/cranelift/pull/1317#issuecomment-577256523\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1317#issuecomment-577256523\">commented</a> on <a href=\"https://github.com/bytecodealliance/cranelift/pull/1317\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1317\">Issue #1317</a>:</p>\n<blockquote>\n<blockquote>\n<p>Code looks good to me, but I think it should be possible to have some tests, right? I don't think we actually need to manufacture any reference types to have tests (which would require askign how we're going to manage their lifetimes) and can instead have test functions that take <code>r32</code> and <code>r64</code> parameters and put them in tables and all that. I think we should be able to do that even in the dummy environment.</p>\n</blockquote>\n<p>That seems plausible to me. I'm not very familiar with the testing architecture, so I'll need to do some investigation. I'll try to do that today or tomorrow.</p>\n</blockquote>",
        "id": 186300251,
        "sender_full_name": "GitHub",
        "timestamp": 1579708892
    },
    {
        "content": "<p>eqrion <a href=\"https://github.com/bytecodealliance/cranelift/pull/1317#issuecomment-577735113\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1317#issuecomment-577735113\">commented</a> on <a href=\"https://github.com/bytecodealliance/cranelift/pull/1317\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1317\">Issue #1317</a>:</p>\n<blockquote>\n<p>I've now added a basic test for r32 and r64, removed the out-of-date comments, and updated the documentation on <code>StackMap</code> to more thoroughly explain the representation.</p>\n</blockquote>",
        "id": 186400358,
        "sender_full_name": "GitHub",
        "timestamp": 1579793780
    }
]