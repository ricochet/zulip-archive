[
    {
        "content": "<p>alexcrichton transferred <a href=\"https://github.com/bytecodealliance/cranelift/issues/565\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/565\">Issue #565</a>:</p>\n<blockquote>\n<p>Docs don't make it particularly clear who owns finalised functions and data returned from <code>SimpleJITBackend</code>.</p>\n<p>From the code it looks like they are all pointers into a shared block of memory owned by <code>SimpleJITBackend</code>, but, if so, definitions don't even try to help with detecting cases where <code>SimpleJITBackend</code> is dropped but result remains.</p>\n<p>One way to avoid this would be to reduce usages of raw pointers in <code>SimpleJITBackend</code> (they are really rather unnecessary hazards in that particular case) and instead return lifetime-annotated structures which can be further casted into a required function, which would allow to get proper compiler errors in case of dropping owner too early.</p>\n</blockquote>",
        "id": 189361376,
        "sender_full_name": "GitHub",
        "timestamp": 1582932307
    }
]