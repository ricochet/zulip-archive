[
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/iximeow\" target=\"_blank\" title=\"https://github.com/iximeow\">iximeow</a> for a review on <a href=\"https://github.com/bytecodealliance/cranelift/pull/1388\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1388\">PR #1388</a>.</p>",
        "id": 188062396,
        "sender_full_name": "GitHub",
        "timestamp": 1581548890
    },
    {
        "content": "<p>abrown opened <a href=\"https://github.com/bytecodealliance/cranelift/pull/1388\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1388\">PR #1388</a> from <code>infer-rex-for-simd</code> to <code>master</code>:</p>\n<blockquote>\n<ul>\n<li>[x] This has been discussed in issues #1090 and #1379.</li>\n<li>\n<p>[x] A short description of what this does, why it is needed: this demonstrates inferring REX prefixes for SIMD <code>store</code> and <code>vconst</code> instructions; if we think this is the right direction, we have some additional to do to infer REX prefixes for the following recipes:</p>\n</li>\n<li>\n<p>[x] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[x] A reviewer from the core maintainer team has been assigned for this PR.</li>\n</ul>\n<p>&lt;!-- Please ensure all communication adheres to the <a href=\"https://github.com/CraneStation/cranelift/blob/master/CODE_OF_CONDUCT.md\" target=\"_blank\" title=\"https://github.com/CraneStation/cranelift/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>. --&gt;</p>\n</blockquote>",
        "id": 188062397,
        "sender_full_name": "GitHub",
        "timestamp": 1581548890
    },
    {
        "content": "<p>abrown edited <a href=\"https://github.com/bytecodealliance/cranelift/pull/1388\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1388\">PR #1388</a> from <code>infer-rex-for-simd</code> to <code>master</code>:</p>\n<blockquote>\n<ul>\n<li>[x] This has been discussed in issues #1090 and #1379.</li>\n<li>[x] A short description of what this does, why it is needed: this demonstrates inferring REX prefixes for SIMD <code>store</code> and <code>vconst</code> instructions; if we think this is the right direction, we have some additional to do to infer REX prefixes for the following recipes:</li>\n</ul>\n<p>__enc_32_64__: fstDisp8, fstDisp32, fld, fldDisp8, fldDisp32, fspillSib32, fregspill32, ffillSib32, fregfill32, frmov, furm, fa, fax, f_ib<br>\n__enc_32_64_maybe_isap__: r_ib_unsigned_r, fa_ib, fa, r_ib_unsigned_gpr, fcmp, icscc_fpr<br>\n__enc_both__: frurm, pfcmp, fa, furm</p>\n<ul>\n<li>[x] This PR contains test cases, if meaningful.</li>\n<li>[x] A reviewer from the core maintainer team has been assigned for this PR.</li>\n</ul>\n<p>&lt;!-- Please ensure all communication adheres to the <a href=\"https://github.com/CraneStation/cranelift/blob/master/CODE_OF_CONDUCT.md\" target=\"_blank\" title=\"https://github.com/CraneStation/cranelift/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>. --&gt;</p>\n</blockquote>",
        "id": 188062449,
        "sender_full_name": "GitHub",
        "timestamp": 1581548965
    },
    {
        "content": "<p>iximeow submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1388#pullrequestreview-357915917\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1388#pullrequestreview-357915917\">PR Review</a>.</p>",
        "id": 188073517,
        "sender_full_name": "GitHub",
        "timestamp": 1581562023
    },
    {
        "content": "<p>iximeow submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1388#pullrequestreview-357915917\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1388#pullrequestreview-357915917\">PR Review</a>.</p>",
        "id": 188073518,
        "sender_full_name": "GitHub",
        "timestamp": 1581562023
    },
    {
        "content": "<p>iximeow created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1388#discussion_r378618119\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1388#discussion_r378618119\">PR Review Comment</a>:</p>\n<blockquote>\n<p><span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> </p>\n</blockquote>",
        "id": 188073519,
        "sender_full_name": "GitHub",
        "timestamp": 1581562023
    },
    {
        "content": "<p>iximeow created <a href=\"https://github.com/bytecodealliance/cranelift/pull/1388#discussion_r378624297\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1388#discussion_r378624297\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I think this also needs a <code>|| test_input(1, inst, divert, func, is_extended_reg)</code> in the case that the base register is <code>r8-r15</code>? I have admit I'm not sure which order registers are specified but the other part of the <a href=\"https://github.com/bytecodealliance/cranelift/blob/ae77d49fa49c7dccceb16f0a71380a25cf45531a/cranelift-codegen/meta/src/isa/x86/recipes.rs#L1506\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/blob/ae77d49fa49c7dccceb16f0a71380a25cf45531a/cranelift-codegen/meta/src/isa/x86/recipes.rs#L1506\">recipe this is used in</a> has me suspect. I'm also not sure how well our tests cover getting less-likely encodings like that - I'd not think about it if I didn't just try to do <code>[r11]</code> a few days ago.</p>\n</blockquote>",
        "id": 188073520,
        "sender_full_name": "GitHub",
        "timestamp": 1581562023
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/cranelift/pull/1388\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1388\">PR #1388</a> from <code>infer-rex-for-simd</code> to <code>master</code>:</p>\n<blockquote>\n<ul>\n<li>[x] This has been discussed in issues #1090 and #1379.</li>\n<li>[x] A short description of what this does, why it is needed: this demonstrates inferring REX prefixes for SIMD <code>store</code> and <code>vconst</code> instructions; if we think this is the right direction, we have some additional to do to infer REX prefixes for the following recipes:</li>\n</ul>\n<p>__enc_32_64__: fstDisp8, fstDisp32, fld, fldDisp8, fldDisp32, fspillSib32, fregspill32, ffillSib32, fregfill32, frmov, furm, fa, fax, f_ib<br>\n__enc_32_64_maybe_isap__: r_ib_unsigned_r, fa_ib, fa, r_ib_unsigned_gpr, fcmp, icscc_fpr<br>\n__enc_both__: frurm, pfcmp, fa, furm</p>\n<ul>\n<li>[x] This PR contains test cases, if meaningful.</li>\n<li>[x] A reviewer from the core maintainer team has been assigned for this PR.</li>\n</ul>\n<p>&lt;!-- Please ensure all communication adheres to the <a href=\"https://github.com/CraneStation/cranelift/blob/master/CODE_OF_CONDUCT.md\" target=\"_blank\" title=\"https://github.com/CraneStation/cranelift/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>. --&gt;</p>\n</blockquote>",
        "id": 188135625,
        "sender_full_name": "GitHub",
        "timestamp": 1581618883
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/cranelift/pull/1388\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1388\">PR #1388</a> from <code>infer-rex-for-simd</code> to <code>master</code>:</p>\n<blockquote>\n<ul>\n<li>[x] This has been discussed in issues #1090 and #1379.</li>\n<li>[x] A short description of what this does, why it is needed: this demonstrates inferring REX prefixes for SIMD <code>store</code> and <code>vconst</code> instructions; if we think this is the right direction, we have some additional to do to infer REX prefixes for the following recipes:</li>\n</ul>\n<p>__enc_32_64__: fstDisp8, fstDisp32, fld, fldDisp8, fldDisp32, fspillSib32, fregspill32, ffillSib32, fregfill32, frmov, furm, fa, fax, f_ib<br>\n__enc_32_64_maybe_isap__: r_ib_unsigned_r, fa_ib, fa, r_ib_unsigned_gpr, fcmp, icscc_fpr<br>\n__enc_both__: frurm, pfcmp, fa, furm</p>\n<ul>\n<li>[x] This PR contains test cases, if meaningful.</li>\n<li>[x] A reviewer from the core maintainer team has been assigned for this PR.</li>\n</ul>\n<p>&lt;!-- Please ensure all communication adheres to the <a href=\"https://github.com/CraneStation/cranelift/blob/master/CODE_OF_CONDUCT.md\" target=\"_blank\" title=\"https://github.com/CraneStation/cranelift/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>. --&gt;</p>\n</blockquote>",
        "id": 188136989,
        "sender_full_name": "GitHub",
        "timestamp": 1581619687
    },
    {
        "content": "<p>iximeow submitted <a href=\"https://github.com/bytecodealliance/cranelift/pull/1388#pullrequestreview-358616473\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1388#pullrequestreview-358616473\">PR Review</a>.</p>",
        "id": 188162290,
        "sender_full_name": "GitHub",
        "timestamp": 1581635297
    },
    {
        "content": "<p>abrown merged <a href=\"https://github.com/bytecodealliance/cranelift/pull/1388\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1388\">PR #1388</a>.</p>",
        "id": 188565069,
        "sender_full_name": "GitHub",
        "timestamp": 1582133048
    }
]