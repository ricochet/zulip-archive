[
    {
        "content": "<p>bnjbvr <a href=\"https://github.com/bytecodealliance/cranelift/issues/1059#issuecomment-572982652\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1059#issuecomment-572982652\">commented</a> on <a href=\"https://github.com/bytecodealliance/cranelift/issues/1059\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1059\">Issue #1059</a>:</p>\n<blockquote>\n<p>Not fixed, though: it's still panicking somewhere else. We should throw a verifier error and have a nice error message in this case.</p>\n</blockquote>",
        "id": 185298826,
        "sender_full_name": "GitHub",
        "timestamp": 1578652787
    },
    {
        "content": "<p>bnjbvr labeled <a href=\"https://github.com/bytecodealliance/cranelift/issues/1059\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1059\">Issue #1059</a>:</p>\n<blockquote>\n<div class=\"codehilite\"><pre><span></span>function u0:0() -&gt; i32 system_v {\n    gv0 = symbol colocated u1:0\n    jt0 = jump_table [ebb1, ebb3]\n\nebb0:\n    v0 = global_value.i64 gv0\n    v1 = load.i32 v0\n    v3 = icmp_imm uge v1, 1\n    brnz v3, ebb4\n    jump ebb3\n\nebb1:\n\nebb3:\n    v2 = iconst.i32 1\n    return v2\n\nebb4:\n    v4 = iadd_imm.i32 v1, -1\n    br_table v4, ebb3, jt0\n\nebb2:\n    v5 = iconst.i32 0\n    return v5\n}\nthread &#39;main&#39; panicked at &#39;called `Option::unwrap()` on a `None` value&#39;, src/libcore/option.rs:347:21\nstack backtrace:\n   0: backtrace::backtrace::libunwind::trace\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.29/src/backtrace/libunwind.rs:88\n   1: backtrace::backtrace::trace_unsynchronized\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.29/src/backtrace/mod.rs:66\n   2: std::sys_common::backtrace::_print\n             at src/libstd/sys_common/backtrace.rs:47\n   3: std::sys_common::backtrace::print\n             at src/libstd/sys_common/backtrace.rs:36\n   4: std::panicking::default_hook::{{closure}}\n             at src/libstd/panicking.rs:200\n   5: std::panicking::default_hook\n             at src/libstd/panicking.rs:214\n   6: std::panicking::rust_panic_with_hook\n             at src/libstd/panicking.rs:477\n   7: std::panicking::continue_panic_fmt\n             at src/libstd/panicking.rs:384\n   8: rust_begin_unwind\n             at src/libstd/panicking.rs:311\n   9: core::panicking::panic_fmt\n             at src/libcore/panicking.rs:85\n  10: core::panicking::panic\n             at src/libcore/panicking.rs:49\n  11: core::option::Option&lt;T&gt;::unwrap\n  12: cranelift_codegen::simple_gvn::do_simple_gvn\n  13: cranelift_codegen::context::Context::simple_gvn\n  14: cranelift_codegen::context::Context::compile\n  15: cranelift_module::module::Module&lt;B&gt;::define_function\n... truncated ...\n</pre></div>\n\n\n</blockquote>",
        "id": 185298833,
        "sender_full_name": "GitHub",
        "timestamp": 1578652793
    },
    {
        "content": "<p>jyn514 <a href=\"https://github.com/bytecodealliance/cranelift/issues/1059#issuecomment-573018218\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1059#issuecomment-573018218\">commented</a> on <a href=\"https://github.com/bytecodealliance/cranelift/issues/1059\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1059\">Issue #1059</a>:</p>\n<blockquote>\n<p>@bnjbvr that PR was never merged.</p>\n</blockquote>",
        "id": 185305927,
        "sender_full_name": "GitHub",
        "timestamp": 1578659633
    },
    {
        "content": "<p>bnjbvr <a href=\"https://github.com/bytecodealliance/cranelift/issues/1059#issuecomment-573026256\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1059#issuecomment-573026256\">commented</a> on <a href=\"https://github.com/bytecodealliance/cranelift/issues/1059\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1059\">Issue #1059</a>:</p>\n<blockquote>\n<p>Sorry, I was it was closed, so I read that as merged, but no. That's a relatively easy bug to fix, though, if somebody wants to chime in!</p>\n</blockquote>",
        "id": 185307738,
        "sender_full_name": "GitHub",
        "timestamp": 1578661265
    },
    {
        "content": "<p>data-pup <a href=\"https://github.com/bytecodealliance/cranelift/issues/1059#issuecomment-573069048\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1059#issuecomment-573069048\">commented</a> on <a href=\"https://github.com/bytecodealliance/cranelift/issues/1059\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1059\">Issue #1059</a>:</p>\n<blockquote>\n<p>I'd love to try and take a swing at fixing this, if nobody else has started on it already. <span aria-label=\"smiley cat\" class=\"emoji emoji-1f63a\" role=\"img\" title=\"smiley cat\">:smiley_cat:</span> </p>\n</blockquote>",
        "id": 185316992,
        "sender_full_name": "GitHub",
        "timestamp": 1578668396
    },
    {
        "content": "<p>jyn514 <a href=\"https://github.com/bytecodealliance/cranelift/issues/1059#issuecomment-573080627\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1059#issuecomment-573080627\">commented</a> on <a href=\"https://github.com/bytecodealliance/cranelift/issues/1059\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1059\">Issue #1059</a>:</p>\n<blockquote>\n<p>@data-pup if you like you can just make a PR with my code: <a href=\"https://github.com/bytecodealliance/cranelift/commit/57830123733497558274b1514168a55d2dad2f55\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/commit/57830123733497558274b1514168a55d2dad2f55\">https://github.com/bytecodealliance/cranelift/commit/57830123733497558274b1514168a55d2dad2f55</a></p>\n</blockquote>",
        "id": 185319762,
        "sender_full_name": "GitHub",
        "timestamp": 1578670099
    },
    {
        "content": "<p>data-pup <a href=\"https://github.com/bytecodealliance/cranelift/issues/1059#issuecomment-573120334\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1059#issuecomment-573120334\">commented</a> on <a href=\"https://github.com/bytecodealliance/cranelift/issues/1059\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1059\">Issue #1059</a>:</p>\n<blockquote>\n<p>I hadn't realized you already had a commit that takes care of this! Thanks @jyn514. I cherry-picked that code and updated the call to the <code>fatal!</code> macro, so hopefully this can be closed soon.</p>\n</blockquote>",
        "id": 185329396,
        "sender_full_name": "GitHub",
        "timestamp": 1578675884
    },
    {
        "content": "<p>abrown closed <a href=\"https://github.com/bytecodealliance/cranelift/issues/1059\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/1059\">Issue #1059</a>:</p>\n<blockquote>\n<div class=\"codehilite\"><pre><span></span>function u0:0() -&gt; i32 system_v {\n    gv0 = symbol colocated u1:0\n    jt0 = jump_table [ebb1, ebb3]\n\nebb0:\n    v0 = global_value.i64 gv0\n    v1 = load.i32 v0\n    v3 = icmp_imm uge v1, 1\n    brnz v3, ebb4\n    jump ebb3\n\nebb1:\n\nebb3:\n    v2 = iconst.i32 1\n    return v2\n\nebb4:\n    v4 = iadd_imm.i32 v1, -1\n    br_table v4, ebb3, jt0\n\nebb2:\n    v5 = iconst.i32 0\n    return v5\n}\nthread &#39;main&#39; panicked at &#39;called `Option::unwrap()` on a `None` value&#39;, src/libcore/option.rs:347:21\nstack backtrace:\n   0: backtrace::backtrace::libunwind::trace\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.29/src/backtrace/libunwind.rs:88\n   1: backtrace::backtrace::trace_unsynchronized\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.29/src/backtrace/mod.rs:66\n   2: std::sys_common::backtrace::_print\n             at src/libstd/sys_common/backtrace.rs:47\n   3: std::sys_common::backtrace::print\n             at src/libstd/sys_common/backtrace.rs:36\n   4: std::panicking::default_hook::{{closure}}\n             at src/libstd/panicking.rs:200\n   5: std::panicking::default_hook\n             at src/libstd/panicking.rs:214\n   6: std::panicking::rust_panic_with_hook\n             at src/libstd/panicking.rs:477\n   7: std::panicking::continue_panic_fmt\n             at src/libstd/panicking.rs:384\n   8: rust_begin_unwind\n             at src/libstd/panicking.rs:311\n   9: core::panicking::panic_fmt\n             at src/libcore/panicking.rs:85\n  10: core::panicking::panic\n             at src/libcore/panicking.rs:49\n  11: core::option::Option&lt;T&gt;::unwrap\n  12: cranelift_codegen::simple_gvn::do_simple_gvn\n  13: cranelift_codegen::context::Context::simple_gvn\n  14: cranelift_codegen::context::Context::compile\n  15: cranelift_module::module::Module&lt;B&gt;::define_function\n... truncated ...\n</pre></div>\n\n\n</blockquote>",
        "id": 185338164,
        "sender_full_name": "GitHub",
        "timestamp": 1578681629
    }
]