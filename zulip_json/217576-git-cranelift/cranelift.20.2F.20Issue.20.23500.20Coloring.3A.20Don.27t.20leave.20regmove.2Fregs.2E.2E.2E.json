[
    {
        "content": "<p>alexcrichton transferred <a href=\"https://github.com/bytecodealliance/cranelift/issues/500\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/500\">Issue #500</a>:</p>\n<blockquote>\n<p>The regmove/regspill/regfill instructions are special. They're emitted by the coloring pass to temporarily override the assigned registers (<code>func.locations</code>) for values. This is surprising, and it means that very late passes which run after register allocation can't just look at <code>func.locations</code> and have to use <code>RegDiversions</code> and walk the IR in order to know what registers are assigned to what values.</p>\n<p>They also currently require special casing to work around <a href=\"https://github.com/CraneStation/cranelift/issues/420\" target=\"_blank\" title=\"https://github.com/CraneStation/cranelift/issues/420\">this issue</a>.</p>\n<p>It would be nice to find a way to either avoid using regfill/regspill/regfill, or to rewrite them once coloring is done, so that <code>func.locations</code> is left up to date.</p>\n</blockquote>",
        "id": 189361362,
        "sender_full_name": "GitHub",
        "timestamp": 1582932291
    }
]