[
    {
        "content": "<p>alexcrichton transferred <a href=\"https://github.com/bytecodealliance/cranelift/issues/732\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/732\">Issue #732</a>:</p>\n<blockquote>\n<p>Compile</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"c1\">// run-pass</span>\n\n<span class=\"c1\">// aux-build:xcrate-reachable.rs</span>\n\n<span class=\"cp\">#![feature(generator_trait)]</span><span class=\"w\"></span>\n\n<span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"n\">xcrate_reachable</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">std</span>::<span class=\"n\">ops</span>::<span class=\"n\">Generator</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">std</span>::<span class=\"n\">pin</span>::<span class=\"n\">Pin</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Pin</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">foo</span>::<span class=\"n\">foo</span><span class=\"p\">()).</span><span class=\"n\">resume</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>using rustc_codegen_cranelift with <code>opt_level=best</code> and you get:</p>\n<div class=\"codehilite\"><pre><span></span>---- [run-pass] run-pass/generator/xcrate-reachable.rs stdout ----\n\nerror: test compilation failed although it shouldn&#39;t!\nstatus: exit code: 101\ncommand: &quot;/home/bjorn/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rustc&quot; &quot;/home/bjorn/Documenten/rustc_codegen_cranelift/rust/src/test/run-pass/generator/xcrate-reachable.rs&quot; &quot;-Zthreads=1&quot; &quot;--target=x86_64-unknown-linux-gnu&quot; &quot;--error-format&quot; &quot;json&quot; &quot;-Zui-testing&quot; &quot;-o&quot; &quot;/home/bjorn/Documenten/rustc_codegen_cranelift/rust/build/x86_64-unknown-linux-gnu/test/run-pass/generator/xcrate-reachable/a&quot; &quot;-Crpath&quot; &quot;-O&quot; &quot;-Zunstable-options&quot; &quot;-Zcodegen-backend=/home/bjorn/Documenten/rustc_codegen_cranelift/rust/../target/debug/librustc_codegen_cranelift.so&quot; &quot;--sysroot&quot; &quot;/home/bjorn/Documenten/rustc_codegen_cranelift/rust/../build_sysroot/sysroot&quot; &quot;-Cpanic=abort&quot; &quot;-Lnative=/home/bjorn/Documenten/rustc_codegen_cranelift/rust/build/x86_64-unknown-linux-gnu/native/rust-test-helpers&quot; &quot;-L&quot; &quot;/home/bjorn/Documenten/rustc_codegen_cranelift/rust/build/x86_64-unknown-linux-gnu/test/run-pass/generator/xcrate-reachable/auxiliary&quot;\nstdout:\n------------------------------------------\nInstance { def: Item(DefId(9/1:10 ~ xcrate_reachable[8787]::foo[0]::{{closure}}[0])), substs: [(), u32, {()}] } _ZN16xcrate_reachable3foo28_$u7b$$u7b$closure$u7d$$u7d$17he526fe6105ca50ffE\n\n------------------------------------------\nstderr:\n------------------------------------------\nthread &#39;rustc&#39; panicked at &#39;assertion failed: !self.opcode().is_branch()&#39;, /home/bjorn/.cargo/git/checkouts/cranelift-af8713b52459e6cd/cadf244/cranelift-codegen/src/ir/instructions.rs:255:17\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\nstack backtrace:\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\n             at src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:39\n   1: std::sys_common::backtrace::_print\n             at src/libstd/sys_common/backtrace.rs:71\n   2: std::panicking::default_hook::{{closure}}\n             at src/libstd/sys_common/backtrace.rs:59\n             at src/libstd/panicking.rs:197\n   3: std::panicking::default_hook\n             at src/libstd/panicking.rs:211\n   4: rustc::util::common::panic_hook\n   5: std::panicking::rust_panic_with_hook\n             at src/libstd/panicking.rs:478\n   6: std::panicking::begin_panic\n             at /rustc/474e7a6486758ea6fc761893b1a49cd9076fb0ab/src/libstd/panicking.rs:408\n   7: cranelift_codegen::licm::do_licm\n             at /home/bjorn/.cargo/git/checkouts/cranelift-af8713b52459e6cd/cadf244/cranelift-codegen/src/ir/instructions.rs:255\n             at /home/bjorn/.cargo/git/checkouts/cranelift-af8713b52459e6cd/cadf244/cranelift-codegen/src/licm.rs:140\n             at /home/bjorn/.cargo/git/checkouts/cranelift-af8713b52459e6cd/cadf244/cranelift-codegen/src/licm.rs:89\n             at /home/bjorn/.cargo/git/checkouts/cranelift-af8713b52459e6cd/cadf244/cranelift-codegen/src/licm.rs:41\n   8: cranelift_codegen::context::Context::compile\n             at /home/bjorn/.cargo/git/checkouts/cranelift-af8713b52459e6cd/cadf244/cranelift-codegen/src/context.rs:286\n             at /home/bjorn/.cargo/git/checkouts/cranelift-af8713b52459e6cd/cadf244/cranelift-codegen/src/context.rs:136\n   9: cranelift_module::module::Module&lt;B&gt;::define_function\n             at /home/bjorn/.cargo/git/checkouts/cranelift-af8713b52459e6cd/cadf244/cranelift-module/src/module.rs:517\n  10: rustc_codegen_cranelift::base::trans_fn\n             at src/base.rs:202\n  11: rustc_codegen_cranelift::base::trans_mono_item\n             at src/base.rs:46\n  12: rustc_codegen_cranelift::codegen_mono_items::{{closure}}::{{closure}}\n             at src/lib.rs:473\n  13: rustc_codegen_cranelift::unimpl::try_unimpl::{{closure}}\n             at src/unimpl.rs:28\n  14: &lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once\n             at /rustc/474e7a6486758ea6fc761893b1a49cd9076fb0ab/src/libstd/panic.rs:309\n  15: std::panicking::try::do_call\n             at /rustc/474e7a6486758ea6fc761893b1a49cd9076fb0ab/src/libstd/panicking.rs:293\n  16: __rust_maybe_catch_panic\n             at src/libpanic_unwind/lib.rs:87\n  17: std::panicking::try\n             at /rustc/474e7a6486758ea6fc761893b1a49cd9076fb0ab/src/libstd/panicking.rs:272\n  18: std::panic::catch_unwind\n             at /rustc/474e7a6486758ea6fc761893b1a49cd9076fb0ab/src/libstd/panic.rs:388\n  19: rustc_codegen_cranelift::unimpl::try_unimpl\n             at src/unimpl.rs:28\n  20: rustc_codegen_cranelift::codegen_mono_items::{{closure}}\n             at src/lib.rs:471\n  21: rustc_codegen_cranelift::time\n             at src/lib.rs:484\n  22: rustc_codegen_cranelift::codegen_mono_items\n             at src/lib.rs:469\n  23: rustc_codegen_cranelift::codegen_cgus\n             at src/lib.rs:456\n  24: &lt;rustc_codegen_cranelift::CraneliftCodegenBackend as rustc_codegen_utils::codegen_backend::CodegenBackend&gt;::codegen_crate\n             at src/lib.rs:318\n  25: rustc::util::common::time\n  26: rustc_interface::passes::start_codegen\n  27: rustc::ty::context::tls::enter_global\n  28: rustc_interface::passes::BoxedGlobalCtxt::access::{{closure}}\n  29: rustc_interface::passes::create_global_ctxt::{{closure}}\n  30: rustc_interface::passes::BoxedGlobalCtxt::enter\n  31: rustc_interface::queries::Query&lt;T&gt;::compute\n  32: rustc_interface::queries::&lt;impl rustc_interface::interface::Compiler&gt;::ongoing_codegen\n  33: rustc_interface::interface::run_compiler_in_existing_thread_pool\n  34: std::thread::local::LocalKey&lt;T&gt;::with\n  35: scoped_tls::ScopedKey&lt;T&gt;::set\n  36: syntax::with_globals\nquery stack during panic:\nend of query stack\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.35.0-nightly (474e7a648 2019-04-07) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -Z threads=1 -Z ui-testing -Z unstable-options -Z codegen-backend=/home/bjorn/Documenten/rustc_codegen_cranelift/rust/../target/debug/librustc_codegen_cranelift.so -C rpath -C panic=abort\n</pre></div>\n\n\n</blockquote>",
        "id": 189361430,
        "sender_full_name": "GitHub",
        "timestamp": 1582932345
    }
]