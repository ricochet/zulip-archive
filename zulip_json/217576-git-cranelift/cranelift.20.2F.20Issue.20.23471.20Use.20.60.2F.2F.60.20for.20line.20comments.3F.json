[
    {
        "content": "<p>alexcrichton transferred <a href=\"https://github.com/bytecodealliance/cranelift/issues/471\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/issues/471\">Issue #471</a>:</p>\n<blockquote>\n<p>Cranelift's clif files (example <a href=\"https://github.com/CraneStation/cranelift/blob/master/filetests/parser/branch.clif\" target=\"_blank\" title=\"https://github.com/CraneStation/cranelift/blob/master/filetests/parser/branch.clif\">here</a>) currently use <code>;</code> for line comments. This is somewhat common in assembler languages, and LLVM IR, but it's not always immediately obvious for people from other backgrounds.</p>\n<p>Using <code>//</code> would follow Cranelift's syntax for types <code>v0: i32</code>, <code>-&gt; i32</code>, and so on in taking syntactic queues from Rust where it makes sense to do so. (Related: should we change <code>function</code> to <code>fn</code>? That doesn't feel as important because <code>function</code> is more self-explanatory there, but it's worth considering.)</p>\n<p><code>//</code> is two characters rather than <code>;</code>'s one, but my intuition is that little things we can do to make IR dumps easier to approach for people not already familiar with them will end up being valuable in a variety of contexts, more so than absolute conciseness.</p>\n</blockquote>",
        "id": 189361355,
        "sender_full_name": "GitHub",
        "timestamp": 1582932286
    }
]