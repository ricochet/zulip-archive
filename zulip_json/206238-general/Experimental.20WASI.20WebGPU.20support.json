[
    {
        "content": "<p>Hello!</p>\n<p>I have a personal project that has a plugin system based on WASM (all plugins are just *.wasm files).<br>\nI will have 2 hosts for those plugins: one is web based (in the web browser) and the other is native (using wasmtime).<br>\nThe same plugin must work the same way on the two hosts, so I thought using WASI was a good idea!</p>\n<p>My issue is that the plugins must be able to render images, so I'd like to use WebGPU (because it's available on all platforms), but WASI doesn't have WebGPU support (though discussed <a href=\"https://github.com/WebAssembly/WASI/issues/53\">on this issue</a>).</p>\n<p>I'd like to experiment locally and add the WebGPU API to <a href=\"https://github.com/bytecodealliance/wasmtime/tree/master/crates/wasi-common\">wasi-common</a>, but I have no idea where to start and how to test it.<br>\nMaybe I should mention the fact that I'm on Windows 10 (though I have WSL 2 and a laptop running a native GNU/Linux distribution if the need arises).<br>\nThanks!</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/WASI/issues/53\" style=\"background-image: url(https://avatars3.githubusercontent.com/u/11578470?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/WASI/issues/53\" title=\"WebGPU as low level graphics API · Issue #53 · WebAssembly/WASI\">WebGPU as low level graphics API · Issue #53 · WebAssembly/WASI</a></div><div class=\"message_embed_description\">Soon will come the time to decide how to pain something on a screen, are there discussions about this topic in the community? didn&#39;t see any. Seeing what WebGPU is supposed to do seems like a n...</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/tree/master/crates/wasi-common\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/tree/master/crates/wasi-common\" title=\"bytecodealliance/wasmtime\">bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Standalone JIT-style runtime for WebAssembly, using Cranelift - bytecodealliance/wasmtime</div></div></div>",
        "id": 198483887,
        "sender_full_name": "nasso",
        "timestamp": 1590175345
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"304522\">@nasso</span>  Nice suggestion, maybe the proposal of WASI-nn (<a href=\"https://github.com/WebAssembly/WASI/issues/272\">https://github.com/WebAssembly/WASI/issues/272</a>) would help to formulate the entrypoint?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/WASI/issues/272\" style=\"background-image: url(https://avatars3.githubusercontent.com/u/11578470?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/WASI/issues/272\" title=\"Proposal for WASI-nn: a machine learning module · Issue #272 · WebAssembly/WASI\">Proposal for WASI-nn: a machine learning module · Issue #272 · WebAssembly/WASI</a></div><div class=\"message_embed_description\">This issue is a tracking issue for discussing the addition of a machine learning module to WASI. I created a very rough draft of what the API could look like, wasi_ephemeral_nn.witx: it is loosely ...</div></div></div>",
        "id": 198513835,
        "sender_full_name": "Leon Wang",
        "timestamp": 1590201372
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"302245\">@Leon Wang</span> what do you mean by entry point?</p>",
        "id": 198514159,
        "sender_full_name": "nasso",
        "timestamp": 1590201928
    },
    {
        "content": "<p>You can design the wit interface based on the WASI-nn proposal.</p>",
        "id": 198514230,
        "sender_full_name": "Leon Wang",
        "timestamp": 1590202018
    },
    {
        "content": "<p>yeha my inner guess was correct then :p</p>",
        "id": 198514241,
        "sender_full_name": "nasso",
        "timestamp": 1590202041
    },
    {
        "content": "<p>Are there tools to make the process a little less repetitive? I think the interface would be very similar to <a href=\"https://github.com/webgpu-native/webgpu-headers/blob/master/webgpu.h\">this header</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/webgpu-native/webgpu-headers/blob/master/webgpu.h\" style=\"background-image: url(https://avatars3.githubusercontent.com/u/52747906?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/webgpu-native/webgpu-headers/blob/master/webgpu.h\" title=\"webgpu-native/webgpu-headers\">webgpu-native/webgpu-headers</a></div><div class=\"message_embed_description\">Contribute to webgpu-native/webgpu-headers development by creating an account on GitHub.</div></div></div>",
        "id": 198514397,
        "sender_full_name": "nasso",
        "timestamp": 1590202284
    },
    {
        "content": "<p>Sorry I'm not very familiar with the tool, but I think you can find it from the organization (<a href=\"https://github.com/bytecodealliance/wasm-tools\">https://github.com/bytecodealliance/wasm-tools</a> or <a href=\"https://github.com/WebAssembly/binaryen\">https://github.com/WebAssembly/binaryen</a>).</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasm-tools\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasm-tools\" title=\"bytecodealliance/wasm-tools\">bytecodealliance/wasm-tools</a></div><div class=\"message_embed_description\">Low level tooling for WebAssembly . Contribute to bytecodealliance/wasm-tools development by creating an account on GitHub.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/binaryen\" style=\"background-image: url(https://avatars3.githubusercontent.com/u/11578470?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/binaryen\" title=\"WebAssembly/binaryen\">WebAssembly/binaryen</a></div><div class=\"message_embed_description\">Compiler infrastructure and toolchain library for WebAssembly - WebAssembly/binaryen</div></div></div>",
        "id": 198514545,
        "sender_full_name": "Leon Wang",
        "timestamp": 1590202471
    },
    {
        "content": "<p>Thanks! I'll look into it!</p>",
        "id": 198539281,
        "sender_full_name": "nasso",
        "timestamp": 1590246232
    },
    {
        "content": "<p>The WebGPU API has a lot of custom types, should I define those types in typenames.witx like its done for the other witx files? I guess not, since the nn proposal doesn't, but I prefer to ask!</p>",
        "id": 199282413,
        "sender_full_name": "nasso",
        "timestamp": 1590884288
    },
    {
        "content": "<p>i'd discourage adding more stuff to typenames.witx  - one thing we've talked about informally is that, with a bunch of proposed extensions to wasi including your own, we are going to need namespacing of type names</p>",
        "id": 199282427,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1590884395
    },
    {
        "content": "<p>so probably all typenames will end up being defined inside modules at some point, or maybe some other mechanism to allow many namespaces</p>",
        "id": 199282468,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1590884416
    },
    {
        "content": "<p>at any rate, theres no reason to add them to typenames.witx if you can just put them in a separate file</p>",
        "id": 199282471,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1590884429
    },
    {
        "content": "<p>so id encourage you to write all of the webgpu types and modules in a separate witx file, and only take deps on the existing wasi via <code>(use \"wasi_snapshot_preview1.witx\")</code>, because at some point soonish typenames.witx may not exist anymore.</p>",
        "id": 199282515,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1590884529
    },
    {
        "content": "<p>oh i should use the snapshot? im in the ephemeral folder right now</p>",
        "id": 199282575,
        "sender_full_name": "nasso",
        "timestamp": 1590884677
    },
    {
        "content": "<p>i can still <code>use</code> it from that folder?</p>",
        "id": 199282583,
        "sender_full_name": "nasso",
        "timestamp": 1590884695
    },
    {
        "content": "<p>either way, for now i will create them in my <code>witx</code> file and prefix them like in c (e.g. <code>$gpu_adapter</code>)</p>",
        "id": 199282649,
        "sender_full_name": "nasso",
        "timestamp": 1590884874
    },
    {
        "content": "<p>though, what is the usual way to type opaque types in a wasi interface? like, im basically mapping the webgpu API from <a href=\"https://github.com/webgpu-native/webgpu-headers/blob/master/webgpu.h\">webgpu.h</a> but im not sure if i should <code>typename</code> pointers (e.g. on <a href=\"https://github.com/webgpu-native/webgpu-headers/blob/4763fe9d3e8a087abdbc359e3f95ea6b722a0177/webgpu.h#L59\">line 59</a>) to <code>u64</code> or if there's a better type for it (<code>usize</code> i'd guess?)</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/webgpu-native/webgpu-headers/blob/master/webgpu.h\" style=\"background-image: url(https://avatars3.githubusercontent.com/u/52747906?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/webgpu-native/webgpu-headers/blob/master/webgpu.h\" title=\"webgpu-native/webgpu-headers\">webgpu-native/webgpu-headers</a></div><div class=\"message_embed_description\">Contribute to webgpu-native/webgpu-headers development by creating an account on GitHub.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/webgpu-native/webgpu-headers/blob/4763fe9d3e8a087abdbc359e3f95ea6b722a0177/webgpu.h#L59\" style=\"background-image: url(https://avatars3.githubusercontent.com/u/52747906?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/webgpu-native/webgpu-headers/blob/4763fe9d3e8a087abdbc359e3f95ea6b722a0177/webgpu.h#L59\" title=\"webgpu-native/webgpu-headers\">webgpu-native/webgpu-headers</a></div><div class=\"message_embed_description\">Contribute to webgpu-native/webgpu-headers development by creating an account on GitHub.</div></div></div>",
        "id": 199282746,
        "sender_full_name": "nasso",
        "timestamp": 1590885004
    },
    {
        "content": "<p>after second thought, maybe i should model the module type after <a href=\"https://gpuweb.github.io/gpuweb/#idl-index\">the WebGPU WebIDL</a> instead?</p>",
        "id": 199283167,
        "sender_full_name": "nasso",
        "timestamp": 1590885895
    },
    {
        "content": "<p>sorry, was afk. yeah, rather than snapshot you should import ephemeral if you're in ephemeral.</p>",
        "id": 199285631,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1590890969
    },
    {
        "content": "<p>witx describes something a lot closer to a C header file than webidl</p>",
        "id": 199285636,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1590890997
    },
    {
        "content": "<p>the interface types repo contains a writeup some explanations of why webidl is not very well-suited for describing webassembly interfaces. but in short, i would stick to the c headers</p>",
        "id": 199285683,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1590891051
    },
    {
        "content": "<p>the goal of witx is to eventaully describe interface types, but since there are no implementations of that proposal yet, we are still describing a C ABI. so, starting with a c header is the best way for now.</p>",
        "id": 199285691,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1590891107
    },
    {
        "content": "<p>opaque types are called <code>handle</code> in witx</p>",
        "id": 199285731,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1590891126
    },
    {
        "content": "<p>they get represented as u32 for now. when interface types comes, itll be possible to represent them as ref types (for languages that support it), u32, u64, etc.</p>",
        "id": 199285735,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1590891167
    },
    {
        "content": "<p>thanks for the info! i will stick to the C header then!</p>",
        "id": 199303863,
        "sender_full_name": "nasso",
        "timestamp": 1590927331
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"253992\">Pat Hickey</span> <a href=\"#narrow/stream/206238-general/topic/Experimental.20WASI.20WebGPU.20support/near/199285631\">said</a>:</p>\n<blockquote>\n<p>sorry, was afk. yeah, rather than snapshot you should import ephemeral if you're in ephemeral.</p>\n</blockquote>\n<p>there doesn't seem to be a <code>wasi_ephemeral_preview1.witx</code>, what should i import ?</p>",
        "id": 199306073,
        "sender_full_name": "nasso",
        "timestamp": 1590931097
    },
    {
        "content": "<p>also, how would i represent C enums with explicit values (like on <a href=\"https://github.com/webgpu-native/webgpu-headers/blob/master/webgpu.h#L85\">line 85</a>) in witx?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/webgpu-native/webgpu-headers/blob/master/webgpu.h#L85\" style=\"background-image: url(https://avatars3.githubusercontent.com/u/52747906?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/webgpu-native/webgpu-headers/blob/master/webgpu.h#L85\" title=\"webgpu-native/webgpu-headers\">webgpu-native/webgpu-headers</a></div><div class=\"message_embed_description\">Contribute to webgpu-native/webgpu-headers development by creating an account on GitHub.</div></div></div>",
        "id": 199306156,
        "sender_full_name": "nasso",
        "timestamp": 1590931273
    },
    {
        "content": "<p><a href=\"https://github.com/webgpu-native/webgpu-headers/blob/4763fe9d3e8a087abdbc359e3f95ea6b722a0177/webgpu.h#L970\"><code>wgpuCreateInstance</code></a> takes a <code>WGPUInstanceDescriptor const * descriptor</code> as the first parameter, should i represent that as a <code>u32</code> or is there a better type for that?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/webgpu-native/webgpu-headers/blob/4763fe9d3e8a087abdbc359e3f95ea6b722a0177/webgpu.h#L970\" style=\"background-image: url(https://avatars3.githubusercontent.com/u/52747906?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/webgpu-native/webgpu-headers/blob/4763fe9d3e8a087abdbc359e3f95ea6b722a0177/webgpu.h#L970\" title=\"webgpu-native/webgpu-headers\">webgpu-native/webgpu-headers</a></div><div class=\"message_embed_description\">Contribute to webgpu-native/webgpu-headers development by creating an account on GitHub.</div></div></div>",
        "id": 199311322,
        "sender_full_name": "nasso",
        "timestamp": 1590941500
    }
]