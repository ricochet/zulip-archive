[
    {
        "content": "<p>Hey folks! I would like to generate a Rust executable that will run graphviz. I currently generate HTML based on <a href=\"http://viz-js.com/\">viz.js</a>, which is basically a WASM-ified version of graphviz. I would <em>rather</em> just generate SVG directly by creating my \"dot\" file and then executing an embedded copy of graphviz. In particular, I don't want to require that the graphviz executable (or ideally even the sources) are found on the system running my rust program.</p>",
        "id": 239900512,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621717938
    },
    {
        "content": "<p>How do I do it!</p>",
        "id": 239900521,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621717942
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span> or <span class=\"user-mention\" data-user-id=\"253990\">@fitzgen (he/him)</span></p>",
        "id": 239900526,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621717950
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"414623\">@nikomatsakis</span> your goal being to basically build a Rust executable that uses <code>wasmtime</code> to execute a compiled-in wasm blob that runs graphviz?</p>",
        "id": 239900617,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1621718044
    },
    {
        "content": "<p>I guess so</p>",
        "id": 239900631,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621718051
    },
    {
        "content": "<p>I don't care in particular that it's wasmtime</p>",
        "id": 239900644,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621718069
    },
    {
        "content": "<p>but that is I guess the most likely candidate</p>",
        "id": 239900650,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621718075
    },
    {
        "content": "<p>do you have the wasm blob on hand and are familiar with it? or is it a black box of sorts?</p>",
        "id": 239900666,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1621718089
    },
    {
        "content": "<p>I'm probably making life harder than I have to</p>",
        "id": 239900667,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621718090
    },
    {
        "content": "<p>(presumably there's a lot of fancy JS interopereating with the wasm blob as well)</p>",
        "id": 239900670,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1621718098
    },
    {
        "content": "<p>well, right now I have nothing</p>",
        "id": 239900672,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621718100
    },
    {
        "content": "<p>Compile graphviz to wasm with wasi using wasi-sdk, then run it via wasmtime</p>",
        "id": 239900683,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1621718108
    },
    {
        "content": "<p>I generate a dot file</p>",
        "id": 239900684,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621718109
    },
    {
        "content": "<p>I <em>could</em> use this Rust graphviz package, but it wants a graphviz executable, and I don't like that idea</p>",
        "id": 239900717,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621718139
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"253990\">fitzgen (he/him)</span> <a href=\"#narrow/stream/206238-general/topic/embedding.20and.20executing.20WASM.20from.20Rust/near/239900683\">said</a>:</p>\n<blockquote>\n<p>Compile graphviz to wasm with wasi using wasi-sdk, then run it via wasmtime</p>\n</blockquote>\n<p>this sounds like what I had in mind</p>",
        "id": 239900722,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621718147
    },
    {
        "content": "<p>are there instructions for how to do that sort of thing?</p>",
        "id": 239900730,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621718156
    },
    {
        "content": "<p>this is partly an excuse for me to play with wasm, of course</p>",
        "id": 239900733,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621718161
    },
    {
        "content": "<p>Using the existing wasm blob is probably a no go; it’s probably JS specific, as Alex mentions</p>",
        "id": 239900776,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1621718169
    },
    {
        "content": "<p><a href=\"https://github.com/WebAssembly/wasi-sdk\">https://github.com/WebAssembly/wasi-sdk</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/wasi-sdk\" style=\"background-image: url(https://opengraph.githubassets.com/163717e9b99150a8f4c6fbe999ed166e2f49f2431068d567b5fd7ac225566a5c/WebAssembly/wasi-sdk)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/wasi-sdk\" title=\"WebAssembly/wasi-sdk\">WebAssembly/wasi-sdk</a></div><div class=\"message_embed_description\">WASI-enabled WebAssembly C/C++ toolchain. Contribute to WebAssembly/wasi-sdk development by creating an account on GitHub.</div></div></div>",
        "id": 239900799,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1621718202
    },
    {
        "content": "<p>can I apt-get that?</p>",
        "id": 239900820,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621718236
    },
    {
        "content": "<p>Read me has details; pretty much just setting CC and passing a couple flags</p>",
        "id": 239900821,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1621718241
    },
    {
        "content": "<p>Probably not</p>",
        "id": 239900826,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1621718245
    },
    {
        "content": "<p>yeah, ok, it doesn't look too hard</p>",
        "id": 239900831,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621718263
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 239900833,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621718275
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"253990\">fitzgen (he/him)</span> <a href=\"#narrow/stream/206238-general/topic/embedding.20and.20executing.20WASM.20from.20Rust/near/239900826\">said</a>:</p>\n<blockquote>\n<p>Probably not</p>\n</blockquote>\n<p>too bad :)</p>",
        "id": 239900874,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621718289
    },
    {
        "content": "<p>I personally don’t install it to /opt, just a local dir in my home so I can have multiple versions installed in parallel</p>",
        "id": 239900886,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1621718311
    },
    {
        "content": "<p>this is like <em>just on the limit</em> of complexity I am willing to endure</p>",
        "id": 239900899,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621718332
    },
    {
        "content": "<p>I have to copy and paste shell commands and edit them, but there's only 2, and the edits are trivial :)</p>",
        "id": 239900908,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621718344
    },
    {
        "content": "<p>ok</p>",
        "id": 239900909,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621718345
    },
    {
        "content": "<p>This may require patching graphviz, btw. I don’t know if it uses signals but that’s a common thing to have to turn off</p>",
        "id": 239900922,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1621718358
    },
    {
        "content": "<p>And multithreading</p>",
        "id": 239900926,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1621718374
    },
    {
        "content": "<p>ok</p>",
        "id": 239900977,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621718412
    },
    {
        "content": "<p>I suppose I could use <a href=\"https://crates.io/crates/graphviz-sys\">https://crates.io/crates/graphviz-sys</a></p>",
        "id": 239901012,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621718440
    },
    {
        "content": "<p>that's so much less cool :)</p>",
        "id": 239901014,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621718445
    },
    {
        "content": "<p>also I guess that would require the people running cargo build to have the libraries on their system</p>",
        "id": 239901053,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621718478
    },
    {
        "content": "<p>which is kind of what I want to avoid</p>",
        "id": 239901054,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621718481
    },
    {
        "content": "<p>/me nods</p>",
        "id": 239901059,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1621718492
    },
    {
        "content": "<p>and me to write unsafe code</p>",
        "id": 239901063,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621718500
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">checking</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">gcc</span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">nmatsakis</span><span class=\"o\">/</span><span class=\"n\">versioned</span><span class=\"o\">/</span><span class=\"n\">skill</span><span class=\"o\">-</span><span class=\"n\">tree</span><span class=\"o\">/</span><span class=\"n\">graphviz</span><span class=\"o\">/</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">sdk</span><span class=\"o\">-</span><span class=\"mf\">12.0</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">clang</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">sysroot</span><span class=\"o\">='/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">nmatsakis</span><span class=\"o\">/</span><span class=\"n\">versioned</span><span class=\"o\">/</span><span class=\"n\">skill</span><span class=\"o\">-</span><span class=\"n\">tree</span><span class=\"o\">/</span><span class=\"n\">graphviz</span><span class=\"o\">/</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">sdk</span><span class=\"o\">-</span><span class=\"mf\">12.0</span><span class=\"o\">/</span><span class=\"n\">share</span><span class=\"o\">/</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">sysroot</span><span class=\"w\"></span>\n<span class=\"n\">checking</span><span class=\"w\"> </span><span class=\"n\">whether</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">C</span><span class=\"w\"> </span><span class=\"n\">compiler</span><span class=\"w\"> </span><span class=\"n\">works</span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">no</span><span class=\"w\"></span>\n<span class=\"n\">configure</span>: <span class=\"nc\">error</span>: <span class=\"nc\">in</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">nmatsakis</span><span class=\"o\">/</span><span class=\"n\">versioned</span><span class=\"o\">/</span><span class=\"n\">skill</span><span class=\"o\">-</span><span class=\"n\">tree</span><span class=\"o\">/</span><span class=\"n\">graphviz</span><span class=\"o\">/</span><span class=\"n\">graphviz</span><span class=\"o\">-</span><span class=\"mf\">2.47.1</span><span class=\"o\">'</span>:\n<span class=\"nc\">configure</span>: <span class=\"nc\">error</span>: <span class=\"nc\">C</span><span class=\"w\"> </span><span class=\"n\">compiler</span><span class=\"w\"> </span><span class=\"n\">cannot</span><span class=\"w\"> </span><span class=\"n\">create</span><span class=\"w\"> </span><span class=\"n\">executables</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 239901931,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621719465
    },
    {
        "content": "<p>I suppose that should not be surprising :)</p>",
        "id": 239901935,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621719472
    },
    {
        "content": "<p>tbh honest none of this is likely to succeed</p>",
        "id": 239902477,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1621720041
    },
    {
        "content": "<p>if you're lucky you can configure graphviz for cross compilation</p>",
        "id": 239902483,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1621720048
    },
    {
        "content": "<p>yeah I think I decided to just give up</p>",
        "id": 239902486,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621720052
    },
    {
        "content": "<p>if you're lucky it'll actually compile with wasi-sdk</p>",
        "id": 239902488,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1621720054
    },
    {
        "content": "<p>if you're lucky it'll actually produce a meaningful output</p>",
        "id": 239902494,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1621720062
    },
    {
        "content": "<p>but anything can go wrong along the way and it's all \"goop of porting a C project\" which can get... tricky</p>",
        "id": 239902500,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1621720077
    },
    {
        "content": "<p>yeah I have no real appetite for that :)</p>",
        "id": 239902575,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621720138
    },
    {
        "content": "<p>anyway I have a workable-ish system with viz.js</p>",
        "id": 239902597,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1621720172
    }
]