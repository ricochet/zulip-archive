[
    {
        "content": "<p>Hi! I was just looking at a performance profile and noticed function calls to clone during drop at <a href=\"https://github.com/bytecodealliance/wasmtime/commit/0977952dcd9d482bff7c288868ccb52769b3a92e#diff-e95cf87da8a8dcc08101777a3375ca3e634f0ed6b9f7c5daeec7e73cc4610eafR1078\">https://github.com/bytecodealliance/wasmtime/commit/0977952dcd9d482bff7c288868ccb52769b3a92e#diff-e95cf87da8a8dcc08101777a3375ca3e634f0ed6b9f7c5daeec7e73cc4610eafR1078</a></p>\n<p>It looks like it was added for a security advisory a while ago. It seems like it's bumping a refcount for the module, so I was wondering how it helps with the note in the advisory or if it might be redundant (e.g., the <code>Arc</code> seems like it's already guaranteed to be held through the duration of drop, unless something depends on the actual refcount somewhere)</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/commit/0977952dcd9d482bff7c288868ccb52769b3a92e#diff-e95cf87da8a8dcc08101777a3375ca3e634f0ed6b9f7c5daeec7e73cc4610eafR1078\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/c00c84e44d12ededcdff679a998bd967227dc3d4\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f646663316665343435376666306363343234616333643737653339393836303263306132323762323236653236356666363864396235646532633463626338362f62797465636f6465616c6c69616e63652f7761736d74696d652f636f6d6d69742f30393737393532646364396434383262666637633238383836386363623532373639623361393265)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/commit/0977952dcd9d482bff7c288868ccb52769b3a92e#diff-e95cf87da8a8dcc08101777a3375ca3e634f0ed6b9f7c5daeec7e73cc4610eafR1078\" title=\"Merge pull request from GHSA-ch89-5g45-qwc7 · bytecodealliance/wasmtime@0977952\">Merge pull request from GHSA-ch89-5g45-qwc7 · bytecodealliance/wasmtime@0977952</a></div><div class=\"message_embed_description\">* Fix miscompile from functions mutating `VMContext`\n\nThis commit fixes a miscompilation in Wasmtime on LLVM 16 where methods\non `Instance` which mutated the state of the internal `VMContext` were\n...</div></div></div>",
        "id": 418299627,
        "sender_full_name": "Josh Groves",
        "timestamp": 1706283447
    },
    {
        "content": "<p>This specific one may no longer be required, I'd have to dig around a bit more, but in general an instantiation of a module needs to keep a strong reference to the module in case the module is dropped elsewhere because the underlying code can't go away. There's other mechanisms we have for preserving this though and this may be redundant, I sort of forget.</p>\n<p>Would you happen to have a benchmark to poke at to help investigate the issues here? (microbenchmark is fine)</p>",
        "id": 418322321,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1706290964
    },
    {
        "content": "<p>I don't have a great benchmark to share right now but it's probably not a real-world performance problem. I just happened to see a <code>clone</code> being called from a <code>drop</code> in a performance  profile flame chart and was curious about it (I think the sampling profiler just happened to sample it a few times by chance)</p>",
        "id": 418326602,
        "sender_full_name": "Josh Groves",
        "timestamp": 1706292503
    },
    {
        "content": "<p>oh! I misinterpreted this</p>",
        "id": 418330859,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1706294101
    },
    {
        "content": "<p>oh ok no that clone is \"I don't want to write unsafe code here and it's easier to just clone\"</p>",
        "id": 418330893,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1706294114
    },
    {
        "content": "<p>it is not fundamentally required since it's already rooted elsewhere</p>",
        "id": 418330902,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1706294121
    },
    {
        "content": "<p>That makes sense, thank you!</p>",
        "id": 418334041,
        "sender_full_name": "Josh Groves",
        "timestamp": 1706295442
    }
]