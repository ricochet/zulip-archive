[
    {
        "content": "<p>In component mode,  How many memory copy happens when a struct passing from host to guest?  Host side data type to wit type(repl(c)),  wit type lower to guest linear memory (or return area),  from linear memory (or return area) to guest stack  local variable type.  Is my understanding correct?  Thanks for your guidance.</p>",
        "id": 423738896,
        "sender_full_name": "Bryton",
        "timestamp": 1709089996
    },
    {
        "content": "<p>In my understanding with a list you can get down to zero copies if you design carefully: allocate in linear memory, construct members in place and pass ownership to guest. This assumes that you only have a single definition of the type of course as any change of types will involve a conversion.</p>\n<p>With small structs by value canonical ABI optimizes by passing the struct members as direct function arguments. And for larger ones (more than 16 integers up to 64 bit) the passing in linear memory makes a copy you can't avoid for now.</p>",
        "id": 423756992,
        "sender_full_name": "Christof Petig",
        "timestamp": 1709103330
    },
    {
        "content": "<p>Thank you very much, Christof.  Do you have any idea to get linear memory from wamstime::component? I don't think it is supported by wasmtime for now.</p>",
        "id": 423820633,
        "sender_full_name": "Bryton",
        "timestamp": 1709127897
    },
    {
        "content": "<p>Otherwise, we can not construct members in place from linear memory.</p>",
        "id": 423820765,
        "sender_full_name": "Bryton",
        "timestamp": 1709127945
    },
    {
        "content": "<p>Another concern is that WASM component hides the data struct underlying layout from different languages,  directly construct members in place maybe conflict with this concept?</p>",
        "id": 423821350,
        "sender_full_name": "Bryton",
        "timestamp": 1709128112
    },
    {
        "content": "<p>Arguments are stored according to the component model <a href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/CanonicalABI.md\">canonical ABI</a>; each guest language is responsible for producing/consuming this standard layout.</p>",
        "id": 423826599,
        "sender_full_name": "Lann Martin",
        "timestamp": 1709129540
    },
    {
        "content": "<p>I think you are correct that the wasmtime API does not currently expose components' modules' linear memories, at least not in any documented/stable way.</p>",
        "id": 423827124,
        "sender_full_name": "Lann Martin",
        "timestamp": 1709129710
    },
    {
        "content": "<p>I see. Do you have any suggestion to pass large data struct to guest? In my case, I have many large data structs. </p>\n<p>Besides, would be it reasonable for WASM component mode to leave chance to let passing large data structs through linear memory? Like mmap for data sharing between user and kernel space. I really  think it does matter to WASM performance.</p>",
        "id": 423829085,
        "sender_full_name": "Bryton",
        "timestamp": 1709130331
    },
    {
        "content": "<p>The <a href=\"#narrow/stream/217126-wasmtime/topic/Shared.20memory.20and.20components/near/423650070\">discussion over here</a> is perhaps of interest you as I think it touches some related topics</p>",
        "id": 423854465,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1709137177
    }
]