[
    {
        "content": "<p>Hi, I'm new to the community, but I'm super excited to be here.</p>\n<p>A week ago, I was pondering my next side project. I settled on implementing a toolchain for a programming language. I've implemented interpreters and compilers before, but this time I wanted to better understand what goes into making all of the useful tools around one. I'm talking about things like:</p>\n<ul>\n<li>A compiler/interpreter/runtime</li>\n<li>A language server</li>\n<li>A debugger</li>\n<li>A profiler</li>\n<li>A formatter</li>\n<li>A package manager</li>\n<li>A website with quality documentation</li>\n</ul>\n<p>I'm a one man show, and this is purely for education purposes, so all of this stuff would be relatively barebones. In that vein, I'm not planning to invent a new language but instead will implement all of this for a slightly extended dialect of Tiny-BASIC, a super simple language.</p>\n<p>One of my first thought was: wouldn't it be cool if I used wasm as a source code compilation target and wrote a simple VM directly in WAT?</p>\n<p>I have limited WASM experience, mostly from compiling a few rust libraries to wasm so I could use them on the web. So I started researching  WASM, which led me to: binaryen, wasmtime, cranelift, binaryen.js, wasmer, jco, the component model, WIT, warg...</p>\n<p>I realized a few thing:</p>\n<ul>\n<li>I think I can leverage the WASM ecosystem to achieve my goals</li>\n<li>In the process I can probably contribute to some of these projects which are still in early stages (looking at you warg).</li>\n<li>I'm probably going to need a bit of guidance to choose the right mix and match of all these wasm tools and abstractions in order to achieve what I want.</li>\n</ul>\n<p>That's it, just wanted to introduce myself. I'll post specific questions in other thread/channels or whatever this Zulip thing calls them.<span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 410650484,
        "sender_full_name": "Philippe Vaillancourt",
        "timestamp": 1704045941
    }
]