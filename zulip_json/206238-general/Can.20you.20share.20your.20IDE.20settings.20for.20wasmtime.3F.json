[
    {
        "content": "<p>I'd appreciate if someone could share their IDE settings, namely files in <code>.vscode/</code> directory. I'm now in trouble with telling rust-analyzer that <code>cfg(compiler)</code> should be enabled.</p>",
        "id": 310753458,
        "sender_full_name": "Fuu",
        "timestamp": 1668750611
    },
    {
        "content": "<p>My temporary workaround is to modify the file <code>crates/wasmtime/build.rs</code>, moving</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"cargo:rustc-cfg=compiler\"</span><span class=\"p\">);</span><span class=\"w\"></span>\n</code></pre></div>\n<p>outside of the <code>if cfg!(feature = \"cranelift\") { ... }</code> block.</p>",
        "id": 310757152,
        "sender_full_name": "Fuu",
        "timestamp": 1668753288
    },
    {
        "content": "<p>You can set the <code>rust-analyzer.cargo.features</code> config to include \"cranelift\" (or \"wasmtime/cranelift\", not sure which one works)</p>",
        "id": 310826572,
        "sender_full_name": "bjorn3",
        "timestamp": 1668779563
    },
    {
        "content": "<p>Not to hijack this topic but seems related, have anyone experiencing rust-analyzer not showing errors of wasmtime-cli or wasmtime? It seems like the <code>add_to_linker</code> methods generated by <code>define_wasi!</code> macro is not recognized by RA correctly.<br>\nI was seeking for a workaround long time but nothing worked well.</p>\n<p>FYI I painted unresolved references into <code>#ff0000</code> to better see what is going wrong:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">  </span><span class=\"s\">\"editor.semanticTokenColorCustomizations\"</span>: <span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"s\">\"rules\"</span>: <span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"s\">\"unresolvedReference\"</span>: <span class=\"s\">\"#ff0000\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p><a href=\"/user_uploads/15107/J-EaRfaJUZDUr0By8-oA6MDB/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/15107/J-EaRfaJUZDUr0By8-oA6MDB/image.png\" title=\"image.png\"><img src=\"/user_uploads/15107/J-EaRfaJUZDUr0By8-oA6MDB/image.png\"></a></div><p>Anyway, <span class=\"user-mention\" data-user-id=\"264278\">@bjorn3</span> 's suggestion, <code>\"wasmtime/cranelift\"</code>, seems working well. Thanks.</p>",
        "id": 310950375,
        "sender_full_name": "Nam Junghyun",
        "timestamp": 1668819609
    }
]