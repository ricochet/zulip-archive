[
    {
        "content": "<p>In general, how can I create any labels that I can jump to?<br>\nBest this of course linked to a condition (IsGt, IsLt, ...).</p>\n<p>Currently my experimental (and very risky) code: <br>\n<a href=\"https://gist.github.com/deeprobin/1275813f3b9ba4401982b681786d6991\">https://gist.github.com/deeprobin/1275813f3b9ba4401982b681786d6991</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://gist.github.com/deeprobin/1275813f3b9ba4401982b681786d6991\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/2aafd906f69f8f71c7544060163ba3e419b173e8\\/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f67697374732f676973742d6f672d696d6167652e706e67)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://gist.github.com/deeprobin/1275813f3b9ba4401982b681786d6991\" title=\"java_codegen.rs\">java_codegen.rs</a></div><div class=\"message_embed_description\">GitHub Gist: instantly share code, notes, and snippets.</div></div></div>",
        "id": 290923741,
        "sender_full_name": "Robin Lindner",
        "timestamp": 1658854741
    },
    {
        "content": "<p>I don't think we support labels directly (i.e goto). However you should be able to create a block for each label and jump to each block.</p>",
        "id": 290924026,
        "sender_full_name": "Afonso Bordado",
        "timestamp": 1658854850
    },
    {
        "content": "<p>Yep, in a control-flow-graph IR, labels <em>are</em> blocks. The main difference with a classical \"conditional goto\" representation (like machine code or JVM bytecode or...) is that the end of a block doesn't have a fallthrough; a conditional always has two targets. You can make one of those targets the very next block if you want to emulate conditional-gotos-with-fallthrough</p>",
        "id": 290924268,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1658854944
    },
    {
        "content": "<p>So could I create a block for each instruction or is it better to do the per condition?</p>\n<p>In other words, do the blocks prevent Cranelift from doing any optimizations?</p>",
        "id": 290926732,
        "sender_full_name": "Robin Lindner",
        "timestamp": 1658856074
    },
    {
        "content": "<p>It would be quite costly to build a basic block per instruction. The usual way to break code into blocks is to split wherever a label occurs</p>",
        "id": 290927020,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1658856220
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"254389\">@Chris Fallin</span> So that's probably going to be a little more complex then. Does wasmtime have something like this or has anyone already tried to implement a JVM using Cranelift?</p>",
        "id": 290942488,
        "sender_full_name": "Robin Lindner",
        "timestamp": 1658862881
    },
    {
        "content": "<p>I'm not aware of any other JVMs done using Cranelift. However this sort of thing (translating JVM bytecode to a CFG) should exist in any other optimizing JVM as well, it's not anything specific to Cranelift's requirements; I would recommend looking at how e.g. OpenJDK builds its IR, as inspiration for your project</p>",
        "id": 290942633,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1658862954
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"445310\">@Robin Lindner</span> In case it's helpful, I've <a href=\"https://github.com/ReadyTalk/avian\">written a JVM</a> using a custom JIT (Cranelift didn't exist at the time) which uses an SSA-style IR which is organized into a control flow graph of basic blocks.  As Chris alluded to, every branch represents the end of a block, and every branch target represents the start of a block.  For a block ending in a <code>goto</code>, there's only a single outgoing edge to the target block.  For a block ending in e.g. a <code>ifeq</code>, there are two outgoing edges for the two target blocks.  For a block ending in a <code>tableswitch</code>, there may be an arbitrary number of outgoing edges corresponding to each of the switch cases.  And of course each branch target can be a target for any number of branches, so it may have any number of incoming edges.</p>\n<p>Here's how I recommend thinking of it: Java bytecode implicitly defines a control flow graph -- you just need turn that implicit graph into an explicit one for Cranelift.  I haven't used Cranelift yet myself, so I'll leave it to others to answer any specific questions about it, but I'm happy to answer questions about the Java side of things.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/ReadyTalk/avian\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/d3da227a661fd33bbd8cecc74f936b64736690b3\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f623339636435373633333431326435333934353636376165316139326539353334363464383632373133333938393036336537643333326561623231646662382f526561647954616c6b2f617669616e)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/ReadyTalk/avian\" title=\"GitHub - ReadyTalk/avian: [INACTIVE] Avian is a lightweight virtual machine and class library designed to provide a useful subset of Java's features, suitable for building self-contained applications.\">GitHub - ReadyTalk/avian: [INACTIVE] Avian is a lightweight virtual machine and class library designed to provide a useful subset of Java's features, suitable for building self-contained applications.</a></div><div class=\"message_embed_description\">[INACTIVE] Avian is a lightweight virtual machine and class library designed to provide a useful subset of Java&#39;s features, suitable for building self-contained applications. - GitHub - ReadyTa...</div></div></div>",
        "id": 290951538,
        "sender_full_name": "Joel Dice",
        "timestamp": 1658867228
    },
    {
        "content": "<p>Thank you <span class=\"user-mention\" data-user-id=\"509936\">@Joel Dice</span> I'll take a look at your project. </p>\n<p><span class=\"user-mention\" data-user-id=\"254389\">@Chris Fallin</span> <br>\nIn order to understand a bit of the Cranelift architecture, etc. I would like to get a halfway working prototype running first, regardless of whether it has underground performance or not.<br>\nTherefore I chose the simple case that I create a block for each instruction.</p>\n<p>For some reason I get the error that it doesn't find the entry block. Where is the problem?<br>\n<a href=\"https://gist.github.com/deeprobin/4bb6e98bff65271c92861ca7e165997a\">https://gist.github.com/deeprobin/4bb6e98bff65271c92861ca7e165997a</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://gist.github.com/deeprobin/4bb6e98bff65271c92861ca7e165997a\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/2aafd906f69f8f71c7544060163ba3e419b173e8\\/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f67697374732f676973742d6f672d696d6167652e706e67)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://gist.github.com/deeprobin/4bb6e98bff65271c92861ca7e165997a\" title=\"codegen.rs\">codegen.rs</a></div><div class=\"message_embed_description\">GitHub Gist: instantly share code, notes, and snippets.</div></div></div>",
        "id": 291078883,
        "sender_full_name": "Robin Lindner",
        "timestamp": 1658941920
    }
]