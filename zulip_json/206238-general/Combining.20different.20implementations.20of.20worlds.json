[
    {
        "content": "<p>I'm trying to provide an implementation of a world for wasmtime.</p>\n<p>Is it possible to build a library that implements a world, and have the consumers of the library be able to combine it with other worlds to build one larger world, without having to rewrite a lot of code?<br>\nE.g. one library provides wasi-webgpu, and another one provides wasi-cli, and the consumer want's to use both.</p>\n<p>At a first glance that doesn't seem possible, unless we force the consumers of the library to specify all the same configurations in <code>wasmtime::component::bindgen!</code> as all the libraries it's using, which is really cumbersome.</p>\n<p>Is there an easier way to do this?</p>",
        "id": 426042252,
        "sender_full_name": "Mendy Berger",
        "timestamp": 1710209956
    },
    {
        "content": "<p>This should be possible to do, but it requires some manual configuration as well as some fiddling with paths. For example with <code>wasi:http</code> it's <a href=\"https://github.com/bytecodealliance/wasmtime/blob/8dd2ae9e2c57b3fd32f91fb8f0ec1543854f4c7c/crates/wasi-http/src/lib.rs#L11\">generated in the <code>wasmtime-wasi-http</code> crate</a> but it <a href=\"https://github.com/bytecodealliance/wasmtime/blob/8dd2ae9e2c57b3fd32f91fb8f0ec1543854f4c7c/crates/wasi-http/src/lib.rs#L21-L35\">refers to other wasi types in the <code>wasmtime-wasi</code> crate</a> and is <a href=\"https://github.com/bytecodealliance/wasmtime/blob/8dd2ae9e2c57b3fd32f91fb8f0ec1543854f4c7c/src/commands/run.rs#L728\">conditionally added to the CLI</a>.</p>\n<p>I think adding things to a linker is probably one of the more manual parts, there's not a great way to orchestrate that happening at WIT bindgen time when there's lots of libraries in play (but we could improve that too)</p>",
        "id": 426042669,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1710210169
    },
    {
        "content": "<p>Thanks!<br>\nSo I guess for now, the consumer will have to do a lot of manual configuration.</p>",
        "id": 426200510,
        "sender_full_name": "Mendy Berger",
        "timestamp": 1710272717
    },
    {
        "content": "<p>Actually, I can probably provide a macro that outputs the mappings for <code>with</code>, since that seems like the largest part.</p>",
        "id": 426200686,
        "sender_full_name": "Mendy Berger",
        "timestamp": 1710272784
    },
    {
        "content": "<p>baby steps</p>",
        "id": 426200767,
        "sender_full_name": "Ralph",
        "timestamp": 1710272818
    },
    {
        "content": "<p>do NOT help your users too much, lest they immediately ask for LOTS MORE HELP</p>",
        "id": 426200810,
        "sender_full_name": "Ralph",
        "timestamp": 1710272836
    },
    {
        "content": "<p>:-)</p>",
        "id": 426200813,
        "sender_full_name": "Ralph",
        "timestamp": 1710272839
    },
    {
        "content": "<p><span aria-label=\"lol\" class=\"emoji emoji-1f606\" role=\"img\" title=\"lol\">:lol:</span></p>",
        "id": 426200842,
        "sender_full_name": "Mendy Berger",
        "timestamp": 1710272852
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"419274\">Mendy Berger</span> <a href=\"#narrow/stream/206238-general/topic/Combining.20different.20implementations.20of.20worlds/near/426200686\">said</a>:</p>\n<blockquote>\n<p>Actually, I can probably provide a macro that outputs the mappings for <code>with</code>, since that seems like the largest part.</p>\n</blockquote>\n<p>Actually that's not possible, <code>wasmtime::component::bindgen!</code> won't take a macro call.</p>",
        "id": 426202052,
        "sender_full_name": "Mendy Berger",
        "timestamp": 1710273361
    },
    {
        "content": "<p>Yeah it does require a chunk of configuration, and we haven't had a great idea about how to reduce the amount required yet</p>",
        "id": 426202476,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1710273532
    },
    {
        "content": "<p>What if I structure all the webgpu resources with the exact same paths and names as the wit expects. Can I then at least map it with a single item in  <code>with</code>?<br>\nThat would be a lot better than having to map each resource separately.</p>",
        "id": 426202898,
        "sender_full_name": "Mendy Berger",
        "timestamp": 1710273711
    },
    {
        "content": "<p>Last night you inspired me to work on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8083\">https://github.com/bytecodealliance/wasmtime/pull/8083</a>, and would that do what you're thinking?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/8083\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/8190b35adca50f2a6613259b8749fb829dfac256\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f613536333239323831373866393634346134383435376131313964306530623263396237666265616231356338366265353330636536313566343235643562382f62797465636f6465616c6c69616e63652f7761736d74696d652f70756c6c2f38303833)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/8083\" title=\"Enable specifying namespaces/packages in `with` by alexcrichton · Pull Request #8083 · bytecodealliance/wasmtime\">Enable specifying namespaces/packages in `with` by alexcrichton · Pull Request #8083 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">This commit implements bytecodealliance/wit-bindgen#840 for Wasmtime. Currently with keys to bindgen only support either mapping resources or interfaces. Now they additionally support mapping entir...</div></div></div>",
        "id": 426205275,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1710274667
    },
    {
        "content": "<p>that'd help users of webgpu but it wouldn't help you defining webgpu itself</p>",
        "id": 426205292,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1710274676
    },
    {
        "content": "<p>Oh wow! That's so cool to hear!</p>",
        "id": 426205827,
        "sender_full_name": "Mendy Berger",
        "timestamp": 1710274895
    },
    {
        "content": "<p>Now, how do I inspire you to do my dishes? <span aria-label=\"lol\" class=\"emoji emoji-1f606\" role=\"img\" title=\"lol\">:lol:</span></p>",
        "id": 426205833,
        "sender_full_name": "Mendy Berger",
        "timestamp": 1710274897
    },
    {
        "content": "<p>If I understand correctly what it's doing, then yes, it will be a major help!<br>\nI'm okay having to specify a bit more on the library's side, if I can cut down the code on the consumer's side.</p>",
        "id": 426206128,
        "sender_full_name": "Mendy Berger",
        "timestamp": 1710275017
    },
    {
        "content": "<p>Ok cool, that's been on my todo list for awhile so I'm glad you were able to give me the push to finally implement it :)</p>",
        "id": 426208544,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1710275985
    },
    {
        "content": "<p>sorry on the dishes, I've got enough of those over here heh</p>",
        "id": 426208558,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1710275994
    },
    {
        "content": "<p>Do I lose all the code generation if I specify a whole interface in <code>with</code>? Seems like I now have to implement my own <code>add_to_linker</code></p>",
        "id": 426212450,
        "sender_full_name": "Mendy Berger",
        "timestamp": 1710277541
    },
    {
        "content": "<p>currently, yeah, but I was thinking that was something we should add back in</p>",
        "id": 426214059,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1710278238
    },
    {
        "content": "<p>at the very least put a <code>pub use</code> but ideally also synthesize it in <code>add_to_linker</code></p>",
        "id": 426214089,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1710278250
    },
    {
        "content": "<p>Just an update: I ended up splitting the libraries up at the interface level, and managed to get them to play nicely together.<br>\n<a href=\"https://github.com/MendyBerger/wasi-webgpu/tree/main/crates\">Here</a> you can see the libraries side.<br>\nAnd <a href=\"https://github.com/MendyBerger/wasi-webgpu/blob/6c5222c406b923d39c99fc05260de742b3bee54b/example-runtime/src/main.rs#L21-L33\">here</a> you can see the consumer combining multiple libraries.<br>\nEnded up working really well.<br>\nThanks for the help!!</p>\n<p>This was all on the side of the runtime, now I'm having a similar issue on the guest side with wit-bindgen. I've created a separate thread for that.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/MendyBerger/wasi-webgpu/tree/main/crates\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/9fd8e15c38a340660e7753683f44925c149d3fc5\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f623131353865333831356634626461383530376634323463336634623034353164636435353037653633366433633161306161373530306333343437613964382f4d656e64794265726765722f776173692d776562677075)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/MendyBerger/wasi-webgpu/tree/main/crates\" title=\"wasi-webgpu/crates at main · MendyBerger/wasi-webgpu\">wasi-webgpu/crates at main · MendyBerger/wasi-webgpu</a></div><div class=\"message_embed_description\">Contribute to MendyBerger/wasi-webgpu development by creating an account on GitHub.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/MendyBerger/wasi-webgpu/blob/6c5222c406b923d39c99fc05260de742b3bee54b/example-runtime/src/main.rs#L21-L33\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/9fd8e15c38a340660e7753683f44925c149d3fc5\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f623131353865333831356634626461383530376634323463336634623034353164636435353037653633366433633161306161373530306333343437613964382f4d656e64794265726765722f776173692d776562677075)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/MendyBerger/wasi-webgpu/blob/6c5222c406b923d39c99fc05260de742b3bee54b/example-runtime/src/main.rs#L21-L33\" title=\"wasi-webgpu/example-runtime/src/main.rs at 6c5222c406b923d39c99fc05260de742b3bee54b · MendyBerger/wasi-webgpu\">wasi-webgpu/example-runtime/src/main.rs at 6c5222c406b923d39c99fc05260de742b3bee54b · MendyBerger/wasi-webgpu</a></div><div class=\"message_embed_description\">Contribute to MendyBerger/wasi-webgpu development by creating an account on GitHub.</div></div></div>",
        "id": 433186033,
        "sender_full_name": "Mendy Berger",
        "timestamp": 1713147011
    }
]