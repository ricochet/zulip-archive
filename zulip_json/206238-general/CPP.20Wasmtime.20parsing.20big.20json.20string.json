[
    {
        "content": "<p>Hi,</p>\n<p>I have a cpp wasmtime that parse a jsonstring. My problem is that my cpp code runs well on both small and large json string input but fails with wasm on large string only. No error is printed. I suppose a memory limitation but I don't know how to change it. Could you help me please?</p>",
        "id": 386419843,
        "sender_full_name": "cdvl",
        "timestamp": 1692631618
    },
    {
        "content": "<p>Is it possible to share a wasm module that reproduces this behavior? For example are you running the <code>wasmtime</code> CLI? Are you using the Rust embedding API? Is the guest wasm module in C++? (e.g. details like this can help folks dig in, but a reproduction would be most useful)</p>",
        "id": 386426487,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1692633167
    },
    {
        "content": "<p>I'm running the .wasm file with Rust API but I tried with wasmtime CLI first. Both work on small json but fail on large inputs. It's neither due to my C++ code nor the big json file, because when I build and run the C++ code, everything is fine. The problem appears when I switch to wasm.  </p>\n<p>I will ask if it possible to share a wasm module.</p>",
        "id": 386546429,
        "sender_full_name": "cdvl",
        "timestamp": 1692689165
    },
    {
        "content": "<p>Here the example :<br>\n<a href=\"/user_uploads/15107/7yEe2LUJxRFbCdNXTXh0FO3f/json-parsing.zip\">json-parsing.zip</a></p>\n<p>You can run the cpp code on big json file via \"make cpp\".<br>\nI tried two different json lib in c++ (nlohmann and simdjson). You can test them with:</p>\n<ul>\n<li>make nlohmann-small</li>\n<li>make nlohmann-big</li>\n<li>make  simdjson-small</li>\n<li>make simdjson-big</li>\n</ul>",
        "id": 386555235,
        "sender_full_name": "cdvl",
        "timestamp": 1692692671
    },
    {
        "content": "<p>It's well a memory limitation. I just write a c++ code with a vector growing  over iterations and the same thing occurred. What are wasm memory limitation? How to increase these limitations?</p>",
        "id": 386600315,
        "sender_full_name": "cdvl",
        "timestamp": 1692708435
    },
    {
        "content": "<p>Can you share the actual wasm module you're running? I don't have emscripten installed myself so I compiled the example with wasi-sdk after some modifications and it works fine for the small/big examples you provided. One thing you can try is passing <code>---trap-on-grow-failure</code> to the CLI which will cause a trap to happen on OOM rather than returning -1 which can turn a failure that may be ignored into a loud failure</p>",
        "id": 386619166,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1692713575
    },
    {
        "content": "<p><a href=\"/user_uploads/15107/FsK0kWWK8ZShUaxYmAJrt-A-/test.wasm\">test.wasm</a></p>\n<p>--trap-on-grow-failure does not change anything. I will try with wasi-sdk! What modification did you make?</p>",
        "id": 386623928,
        "sender_full_name": "cdvl",
        "timestamp": 1692714798
    },
    {
        "content": "<p>I changed a few things like removing usage of <code>&lt;filesystem&gt;</code> in <code>json.hpp</code> and removing some <code>try</code>/<code>catch</code> and otherwise just fixing a few compile errors, mostly differences in runtimes I think between emscripten/wasi-sdk</p>",
        "id": 386631976,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1692716835
    },
    {
        "content": "<p>Hm running <code>wasmtime run ./test.wasm &lt; input</code> doesn't seem to do anything with any input with the module you gave me. Could you perhaps open an issue on Wasmtime with detailed steps/reproduction/outputs/etc to help further debug this?</p>",
        "id": 386632785,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1692717043
    },
    {
        "content": "<p>I tried to use wasi-sdk but it fails to compile.</p>\n<p>export WASI_SDK_PATH=/home/celine/Téléchargements/wasi-sdk-20.0<br>\n${WASI_SDK_PATH}/bin/clang++ --sysroot=wasi-sdk-20.0/share/wasi-sysroot -o test.wasm -Wl,--export-all -Wl,--no-entry -Iinclude/ -isystem /usr/include/ -Wl,--export=test_nlohmann src/main.cpp -v</p>\n<p>I get the \"fatal error: 'iostream' file not found\". I don't understand because I include the system headers too.</p>",
        "id": 386633155,
        "sender_full_name": "cdvl",
        "timestamp": 1692717126
    },
    {
        "content": "<p><code>iostream</code> is a C++ header; it's in $sysroot/include/c++/v1</p>",
        "id": 386633395,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1692717186
    },
    {
        "content": "<p>You need to specify the function name to invoke <br>\nwasmtime test.wasm --invoke test_simdjson &lt; input_small.json</p>",
        "id": 386633875,
        "sender_full_name": "cdvl",
        "timestamp": 1692717310
    },
    {
        "content": "<p>ok I can reproduce the failure, I see that something is calling an exit explicitly with a 1 argument, so something is explicitly exiting</p>",
        "id": 386634611,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1692717524
    },
    {
        "content": "<p>I didn't pass <code>--sysroot</code> to wasi-sdk myself, I let it find it itself</p>",
        "id": 386634710,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1692717555
    },
    {
        "content": "<p>can you build the original wasm file with debug information with emscripten?</p>",
        "id": 386635194,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1692717694
    },
    {
        "content": "<p>modifying Wasmtime I can get:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"mi\">0</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">invoke</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">test_simdjson</span><span class=\"err\">`</span>\n<span class=\"w\">    </span><span class=\"mi\">1</span>: <span class=\"nc\">error</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">executing</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">backtrace</span>:\n           <span class=\"mi\">0</span>: <span class=\"mh\">0x5acee</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">2012</span><span class=\"o\">&gt;</span>\n<span class=\"w\">           </span><span class=\"mi\">1</span>: <span class=\"mh\">0x5acbb</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">2005</span><span class=\"o\">&gt;</span>\n<span class=\"w\">           </span><span class=\"mi\">2</span>: <span class=\"mh\">0x7af39</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">3327</span><span class=\"o\">&gt;</span>\n<span class=\"w\">           </span><span class=\"mi\">3</span>: <span class=\"mh\">0x7af4d</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">3329</span><span class=\"o\">&gt;</span>\n<span class=\"w\">           </span><span class=\"mi\">4</span>: <span class=\"mh\">0x7af55</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">3330</span><span class=\"o\">&gt;</span>\n<span class=\"w\">           </span><span class=\"mi\">5</span>: <span class=\"mh\">0x1591e</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">295</span><span class=\"o\">&gt;</span>\n<span class=\"w\">           </span><span class=\"mi\">6</span>: <span class=\"mh\">0x152d9</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">284</span><span class=\"o\">&gt;</span>\n<span class=\"w\">           </span><span class=\"mi\">7</span>: <span class=\"mh\">0x14f5b</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">283</span><span class=\"o\">&gt;</span>\n<span class=\"w\">           </span><span class=\"mi\">8</span>: <span class=\"mh\">0x14e98</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">281</span><span class=\"o\">&gt;</span>\n<span class=\"w\">           </span><span class=\"mi\">9</span>: <span class=\"mh\">0x11722</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">166</span><span class=\"o\">&gt;</span>\n<span class=\"w\">          </span><span class=\"mi\">10</span>: <span class=\"mh\">0x11213</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">154</span><span class=\"o\">&gt;</span>\n<span class=\"w\">          </span><span class=\"mi\">11</span>: <span class=\"mh\">0x10f02</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">151</span><span class=\"o\">&gt;</span>\n<span class=\"w\">    </span><span class=\"mi\">2</span>: <span class=\"nc\">Exited</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"n\">exit</span><span class=\"w\"> </span><span class=\"n\">status</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n</code></pre></div>",
        "id": 386635240,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1692717709
    },
    {
        "content": "<p>but that's not too helpful without debug information</p>",
        "id": 386635260,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1692717715
    },
    {
        "content": "<p><a href=\"/user_uploads/15107/V7LcALzMYyfjLxFBbRcSijxj/test.wasm\">test.wasm</a> Here the wasm compiled with the -g option</p>",
        "id": 386636502,
        "sender_full_name": "cdvl",
        "timestamp": 1692718062
    },
    {
        "content": "<p>I recompiled the example keeping only the simdjson lib (removing nlohmann one) with wasi-sdk. Same problem: when I run it with wasmtime it works on small json file but failed on big file.</p>",
        "id": 386638232,
        "sender_full_name": "cdvl",
        "timestamp": 1692718625
    },
    {
        "content": "<p>ah yeah this looks like OOM?</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">stdin</span><span class=\"w\"> </span><span class=\"n\">length</span>: <span class=\"mi\">3544203</span>\n<span class=\"n\">Try</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">parse3544203</span>\n<span class=\"n\">Error</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">alex</span><span class=\"o\">/</span><span class=\"n\">Downloads</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">).</span><span class=\"n\">wasm</span><span class=\"err\">`</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"mi\">0</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">invoke</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">test_simdjson</span><span class=\"err\">`</span>\n<span class=\"w\">    </span><span class=\"mi\">1</span>: <span class=\"nc\">error</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">executing</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">backtrace</span>:\n           <span class=\"mi\">0</span>: <span class=\"mh\">0x6dfb2</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">_Exit</span>\n<span class=\"w\">                           </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">/</span><span class=\"n\">emscripten</span><span class=\"o\">-</span><span class=\"n\">buVz5q</span><span class=\"o\">/</span><span class=\"n\">emscripten</span><span class=\"o\">-</span><span class=\"mf\">3.1.5</span><span class=\"o\">~</span><span class=\"n\">dfsg</span><span class=\"o\">/</span><span class=\"n\">system</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">libc</span><span class=\"o\">/</span><span class=\"n\">musl</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">exit</span><span class=\"o\">/</span><span class=\"n\">_Exit</span><span class=\"p\">.</span><span class=\"n\">c</span>:<span class=\"mi\">7</span>:<span class=\"mi\">2</span>\n<span class=\"w\">           </span><span class=\"mi\">1</span>: <span class=\"mh\">0x6df7f</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">abort</span>\n<span class=\"w\">                           </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">/</span><span class=\"n\">emscripten</span><span class=\"o\">-</span><span class=\"n\">buVz5q</span><span class=\"o\">/</span><span class=\"n\">emscripten</span><span class=\"o\">-</span><span class=\"mf\">3.1.5</span><span class=\"o\">~</span><span class=\"n\">dfsg</span><span class=\"o\">/</span><span class=\"n\">system</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">standalone</span><span class=\"o\">/</span><span class=\"n\">standalone</span><span class=\"p\">.</span><span class=\"n\">c</span>:<span class=\"mi\">33</span>:<span class=\"mi\">3</span>\n<span class=\"w\">           </span><span class=\"mi\">2</span>: <span class=\"mh\">0x8e789</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">operator</span><span class=\"w\"> </span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">unsigned</span><span class=\"w\"> </span><span class=\"n\">long</span><span class=\"p\">)</span>\n<span class=\"w\">                           </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">/</span><span class=\"n\">emscripten</span><span class=\"o\">-</span><span class=\"n\">buVz5q</span><span class=\"o\">/</span><span class=\"n\">emscripten</span><span class=\"o\">-</span><span class=\"mf\">3.1.5</span><span class=\"o\">~</span><span class=\"n\">dfsg</span><span class=\"o\">/</span><span class=\"n\">system</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">libcxx</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">new</span><span class=\"p\">.</span><span class=\"n\">cpp</span>:<span class=\"mi\">84</span>:<span class=\"mi\">13</span>\n<span class=\"w\">           </span><span class=\"mi\">3</span>: <span class=\"mh\">0x8e79d</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">operator</span><span class=\"w\"> </span><span class=\"n\">new</span><span class=\"p\">[](</span><span class=\"n\">unsigned</span><span class=\"w\"> </span><span class=\"n\">long</span><span class=\"p\">)</span>\n<span class=\"w\">                           </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">/</span><span class=\"n\">emscripten</span><span class=\"o\">-</span><span class=\"n\">buVz5q</span><span class=\"o\">/</span><span class=\"n\">emscripten</span><span class=\"o\">-</span><span class=\"mf\">3.1.5</span><span class=\"o\">~</span><span class=\"n\">dfsg</span><span class=\"o\">/</span><span class=\"n\">system</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">libcxx</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">new</span><span class=\"p\">.</span><span class=\"n\">cpp</span>:<span class=\"mi\">116</span>:<span class=\"mi\">12</span>\n<span class=\"w\">           </span><span class=\"mi\">4</span>: <span class=\"mh\">0x8e7a5</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">operator</span><span class=\"w\"> </span><span class=\"n\">new</span><span class=\"p\">[](</span><span class=\"n\">unsigned</span><span class=\"w\"> </span><span class=\"n\">long</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">std</span>::<span class=\"n\">nothrow_t</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"o\">&amp;</span><span class=\"p\">)</span>\n<span class=\"w\">                           </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">/</span><span class=\"n\">emscripten</span><span class=\"o\">-</span><span class=\"n\">buVz5q</span><span class=\"o\">/</span><span class=\"n\">emscripten</span><span class=\"o\">-</span><span class=\"mf\">3.1.5</span><span class=\"o\">~</span><span class=\"n\">dfsg</span><span class=\"o\">/</span><span class=\"n\">system</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">libcxx</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">new</span><span class=\"p\">.</span><span class=\"n\">cpp</span>:<span class=\"mi\">128</span>:<span class=\"mi\">13</span>\n<span class=\"w\">           </span><span class=\"mi\">5</span>: <span class=\"mh\">0x1a134</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">simdjson</span>::<span class=\"n\">dom</span>::<span class=\"n\">document</span>::<span class=\"n\">allocate</span><span class=\"p\">(</span><span class=\"n\">unsigned</span><span class=\"w\"> </span><span class=\"n\">long</span><span class=\"p\">)</span>\n<span class=\"w\">                           </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">celine</span><span class=\"o\">/</span><span class=\"n\">Téléchargements</span><span class=\"o\">/</span><span class=\"n\">json</span><span class=\"o\">-</span><span class=\"n\">parsing</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">simdjson</span><span class=\"p\">.</span><span class=\"n\">h</span>:<span class=\"mi\">8430</span>:<span class=\"mi\">21</span>\n<span class=\"w\">           </span><span class=\"mi\">6</span>: <span class=\"mh\">0x19988</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">simdjson</span>::<span class=\"n\">dom</span>::<span class=\"n\">parser</span>::<span class=\"n\">ensure_capacity</span><span class=\"p\">(</span><span class=\"n\">simdjson</span>::<span class=\"n\">dom</span>::<span class=\"n\">document</span><span class=\"o\">&amp;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">unsigned</span><span class=\"w\"> </span><span class=\"n\">long</span><span class=\"p\">)</span>\n<span class=\"w\">                           </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">celine</span><span class=\"o\">/</span><span class=\"n\">Téléchargements</span><span class=\"o\">/</span><span class=\"n\">json</span><span class=\"o\">-</span><span class=\"n\">parsing</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">simdjson</span><span class=\"p\">.</span><span class=\"n\">h</span>:<span class=\"mi\">7627</span>:<span class=\"mi\">87</span>\n<span class=\"w\">           </span><span class=\"mi\">7</span>: <span class=\"mh\">0x19570</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">simdjson</span>::<span class=\"n\">dom</span>::<span class=\"n\">parser</span>::<span class=\"n\">parse_into_document</span><span class=\"p\">(</span><span class=\"n\">simdjson</span>::<span class=\"n\">dom</span>::<span class=\"n\">document</span><span class=\"o\">&amp;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">unsigned</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"o\">*</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">unsigned</span><span class=\"w\"> </span><span class=\"n\">long</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">bool</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">&amp;</span>\n<span class=\"w\">                           </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">celine</span><span class=\"o\">/</span><span class=\"n\">Téléchargements</span><span class=\"o\">/</span><span class=\"n\">json</span><span class=\"o\">-</span><span class=\"n\">parsing</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">simdjson</span><span class=\"p\">.</span><span class=\"n\">h</span>:<span class=\"mi\">7514</span>:<span class=\"mi\">23</span>\n<span class=\"w\">           </span><span class=\"mi\">8</span>: <span class=\"mh\">0x1941f</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">simdjson</span>::<span class=\"n\">dom</span>::<span class=\"n\">parser</span>::<span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">unsigned</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"o\">*</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">unsigned</span><span class=\"w\"> </span><span class=\"n\">long</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">bool</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">&amp;</span>\n<span class=\"w\">                           </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">celine</span><span class=\"o\">/</span><span class=\"n\">Téléchargements</span><span class=\"o\">/</span><span class=\"n\">json</span><span class=\"o\">-</span><span class=\"n\">parsing</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">simdjson</span><span class=\"p\">.</span><span class=\"n\">h</span>:<span class=\"mi\">7546</span>:<span class=\"mi\">10</span>\n<span class=\"w\">           </span><span class=\"mi\">9</span>: <span class=\"mh\">0x150df</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">simdjson</span>::<span class=\"n\">dom</span>::<span class=\"n\">parser</span>::<span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"o\">*</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">unsigned</span><span class=\"w\"> </span><span class=\"n\">long</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">bool</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">&amp;</span>\n<span class=\"w\">                           </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">celine</span><span class=\"o\">/</span><span class=\"n\">Téléchargements</span><span class=\"o\">/</span><span class=\"n\">json</span><span class=\"o\">-</span><span class=\"n\">parsing</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">simdjson</span><span class=\"p\">.</span><span class=\"n\">h</span>:<span class=\"mi\">7550</span>:<span class=\"mi\">10</span>\n<span class=\"w\">          </span><span class=\"mi\">10</span>: <span class=\"mh\">0x14ad4</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">simdjson</span>::<span class=\"n\">dom</span>::<span class=\"n\">parser</span>::<span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">std</span>::<span class=\"n\">__2</span>::<span class=\"n\">basic_string</span><span class=\"o\">&lt;</span><span class=\"kt\">char</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">std</span>::<span class=\"n\">__2</span>::<span class=\"n\">char_traits</span><span class=\"o\">&lt;</span><span class=\"kt\">char</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">std</span>::<span class=\"n\">__2</span>::<span class=\"n\">allocator</span><span class=\"o\">&lt;</span><span class=\"kt\">char</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"o\">&amp;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">&amp;</span>\n<span class=\"w\">                           </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">celine</span><span class=\"o\">/</span><span class=\"n\">Téléchargements</span><span class=\"o\">/</span><span class=\"n\">json</span><span class=\"o\">-</span><span class=\"n\">parsing</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">simdjson</span><span class=\"p\">.</span><span class=\"n\">h</span>:<span class=\"mi\">7553</span>:<span class=\"mi\">10</span>\n<span class=\"w\">          </span><span class=\"mi\">11</span>: <span class=\"mh\">0x1476f</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">test_simdjson</span>\n<span class=\"w\">                           </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">celine</span><span class=\"o\">/</span><span class=\"n\">Téléchargements</span><span class=\"o\">/</span><span class=\"n\">json</span><span class=\"o\">-</span><span class=\"n\">parsing</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">cpp</span>:<span class=\"mi\">46</span>:<span class=\"mi\">45</span>\n<span class=\"w\">    </span><span class=\"mi\">2</span>: <span class=\"nc\">Exited</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"n\">exit</span><span class=\"w\"> </span><span class=\"n\">status</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n</code></pre></div>",
        "id": 386639689,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1692719129
    },
    {
        "content": "<p>I think that is a memory limitation from wasm. I added this c++ function:<br>\nvoid stress(){<br>\n        std::string jsonString;<br>\n        std::getline(std::cin, jsonString);</p>\n<div class=\"codehilite\"><pre><span></span><code>    // create a vector growing over iteration\n    std::vector&lt;std::string&gt; dynamicVector;\n    for (size_t i = 0; i &lt; 100; i++){\n        dynamicVector.push_back(jsonString);\n        std::cout &lt;&lt; &quot;i &quot; &lt;&lt; i &lt;&lt; &quot; - length: &quot; &lt;&lt; jsonString.length()*(i+1) &lt;&lt; std::endl;\n    }\n}\n</code></pre></div>\n\n<p>The wasm exit with an error 1 after some iteration while cpp program continu.</p>",
        "id": 386639721,
        "sender_full_name": "cdvl",
        "timestamp": 1692719137
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"253994\">Alex Crichton</span> <a href=\"#narrow/stream/206238-general/topic/CPP.20Wasmtime.20parsing.20big.20json.20string/near/386639689\">said</a>:</p>\n<blockquote>\n<p>ah yeah this looks like OOM?</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">stdin</span><span class=\"w\"> </span><span class=\"n\">length</span>: <span class=\"mi\">3544203</span>\n<span class=\"n\">Try</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">parse3544203</span>\n<span class=\"n\">Error</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">alex</span><span class=\"o\">/</span><span class=\"n\">Downloads</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">).</span><span class=\"n\">wasm</span><span class=\"err\">`</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"mi\">0</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">invoke</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">test_simdjson</span><span class=\"err\">`</span>\n<span class=\"w\">    </span><span class=\"mi\">1</span>: <span class=\"nc\">error</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">executing</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">backtrace</span>:\n           <span class=\"mi\">0</span>: <span class=\"mh\">0x6dfb2</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">_Exit</span>\n<span class=\"w\">                           </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">/</span><span class=\"n\">emscripten</span><span class=\"o\">-</span><span class=\"n\">buVz5q</span><span class=\"o\">/</span><span class=\"n\">emscripten</span><span class=\"o\">-</span><span class=\"mf\">3.1.5</span><span class=\"o\">~</span><span class=\"n\">dfsg</span><span class=\"o\">/</span><span class=\"n\">system</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">libc</span><span class=\"o\">/</span><span class=\"n\">musl</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">exit</span><span class=\"o\">/</span><span class=\"n\">_Exit</span><span class=\"p\">.</span><span class=\"n\">c</span>:<span class=\"mi\">7</span>:<span class=\"mi\">2</span>\n<span class=\"w\">           </span><span class=\"mi\">1</span>: <span class=\"mh\">0x6df7f</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">abort</span>\n<span class=\"w\">                           </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">/</span><span class=\"n\">emscripten</span><span class=\"o\">-</span><span class=\"n\">buVz5q</span><span class=\"o\">/</span><span class=\"n\">emscripten</span><span class=\"o\">-</span><span class=\"mf\">3.1.5</span><span class=\"o\">~</span><span class=\"n\">dfsg</span><span class=\"o\">/</span><span class=\"n\">system</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">standalone</span><span class=\"o\">/</span><span class=\"n\">standalone</span><span class=\"p\">.</span><span class=\"n\">c</span>:<span class=\"mi\">33</span>:<span class=\"mi\">3</span>\n<span class=\"w\">           </span><span class=\"mi\">2</span>: <span class=\"mh\">0x8e789</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">operator</span><span class=\"w\"> </span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">unsigned</span><span class=\"w\"> </span><span class=\"n\">long</span><span class=\"p\">)</span>\n<span class=\"w\">                           </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">/</span><span class=\"n\">emscripten</span><span class=\"o\">-</span><span class=\"n\">buVz5q</span><span class=\"o\">/</span><span class=\"n\">emscripten</span><span class=\"o\">-</span><span class=\"mf\">3.1.5</span><span class=\"o\">~</span><span class=\"n\">dfsg</span><span class=\"o\">/</span><span class=\"n\">system</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">libcxx</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">new</span><span class=\"p\">.</span><span class=\"n\">cpp</span>:<span class=\"mi\">84</span>:<span class=\"mi\">13</span>\n<span class=\"w\">           </span><span class=\"mi\">3</span>: <span class=\"mh\">0x8e79d</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">operator</span><span class=\"w\"> </span><span class=\"n\">new</span><span class=\"p\">[](</span><span class=\"n\">unsigned</span><span class=\"w\"> </span><span class=\"n\">long</span><span class=\"p\">)</span>\n<span class=\"w\">                           </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">/</span><span class=\"n\">emscripten</span><span class=\"o\">-</span><span class=\"n\">buVz5q</span><span class=\"o\">/</span><span class=\"n\">emscripten</span><span class=\"o\">-</span><span class=\"mf\">3.1.5</span><span class=\"o\">~</span><span class=\"n\">dfsg</span><span class=\"o\">/</span><span class=\"n\">system</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">libcxx</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">new</span><span class=\"p\">.</span><span class=\"n\">cpp</span>:<span class=\"mi\">116</span>:<span class=\"mi\">12</span>\n<span class=\"w\">           </span><span class=\"mi\">4</span>: <span class=\"mh\">0x8e7a5</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">operator</span><span class=\"w\"> </span><span class=\"n\">new</span><span class=\"p\">[](</span><span class=\"n\">unsigned</span><span class=\"w\"> </span><span class=\"n\">long</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">std</span>::<span class=\"n\">nothrow_t</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"o\">&amp;</span><span class=\"p\">)</span>\n<span class=\"w\">                           </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">/</span><span class=\"n\">emscripten</span><span class=\"o\">-</span><span class=\"n\">buVz5q</span><span class=\"o\">/</span><span class=\"n\">emscripten</span><span class=\"o\">-</span><span class=\"mf\">3.1.5</span><span class=\"o\">~</span><span class=\"n\">dfsg</span><span class=\"o\">/</span><span class=\"n\">system</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">libcxx</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">new</span><span class=\"p\">.</span><span class=\"n\">cpp</span>:<span class=\"mi\">128</span>:<span class=\"mi\">13</span>\n<span class=\"w\">           </span><span class=\"mi\">5</span>: <span class=\"mh\">0x1a134</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">simdjson</span>::<span class=\"n\">dom</span>::<span class=\"n\">document</span>::<span class=\"n\">allocate</span><span class=\"p\">(</span><span class=\"n\">unsigned</span><span class=\"w\"> </span><span class=\"n\">long</span><span class=\"p\">)</span>\n<span class=\"w\">                           </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">celine</span><span class=\"o\">/</span><span class=\"n\">Téléchargements</span><span class=\"o\">/</span><span class=\"n\">json</span><span class=\"o\">-</span><span class=\"n\">parsing</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">simdjson</span><span class=\"p\">.</span><span class=\"n\">h</span>:<span class=\"mi\">8430</span>:<span class=\"mi\">21</span>\n<span class=\"w\">           </span><span class=\"mi\">6</span>: <span class=\"mh\">0x19988</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">simdjson</span>::<span class=\"n\">dom</span>::<span class=\"n\">parser</span>::<span class=\"n\">ensure_capacity</span><span class=\"p\">(</span><span class=\"n\">simdjson</span>::<span class=\"n\">dom</span>::<span class=\"n\">document</span><span class=\"o\">&amp;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">unsigned</span><span class=\"w\"> </span><span class=\"n\">long</span><span class=\"p\">)</span>\n<span class=\"w\">                           </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">celine</span><span class=\"o\">/</span><span class=\"n\">Téléchargements</span><span class=\"o\">/</span><span class=\"n\">json</span><span class=\"o\">-</span><span class=\"n\">parsing</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">simdjson</span><span class=\"p\">.</span><span class=\"n\">h</span>:<span class=\"mi\">7627</span>:<span class=\"mi\">87</span>\n<span class=\"w\">           </span><span class=\"mi\">7</span>: <span class=\"mh\">0x19570</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">simdjson</span>::<span class=\"n\">dom</span>::<span class=\"n\">parser</span>::<span class=\"n\">parse_into_document</span><span class=\"p\">(</span><span class=\"n\">simdjson</span>::<span class=\"n\">dom</span>::<span class=\"n\">document</span><span class=\"o\">&amp;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">unsigned</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"o\">*</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">unsigned</span><span class=\"w\"> </span><span class=\"n\">long</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">bool</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">&amp;</span>\n<span class=\"w\">                           </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">celine</span><span class=\"o\">/</span><span class=\"n\">Téléchargements</span><span class=\"o\">/</span><span class=\"n\">json</span><span class=\"o\">-</span><span class=\"n\">parsing</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">simdjson</span><span class=\"p\">.</span><span class=\"n\">h</span>:<span class=\"mi\">7514</span>:<span class=\"mi\">23</span>\n<span class=\"w\">           </span><span class=\"mi\">8</span>: <span class=\"mh\">0x1941f</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">simdjson</span>::<span class=\"n\">dom</span>::<span class=\"n\">parser</span>::<span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">unsigned</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"o\">*</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">unsigned</span><span class=\"w\"> </span><span class=\"n\">long</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">bool</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">&amp;</span>\n<span class=\"w\">                           </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">celine</span><span class=\"o\">/</span><span class=\"n\">Téléchargements</span><span class=\"o\">/</span><span class=\"n\">json</span><span class=\"o\">-</span><span class=\"n\">parsing</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">simdjson</span><span class=\"p\">.</span><span class=\"n\">h</span>:<span class=\"mi\">7546</span>:<span class=\"mi\">10</span>\n<span class=\"w\">           </span><span class=\"mi\">9</span>: <span class=\"mh\">0x150df</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">simdjson</span>::<span class=\"n\">dom</span>::<span class=\"n\">parser</span>::<span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"o\">*</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">unsigned</span><span class=\"w\"> </span><span class=\"n\">long</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">bool</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">&amp;</span>\n<span class=\"w\">                           </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">celine</span><span class=\"o\">/</span><span class=\"n\">Téléchargements</span><span class=\"o\">/</span><span class=\"n\">json</span><span class=\"o\">-</span><span class=\"n\">parsing</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">simdjson</span><span class=\"p\">.</span><span class=\"n\">h</span>:<span class=\"mi\">7550</span>:<span class=\"mi\">10</span>\n<span class=\"w\">          </span><span class=\"mi\">10</span>: <span class=\"mh\">0x14ad4</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">simdjson</span>::<span class=\"n\">dom</span>::<span class=\"n\">parser</span>::<span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">std</span>::<span class=\"n\">__2</span>::<span class=\"n\">basic_string</span><span class=\"o\">&lt;</span><span class=\"kt\">char</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">std</span>::<span class=\"n\">__2</span>::<span class=\"n\">char_traits</span><span class=\"o\">&lt;</span><span class=\"kt\">char</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">std</span>::<span class=\"n\">__2</span>::<span class=\"n\">allocator</span><span class=\"o\">&lt;</span><span class=\"kt\">char</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"o\">&amp;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">&amp;</span>\n<span class=\"w\">                           </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">celine</span><span class=\"o\">/</span><span class=\"n\">Téléchargements</span><span class=\"o\">/</span><span class=\"n\">json</span><span class=\"o\">-</span><span class=\"n\">parsing</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">simdjson</span><span class=\"p\">.</span><span class=\"n\">h</span>:<span class=\"mi\">7553</span>:<span class=\"mi\">10</span>\n<span class=\"w\">          </span><span class=\"mi\">11</span>: <span class=\"mh\">0x1476f</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">test_simdjson</span>\n<span class=\"w\">                           </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">celine</span><span class=\"o\">/</span><span class=\"n\">Téléchargements</span><span class=\"o\">/</span><span class=\"n\">json</span><span class=\"o\">-</span><span class=\"n\">parsing</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">cpp</span>:<span class=\"mi\">46</span>:<span class=\"mi\">45</span>\n<span class=\"w\">    </span><span class=\"mi\">2</span>: <span class=\"nc\">Exited</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"n\">exit</span><span class=\"w\"> </span><span class=\"n\">status</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>Yes! But I don't know how to allow more memory as explained above :)</p>",
        "id": 386640042,
        "sender_full_name": "cdvl",
        "timestamp": 1692719236
    },
    {
        "content": "<p>the memory emscripten is generating is 256 pages large initially and additionally cannot grow beyond the 256 page limit, so my guess is that you're exceeding 256 wasm pages here and then it's hitting OOM</p>",
        "id": 386640058,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1692719241
    },
    {
        "content": "<p>you'll need to see how to remove emscripten's upper bound on the memory, and I don't know how to do that</p>",
        "id": 386640093,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1692719255
    },
    {
        "content": "<p>(I also don't know why <code>--trap-on-grow-failure</code> didn't work)</p>",
        "id": 386640112,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1692719266
    },
    {
        "content": "<p>Memory settings are set at the compile step? Does it depend on the compiler?</p>",
        "id": 386640509,
        "sender_full_name": "cdvl",
        "timestamp": 1692719386
    },
    {
        "content": "<p>yes</p>",
        "id": 386641981,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1692719768
    },
    {
        "content": "<p>Ok and do you know how to do that with wasi-sdk?</p>",
        "id": 386788007,
        "sender_full_name": "cdvl",
        "timestamp": 1692778423
    },
    {
        "content": "<p><code>wasm-ld</code> has a <code>--max-memory</code> option, so maybe something like <code>clang -Wl,--max-memory=1073741824 ...</code>?</p>",
        "id": 386871308,
        "sender_full_name": "Joel Dice",
        "timestamp": 1692797958
    }
]