[
    {
        "content": "<p>We have a Wasm module which needs a large memory block which is used for initialization. The only way I can think of for passing it is by using Wasi (e.g. a file). However, we need a way to also provide a host function to the module, for which I used a custom linker. From the docs, it seems using Wasi and a custom linker are mutually exclusive. Is there a way forward for me?</p>",
        "id": 491030312,
        "sender_full_name": "Friday More",
        "timestamp": 1735332203
    },
    {
        "content": "<p>you can add the std wasi0.2 wasi-* interfaces to your custom linker, what you are quoting reminds me of a line in the wizer readme, but they just mean \"if you use a custom linker and wasi together, make sure to add wasi-* interfaces to it\" with that</p>",
        "id": 491036437,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1735337154
    },
    {
        "content": "<p>Thanks, this is helpful! A somewhat related follow up: if we make wasi access available for the Wizer initialize method, can we make it unavailable for other methods of the snapshotted module? I notice there is a <code>keep_init_func</code> method to remove the initialize method, but can we do the same for imports used by the initialize functions (specifically those that need wasi).</p>",
        "id": 491308468,
        "sender_full_name": "Friday More",
        "timestamp": 1735579685
    },
    {
        "content": "<p>there is no method to automatically remove wasi imports, but such a feature would be a welcome PR</p>\n<p>or you can use something like <code>wasmtime -W unknown-imports-trap=y path/to/module.wasm</code> which will stub out any imports that don't exist with functions that just trap if they are actually called. you can also do the moral equivalent of that with component linking/virtualization or binary rewriting.</p>",
        "id": 491334932,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1735596689
    },
    {
        "content": "<p>Got it, thanks!</p>",
        "id": 491646661,
        "sender_full_name": "Friday More",
        "timestamp": 1735841357
    }
]