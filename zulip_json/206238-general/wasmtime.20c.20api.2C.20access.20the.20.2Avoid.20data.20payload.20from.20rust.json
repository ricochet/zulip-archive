[
    {
        "content": "<p>I am using the wasmtime c api in a cpp project. I want to support linking a component-model component (using the wasmtime bindgen macro with a wit file). Is there a way from rust to get a handle to the *void data attribute on the store data? The generated component model linking code passes the data attribute (of type StoreData) from the store context directly, so I can't use wasmtime_context_get_data.</p>",
        "id": 417537672,
        "sender_full_name": "cc",
        "timestamp": 1706047677
    },
    {
        "content": "<p>It sounds like you're augmenting the C API and/or adding your own functions, is that right? If that's so then the theory is \"do what the implementation of <code>wasmtime_context_get_data</code> does\" which may mean that <code>StoreData</code> needs to grow some APIs to access the private pointer</p>",
        "id": 417538576,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1706048053
    },
    {
        "content": "<p>that makes sense to me. whats the process for proposing and implementing this sort of change? should I create an issue?</p>",
        "id": 417539336,
        "sender_full_name": "cc",
        "timestamp": 1706048409
    },
    {
        "content": "<p>an issue works but if you're able to send a PR that would be best!</p>",
        "id": 417539611,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1706048541
    },
    {
        "content": "<p>I also need to unwrap the wasmtime_linker_t to the underlying rust Linker&lt;&gt; - would a helper function make sense to add to the api?</p>",
        "id": 417539796,
        "sender_full_name": "cc",
        "timestamp": 1706048630
    },
    {
        "content": "<p>sure!</p>",
        "id": 417540649,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1706049049
    },
    {
        "content": "<p>just want to call out that wasmtime::Linker is exposed as <code>wasmtime_linker_t</code>, but wasmtime::component::Linker is a distinct type and is not yet in the C API, there is some ongoing work on that by <span class=\"user-mention\" data-user-id=\"610749\">@Tyler Rockwood</span> here <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7801\">https://github.com/bytecodealliance/wasmtime/pull/7801</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/7801\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/a44bf226eba9bddce9423b15e889125a76999db8\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f316563393366643539653035643963373162383561303231656231316337326539613739333039363732323565363233613561653765653434343031363965392f62797465636f6465616c6c69616e63652f7761736d74696d652f70756c6c2f37383031)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/7801\" title=\"c-api/component-model: proof of concept by rockwotj 路 Pull Request #7801 路 bytecodealliance/wasmtime\">c-api/component-model: proof of concept by rockwotj 路 Pull Request #7801 路 bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Zulip link\nThis is a proof of concept for the component model exposed in the C API. I mostly took the approach of \"how would I want this to look in the C API\" and let the rust implementation fall o...</div></div></div>",
        "id": 417550566,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1706054446
    },
    {
        "content": "<p>thanks for sharing that and pointing out the different linker types. i'll follow along with that pr.</p>",
        "id": 417558142,
        "sender_full_name": "cc",
        "timestamp": 1706058822
    },
    {
        "content": "<p>Just FYI please feel free to jump in with component model and the C API if someone has cycles, I will probably be moving slowly to implement this, starting by improving the C API testing story.</p>",
        "id": 417564486,
        "sender_full_name": "Tyler Rockwood",
        "timestamp": 1706063427
    }
]