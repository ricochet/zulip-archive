[
    {
        "content": "<p>instead of useless error messages like \"instance not valid to be used as import\", why not dump the entire instance's type signature?</p>",
        "id": 472275485,
        "sender_full_name": "Soni L.",
        "timestamp": 1727108248
    },
    {
        "content": "<p>You are welcome to open a feature request in <a href=\"https://github.com/bytecodealliance/wasm-tools\">https://github.com/bytecodealliance/wasm-tools</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasm-tools\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/3694765246fe0267b0123ad9741208b553a53f25/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f346136386538653432643165616431643462643732346161366131393731373636316538643565633465636366636531346466346236326338373163343035622f62797465636f6465616c6c69616e63652f7761736d2d746f6f6c73&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasm-tools\" title=\"GitHub - bytecodealliance/wasm-tools: CLI and Rust libraries for low-level manipulation of WebAssembly modules\">GitHub - bytecodealliance/wasm-tools: CLI and Rust libraries for low-level manipulation of WebAssembly modules</a></div><div class=\"message_embed_description\"> CLI and Rust libraries for low-level manipulation of WebAssembly modules  - GitHub - bytecodealliance/wasm-tools: CLI and Rust libraries for low-level manipulation of WebAssembly modules</div></div></div>",
        "id": 472278172,
        "sender_full_name": "Lann Martin",
        "timestamp": 1727109049
    },
    {
        "content": "<p>in wasmtime</p>",
        "id": 472287753,
        "sender_full_name": "Soni L.",
        "timestamp": 1727111891
    },
    {
        "content": "<p>like, why do we need</p>\n<div class=\"codehilite\" data-code-language=\"WebAssembly\"><pre><span></span><code>      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"nv\">$error-e</span> <span class=\"s2\">\"error\"</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"p\">(</span><span class=\"err\">eq</span> <span class=\"nv\">$error-t</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"nv\">$stream-error-t</span> <span class=\"p\">(</span><span class=\"err\">variant</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"last-operation-failed\"</span> <span class=\"p\">(</span><span class=\"err\">own</span> <span class=\"nv\">$error-e</span><span class=\"p\">))</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"closed\"</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"nv\">$stream-error</span> <span class=\"s2\">\"stream-error\"</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"p\">(</span><span class=\"err\">eq</span> <span class=\"nv\">$stream-error-t</span><span class=\"p\">)))</span>\n</code></pre></div>\n<p>instead of, say,</p>\n<div class=\"codehilite\" data-code-language=\"WebAssembly\"><pre><span></span><code>      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"nv\">$stream-error</span> <span class=\"p\">(</span><span class=\"err\">variant</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"last-operation-failed\"</span> <span class=\"p\">(</span><span class=\"err\">own</span> <span class=\"nv\">$error-t</span><span class=\"p\">))</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"closed\"</span><span class=\"p\">)))</span>\n</code></pre></div>\n<p>why does the latter not work? why doesn't wasmtime tell us why it doesn't work?</p>",
        "id": 472288044,
        "sender_full_name": "Soni L.",
        "timestamp": 1727111995
    },
    {
        "content": "<p>opened an issue <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9293\">https://github.com/bytecodealliance/wasmtime/issues/9293</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/issues/9293\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/aad320b65620856fe184ef65323f9a0ae21be33d/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f356233376463333435613566336531646633313435666332323130653464666330366138313735383538323565643761346665623335343337373662393531642f62797465636f6465616c6c69616e63652f7761736d74696d652f6973737565732f39323933&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/issues/9293\" title=\"Improve error messages 路 Issue #9293 路 bytecodealliance/wasmtime\">Improve error messages 路 Issue #9293 路 bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Feature Improve error messages. Benefit Descriptive error messages are useful when writing raw wasm code. Implementation N/A Alternatives Not much of an alternative, but one can use wabt. For compa...</div></div></div>",
        "id": 472311705,
        "sender_full_name": "Soni L.",
        "timestamp": 1727119171
    }
]