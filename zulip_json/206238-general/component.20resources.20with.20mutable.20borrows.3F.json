[
    {
        "content": "<p>Hi all, </p>\n<p>I'm reading through <a href=\"https://component-model.bytecodealliance.org/design/wit.html#resources\">this section</a> of the component-model guide, and I'm looking at the example blob resource:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>resource blob {\n    constructor(init: list&lt;u8&gt;);\n    write: func(bytes: list&lt;u8&gt;);\n    read: func(n: u32) -&gt; list&lt;u8&gt;;\n    merge: static func(lhs: blob, rhs: blob) -&gt; blob;\n}\n</code></pre></div>\n<p>If I try to implement this in rust, the generated <code>GuestBlob</code> trait has read and write functions that look like:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">write</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">_rt</span><span class=\"p\">::</span><span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"kt\">u8</span><span class=\"o\">&gt;</span><span class=\"p\">);</span>\n<span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">read</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kt\">u32</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">_rt</span><span class=\"p\">::</span><span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"kt\">u8</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n</code></pre></div>\n<p>What if I want that to be a <code>&amp;mut self</code> ?  Is that possible?</p>",
        "id": 443425891,
        "sender_full_name": "Andrew Chin",
        "timestamp": 1717823239
    },
    {
        "content": "<p>Not directly; you can use interior mutability like <code>RefCell</code> instead</p>",
        "id": 443471057,
        "sender_full_name": "Lann Martin",
        "timestamp": 1717854514
    }
]