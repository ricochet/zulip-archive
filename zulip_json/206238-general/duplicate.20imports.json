[
    {
        "content": "<p>Is it valid for a module to import the same symbol multiple times?</p>",
        "id": 465548261,
        "sender_full_name": "Lann Martin",
        "timestamp": 1724788410
    },
    {
        "content": "<p>So long as they all have the same signature that should be fine yeah</p>",
        "id": 465551628,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1724789102
    },
    {
        "content": "<p>Should <code>wit-component</code> be able to handle that?</p>",
        "id": 465551709,
        "sender_full_name": "Lann Martin",
        "timestamp": 1724789120
    },
    {
        "content": "<p>It seems to explicitly validate against it: <a href=\"https://github.com/bytecodealliance/wasm-tools/blob/2fdc2ed0de54e55f57ae0bc88273d2b674ce9bf4/crates/wit-component/src/validation.rs#L172\">https://github.com/bytecodealliance/wasm-tools/blob/2fdc2ed0de54e55f57ae0bc88273d2b674ce9bf4/crates/wit-component/src/validation.rs#L172</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasm-tools/blob/2fdc2ed0de54e55f57ae0bc88273d2b674ce9bf4/crates/wit-component/src/validation.rs#L172\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/f2035a301a302cb69f23de78a64dc6baffbde08d/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f623338353835363162386166316631613162623164613433623462386236303438303835363233333037363139643434623061326535376231633466643035332f62797465636f6465616c6c69616e63652f7761736d2d746f6f6c73&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasm-tools/blob/2fdc2ed0de54e55f57ae0bc88273d2b674ce9bf4/crates/wit-component/src/validation.rs#L172\" title=\"wasm-tools/crates/wit-component/src/validation.rs at 2fdc2ed0de54e55f57ae0bc88273d2b674ce9bf4 · bytecodealliance/wasm-tools\">wasm-tools/crates/wit-component/src/validation.rs at 2fdc2ed0de54e55f57ae0bc88273d2b674ce9bf4 · bytecodealliance/wasm-tools</a></div><div class=\"message_embed_description\"> CLI and Rust libraries for low-level manipulation of WebAssembly modules  - bytecodealliance/wasm-tools</div></div></div>",
        "id": 465552042,
        "sender_full_name": "Lann Martin",
        "timestamp": 1724789178
    },
    {
        "content": "<p>context: Grain 0.6.6 has duplicate imports for a hello world module</p>",
        "id": 465552710,
        "sender_full_name": "Lann Martin",
        "timestamp": 1724789313
    },
    {
        "content": "<p>causing this to fail: <a href=\"https://github.com/fermyon/spin/blob/82008342a3ec8de7d0ac6f3850828b463c692160/crates/componentize/src/lib.rs#L174-L178\">https://github.com/fermyon/spin/blob/82008342a3ec8de7d0ac6f3850828b463c692160/crates/componentize/src/lib.rs#L174-L178</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/fermyon/spin/blob/82008342a3ec8de7d0ac6f3850828b463c692160/crates/componentize/src/lib.rs#L174-L178\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/38db72dc2007ef51800f9d42c00ec7f9e4d64da6/68747470733a2f2f7265706f7369746f72792d696d616765732e67697468756275736572636f6e74656e742e636f6d2f3432333637393636342f32306534383863362d623961652d343831622d393063332d633131313138643565663238&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/fermyon/spin/blob/82008342a3ec8de7d0ac6f3850828b463c692160/crates/componentize/src/lib.rs#L174-L178\" title=\"spin/crates/componentize/src/lib.rs at 82008342a3ec8de7d0ac6f3850828b463c692160 · fermyon/spin\">spin/crates/componentize/src/lib.rs at 82008342a3ec8de7d0ac6f3850828b463c692160 · fermyon/spin</a></div><div class=\"message_embed_description\">Spin is the open source developer tool for building and running serverless applications powered by WebAssembly. - fermyon/spin</div></div></div>",
        "id": 465553613,
        "sender_full_name": "Lann Martin",
        "timestamp": 1724789519
    },
    {
        "content": "<p>Ah ok different layer, no at the component level core modules must have a single import per module/name combo</p>",
        "id": 465558201,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1724790708
    },
    {
        "content": "<p>I thought you meant the LLD/linking level where this is allowed</p>",
        "id": 465558317,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1724790728
    },
    {
        "content": "<p>OK so this is just something you can't handle by adapting?</p>",
        "id": 465558804,
        "sender_full_name": "Lann Martin",
        "timestamp": 1724790875
    },
    {
        "content": "<p><code>wasmtime run</code> can run the (preview1) module directly</p>",
        "id": 465558872,
        "sender_full_name": "Lann Martin",
        "timestamp": 1724790896
    },
    {
        "content": "<p>correct, the component model has a validation predicate for core wasm modules which disallows this</p>",
        "id": 465558913,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1724790905
    },
    {
        "content": "<p>yes that's where this is a valid core wasm thing just not a valid thing in the component model</p>",
        "id": 465558973,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1724790921
    },
    {
        "content": "<p>there's quite a long discussion about this at <a href=\"https://github.com/WebAssembly/design/issues/1402\">https://github.com/WebAssembly/design/issues/1402</a> which ended up with today's rule where core wasm wasn't changed but the component model has extra validation</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/design/issues/1402\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/fba818164c6cd02f23b47beed36f4213223141a7/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f333339313466646331643161343534613931643232643135653931646330323765383431383337656534343265386262396630356432396533663465343239622f576562417373656d626c792f64657369676e2f6973737565732f31343032&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/design/issues/1402\" title=\"Disallow duplicate imports? · Issue #1402 · WebAssembly/design\">Disallow duplicate imports? · Issue #1402 · WebAssembly/design</a></div><div class=\"message_embed_description\">(This issue captures the presentation at CG-03-02, with the goal of getting more feedback in preparation for a poll at some future CG meeting.) The Module Linking proposal proposes to recast two-le...</div></div></div>",
        "id": 465559382,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1724791032
    },
    {
        "content": "<p>I don't suppose there is existing code to dedupe imports?</p>",
        "id": 465560840,
        "sender_full_name": "Lann Martin",
        "timestamp": 1724791386
    },
    {
        "content": "<p>not currently, no, but with wasm-encoder's new support for reencoding it might not be too too hard to whip up something</p>",
        "id": 465561086,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1724791430
    },
    {
        "content": "<p><span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span> conceptually it shouldn't be hard for this particular case; all the duplicate imports have the same type index</p>",
        "id": 465561305,
        "sender_full_name": "Lann Martin",
        "timestamp": 1724791462
    },
    {
        "content": "<p><a href=\"https://gist.github.com/alexcrichton/2645aaea00aac21b3d096cf1316745b9\">this</a> is a simple possible implementation, although I've not tested it much but shows the shape of what such a transform might be</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://gist.github.com/alexcrichton/2645aaea00aac21b3d096cf1316745b9\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/91f9baed8f4fc08c462d1a4de5a8c23942d45e97/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f6173736574732f676973742d6f672d696d6167652d3534666437646330373133652e706e67&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://gist.github.com/alexcrichton/2645aaea00aac21b3d096cf1316745b9\" title=\"foo.diff\">foo.diff</a></div><div class=\"message_embed_description\">GitHub Gist: instantly share code, notes, and snippets.</div></div></div>",
        "id": 465565788,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1724792268
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 465565981,
        "sender_full_name": "Lann Martin",
        "timestamp": 1724792368
    },
    {
        "content": "<p>Should I take that as an invitation to PR this into wasm-tools? <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 465566116,
        "sender_full_name": "Lann Martin",
        "timestamp": 1724792415
    },
    {
        "content": "<p>heh perhaps yeah, I haven't thought really about this in the context of wasm-tools</p>",
        "id": 465566249,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1724792454
    },
    {
        "content": "<p>there's all sorts of possible transformations you can do on wasm files and I'm not sure we'd want to pack them all into one tool which would probably have relatively sparse testing</p>",
        "id": 465566302,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1724792479
    },
    {
        "content": "<p>that being said I also don't really see a reason to not do it either, and it's easy enough to add tests and it shouldn't be too much of a burden to keep things compiling</p>",
        "id": 465566350,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1724792502
    },
    {
        "content": "<p>it might make sense to implement this as like <code>wasm-tools transform foo.wasm --name --of --various --passes --to --apply</code> where CLI flags such as <code>--dedupe-imports</code> would be allowed (or something like that)</p>",
        "id": 465566511,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1724792554
    },
    {
        "content": "<p>or maybe <code>--pass dedupe-imports,validate,...</code></p>",
        "id": 465566555,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1724792571
    },
    {
        "content": "<p>where each step would take wasm an output wasm and that way we could pack future things in there relatively easily</p>",
        "id": 465566581,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1724792583
    },
    {
        "content": "<p>one thing I implemented long long ago for wasm modules was a \"gc\" pass which would remove unneeded imports/functions/globals/etc and that might be kind of neat to reimplement with wasm-encoder nowadays and it might be much easier</p>",
        "id": 465566835,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1724792703
    },
    {
        "content": "<p><a href=\"https://crates.io/crates/wasm-gc\">https://crates.io/crates/wasm-gc</a></p>",
        "id": 465566864,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1724792718
    }
]