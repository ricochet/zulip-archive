[
    {
        "content": "<p><strong>Announcement</strong>: I have a POC for a new tool called <a href=\"https://github.com/rylev/wepl\">wepl (The WebAssembly REPL)</a>.</p>\n<p>This tool allows you to interact with WebAssembly components in a continuous and dynamic way. The following features are currently supported:</p>\n<ul>\n<li>Evaluate exported functions</li>\n<li>Listing the imports and exports</li>\n<li>\"Dynamic linking\" (i.e.,  specifying that another WebAssembly component's export should be used to satisfy your component's import)</li>\n<li>Basic component composition (e.g., you can compose WASI-Virt with your component)</li>\n<li>Variable assignment (i.e., you can use the output of one export as input to another)</li>\n<li>Basic type checking for somewhat decent error messages.</li>\n</ul>\n<p>Here's what a session might look like:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$<span class=\"w\"> </span>wepl<span class=\"w\"> </span>mycomponent.wasm\n&gt;<span class=\"w\"> </span>.exports\nuppercase_and_suffix:<span class=\"w\"> </span>func<span class=\"o\">(</span>input:<span class=\"w\"> </span>string<span class=\"o\">)</span><span class=\"w\"> </span>-&gt;<span class=\"w\"> </span>string\n&gt;<span class=\"w\"> </span>uppercase_and_suffix\nuppercase_and_suffix:<span class=\"w\"> </span>func<span class=\"o\">(</span>input:<span class=\"w\"> </span>string<span class=\"o\">)</span><span class=\"w\"> </span>-&gt;<span class=\"w\"> </span>string\n&gt;<span class=\"w\"> </span><span class=\"nv\">s</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s2\">\"hello\"</span>\ns:<span class=\"w\"> </span>string\n&gt;<span class=\"w\"> </span>.link<span class=\"w\"> </span>suffix<span class=\"w\"> </span>my_suffixer.wasm\n&gt;<span class=\"w\"> </span>uppercase_and_suffix<span class=\"o\">(</span>s<span class=\"o\">)</span>\n<span class=\"s2\">\"HELLO!!\"</span>\n</code></pre></div>\n<p>Some future features would likely include:</p>\n<ul>\n<li>Full support for the composition language that <span class=\"user-mention\" data-user-id=\"269506\">@Brian</span> and <span class=\"user-mention\" data-user-id=\"253989\">@Peter Huene</span> have been working on</li>\n<li>More ways to do \"dynamic linking\" - (e.g., perhaps being able to satisfy an import with a Python script)</li>\n<li>More inspection and metadata capabilities (i.e., be the interactive front-end for much wasm-tools functionality)</li>\n<li>Saving composed components back to disk</li>\n</ul>\n<p>I think this could be really useful, but I'm not sure what others will think, so feedback is <em>very much</em> appreciated.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/rylev/wepl\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/e35680a403d97ff934fce3d06fe5b61d1d1d61b9\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f323138666663363339326335656662633130613263336137623864633265303436376438393436613264633235363533663032646439333630363431383065342f72796c65762f7765706c)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/rylev/wepl\" title=\"GitHub - rylev/wepl: A repl for WebAssembly Components\">GitHub - rylev/wepl: A repl for WebAssembly Components</a></div><div class=\"message_embed_description\">A repl for WebAssembly Components. Contribute to rylev/wepl development by creating an account on GitHub.</div></div></div>",
        "id": 390673525,
        "sender_full_name": "Ryan Levick (rylev)",
        "timestamp": 1694594004
    }
]