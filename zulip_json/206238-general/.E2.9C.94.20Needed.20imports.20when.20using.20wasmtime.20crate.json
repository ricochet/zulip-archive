[
    {
        "content": "<p>Hi I am a newbee to wasm and wasmtime, I build a wasm file which uses println macro and several rust structs, it could be run when using wasmtime cli, but failed on load module using wasmtime crate, why is that?<br>\n<code>Error: expected 5 imports, found 0</code></p>",
        "id": 310556683,
        "sender_full_name": "Dennis Zhang",
        "timestamp": 1668670080
    },
    {
        "content": "<p>You probably need to add wasmtime-wasi to the Linker you use to instantiate the wasm module. See for example <a href=\"https://github.com/bytecodealliance/wasmtime/blob/56daa8a199ab9a79b6404c5a9cd551497594f31b/examples/linking.rs#L15\">https://github.com/bytecodealliance/wasmtime/blob/56daa8a199ab9a79b6404c5a9cd551497594f31b/examples/linking.rs#L15</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/56daa8a199ab9a79b6404c5a9cd551497594f31b/examples/linking.rs#L15\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/dad20aecb21035f820e4e3f11b18f18e08e17e80\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f653761386665323361643966313761343063663738313736366638613430643137373166616235366434623335333864636433303462383662613236366434642f62797465636f6465616c6c69616e63652f7761736d74696d65)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/56daa8a199ab9a79b6404c5a9cd551497594f31b/examples/linking.rs#L15\" title=\"wasmtime/linking.rs at 56daa8a199ab9a79b6404c5a9cd551497594f31b · bytecodealliance/wasmtime\">wasmtime/linking.rs at 56daa8a199ab9a79b6404c5a9cd551497594f31b · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A fast and secure runtime for WebAssembly. Contribute to bytecodealliance/wasmtime development by creating an account on GitHub.</div></div></div>",
        "id": 310597095,
        "sender_full_name": "bjorn3",
        "timestamp": 1668687154
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"264278\">bjorn3</span> <a href=\"#narrow/stream/206238-general/topic/Needed.20imports.20when.20using.20wasmtime.20crate/near/310597095\">said</a>:</p>\n<blockquote>\n<p>You probably need to add wasmtime-wasi to the Linker you use to instantiate the wasm module. See for example <a href=\"https://github.com/bytecodealliance/wasmtime/blob/56daa8a199ab9a79b6404c5a9cd551497594f31b/examples/linking.rs#L15\">https://github.com/bytecodealliance/wasmtime/blob/56daa8a199ab9a79b6404c5a9cd551497594f31b/examples/linking.rs#L15</a></p>\n</blockquote>\n<p>Hi I already add it before but it does not work, also it seems that the API has changed? because I need to give the specific type for cx</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Engine</span>::<span class=\"n\">default</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Module</span>::<span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"libadd.wasm\"</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Linker</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">add_to_linker</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">cx</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"n\">WasiCtx</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">cx</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span><span class=\"w\"></span>\n</code></pre></div>\n<p>If I remove the type of cx I simply can not compile</p>",
        "id": 310604177,
        "sender_full_name": "Dennis Zhang",
        "timestamp": 1668689893
    },
    {
        "content": "<p>Did you create the store using <code>let mut store = Store::new(&amp;engine, wasi);</code> where <code>wasi</code> is a <code>WasiCtx</code>?</p>",
        "id": 310621013,
        "sender_full_name": "bjorn3",
        "timestamp": 1668695596
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"264278\">bjorn3</span> <a href=\"#narrow/stream/206238-general/topic/Needed.20imports.20when.20using.20wasmtime.20crate/near/310621013\">said</a>:</p>\n<blockquote>\n<p>Did you create the store using <code>let mut store = Store::new(&amp;engine, wasi);</code> where <code>wasi</code> is a <code>WasiCtx</code>?</p>\n</blockquote>\n<p>Yes I did, is that the reason?</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">wasi_ctx</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WasiCtxBuilder</span>::<span class=\"n\">new</span><span class=\"p\">().</span><span class=\"n\">inherit_stdio</span><span class=\"p\">().</span><span class=\"n\">build</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Store</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wasi_ctx</span><span class=\"p\">);</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 310625201,
        "sender_full_name": "Dennis Zhang",
        "timestamp": 1668696940
    },
    {
        "content": "<p>No, that is how it should work.</p>",
        "id": 310626473,
        "sender_full_name": "bjorn3",
        "timestamp": 1668697302
    },
    {
        "content": "<p>Can you post the code that doesn't work?</p>",
        "id": 310626647,
        "sender_full_name": "bjorn3",
        "timestamp": 1668697348
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">anyhow</span>::<span class=\"nb\">Result</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"o\">*</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"p\">{</span><span class=\"n\">WasiCtx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">WasiCtxBuilder</span><span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Engine</span>::<span class=\"n\">default</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Module</span>::<span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"libadd.wasm\"</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Linker</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">add_to_linker</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">cx</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"n\">WasiCtx</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">cx</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">wasi_ctx</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WasiCtxBuilder</span>::<span class=\"n\">new</span><span class=\"p\">().</span><span class=\"n\">inherit_stdio</span><span class=\"p\">().</span><span class=\"n\">build</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Store</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wasi_ctx</span><span class=\"p\">);</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">instance</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Instance</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">module</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"p\">[])</span><span class=\"o\">?</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">add</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">instance</span><span class=\"p\">.</span><span class=\"n\">get_typed_func</span>::<span class=\"o\">&lt;</span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"add\"</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"c1\">// And finally we can call the wasm!</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"1 + 2 = {}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">add</span><span class=\"p\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">))</span><span class=\"o\">?</span><span class=\"p\">);</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>This is the code could not work for me</p>",
        "id": 310627608,
        "sender_full_name": "Dennis Zhang",
        "timestamp": 1668697641
    },
    {
        "content": "<p>You have to use <code>linker.instantiate</code> instead of <code>Instance::new</code></p>",
        "id": 310628146,
        "sender_full_name": "Lann Martin",
        "timestamp": 1668697802
    },
    {
        "content": "<p>Yes I need to use the instantiate, thanks a lot!</p>",
        "id": 310634101,
        "sender_full_name": "Dennis Zhang",
        "timestamp": 1668698842
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"565756\">Dennis Zhang</span> has marked this topic as resolved.</p>",
        "id": 310635113,
        "sender_full_name": "Notification Bot",
        "timestamp": 1668699123
    }
]