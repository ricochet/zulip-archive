[
    {
        "content": "<p>Hi, I am looking on how can use AOT compilation for Wasmtime ( We have tried in Lucet AOT).. trying to find some thing similar in Wasmtime. I could find any info in wasmtime documentation <a href=\"http://w.r.to\">w.r.to</a> AOT. can any one point to me?</p>",
        "id": 231358567,
        "sender_full_name": "Venugopala Krishna Vemula",
        "timestamp": 1616436859
    },
    {
        "content": "<p>No docs at this moment. I'm helping with the similar thing.</p>",
        "id": 231359576,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1616437295
    },
    {
        "content": "<p>Thanks Yury for the quick response. It would be great, if you can let me know how to that.. or any clues</p>",
        "id": 231359781,
        "sender_full_name": "Venugopala Krishna Vemula",
        "timestamp": 1616437388
    },
    {
        "content": "<p>I have <a href=\"https://github.com/yurydelendik/wasmtime/tree/aot-ftw-1\">https://github.com/yurydelendik/wasmtime/tree/aot-ftw-1</a> if you want just to play,  but eventually we want to: a) disconnect JIT from runtime,  b) add Wasmtime API for that</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/yurydelendik/wasmtime/tree/aot-ftw-1\" style=\"background-image: url(https://avatars.githubusercontent.com/u/1523410?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/yurydelendik/wasmtime/tree/aot-ftw-1\" title=\"yurydelendik/wasmtime\">yurydelendik/wasmtime</a></div><div class=\"message_embed_description\">Standalone JIT-style runtime for WebAsssembly, using Cranelift - yurydelendik/wasmtime</div></div></div>",
        "id": 231359897,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1616437439
    },
    {
        "content": "<p>Thanks.. Lemme have a look at it.</p>",
        "id": 231360043,
        "sender_full_name": "Venugopala Krishna Vemula",
        "timestamp": 1616437481
    },
    {
        "content": "<p>I did glance through: <a href=\"https://github.com/yurydelendik/wasmtime/tree/aot-ftw-1\">https://github.com/yurydelendik/wasmtime/tree/aot-ftw-1</a>. Looks promising.  Are you looking any timelines for this to integrate into wasmtime?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/yurydelendik/wasmtime/tree/aot-ftw-1\" style=\"background-image: url(https://avatars.githubusercontent.com/u/1523410?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/yurydelendik/wasmtime/tree/aot-ftw-1\" title=\"yurydelendik/wasmtime\">yurydelendik/wasmtime</a></div><div class=\"message_embed_description\">Standalone JIT-style runtime for WebAsssembly, using Cranelift - yurydelendik/wasmtime</div></div></div>",
        "id": 231363200,
        "sender_full_name": "Venugopala Krishna Vemula",
        "timestamp": 1616438647
    },
    {
        "content": "<p>Depends on results of our internal evaluation. At the moment there are no timelines.</p>",
        "id": 231363328,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1616438705
    },
    {
        "content": "<p>Thanks for letting me know. Let me also explore/test further.</p>",
        "id": 231363521,
        "sender_full_name": "Venugopala Krishna Vemula",
        "timestamp": 1616438791
    },
    {
        "content": "<p>as part of the Lucet team efforts to merge all our useful differences into wasmtime, <span class=\"user-mention\" data-user-id=\"253989\">@Peter Huene</span> is working on this right now as well</p>",
        "id": 231506836,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1616519209
    },
    {
        "content": "<p>It differs a little from Yury's work that involves ELF objects. The idea behind this work is to have a wasmtime command that will spit out a precompiled \"artifact\" (not an ELF so, like lucetc outputs) which can be run with the wasmtime CLI or API; the artifact in this case is pretty much identical to what we cache locally to speed up later runs today, but isn't constrained by the local architecture or CPU features (flags to the compile command will determine architecture and features). the goal is to allow for no JIT to occur at runtime (in fact, there will likely be work to conditionally remove JIT support from the runtime with a feature flag).</p>",
        "id": 231507712,
        "sender_full_name": "Peter Huene",
        "timestamp": 1616519526
    },
    {
        "content": "<p>Extracted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2804\">https://github.com/bytecodealliance/wasmtime/pull/2804</a> from my branch/example. It has recommended improvements for wasm2obj only. I would like some feedback.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/2804\" style=\"background-image: url(https://avatars.githubusercontent.com/u/54038801?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/2804\" title=\"Improve wasm2obj for AOT use case by yurydelendik 路 Pull Request #2804 路 bytecodealliance/wasmtime\">Improve wasm2obj for AOT use case by yurydelendik 路 Pull Request #2804 路 bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">This patch improves wasm2obj tool functionality:\n\nUse native (not only ELF) format, e.g. COFF for Windows\nAllows to save additional metadata (Module, as well as table of function and trampolines ta...</div></div></div>",
        "id": 233316404,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1617715025
    },
    {
        "content": "<p>I started taking a look at this today but got distracted, sorry about that!</p>",
        "id": 233413339,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1617756148
    },
    {
        "content": "<p>I'll try to finish up reviewing tomorrow</p>",
        "id": 233413347,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1617756155
    }
]