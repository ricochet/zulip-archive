[
    {
        "content": "<p>Hi there, here is a newbie question if you don't mind</p>\n<p>I built a simple wasm with exported function which was build with wasm32-wasi target, now I a modified hello example from wasmtime and it works fine.. until I start using vector in my exported function: I receive \"wrong number of imports provided, 0 != 1\"; the problem disappears when I build wasm with wasm32-unknown-unknown target; wasm compilation works fine in all these cases btw</p>",
        "id": 196704436,
        "sender_full_name": "Evgeny",
        "timestamp": 1588802737
    },
    {
        "content": "<p>wasm32-unknown-unknown is silent on panics, wasm32-wasi don't</p>",
        "id": 196704681,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1588802910
    },
    {
        "content": "<p>Vec operations may panic</p>",
        "id": 196704723,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1588802941
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"299875\">@Evgeny</span> can you check wasm module and tell which wasi function it requires?</p>",
        "id": 196704757,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1588802977
    },
    {
        "content": "<p>sure if you could tell me how to do that, btw here is a full source:<br>\n#[no_mangle]<br>\npub extern \"C\" fn hello() -&gt; i32 {<br>\n    let a = vec![322];<br>\n    1337<br>\n}</p>",
        "id": 196704962,
        "sender_full_name": "Evgeny",
        "timestamp": 1588803084
    },
    {
        "content": "<p><code>wasm2wat</code> cli normally tell</p>",
        "id": 196705071,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1588803125
    },
    {
        "content": "<p>lazy to install -&gt; <a href=\"https://wasdk.github.io/wasmcodeexplorer/\" title=\"https://wasdk.github.io/wasmcodeexplorer/\">https://wasdk.github.io/wasmcodeexplorer/</a></p>",
        "id": 196705101,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1588803151
    },
    {
        "content": "<p>(import \"wasi_snapshot_preview1\" \"fd_write\" (func $wasi::lib_generated::wasi_snapshot_preview1::fd_write::h4660e0082b9356a7 (type 10)))<br>\nif I got right</p>",
        "id": 196705189,
        "sender_full_name": "Evgeny",
        "timestamp": 1588803235
    },
    {
        "content": "<p>yep, \"fd_write\" probably is used to write panic message to stderr</p>",
        "id": 196705276,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1588803284
    },
    {
        "content": "<p>Can <a href=\"https://github.com/bytecodealliance/wasmtime/blob/9364eb1d98d4b82d30ce72ec1e46ee72a1ea6a0c/examples/wasi/main.rs\" title=\"https://github.com/bytecodealliance/wasmtime/blob/9364eb1d98d4b82d30ce72ec1e46ee72a1ea6a0c/examples/wasi/main.rs\">https://github.com/bytecodealliance/wasmtime/blob/9364eb1d98d4b82d30ce72ec1e46ee72a1ea6a0c/examples/wasi/main.rs</a>  help with setting this import ?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/9364eb1d98d4b82d30ce72ec1e46ee72a1ea6a0c/examples/wasi/main.rs\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/9364eb1d98d4b82d30ce72ec1e46ee72a1ea6a0c/examples/wasi/main.rs\" title=\"bytecodealliance/wasmtime\">bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Standalone JIT-style runtime for WebAssembly, using Cranelift - bytecodealliance/wasmtime</div></div></div>",
        "id": 196705570,
        "sender_full_name": "Evgeny",
        "timestamp": 1588803494
    },
    {
        "content": "<p>I'm not sure how to provide this fd_write</p>",
        "id": 196705607,
        "sender_full_name": "Evgeny",
        "timestamp": 1588803527
    },
    {
        "content": "<p>wasmtime supports wasi, so yes</p>",
        "id": 196705633,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1588803548
    },
    {
        "content": "<p>the example above does just that</p>",
        "id": 196705675,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1588803579
    },
    {
        "content": "<p>thank you for your help!</p>",
        "id": 196705741,
        "sender_full_name": "Evgeny",
        "timestamp": 1588803603
    },
    {
        "content": "<p><code>wasi.get_export(import.name())</code> will find \"fd_write\" if it is present</p>",
        "id": 196705759,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1588803616
    }
]