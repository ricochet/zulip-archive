[
    {
        "content": "<p>Hey all! I'm looking at migrating to the latest wit-bindgen/wasmtime (we've been stuck at ~August 2022 for a while), but I'm not sure how to wire everything up now - it looks like a few things have moved around and the tests for what I can find are part of a harness.</p>\n<p>Is there an example somewhere that I can look at that shows the following?</p>\n<ul>\n<li>Exposing an interface from a Rust host and implementing it</li>\n<li>Consuming that interface from a Rust guest</li>\n<li>Exposing exports from the guest and having the Rust host call it</li>\n<li>Depending on types from another interface (e.g. a <code>base.wit</code> that's depended on by a <code>derived.wit</code> that uses its types)</li>\n</ul>\n<p>If there's no one example, links to where I might find individual examples/where to look would also be useful.</p>\n<p>Thanks in advance! :)</p>",
        "id": 320601340,
        "sender_full_name": "Philpax",
        "timestamp": 1673414624
    },
    {
        "content": "<p>Turns out that the WASI preview2 host is a good example of how to use the new macros, so I'm no longer as lost as I was: <a href=\"https://github.com/bytecodealliance/preview2-prototyping/blob/main/host/src/main.rs\">https://github.com/bytecodealliance/preview2-prototyping/blob/main/host/src/main.rs</a> (which answers my first three dotpoints)</p>\n<p>It looks like the interface dependency situation is still up in the air, though (judging by <a href=\"#narrow/stream/327223-wit-bindgen/topic/status.20of.20resource\">https://bytecodealliance.zulipchat.com/#narrow/stream/327223-wit-bindgen/topic/status.20of.20resource</a>). Am I correct in assuming that, at present, I'll still need to define duplicate types for each interface/world and fuse them together at the language layer?</p>\n<p>For context, I have both internal and external dependencies to a world: I'd like to share types between the imports and exports of a world (so that I can use the same <code>record</code> in a host export and a guest export), and I'd like to have a base <code>.wit</code>/world that I then depend upon and extend in another project.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/preview2-prototyping/blob/main/host/src/main.rs\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/2b2c5fcdee063590238d3047a7c18c644870c732\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f363861663933333033316464643932353330303131333134646164643565636365326265616234333333393834653234343833626138633634616537643636352f62797465636f6465616c6c69616e63652f70726576696577322d70726f746f747970696e67)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/preview2-prototyping/blob/main/host/src/main.rs\" title=\"preview2-prototyping/main.rs at main · bytecodealliance/preview2-prototyping\">preview2-prototyping/main.rs at main · bytecodealliance/preview2-prototyping</a></div><div class=\"message_embed_description\">Polyfill adapter for preview1-using wasm modules to call preview2 functions. - preview2-prototyping/main.rs at main · bytecodealliance/preview2-prototyping</div></div></div>",
        "id": 320687735,
        "sender_full_name": "Philpax",
        "timestamp": 1673439354
    }
]