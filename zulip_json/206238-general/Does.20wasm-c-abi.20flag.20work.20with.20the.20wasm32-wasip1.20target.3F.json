[
    {
        "content": "<p>Does wasm-c-abi flag work with the wasm32-wasip1 target? on nightly? ie: -Zwasm-c-abi. I'm trying to bind a C  ECS library (flecs) and compile to WASM for my game engine while using the WASM component model and wit-bindgen / cargo component. Also why does cargo component use wasm32-wasip1, should I be using wasm32-wasip2 at this point instead? What about wasm32-wasip1-threads and wasm64-unknown-unknown? These targets could solve several issues for me, if possible to use.</p>",
        "id": 470328540,
        "sender_full_name": "Troy Edwards",
        "timestamp": 1726402382
    },
    {
        "content": "<p>The <code>wasm-c-abi</code> flag should have no effect on any WASI target, they already adhere to the specification.</p>",
        "id": 470330359,
        "sender_full_name": "daxpedda",
        "timestamp": 1726403482
    },
    {
        "content": "<p>C bindings generated by CC doesn't appear to work on the wasm32-wasip1 target on stable. Same with nightly and with the c abi flag.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">TARGET</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasip1</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"n\">OPT_LEVEL</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"n\">HOST</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">x86_64</span><span class=\"o\">-</span><span class=\"n\">pc</span><span class=\"o\">-</span><span class=\"n\">windows</span><span class=\"o\">-</span><span class=\"n\">msvc</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"n\">cargo</span><span class=\"p\">:</span><span class=\"nc\">rerun</span><span class=\"o\">-</span><span class=\"k\">if</span><span class=\"o\">-</span><span class=\"n\">env</span><span class=\"o\">-</span><span class=\"n\">changed</span><span class=\"o\">=</span><span class=\"n\">CC_wasm32</span><span class=\"o\">-</span><span class=\"n\">wasip1</span>\n<span class=\"w\">  </span><span class=\"n\">CC_wasm32</span><span class=\"o\">-</span><span class=\"n\">wasip1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">None</span>\n<span class=\"w\">  </span><span class=\"n\">cargo</span><span class=\"p\">:</span><span class=\"nc\">rerun</span><span class=\"o\">-</span><span class=\"k\">if</span><span class=\"o\">-</span><span class=\"n\">env</span><span class=\"o\">-</span><span class=\"n\">changed</span><span class=\"o\">=</span><span class=\"n\">CC_wasm32_wasip1</span>\n<span class=\"w\">  </span><span class=\"n\">CC_wasm32_wasip1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">None</span>\n<span class=\"w\">  </span><span class=\"n\">cargo</span><span class=\"p\">:</span><span class=\"nc\">rerun</span><span class=\"o\">-</span><span class=\"k\">if</span><span class=\"o\">-</span><span class=\"n\">env</span><span class=\"o\">-</span><span class=\"n\">changed</span><span class=\"o\">=</span><span class=\"n\">TARGET_CC</span>\n<span class=\"w\">  </span><span class=\"n\">TARGET_CC</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">None</span>\n<span class=\"w\">  </span><span class=\"n\">cargo</span><span class=\"p\">:</span><span class=\"nc\">rerun</span><span class=\"o\">-</span><span class=\"k\">if</span><span class=\"o\">-</span><span class=\"n\">env</span><span class=\"o\">-</span><span class=\"n\">changed</span><span class=\"o\">=</span><span class=\"n\">CC</span>\n<span class=\"w\">  </span><span class=\"n\">CC</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">None</span>\n<span class=\"w\">  </span><span class=\"n\">cargo</span><span class=\"p\">:</span><span class=\"nc\">rerun</span><span class=\"o\">-</span><span class=\"k\">if</span><span class=\"o\">-</span><span class=\"n\">env</span><span class=\"o\">-</span><span class=\"n\">changed</span><span class=\"o\">=</span><span class=\"n\">CC_ENABLE_DEBUG_OUTPUT</span>\n<span class=\"w\">  </span><span class=\"n\">RUSTC_WRAPPER</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">None</span>\n<span class=\"w\">  </span><span class=\"n\">cargo</span><span class=\"p\">:</span><span class=\"nc\">rerun</span><span class=\"o\">-</span><span class=\"k\">if</span><span class=\"o\">-</span><span class=\"n\">env</span><span class=\"o\">-</span><span class=\"n\">changed</span><span class=\"o\">=</span><span class=\"n\">CRATE_CC_NO_DEFAULTS</span>\n<span class=\"w\">  </span><span class=\"n\">CRATE_CC_NO_DEFAULTS</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">None</span>\n<span class=\"w\">  </span><span class=\"n\">cargo</span><span class=\"p\">:</span><span class=\"nc\">rerun</span><span class=\"o\">-</span><span class=\"k\">if</span><span class=\"o\">-</span><span class=\"n\">env</span><span class=\"o\">-</span><span class=\"n\">changed</span><span class=\"o\">=</span><span class=\"n\">WASI_SYSROOT</span>\n<span class=\"w\">  </span><span class=\"n\">WASI_SYSROOT</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">None</span>\n<span class=\"w\">  </span><span class=\"n\">DEBUG</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"n\">cargo</span><span class=\"p\">:</span><span class=\"nc\">rerun</span><span class=\"o\">-</span><span class=\"k\">if</span><span class=\"o\">-</span><span class=\"n\">env</span><span class=\"o\">-</span><span class=\"n\">changed</span><span class=\"o\">=</span><span class=\"n\">CFLAGS_wasm32</span><span class=\"o\">-</span><span class=\"n\">wasip1</span>\n<span class=\"w\">  </span><span class=\"n\">CFLAGS_wasm32</span><span class=\"o\">-</span><span class=\"n\">wasip1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">None</span>\n<span class=\"w\">  </span><span class=\"n\">cargo</span><span class=\"p\">:</span><span class=\"nc\">rerun</span><span class=\"o\">-</span><span class=\"k\">if</span><span class=\"o\">-</span><span class=\"n\">env</span><span class=\"o\">-</span><span class=\"n\">changed</span><span class=\"o\">=</span><span class=\"n\">CFLAGS_wasm32_wasip1</span>\n<span class=\"w\">  </span><span class=\"n\">CFLAGS_wasm32_wasip1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">None</span>\n<span class=\"w\">  </span><span class=\"n\">cargo</span><span class=\"p\">:</span><span class=\"nc\">rerun</span><span class=\"o\">-</span><span class=\"k\">if</span><span class=\"o\">-</span><span class=\"n\">env</span><span class=\"o\">-</span><span class=\"n\">changed</span><span class=\"o\">=</span><span class=\"n\">TARGET_CFLAGS</span>\n<span class=\"w\">  </span><span class=\"n\">TARGET_CFLAGS</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">None</span>\n<span class=\"w\">  </span><span class=\"n\">cargo</span><span class=\"p\">:</span><span class=\"nc\">rerun</span><span class=\"o\">-</span><span class=\"k\">if</span><span class=\"o\">-</span><span class=\"n\">env</span><span class=\"o\">-</span><span class=\"n\">changed</span><span class=\"o\">=</span><span class=\"n\">CFLAGS</span>\n<span class=\"w\">  </span><span class=\"n\">CFLAGS</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">None</span>\n<span class=\"w\">  </span><span class=\"n\">cargo</span><span class=\"p\">:</span><span class=\"nc\">warning</span><span class=\"o\">=</span><span class=\"n\">In</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">included</span><span class=\"w\"> </span><span class=\"n\">from</span><span class=\"w\"> </span><span class=\"n\">flecs</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"p\">:</span><span class=\"mi\">20</span><span class=\"p\">:</span>\n<span class=\"w\">  </span><span class=\"nc\">cargo</span><span class=\"p\">:</span><span class=\"nc\">warning</span><span class=\"o\">=</span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">flecs</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"p\">:</span><span class=\"mi\">692</span><span class=\"p\">:</span><span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">fatal</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">assert</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">found</span>\n<span class=\"w\">  </span><span class=\"n\">cargo</span><span class=\"p\">:</span><span class=\"nc\">warning</span><span class=\"o\">=</span><span class=\"w\">  </span><span class=\"mi\">692</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">assert</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n<span class=\"w\">  </span><span class=\"n\">cargo</span><span class=\"p\">:</span><span class=\"nc\">warning</span><span class=\"o\">=</span><span class=\"w\">      </span><span class=\"o\">|</span><span class=\"w\">          </span><span class=\"o\">^~~~~~~~~~</span>\n<span class=\"w\">  </span><span class=\"n\">cargo</span><span class=\"p\">:</span><span class=\"nc\">warning</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"n\">generated</span><span class=\"p\">.</span>\n\n<span class=\"w\">  </span><span class=\"o\">---</span><span class=\"w\"> </span><span class=\"n\">stderr</span>\n<span class=\"w\">  </span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasip1</span>\n</code></pre></div>",
        "id": 470371211,
        "sender_full_name": "Troy Edwards",
        "timestamp": 1726424973
    },
    {
        "content": "<p>This doesn't look like an ABI issue to me.</p>",
        "id": 470371400,
        "sender_full_name": "daxpedda",
        "timestamp": 1726425129
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"612401\">daxpedda</span> <a href=\"#narrow/stream/206238-general/topic/Does.20wasm-c-abi.20flag.20work.20with.20the.20wasm32-wasip1.20target.3F/near/470371400\">said</a>:</p>\n<blockquote>\n<p>This doesn't look like an ABI issue to me.</p>\n</blockquote>\n<p>Hmm, you're right. It's a standard library dependency that would normally be provided by Emscripten. Is there no way for WASI to shim this in a similar way?</p>",
        "id": 470371638,
        "sender_full_name": "Troy Edwards",
        "timestamp": 1726425319
    },
    {
        "content": "<p>I think you might be looking for wasi-sdk?</p>",
        "id": 470371829,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1726425425
    },
    {
        "content": "<p>It is indeed, I was able to get it to work by specifying the WASI-DK in many different build flags (RUSTFLAGS, CXXSTDLIB, CC, CXX, CXXFLAGS, <a href=\"http://build.rs\">build.rs</a> bindgen and cc). I should really document this somewhere for Rust, the only place where I was able to find some of this is outdated information in this blog that has an expired SSL certificate that I had to look up on <a href=\"http://archive.org\">archive.org</a>: <a href=\"https://web.archive.org/web/20240419144307/https://benw.is/posts/compiling-rust-to-wasi\">https://web.archive.org/web/20240419144307/https://benw.is/posts/compiling-rust-to-wasi</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://web.archive.org/web/20240419144307/https://benw.is/posts/compiling-rust-to-wasi\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/3af5b8b6fd2b8d3d152f87f337f20da7b1b2c72e/68747470733a2f2f7765622e617263686976652e6f72672f7765622f3230323430343139313434333037696d5f2f68747470733a2f2f62656e7769732e696d6769782e6e65742f706572736f6e5f636f6d70757465725f776173692e776562703f6175746f3d666f726d6174266175746f3d636f6d7072657373&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://web.archive.org/web/20240419144307/https://benw.is/posts/compiling-rust-to-wasi\" title=\"Compiling Rust to WASI\">Compiling Rust to WASI</a></div><div class=\"message_embed_description\">Is WASI preview 2 ready for prime time? I explore using it for my Rust/C project to bring additional functionality to the browser!</div></div></div>",
        "id": 470653322,
        "sender_full_name": "Troy Edwards",
        "timestamp": 1726501832
    },
    {
        "content": "<p>Thank you though!</p>",
        "id": 470653423,
        "sender_full_name": "Troy Edwards",
        "timestamp": 1726501852
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"694187\">@benwis</span> regarding the SSL cert expiration</p>",
        "id": 470675728,
        "sender_full_name": "Joel Dice",
        "timestamp": 1726506004
    }
]