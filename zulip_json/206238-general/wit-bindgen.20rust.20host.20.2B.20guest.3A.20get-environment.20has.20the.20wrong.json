[
    {
        "content": "<p>Hi. I'm getting this error with trying to use wit-bindgen on both host and guest:</p>\n<blockquote>\n<p>Error: component imports instance <code>wasi:cli/environment@0.2.0</code>, but a matching implementation was not found in the linker</p>\n<p>Caused by: 0: instance export <code>get-environment</code> has the wrong type 1: function &gt; implementation is missing</p>\n</blockquote>\n<p>I've created a test setup that includes all the source and how to build/run:<br>\n<a href=\"https://github.com/eirikb/wit-test\">https://github.com/eirikb/wit-test</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/eirikb/wit-test\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/45ab06cbaccd8ccae02b4852337cf8184b6fc752/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f646266313061393966653064656162313965336633323633626465643661373164373934653530356662363334653361336434383663323332636432643538332f656972696b622f7769742d74657374&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/eirikb/wit-test\" title=\"GitHub - eirikb/wit-test\">GitHub - eirikb/wit-test</a></div><div class=\"message_embed_description\">Contribute to eirikb/wit-test development by creating an account on GitHub.</div></div></div>",
        "id": 452431448,
        "sender_full_name": "eirikb",
        "timestamp": 1721333480
    },
    {
        "content": "<p>The <code>*.wit</code> file you're using isn't a perfect reflection of what the wasm binary is using, notably it omits all of WASI which the Rust standard library uses for its own implementation (e.g. getting env vars). This basically means that WASI is missing from your linker for which I'd recommend reading the <a href=\"https://docs.rs/wasmtime-wasi/latest/wasmtime_wasi/\"><code>wasmtime-wasi</code> docs</a> where you're likely interested in <a href=\"https://docs.rs/wasmtime-wasi/latest/wasmtime_wasi/fn.add_to_linker_sync.html\">this function</a></p>",
        "id": 452431850,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1721333607
    },
    {
        "content": "<p>Just noticed I was pointed to that link in another thread. Didn't notice. Sorry about that. Will take a look now!</p>",
        "id": 452432154,
        "sender_full_name": "eirikb",
        "timestamp": 1721333710
    },
    {
        "content": "<p>I'm not sure if I need WASI. Perhaps I do in order for WIT to work? I don't plan on exposing anything from host to guest beside the methods I provide</p>",
        "id": 452432309,
        "sender_full_name": "eirikb",
        "timestamp": 1721333755
    },
    {
        "content": "<p>For that you'd want to use <code>wasm32-unknown-unknown</code> as a compile target</p>",
        "id": 452432499,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1721333818
    },
    {
        "content": "<p>to force the standard library to do nothing and have everything implemented as nops</p>",
        "id": 452432540,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1721333827
    },
    {
        "content": "<p>I tried doing <code>cargo build --target wasm32-unknown-unknown</code> on the module, then point to that wasm file.<br>\nBut then I get:</p>\n<blockquote>\n<div class=\"codehilite\"><pre><span></span><code>attempted to parse a wasm module with a component parser\n</code></pre></div>\n\n</blockquote>",
        "id": 452433712,
        "sender_full_name": "eirikb",
        "timestamp": 1721334222
    },
    {
        "content": "<p>If you're using <code>cargo component</code> you can continue using <code>cargo component build</code>, and if you're using <code>cargo build</code> you'll have to follow that up with <code>wasm-tools component new</code> to create a component</p>",
        "id": 452434173,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1721334380
    },
    {
        "content": "<p>Ok tried <code>cargo component build --target wasm32-unknown-unknown</code><br>\nAnd I think it ran. At least I didn't get any errors.<br>\nSince it doesn't do anything it is hard to tell. I will change the WIT to return a string</p>",
        "id": 452434452,
        "sender_full_name": "eirikb",
        "timestamp": 1721334465
    },
    {
        "content": "<p>Oh my I think it worked! Nice</p>",
        "id": 452434873,
        "sender_full_name": "eirikb",
        "timestamp": 1721334570
    },
    {
        "content": "<p>Thank you. I've updated the repo just in case someone stumbles over it</p>",
        "id": 452435900,
        "sender_full_name": "eirikb",
        "timestamp": 1721334887
    }
]