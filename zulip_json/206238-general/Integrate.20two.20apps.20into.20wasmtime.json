[
    {
        "content": "<p>Hi</p>\n<p>I was trying to integrate two apps one simple rust program, which prints a line and another go program which prints a line. I am trying to integrate the two apps into wasmtime and here is my <a href=\"http://main.rs\">main.rs</a> file which is located in src folder</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">anyhow</span><span class=\"p\">::</span><span class=\"nb\">Result</span><span class=\"p\">;</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasi_cap_std_sync</span><span class=\"p\">::</span><span class=\"n\">WasiCtxBuilder</span><span class=\"p\">;</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"p\">::</span><span class=\"o\">*</span><span class=\"p\">;</span>\n\n<span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"c1\">// Define the WASI functions globally on the `Config`.</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Engine</span><span class=\"p\">::</span><span class=\"n\">default</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Linker</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_wasi</span><span class=\"p\">::</span><span class=\"n\">add_to_linker</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">s</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Create a WASI context and put it in a Store; all instances in the store</span>\n<span class=\"w\">    </span><span class=\"c1\">// share this context. `WasiCtxBuilder` provides a number of ways to</span>\n<span class=\"w\">    </span><span class=\"c1\">// configure what the target program will have access to.</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WasiCtxBuilder</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">inherit_stdio</span><span class=\"p\">()</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">inherit_args</span><span class=\"p\">()</span><span class=\"o\">?</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">build</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Store</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Load our WebAssembly modules.</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">module_rust_app</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Module</span><span class=\"p\">::</span><span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"/Users/celinesantosh/Desktop/sem_5/rust_app/target/wasm32-wasi/release/rust_app.wasm\"</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">module_go_app</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Module</span><span class=\"p\">::</span><span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"/Users/celinesantosh/Desktop/sem_5/go_program/go_app.wasm\"</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Instantiate the Rust app module.</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">instance_rust_app</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"p\">.</span><span class=\"n\">instantiate</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">module_rust_app</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"c1\">// Instantiate the Go app module.</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">instance_go_app</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"p\">.</span><span class=\"n\">instantiate</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">module_go_app</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Get the `_start` function from the Rust app instance.</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">start_rust_app</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">instance_rust_app</span><span class=\"p\">.</span><span class=\"n\">get_typed_func</span><span class=\"p\">::</span><span class=\"o\">&lt;</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"_start\"</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"c1\">// Get the `_start` function from the Go app instance.</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">start_go_app</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">instance_go_app</span><span class=\"p\">.</span><span class=\"n\">get_typed_func</span><span class=\"p\">::</span><span class=\"o\">&lt;</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"_start\"</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Call the `_start` function on both modules.</span>\n<span class=\"w\">    </span><span class=\"n\">start_rust_app</span><span class=\"p\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">())</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">start_go_app</span><span class=\"p\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">())</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>But I am getting an issue while building</p>\n<p><strong>error</strong><strong>:</strong> failed to run custom build command for <code>cranelift-codegen v0.111.0 (/Users/celinesantosh/Desktop/sem_5/wasmtime_dev/cranelift/codegen)</code></p>\n<p>Caused by:</p>\n<p>process didn't exit successfully: <code>/Users/celinesantosh/Desktop/sem_5/wasmtime_dev/target/release/build/cranelift-codegen-4791549fd0e2d9a3/build-script-build</code> (exit status: 101)</p>\n<p>--- stderr</p>\n<p>thread 'main' panicked at cranelift/codegen/build.rs:50:53:</p>\n<p>error when identifying target: \"no supported isa found for arch <code>wasm32</code>\"</p>\n<p>note: run with <code>RUST_BACKTRACE=1</code> environment variable to display a backtrace<br>\n<strong>warning</strong><strong>:</strong> build failed, waiting for other jobs to finish...</p>\n<p>The following warnings were emitted during compilation:<br>\n<strong>warning</strong><strong>:</strong> zstd-sys@2.0.9+zstd.1.5.5: error: unable to create target: 'No available targets are compatible with triple \"wasm32-unknown-wasi\"'<br>\n<strong>warning</strong><strong>:</strong> zstd-sys@2.0.9+zstd.1.5.5: 1 error generated.<br>\n<strong>warning</strong><strong>:</strong> zstd-sys@2.0.9+zstd.1.5.5: ToolExecError: Command \"clang\" \"-O3\" \"-ffunction-sections\" \"-fdata-sections\" \"-fPIC\" \"--target=wasm32-wasi\" \"-I\" \"wasm-shim/\" \"-I\" \"zstd/lib/\" \"-I\" \"zstd/lib/common\" \"-fvisibility=hidden\" \"-DXXH_STATIC_ASSERT=0\" \"-DZSTD_LIB_DEPRECATED=0\" \"-DXXH_PRIVATE_API=\" \"-DZSTDLIB_VISIBILITY=\" \"-DZSTDERRORLIB_VISIBILITY=\" \"-o\" \"/Users/celinesantosh/Desktop/sem_5/wasmtime_dev/target/wasm32-wasi/release/build/zstd-sys-83613bc565f26643/out/zstd/lib/common/debug.o\" \"-c\" \"zstd/lib/common/debug.c\" with args \"clang\" did not execute successfully (status code exit status: 1).running: \"clang\" \"-O3\" \"-ffunction-sections\" \"-fdata-sections\" \"-fPIC\" \"--target=wasm32-wasi\" \"-I\" \"wasm-shim/\" \"-I\" \"zstd/lib/\" \"-I\" \"zstd/lib/common\" \"-fvisibility=hidden\" \"-DXXH_STATIC_ASSERT=0\" \"-DZSTD_LIB_DEPRECATED=0\" \"-DXXH_PRIVATE_API=\" \"-DZSTDLIB_VISIBILITY=\" \"-DZSTDERRORLIB_VISIBILITY=\" \"-o\" \"/Users/celinesantosh/Desktop/sem_5/wasmtime_dev/target/wasm32-wasi/release/build/zstd-sys-83613bc565f26643/out/zstd/lib/common/entropy_common.o\" \"-c\" \"zstd/lib/common/entropy_common.c\"<br>\n<strong>warning</strong><strong>:</strong> zstd-sys@2.0.9+zstd.1.5.5: error: unable to create target: 'No available targets are compatible with triple \"wasm32-unknown-wasi\"'<br>\n<strong>warning</strong><strong>:</strong> zstd-sys@2.0.9+zstd.1.5.5: 1 error generated.<br>\n<strong>warning</strong><strong>:</strong> zstd-sys@2.0.9+zstd.1.5.5: error: unable to create target: 'No available targets are compatible with triple \"wasm32-unknown-wasi\"'<br>\n<strong>warning</strong><strong>:</strong> zstd-sys@2.0.9+zstd.1.5.5: 1 error generated.<br>\n<strong>warning</strong><strong>:</strong> zstd-sys@2.0.9+zstd.1.5.5: ToolExecError: Command \"clang\" \"-O3\" \"-ffunction-sections\" \"-fdata-sections\" \"-fPIC\" \"--target=wasm32-wasi\" \"-I\" \"wasm-shim/\" \"-I\" \"zstd/lib/\" \"-I\" \"zstd/lib/common\" \"-fvisibility=hidden\" \"-DXXH_STATIC_ASSERT=0\" \"-DZSTD_LIB_DEPRECATED=0\" \"-DXXH_PRIVATE_API=\" \"-DZSTDLIB_VISIBILITY=\" \"-DZSTDERRORLIB_VISIBILITY=\" \"-o\" \"/Users/celinesantosh/Desktop/sem_5/wasmtime_dev/target/wasm32-wasi/release/build/zstd-sys-83613bc565f26643/out/zstd/lib/common/entropy_common.o\" \"-c\" \"zstd/lib/common/entropy_common.c\" with args \"clang\" did not execute successfully (status code exit status: 1).</p>\n<p>Any help would be appreciated</p>\n<p>Thanks</p>",
        "id": 453182126,
        "sender_full_name": "celine santosh",
        "timestamp": 1721656646
    },
    {
        "content": "<p>It looks like you have the target set to wasm32 for your <em>host</em> program, not just your guest programs. This could be either passed as e.g. <code>cargo build --target wasm32-wasi</code> or set by a config file e.g. <code>.cargo/config.toml</code>.</p>",
        "id": 453185969,
        "sender_full_name": "Lann Martin",
        "timestamp": 1721657801
    },
    {
        "content": "<p>Thanks .</p>\n<p>Now I can build successfully, but while running I am getting an error <br>\n(base) celinesantosh@celines-MacBook-Air-2 celine_app % cargo run</p>\n<p><strong>Compiling</strong> celine_app v0.1.0 (/Users/celinesantosh/Desktop/sem_5/wasmtime_dev/examples/celine_app)</p>\n<p><strong>Finished</strong> <code>dev</code> profile [unoptimized + debuginfo] target(s) in 2.94s</p>\n<p><strong>Running</strong> <code>/Users/celinesantosh/Desktop/sem_5/wasmtime_dev/target/debug/celine_app</code></p>\n<p>Error: unknown import: <code>gojs::runtime.scheduleTimeoutEvent</code> has not been defined</p>",
        "id": 453274510,
        "sender_full_name": "celine santosh",
        "timestamp": 1721680523
    },
    {
        "content": "<p>Thanks .. I have solved it now</p>",
        "id": 453280438,
        "sender_full_name": "celine santosh",
        "timestamp": 1721683334
    }
]