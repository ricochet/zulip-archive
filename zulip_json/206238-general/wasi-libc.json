[
    {
        "content": "<p>Only one release from over a year ago. </p>\n<p><a href=\"https://github.com/WebAssembly/wasi-libc\">https://github.com/WebAssembly/wasi-libc</a></p>\n<p>As I'd like a refresh to bring us up to date with this stuff, will have a go at compiling myself, but there should probably be an official update too :)</p>\n<p>wasmtime rocking. thanks guys :)</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/wasi-libc\" style=\"background-image: url(https://avatars3.githubusercontent.com/u/11578470?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/wasi-libc\" title=\"WebAssembly/wasi-libc\">WebAssembly/wasi-libc</a></div><div class=\"message_embed_description\">WASI libc implementation for WebAssembly. Contribute to WebAssembly/wasi-libc development by creating an account on GitHub.</div></div></div>",
        "id": 200086735,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591617207
    },
    {
        "content": "<p>the <a href=\"https://github.com/WebAssembly/wasi-sdk/\">wasi-sdk repo</a> has releases that include the sysroot, i.e. wasi-libc. E.g. <a href=\"https://github.com/WebAssembly/wasi-sdk/releases/tag/wasi-sdk-11\">here's wasi-sdk-11</a>, released 4 days ago</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/wasi-sdk/\" style=\"background-image: url(https://avatars3.githubusercontent.com/u/11578470?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/wasi-sdk/\" title=\"WebAssembly/wasi-sdk\">WebAssembly/wasi-sdk</a></div><div class=\"message_embed_description\">WASI-enabled WebAssembly C/C++ toolchain. Contribute to WebAssembly/wasi-sdk development by creating an account on GitHub.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/wasi-sdk/releases/tag/wasi-sdk-11\" style=\"background-image: url(https://avatars3.githubusercontent.com/u/11578470?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/wasi-sdk/releases/tag/wasi-sdk-11\" title=\"WebAssembly/wasi-sdk\">WebAssembly/wasi-sdk</a></div><div class=\"message_embed_description\">WASI-enabled WebAssembly C/C++ toolchain. Contribute to WebAssembly/wasi-sdk development by creating an account on GitHub.</div></div></div>",
        "id": 200086890,
        "sender_full_name": "Till Schneidereit",
        "timestamp": 1591617332
    },
    {
        "content": "<p>ahh, thanks. was looking in the wrong place then :)</p>",
        "id": 200087012,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591617419
    },
    {
        "content": "<p>It'd be good to have wasi-libc's README point to those releases. I don't have the time to do that right now, but I'd gladly review a PR ;)</p>",
        "id": 200087144,
        "sender_full_name": "Till Schneidereit",
        "timestamp": 1591617508
    },
    {
        "content": "<p>I prob wouldn't have read it :)</p>",
        "id": 200087234,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591617578
    },
    {
        "content": "<p>we're pre-funding so I'm cutting every corner going until we're stable. so please don't mistake my limited engagement for not caring. I do. once rent covered, can breathe again.</p>",
        "id": 200087363,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591617645
    },
    {
        "content": "<p>my problem, not yours just explaining in crunch mode. light at end of tunnel spotted. this is coming together nicely.</p>",
        "id": 200087406,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591617678
    },
    {
        "content": "<p>Maybe just replace the text here :</p>\n<p><a href=\"https://github.com/WebAssembly/wasi-libc/releases\">https://github.com/WebAssembly/wasi-libc/releases</a></p>\n<p>... with :</p>\n<p>wasi-sdk is now available from :</p>\n<p><a href=\"https://github.com/WebAssembly/wasi-sdk/releases\">https://github.com/WebAssembly/wasi-sdk/releases</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/wasi-libc/releases\" style=\"background-image: url(https://avatars3.githubusercontent.com/u/11578470?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/wasi-libc/releases\" title=\"WebAssembly/wasi-libc\">WebAssembly/wasi-libc</a></div><div class=\"message_embed_description\">WASI libc implementation for WebAssembly. Contribute to WebAssembly/wasi-libc development by creating an account on GitHub.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/wasi-sdk/releases\" style=\"background-image: url(https://avatars3.githubusercontent.com/u/11578470?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/wasi-sdk/releases\" title=\"WebAssembly/wasi-sdk\">WebAssembly/wasi-sdk</a></div><div class=\"message_embed_description\">WASI-enabled WebAssembly C/C++ toolchain. Contribute to WebAssembly/wasi-sdk development by creating an account on GitHub.</div></div></div>",
        "id": 200087705,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591617856
    },
    {
        "content": "<p>&lt;&gt;&lt;&gt; infinity XSG / web assembly SDK 1.0 has shipped !</p>\n<p><a href=\"http://advance-software.com/develop\">http://advance-software.com/develop</a></p>\n<p>wasmtime inside</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"http://advance-software.com/develop\" style=\"background-image: url(http://advance-software.com/images/get_infinity.png)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"http://advance-software.com/develop\" title=\"Advance Software\">Advance Software</a></div><div class=\"message_embed_description\">Developers of the &lt;&gt;&lt;&gt; Infinity Virtual Reality 3D Web Browser.</div></div></div>",
        "id": 200103151,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591625791
    },
    {
        "content": "<p>I found at typo: \"Please install latest <strong>LLLVM</strong> for your operating system of choice.\"</p>",
        "id": 200103826,
        "sender_full_name": "bjorn3",
        "timestamp": 1591626072
    },
    {
        "content": "<p>happy to add a logo, link to credits &amp; anything else you want. no debugger support yet - that's on my todo list.<br>\nalso happy for this not to be here if its considered inappropriate promo. thought you'd like to see your baby in action.<br>\ncritique welcome.</p>",
        "id": 200103850,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591626085
    },
    {
        "content": "<p>thanks :)</p>",
        "id": 200103861,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591626091
    },
    {
        "content": "<p>typo fixed. good spot.</p>",
        "id": 200104086,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591626176
    },
    {
        "content": "<p>np</p>",
        "id": 200104278,
        "sender_full_name": "bjorn3",
        "timestamp": 1591626255
    },
    {
        "content": "<p>on that, how do I drop debugger in, reminders of what's required welcome. that should probably be next.</p>",
        "id": 200104280,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591626256
    },
    {
        "content": "<p>/me reviews previous threads regarding debugger support.</p>",
        "id": 200105535,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591626764
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"297332\">@Steve Williams</span> and how is it going?</p>",
        "id": 200108004,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591627786
    },
    {
        "content": "<p>good, thanks. next step is how to compile with debug info, then how to invoke the debugger.<br>\nthis: <a href=\"https://hacks.mozilla.org/2019/09/debugging-webassembly-outside-of-the-browser/\">https://hacks.mozilla.org/2019/09/debugging-webassembly-outside-of-the-browser/</a><br>\nexplains how to start a debug session from scratch on a simple binary. we're not quite so simple, we're an interactive app with wasm stuff running deep within that.<br>\nwe could still break on the first wasm instruction hit &amp; drop into the lldb gui from the command prompt when that occurs.<br>\nassistance welcome getting to that point.<br>\nthen ms code support once that's working, maybe. <br>\nor a different route if you prefer.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://hacks.mozilla.org/2019/09/debugging-webassembly-outside-of-the-browser/\" style=\"background-image: url(https://hacks.mozilla.org/files/2019/09/wasmtime-lldb.png)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://hacks.mozilla.org/2019/09/debugging-webassembly-outside-of-the-browser/\" title=\"Debugging WebAssembly Outside of the Browser\">Debugging WebAssembly Outside of the Browser</a></div><div class=\"message_embed_description\">WebAssembly has begun to establish itself outside of the browser via dedicated runtimes like Mozilla’s Wasmtime and Fastly’s Lucet. While the promise of a new, universal format for programs is ...</div></div></div>",
        "id": 200108563,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591628001
    },
    {
        "content": "<p>so, we have these options - any preference ?<br>\n<a href=\"https://clang.llvm.org/docs/ClangCommandLineReference.html#debug-information-generation\">https://clang.llvm.org/docs/ClangCommandLineReference.html#debug-information-generation</a></p>",
        "id": 200108716,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591628060
    },
    {
        "content": "<p>let's start from basics: do you have wasi-sdk installed?</p>",
        "id": 200108848,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591628118
    },
    {
        "content": "<p>yes, latest installed this morning.</p>",
        "id": 200108884,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591628132
    },
    {
        "content": "<p>all our examples link against it</p>",
        "id": 200108912,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591628144
    },
    {
        "content": "<p>when you produce wasm code, can you run llvm-dwarfdump (from wasi-sdk) to check debug information presence?</p>",
        "id": 200108992,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591628165
    },
    {
        "content": "<p>however, we don't call your main. we have our own entrypoints we call one to init, one per tick process</p>",
        "id": 200109030,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591628179
    },
    {
        "content": "<p>you still load code via <code>wasm_module_new</code>, is it correct?</p>",
        "id": 200109129,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591628219
    },
    {
        "content": "<p>I could, but right now we don't have any as I haven't passed the flags as was only concerned with release build to start with</p>",
        "id": 200109154,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591628228
    },
    {
        "content": "<p>yes</p>",
        "id": 200109160,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591628231
    },
    {
        "content": "<p>so first job is compile debug build, with debug info, of which there are various formats, hence the q which format would you prefer</p>",
        "id": 200109227,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591628260
    },
    {
        "content": "<p>llvm's wasm output with dwarf section is what we are looking for</p>",
        "id": 200109430,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591628318
    },
    {
        "content": "<p>-g --debug</p>\n<p>or something more specific</p>",
        "id": 200109458,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591628326
    },
    {
        "content": "<p><code>clang -g</code> will do the trick</p>",
        "id": 200109463,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591628327
    },
    {
        "content": "<p>k, so -g</p>",
        "id": 200109492,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591628338
    },
    {
        "content": "<p>don't need --debug ?</p>",
        "id": 200109504,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591628345
    },
    {
        "content": "<p>you can drop optimization to <code>-O0</code> if you want too</p>",
        "id": 200109535,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591628356
    },
    {
        "content": "<p>/me never used <code>--debug</code></p>",
        "id": 200109635,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591628394
    },
    {
        "content": "<p>didn't actually have optimize on, but should for release build. thanks.</p>",
        "id": 200109893,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591628479
    },
    {
        "content": "<p>JIT can be configured to transform DWARF via <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/examples/fib-debug/main.c#L18\">https://github.com/bytecodealliance/wasmtime/blob/master/examples/fib-debug/main.c#L18</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/master/examples/fib-debug/main.c#L18\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/examples/fib-debug/main.c#L18\" title=\"bytecodealliance/wasmtime\">bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Standalone JIT-style runtime for WebAssembly, using Cranelift - bytecodealliance/wasmtime</div></div></div>",
        "id": 200110074,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591628525
    },
    {
        "content": "<p>, so you want :</p>\n<p>wasm_config_t* config = wasm_config_new();<br>\n  wasmtime_config_debug_info_set(config, true);</p>\n<p>... if we're running in debug mode.  on it.</p>",
        "id": 200110319,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591628622
    },
    {
        "content": "<p>you can also choose to not run JIT optimization via <code>wasmtime_config_cranelift_opt_level</code> (see <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/crates/c-api/include/wasmtime.h#L35\">https://github.com/bytecodealliance/wasmtime/blob/master/crates/c-api/include/wasmtime.h#L35</a>)</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/master/crates/c-api/include/wasmtime.h#L35\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/crates/c-api/include/wasmtime.h#L35\" title=\"bytecodealliance/wasmtime\">bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Standalone JIT-style runtime for WebAssembly, using Cranelift - bytecodealliance/wasmtime</div></div></div>",
        "id": 200110325,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591628624
    },
    {
        "content": "<p>lets keep it simple &amp; just get the debugger working first, then second pass tweaks if that's ok.</p>",
        "id": 200110475,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591628668
    },
    {
        "content": "<p>It is not really a \"debug mode\" but flag to compile debug info along with code (<code>wasmtime_config_debug_info_set</code> is)</p>",
        "id": 200110478,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591628669
    },
    {
        "content": "<p>well, its something that's only needed if we're debugging. or you suggest I always have this set ?</p>",
        "id": 200110575,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591628708
    },
    {
        "content": "<p>It will degrade to startup performance and memory consumption</p>",
        "id": 200110684,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591628758
    },
    {
        "content": "<p>I would pref it with environment at this moment</p>",
        "id": 200110859,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591628808
    },
    {
        "content": "<p>k, will do. thanks</p>",
        "id": 200110970,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591628850
    },
    {
        "content": "<p>/me is working on caching debug info with code at this moment</p>",
        "id": 200110990,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591628855
    },
    {
        "content": "<p>good to hear. I'll just be happy to have it running for now :)</p>",
        "id": 200111081,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591628888
    },
    {
        "content": "<p>if you using Linux, LLDB-10 or GDB will work without additional configuration</p>",
        "id": 200111311,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591628990
    },
    {
        "content": "<p>k, that's compiled in. let me grab my tea then lets see if its that simple (from user perspective)</p>",
        "id": 200111726,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591629143
    },
    {
        "content": "<p>example you provided called wasm_config_t* config = wasm_config_new();</p>\n<p>no matching delete. not sure significant but spotted that.</p>",
        "id": 200112965,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591629642
    },
    {
        "content": "<p><code>own wasm_engine_t* wasm_engine_new_with_config(own wasm_config_t*)</code> -- it is consumed/owned by engine now</p>",
        "id": 200113356,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591629797
    },
    {
        "content": "<p>k</p>",
        "id": 200113420,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591629821
    },
    {
        "content": "<p>ah that's what your weird own macro means :)</p>",
        "id": 200113533,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591629852
    },
    {
        "content": "<p>lldb has a python36.dll dependency. python 3.6 only available as source :)</p>",
        "id": 200115536,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591630522
    },
    {
        "content": "<p>if it needs it, llvm should include it in their bundle.</p>",
        "id": 200115568,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591630537
    },
    {
        "content": "<p>grumble :) if you have one, you're as trusted as anywhere else I'm likely to find it.</p>",
        "id": 200115686,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591630580
    },
    {
        "content": "<p>or I could just build it I guess.</p>",
        "id": 200115755,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591630623
    },
    {
        "content": "<p><a href=\"https://apt.llvm.org/\">https://apt.llvm.org/</a> ?</p>",
        "id": 200115918,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591630708
    },
    {
        "content": "<p>windows</p>",
        "id": 200115958,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591630737
    },
    {
        "content": "<p>alright... it is all in your hands from this moment</p>",
        "id": 200116050,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591630788
    },
    {
        "content": "<p>so, my next job is building python3.6 from source, which I wasn't expecting. we'll ship it with our stuff so all our users don't have to.</p>",
        "id": 200116156,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591630825
    },
    {
        "content": "<p>/me heard it works there, but never tried</p>",
        "id": 200116172,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591630833
    },
    {
        "content": "<p>yup. that part not your problem, but fyi. your stuff harder to use when a key component (in this case lldb) doesn't just work (tm)</p>",
        "id": 200116272,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591630892
    },
    {
        "content": "<p>is there something in vscode ?</p>",
        "id": 200116385,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591630930
    },
    {
        "content": "<p>dunno. doing lldb from command line for now.</p>",
        "id": 200116436,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591630956
    },
    {
        "content": "<p>building python should be easy, but we'll see.</p>",
        "id": 200116494,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591630980
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"297332\">@Steve Williams</span> did you try lldb-9 instead of lldb-10?</p>",
        "id": 200120439,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591632502
    }
]