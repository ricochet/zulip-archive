[
    {
        "content": "<p>Hello all! </p>\n<p>I'm trying to understand the tooling around the component model. I know rust has wasm-bindgen for a WIT file, but is there an equivalent for JS/TypeScript? Just something that will generate the skeleton based on a world definition. </p>\n<p>Thanks!</p>",
        "id": 435796926,
        "sender_full_name": "Scott Lyons",
        "timestamp": 1714260065
    },
    {
        "content": "<p>I am not an expert on js but I know that both Jco and componentize-js use a common library to do this. So I recommend looking at these projects.</p>",
        "id": 435835887,
        "sender_full_name": "Christof Petig",
        "timestamp": 1714284021
    },
    {
        "content": "<p>We recently added types generation to Jco via the <code>jco types</code> command, which can be pointed to any WIT world to generate its typescript bindings (see <code>jco types --help</code>). Generating JS boilerplate for creating or consuming a WIT could possibly improved further too, would be interested to hear any suggestions on that if you have.</p>",
        "id": 436095099,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1714409528
    }
]