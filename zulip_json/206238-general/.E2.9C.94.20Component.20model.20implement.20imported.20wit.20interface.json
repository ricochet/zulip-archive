[
    {
        "content": "<p>I want to use wit import in wasmtime host. I want to import an interface in my wit world. Then I want to impl the imported interface functions in the wasmtime host. So far I can only impl the world, but I want to impl the imported interface.</p>\n<p>I have seen this done with an exported interface in the guest component. It used syntax like: crate::exports::thing::Thing. I can't seem to get the same effect with the imports though.</p>",
        "id": 376482056,
        "sender_full_name": "Cole Nelms",
        "timestamp": 1689717767
    },
    {
        "content": "<p>here is someone else trying to do something similar : <a href=\"#narrow/stream/217126-wasmtime/topic/component.20Linker.20and.20instantiate\">https://bytecodealliance.zulipchat.com/#narrow/stream/217126-wasmtime/topic/component.20Linker.20and.20instantiate</a></p>",
        "id": 376742942,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1689787969
    },
    {
        "content": "<p>see if anything in there helps you, and if not please give more specifics on what you have done so far and what you are struggling with</p>",
        "id": 376743030,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1689787995
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"627912\">@Cole Nelms</span> Hello, I have an example of interface imports and exports in <a href=\"https://github.com/kajacx/wasm-playground/tree/wit-bindgen\">this repo</a>. Look at the <code>guest-rust</code> for the guest code - how to call the imported functions, and <code>runtime-rust-wasmtime</code> for how to define them in the host runtime.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/kajacx/wasm-playground/tree/wit-bindgen\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/19b57c1a290c199cc4527045adc55f69e2fcd59c\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f373332663666613332623362333837366566316563336539643936363036383338333562323364663761626665366265373036663031343764333261333739612f6b616a6163782f7761736d2d706c617967726f756e64)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/kajacx/wasm-playground/tree/wit-bindgen\" title=\"GitHub - kajacx/wasm-playground at wit-bindgen\">GitHub - kajacx/wasm-playground at wit-bindgen</a></div><div class=\"message_embed_description\">Various projects related to WASM, each in it's own branch, so that I don't have 50 repositories. - GitHub - kajacx/wasm-playground at wit-bindgen</div></div></div>",
        "id": 376924933,
        "sender_full_name": "Karel Hrkal (kajacx)",
        "timestamp": 1689849083
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"621586\">@Karel Hrkal (kajacx)</span> It worked thank you. I have a few questions though. Why does the host use <code>wasmtime-wit-bindgen</code>? I deleted it and it seemed to work fine. Also, do you happen to know how to use a wit <code>record</code> inside of a wit <code>interface</code> from rust? I noticed if its just defined in the world it is in the global scope in rust, but I wanted to know how to use it in an interface.</p>",
        "id": 377156834,
        "sender_full_name": "Cole Nelms",
        "timestamp": 1689906305
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"621586\">@Karel Hrkal (kajacx)</span> Disregard the interface type question I was able to get it working by having a function that takes the type.</p>",
        "id": 377177741,
        "sender_full_name": "Cole Nelms",
        "timestamp": 1689917111
    },
    {
        "content": "<p>\"Why does the host use wasmtime-wit-bindgen? I deleted it and it seemed to work fine.\" I was trying a few different things and forgot to delete it, thanks for the reminder. The <code>wit-component</code> dependency was also unused.</p>",
        "id": 377194369,
        "sender_full_name": "Karel Hrkal (kajacx)",
        "timestamp": 1689923227
    },
    {
        "content": "<p>That's good that you managed to get the types working. Did you do it like this? <a href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/WIT.md#interfaces-worlds-and-use\">https://github.com/WebAssembly/component-model/blob/main/design/mvp/WIT.md#interfaces-worlds-and-use</a> Or did you use some other method?</p>",
        "id": 377194908,
        "sender_full_name": "Karel Hrkal (kajacx)",
        "timestamp": 1689923388
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"621586\">@Karel Hrkal (kajacx)</span> I happened to actually be using <code>wit-component</code> so I didn't think to point that out.</p>\n<p>If the wit file is like this:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"n\">my</span>:<span class=\"nc\">example</span>\n\n<span class=\"n\">interface</span><span class=\"w\"> </span><span class=\"n\">imports</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"n\">record</span><span class=\"w\"> </span><span class=\"n\">my</span><span class=\"o\">-</span><span class=\"k\">type</span> <span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">active</span>: <span class=\"kt\">bool</span><span class=\"p\">,</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n<span class=\"w\">  </span><span class=\"kr\">do</span><span class=\"o\">-</span><span class=\"n\">stuff</span>: <span class=\"nc\">func</span><span class=\"p\">(</span><span class=\"n\">arg</span>: <span class=\"nc\">my</span><span class=\"o\">-</span><span class=\"k\">type</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">world</span><span class=\"w\"> </span><span class=\"n\">my</span><span class=\"o\">-</span><span class=\"n\">world</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">imports</span>\n<span class=\"w\">  </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"nc\">func</span><span class=\"p\">()</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>Then in both the rust host and guest I can use the <code>my::example::imports::MyType</code> type.</p>\n<p>However, if the wit file looks like this:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"n\">my</span>:<span class=\"nc\">example</span>\n\n<span class=\"n\">interface</span><span class=\"w\"> </span><span class=\"n\">imports</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"n\">record</span><span class=\"w\"> </span><span class=\"n\">my</span><span class=\"o\">-</span><span class=\"k\">type</span> <span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">active</span>: <span class=\"kt\">bool</span><span class=\"p\">,</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">world</span><span class=\"w\"> </span><span class=\"n\">my</span><span class=\"o\">-</span><span class=\"n\">world</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">imports</span>\n<span class=\"w\">  </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"nc\">func</span><span class=\"p\">()</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>Then I can no longer use the <code>my::example::imports::MyType</code> type. It seems that the <code>interface</code> needs a function that takes the type in order to import the type.</p>",
        "id": 377418005,
        "sender_full_name": "Cole Nelms",
        "timestamp": 1689970458
    },
    {
        "content": "<p><code>import</code> doesn't \"import\" the types in the interface, it specifies that the host will have to implemented the functions in the \"imported\" interface.</p>\n<p>You can \"include\" a type from an interface with <code>use</code>:</p>\n<div class=\"codehilite\" data-code-language=\"wit\"><pre><span></span><code>package example:protocol\n\ninterface types {\n  record point {\n    x: s32,\n    y: s32,\n  }\n}\n\nworld my-world {\n  use types.{point}\n\n  import import-point: func(pnt: point) -&gt; point\n  export move-point: func(pnt: point) -&gt; point\n\n  import print: func(msg: string)\n  // Say \"Hello\" to stdout, use with wasi\n  export say-hello: func()\n}\n</code></pre></div>\n<p>However, you will have to add an \"empty impl\" on the host, I am not sure why:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">example</span>::<span class=\"n\">protocol</span>::<span class=\"n\">types</span>::<span class=\"n\">Host</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">State</span><span class=\"w\"> </span><span class=\"p\">{}</span>\n</code></pre></div>",
        "id": 377507227,
        "sender_full_name": "Karel Hrkal (kajacx)",
        "timestamp": 1690010658
    },
    {
        "content": "<p>this is a bug in wasmtime's wit-bindgen at the moment, it emits an trait and requires it in the linker constraints for your world for every interface in the worlds imports, even if the interface contains no functions. nobody has taken the time to fix this bug, but if youd like to work on it, it should be pretty straightforward</p>",
        "id": 377975731,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1690168586
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"253992\">@Pat Hickey</span>  and <span class=\"user-mention\" data-user-id=\"621586\">@Karel Hrkal (kajacx)</span>. This can be marked as solved.</p>",
        "id": 379358596,
        "sender_full_name": "Cole Nelms",
        "timestamp": 1690519710
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"421591\">Bailey Hayes</span> has marked this topic as resolved.</p>",
        "id": 379647313,
        "sender_full_name": "Notification Bot",
        "timestamp": 1690582592
    }
]