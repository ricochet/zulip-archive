[
    {
        "content": "<p>Hi everyone! Before asking for help, I would really like to express my appreciation for all the hard work y'all are doing. Thank you!</p>\n<p>I am trying to run a very simple (vanilla) Rust host/guest component, both Host and Guest compile, but my problem is when I try to <code>instantiate()</code> my default world named <code>transformer</code>, the following line returns <code>None</code></p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">bindings</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Transformer</span>::<span class=\"n\">instantiate</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">component</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">linker</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n</code></pre></div>\n<p>I am guessing that I am generating something wrong in the guest lib/code or, I might be running the <code>wasm-tools</code> incorrectly.</p>\n<p>My wit file looks like this:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">default</span><span class=\"w\"> </span><span class=\"n\">world</span><span class=\"w\"> </span><span class=\"n\">transformer</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"n\">payload</span>: <span class=\"nc\">func</span><span class=\"p\">(</span><span class=\"n\">name</span>: <span class=\"nc\">string</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">string</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>And my component code in <code>src/lib.rs</code> looks like:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wit_bindgen</span>::<span class=\"n\">generate</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">\"transformer\"</span><span class=\"p\">);</span>\n\n<span class=\"k\">struct</span> <span class=\"nc\">MyTransformer</span><span class=\"p\">;</span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">Transformer</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">MyTransformer</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">payload</span><span class=\"p\">(</span><span class=\"n\">name</span>: <span class=\"nb\">String</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">String</span> <span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"running transformer\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"fm\">format!</span><span class=\"p\">(</span><span class=\"s\">\"payload {}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">name</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">export_transformer</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">MyTransformer</span><span class=\"p\">);</span>\n</code></pre></div>\n<p>I will try to upload everything to a git repo but I thought I would start here and see if anyone is around to guide me. Thanks again :)</p>",
        "id": 358585152,
        "sender_full_name": "Salim Afiune Maya",
        "timestamp": 1684191090
    },
    {
        "content": "<p>I also ran the validate command inside the <code>wasm-tools</code> and it seems valid:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"o\">-</span><span class=\"n\">tools</span><span class=\"w\"> </span><span class=\"n\">validate</span><span class=\"w\"> </span><span class=\"n\">transformer</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">features</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"o\">-</span><span class=\"n\">model</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">vv</span>\n<span class=\"p\">[</span><span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">05</span><span class=\"o\">-</span><span class=\"mi\">15</span><span class=\"n\">T23</span>:<span class=\"mi\">00</span>:<span class=\"mi\">44</span><span class=\"n\">Z</span><span class=\"w\"> </span><span class=\"n\">INFO</span><span class=\"w\"> </span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"n\">structure</span><span class=\"w\"> </span><span class=\"n\">validated</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mf\">449.331</span><span class=\"err\">µ</span><span class=\"n\">s</span>\n<span class=\"p\">[</span><span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">05</span><span class=\"o\">-</span><span class=\"mi\">15</span><span class=\"n\">T23</span>:<span class=\"mi\">00</span>:<span class=\"mi\">44</span><span class=\"n\">Z</span><span class=\"w\"> </span><span class=\"n\">INFO</span><span class=\"w\"> </span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">functions</span><span class=\"w\"> </span><span class=\"n\">validated</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mf\">891.386</span><span class=\"err\">µ</span><span class=\"n\">s</span>\n</code></pre></div>\n<p>But as I mentioned, when loading the component from the Host via the <code>instantiate()</code> func, I get back <code>None</code>.  <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 358586707,
        "sender_full_name": "Salim Afiune Maya",
        "timestamp": 1684191798
    },
    {
        "content": "<p>The host code looks like this (very vanilla):</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Config</span>::<span class=\"n\">new</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">wasm_component_model</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Engine</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">config</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Component</span>::<span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"./transformer.wasm\"</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Linker</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"Creating Store\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Store</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">());</span>\n\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"Binding Transformer\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">bindings</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Transformer</span>::<span class=\"n\">instantiate</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">component</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">linker</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"Calling Transformer payload()\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">response</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">bindings</span><span class=\"p\">.</span><span class=\"n\">call_payload</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"{}\"</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"{}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">response</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n</code></pre></div>",
        "id": 358586988,
        "sender_full_name": "Salim Afiune Maya",
        "timestamp": 1684191934
    },
    {
        "content": "<p>Did a bit more troubleshooting and got the error coming from the <code>instantiate()</code> func:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">streams</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">wrong</span><span class=\"w\"> </span><span class=\"k\">type</span>\n\n<span class=\"nc\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"mi\">0</span>: <span class=\"nc\">instance</span><span class=\"w\"> </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">drop</span><span class=\"o\">-</span><span class=\"n\">input</span><span class=\"o\">-</span><span class=\"n\">stream</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">wrong</span><span class=\"w\"> </span><span class=\"k\">type</span>\n    <span class=\"mi\">1</span>: <span class=\"nc\">expected</span><span class=\"w\"> </span><span class=\"n\">func</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"n\">nothing</span>\n</code></pre></div>\n<p>I am guessing that my component has some extra imports that I didn't define but the framework adds:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"o\">-</span><span class=\"n\">tools</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"w\"> </span><span class=\"n\">transformer</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n\n<span class=\"w\">             </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">suppressed</span><span class=\"w\"> </span><span class=\"n\">output</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.</span>\n\n<span class=\"n\">default</span><span class=\"w\"> </span><span class=\"n\">world</span><span class=\"w\"> </span><span class=\"n\">transformer</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">streams</span>: <span class=\"nc\">self</span><span class=\"p\">.</span><span class=\"n\">streams</span>\n<span class=\"w\">  </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">filesystem</span>: <span class=\"nc\">self</span><span class=\"p\">.</span><span class=\"n\">filesystem</span>\n<span class=\"w\">  </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">environment</span>: <span class=\"nc\">self</span><span class=\"p\">.</span><span class=\"n\">environment</span>\n<span class=\"w\">  </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">preopens</span>: <span class=\"nc\">self</span><span class=\"p\">.</span><span class=\"n\">preopens</span>\n<span class=\"w\">  </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">exit</span>: <span class=\"nc\">self</span><span class=\"p\">.</span><span class=\"n\">exit</span>\n<span class=\"w\">  </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"n\">payload</span>: <span class=\"nc\">func</span><span class=\"p\">(</span><span class=\"n\">name</span>: <span class=\"nc\">string</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">string</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>I wonder how can I disable them? <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 358751939,
        "sender_full_name": "Salim Afiune Maya",
        "timestamp": 1684247583
    },
    {
        "content": "<p>Which rust target did you compile the wasm module for?</p>",
        "id": 358752419,
        "sender_full_name": "bjorn3",
        "timestamp": 1684247675
    },
    {
        "content": "<p>For <code>wasm32-wasi</code>, I used <code>cargo build --target wasm32-wasi</code>.</p>",
        "id": 358754786,
        "sender_full_name": "Salim Afiune Maya",
        "timestamp": 1684248164
    },
    {
        "content": "<p>I followed the instructions at <a href=\"https://github.com/bytecodealliance/wit-bindgen/tree/main#guest-rust\">https://github.com/bytecodealliance/wit-bindgen/tree/main#guest-rust</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wit-bindgen/tree/main#guest-rust\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/2c68f1b0a8548f6783c67309a083bc0cd653493d\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f663938386464396131373738653430663264616630373431326232373731646131303233313032363039336463666339333862356263336462353535376532352f62797465636f6465616c6c69616e63652f7769742d62696e6467656e)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wit-bindgen/tree/main#guest-rust\" title=\"GitHub - bytecodealliance/wit-bindgen: A language binding generator for WebAssembly interface types\">GitHub - bytecodealliance/wit-bindgen: A language binding generator for WebAssembly interface types</a></div><div class=\"message_embed_description\">A language binding generator for WebAssembly interface types - GitHub - bytecodealliance/wit-bindgen: A language binding generator for WebAssembly interface types</div></div></div>",
        "id": 358755022,
        "sender_full_name": "Salim Afiune Maya",
        "timestamp": 1684248211
    },
    {
        "content": "<p>That will pull in the entirety of wasi-libc. Also because you used <code>println!()</code>, the streams and stdio parts of wasi are required to handle printing to stdout. This means that you have to add a wasi-preview2 implementation to the linker to satisfy the imports.</p>",
        "id": 358757442,
        "sender_full_name": "bjorn3",
        "timestamp": 1684248727
    },
    {
        "content": "<p>See <a href=\"https://github.com/bytecodealliance/preview2-prototyping\">https://github.com/bytecodealliance/preview2-prototyping</a> for the official wasmtime implementation of wasi-preview2.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/preview2-prototyping\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/48cb51c8defa24a9c78e95a40142806d085a7191\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f306162663631633538656338373366353562303233383730643035383537366436376465313934643762386335393266316662643533386262323963393031632f62797465636f6465616c6c69616e63652f70726576696577322d70726f746f747970696e67)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/preview2-prototyping\" title=\"GitHub - bytecodealliance/preview2-prototyping: Polyfill adapter for preview1-using wasm modules to call preview2 functions.\">GitHub - bytecodealliance/preview2-prototyping: Polyfill adapter for preview1-using wasm modules to call preview2 functions.</a></div><div class=\"message_embed_description\">Polyfill adapter for preview1-using wasm modules to call preview2 functions. - GitHub - bytecodealliance/preview2-prototyping: Polyfill adapter for preview1-using wasm modules to call preview2 func...</div></div></div>",
        "id": 358757622,
        "sender_full_name": "bjorn3",
        "timestamp": 1684248767
    },
    {
        "content": "<p>I used that adapter via:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"o\">-</span><span class=\"n\">tools</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"w\"> </span><span class=\"n\">new</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">wit_rust</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">transformer</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">adapt</span><span class=\"w\"> </span><span class=\"n\">wasi_snapshot_preview1</span><span class=\"o\">=</span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">adapters</span><span class=\"o\">/</span><span class=\"n\">wasi_preview1_component_adapter</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">vv</span>\n</code></pre></div>\n<p>Should I do something else on the Host?</p>",
        "id": 358764894,
        "sender_full_name": "Salim Afiune Maya",
        "timestamp": 1684250058
    },
    {
        "content": "<p>That wrapper implements wasi-preview1 (which isn't compatible with wasm components) in terms of wasi-preview2 (which is). It still requires the host to implement wasi-preview2.</p>",
        "id": 358765905,
        "sender_full_name": "bjorn3",
        "timestamp": 1684250252
    },
    {
        "content": "<p>I think the wasi-common dir of <a href=\"https://github.com/bytecodealliance/preview2-prototyping\">https://github.com/bytecodealliance/preview2-prototyping</a> has a wasi-preview2 impl.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/preview2-prototyping\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/48cb51c8defa24a9c78e95a40142806d085a7191\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f306162663631633538656338373366353562303233383730643035383537366436376465313934643762386335393266316662643533386262323963393031632f62797465636f6465616c6c69616e63652f70726576696577322d70726f746f747970696e67)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/preview2-prototyping\" title=\"GitHub - bytecodealliance/preview2-prototyping: Polyfill adapter for preview1-using wasm modules to call preview2 functions.\">GitHub - bytecodealliance/preview2-prototyping: Polyfill adapter for preview1-using wasm modules to call preview2 functions.</a></div><div class=\"message_embed_description\">Polyfill adapter for preview1-using wasm modules to call preview2 functions. - GitHub - bytecodealliance/preview2-prototyping: Polyfill adapter for preview1-using wasm modules to call preview2 func...</div></div></div>",
        "id": 358766622,
        "sender_full_name": "bjorn3",
        "timestamp": 1684250413
    },
    {
        "content": "<p>See also <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6370\">https://github.com/bytecodealliance/wasmtime/issues/6370</a> for adding wasi-preview2 support directly to wasmtime.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/issues/6370\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/b702676b9a3d74d37798edc3f5b33772df7c650f\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f313838373235343664363262366534363235393462333733333737613035343662396163353838643433663834313433636335666631363061303031303635392f62797465636f6465616c6c69616e63652f7761736d74696d652f6973737565732f36333730)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/issues/6370\" title=\"Land WASI Preview 2 support into Wasmtime · Issue #6370 · bytecodealliance/wasmtime\">Land WASI Preview 2 support into Wasmtime · Issue #6370 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">We have been working on a prototype of what WASI Preview 2 support will look like in Wasmtime for 7 months now! https://github.com/bytecodealliance/preview2-prototyping/ The work is not yet totally...</div></div></div>",
        "id": 358766742,
        "sender_full_name": "bjorn3",
        "timestamp": 1684250451
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"264278\">@bjorn3</span> thank you so much for your responses, I really appreciate them. </p>\n<p>Is there any way I can us preview1 on both, Host and Guest?</p>",
        "id": 358823819,
        "sender_full_name": "Salim Afiune Maya",
        "timestamp": 1684263490
    },
    {
        "content": "<p>wasi-preview1 is not compatible with wasm components, so no I don't think you can.</p>",
        "id": 358824023,
        "sender_full_name": "bjorn3",
        "timestamp": 1684263557
    },
    {
        "content": "<p>Alright so I am pretty much stuck until <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6370\">https://github.com/bytecodealliance/wasmtime/issues/6370</a> is solved. There is no other way to start using the new wasm component model on a Host/Guest setup. Right?  <span aria-label=\"sob\" class=\"emoji emoji-1f62d\" role=\"img\" title=\"sob\">:sob:</span></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/issues/6370\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/b702676b9a3d74d37798edc3f5b33772df7c650f\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f313838373235343664363262366534363235393462333733333737613035343662396163353838643433663834313433636335666631363061303031303635392f62797465636f6465616c6c69616e63652f7761736d74696d652f6973737565732f36333730)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/issues/6370\" title=\"Land WASI Preview 2 support into Wasmtime · Issue #6370 · bytecodealliance/wasmtime\">Land WASI Preview 2 support into Wasmtime · Issue #6370 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">We have been working on a prototype of what WASI Preview 2 support will look like in Wasmtime for 7 months now! https://github.com/bytecodealliance/preview2-prototyping/ The work is not yet totally...</div></div></div>",
        "id": 358826481,
        "sender_full_name": "Salim Afiune Maya",
        "timestamp": 1684264292
    },
    {
        "content": "<p>The wasi-common crate at <a href=\"https://github.com/bytecodealliance/preview2-prototyping\">https://github.com/bytecodealliance/preview2-prototyping</a> should allow using wasi-preview2 using <code>wasi_common::wasi::command::add_to_linker(&amp;mut linker)?;</code> after you implemented the <code>WasiView</code> trait on the data you stored in the <code>Store</code>. For example <a href=\"https://github.com/bytecodealliance/preview2-prototyping/blob/5be99d645c177198b9f5e4d76561669796f7b379/host/src/main.rs#L91-L138\">https://github.com/bytecodealliance/preview2-prototyping/blob/5be99d645c177198b9f5e4d76561669796f7b379/host/src/main.rs#L91-L138</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/preview2-prototyping\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/48cb51c8defa24a9c78e95a40142806d085a7191\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f306162663631633538656338373366353562303233383730643035383537366436376465313934643762386335393266316662643533386262323963393031632f62797465636f6465616c6c69616e63652f70726576696577322d70726f746f747970696e67)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/preview2-prototyping\" title=\"GitHub - bytecodealliance/preview2-prototyping: Polyfill adapter for preview1-using wasm modules to call preview2 functions.\">GitHub - bytecodealliance/preview2-prototyping: Polyfill adapter for preview1-using wasm modules to call preview2 functions.</a></div><div class=\"message_embed_description\">Polyfill adapter for preview1-using wasm modules to call preview2 functions. - GitHub - bytecodealliance/preview2-prototyping: Polyfill adapter for preview1-using wasm modules to call preview2 func...</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/preview2-prototyping/blob/5be99d645c177198b9f5e4d76561669796f7b379/host/src/main.rs#L91-L138\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/48cb51c8defa24a9c78e95a40142806d085a7191\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f306162663631633538656338373366353562303233383730643035383537366436376465313934643762386335393266316662643533386262323963393031632f62797465636f6465616c6c69616e63652f70726576696577322d70726f746f747970696e67)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/preview2-prototyping/blob/5be99d645c177198b9f5e4d76561669796f7b379/host/src/main.rs#L91-L138\" title=\"preview2-prototyping/main.rs at 5be99d645c177198b9f5e4d76561669796f7b379 · bytecodealliance/preview2-prototyping\">preview2-prototyping/main.rs at 5be99d645c177198b9f5e4d76561669796f7b379 · bytecodealliance/preview2-prototyping</a></div><div class=\"message_embed_description\">Polyfill adapter for preview1-using wasm modules to call preview2 functions. - preview2-prototyping/main.rs at 5be99d645c177198b9f5e4d76561669796f7b379 · bytecodealliance/preview2-prototyping</div></div></div>",
        "id": 358827529,
        "sender_full_name": "bjorn3",
        "timestamp": 1684264574
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"264278\">@bjorn3</span> It worked! <span aria-label=\"raised hands\" class=\"emoji emoji-1f64c\" role=\"img\" title=\"raised hands\">:raised_hands:</span>🏽🤩</p>\n<p><a href=\"/user_uploads/15107/00n8xoNFeiy_tGBRpul0uLVs/Screen-Shot-2023-05-17-at-3.35.44-PM.png\">Screen-Shot-2023-05-17-at-3.35.44-PM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/15107/00n8xoNFeiy_tGBRpul0uLVs/Screen-Shot-2023-05-17-at-3.35.44-PM.png\" title=\"Screen-Shot-2023-05-17-at-3.35.44-PM.png\"><img src=\"/user_uploads/15107/00n8xoNFeiy_tGBRpul0uLVs/Screen-Shot-2023-05-17-at-3.35.44-PM.png\"></a></div>",
        "id": 359094173,
        "sender_full_name": "Salim Afiune Maya",
        "timestamp": 1684363015
    },
    {
        "content": "<p>Thank you so much!!</p>",
        "id": 359094230,
        "sender_full_name": "Salim Afiune Maya",
        "timestamp": 1684363047
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"617576\">Salim Afiune Maya</span> has marked this topic as resolved.</p>",
        "id": 359095319,
        "sender_full_name": "Notification Bot",
        "timestamp": 1684363569
    }
]