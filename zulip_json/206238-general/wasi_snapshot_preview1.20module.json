[
    {
        "content": "<p>I'm using <code>wasm-tools component new</code> to convert my wasm module to a component, but I need to pass it the <code>wasi_snapshot_preview1</code> adapter.<br>\nI've previously been using the crate in wit-bindgen &lt;<a href=\"https://github.com/bytecodealliance/wit-bindgen/tree/main/crates/wasi_snapshot_preview1\">https://github.com/bytecodealliance/wit-bindgen/tree/main/crates/wasi_snapshot_preview1</a>&gt;... but this doesn't have an export for <code>random_get</code>.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wit-bindgen/tree/main/crates/wasi_snapshot_preview1\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/36a34fc0a21b979776425b9fbbd3317ba6dc9abc\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f663432383762363339306366633861653734346665366231383837646639336462663963333661623432313538393064386136383937333034366264626332302f62797465636f6465616c6c69616e63652f7769742d62696e6467656e)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wit-bindgen/tree/main/crates/wasi_snapshot_preview1\" title=\"wit-bindgen/crates/wasi_snapshot_preview1 at main · bytecodealliance/wit-bindgen\">wit-bindgen/crates/wasi_snapshot_preview1 at main · bytecodealliance/wit-bindgen</a></div><div class=\"message_embed_description\">A language binding generator for WebAssembly interface types - wit-bindgen/crates/wasi_snapshot_preview1 at main · bytecodealliance/wit-bindgen</div></div></div>",
        "id": 314075458,
        "sender_full_name": "Ari Seyhun",
        "timestamp": 1670258465
    },
    {
        "content": "<p>I am trying to build <a href=\"https://github.com/bytecodealliance/wasi\">https://github.com/bytecodealliance/wasi</a>, but running cargo wasi build doesn't seem to produce any wasm file</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasi\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/e89d56fe883310c9178c136e10fa8e1a7c128ae0\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f373137663834323933616561336239343235396138373734613033373062613866333835623065376633623036316138383462313538646535636264623933322f62797465636f6465616c6c69616e63652f77617369)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasi\" title=\"GitHub - bytecodealliance/wasi: Experimental WASI API bindings for Rust\">GitHub - bytecodealliance/wasi: Experimental WASI API bindings for Rust</a></div><div class=\"message_embed_description\">Experimental WASI API bindings for Rust. Contribute to bytecodealliance/wasi development by creating an account on GitHub.</div></div></div>",
        "id": 314075533,
        "sender_full_name": "Ari Seyhun",
        "timestamp": 1670258490
    },
    {
        "content": "<p>We're working on a full-fledged adapter with all the features at <a href=\"https://github.com/bytecodealliance/preview2-prototyping\">https://github.com/bytecodealliance/preview2-prototyping</a> which you should be able to use for now (and has <code>random_get</code> implemented)</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/preview2-prototyping\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/9dd544f96fba89189546b2650beabd3ab3b4ed1c\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f353032363431643766363930363937656636303738653234306164303031653634643465656162316535396365356564663230303364666431313565633462372f62797465636f6465616c6c69616e63652f70726576696577322d70726f746f747970696e67)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/preview2-prototyping\" title=\"GitHub - bytecodealliance/preview2-prototyping: Polyfill adapter for preview1-using wasm modules to call preview2 functions.\">GitHub - bytecodealliance/preview2-prototyping: Polyfill adapter for preview1-using wasm modules to call preview2 functions.</a></div><div class=\"message_embed_description\">Polyfill adapter for preview1-using wasm modules to call preview2 functions. - GitHub - bytecodealliance/preview2-prototyping: Polyfill adapter for preview1-using wasm modules to call preview2 func...</div></div></div>",
        "id": 314076520,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1670258756
    },
    {
        "content": "<p>Note though that we haven't done a ton of testing and the implementation is still in the works so there may be some bugs, but this is intended to be the eventual \"official adapter\" which may even be baked into <code>wasm-tools</code></p>",
        "id": 314076658,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1670258785
    },
    {
        "content": "<p>Perfect, it'll do for now!</p>",
        "id": 314076836,
        "sender_full_name": "Ari Seyhun",
        "timestamp": 1670258835
    },
    {
        "content": "<p>Note that I also added a <a href=\"https://github.com/bytecodealliance/preview2-prototyping/releases/tag/latest\">precompiled binary release</a> to that repo which you can download to avoid building yourself</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/preview2-prototyping/releases/tag/latest\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/bece216920457c2eb98390e19018f3b0102b96cb\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f386631386363313233633236633737373134663334616365393936383761633365326230613931333231383431323263323330613565373831623033373866372f62797465636f6465616c6c69616e63652f70726576696577322d70726f746f747970696e672f72656c65617365732f7461672f6c6174657374)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/preview2-prototyping/releases/tag/latest\" title=\"Release Latest Build · bytecodealliance/preview2-prototyping\">Release Latest Build · bytecodealliance/preview2-prototyping</a></div><div class=\"message_embed_description\">Polyfill adapter for preview1-using wasm modules to call preview2 functions. - Release Latest Build · bytecodealliance/preview2-prototyping</div></div></div>",
        "id": 314077485,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1670259008
    },
    {
        "content": "<p>Hmm when running the command <code>wasm-tools component new</code> I am getting an error now:</p>",
        "id": 314079400,
        "sender_full_name": "Ari Seyhun",
        "timestamp": 1670259562
    },
    {
        "content": "<p>I've pulled down the latest from wasm-tools and rebuilt it, so that should be up to date</p>",
        "id": 314079623,
        "sender_full_name": "Ari Seyhun",
        "timestamp": 1670259615
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"err\">❯</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"o\">-</span><span class=\"n\">tools</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"w\"> </span><span class=\"n\">new</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">counter</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">adapt</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">wasi_snapshot_preview1</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">counter</span><span class=\"p\">.</span><span class=\"n\">component</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n<span class=\"n\">Error</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">encode</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"w\"> </span><span class=\"n\">from</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"></span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"mi\">0</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">validate</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"w\"> </span><span class=\"n\">output</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"mi\">1</span>: <span class=\"nc\">core</span><span class=\"w\"> </span><span class=\"n\">instance</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">no</span><span class=\"w\"> </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"n\">named</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">_start</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"w\"> </span><span class=\"mh\">0x21cbad</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 314079695,
        "sender_full_name": "Ari Seyhun",
        "timestamp": 1670259631
    },
    {
        "content": "<p>ah you may need to comment out the <code>command</code> in the <code>*.wit</code> for now if you're not using that</p>",
        "id": 314080604,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1670259852
    },
    {
        "content": "<p>this makes me think we probably need two separate adapters though</p>",
        "id": 314080655,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1670259869
    },
    {
        "content": "<p>I've tried commenting out the <code>interface command { … }</code> and <code>default export command</code> in the wasi.wit file, and built it with</p>\n<blockquote>\n<p><code>RUSTFLAGS=\"-Clink-args=--import-memory -Clink-args=-zstack-size=0\" cargo build --release --target=wasm32-unknown-unknown</code></p>\n</blockquote>\n<p>And building the component with <code>wasm-tools component new</code> worked without errors, but I get an error in wasmtime:</p>\n<blockquote>\n<p>failed to instantiate module</p>\n</blockquote>",
        "id": 314085412,
        "sender_full_name": "Ari Seyhun",
        "timestamp": 1670261224
    },
    {
        "content": "<p>is there more to the error message?</p>",
        "id": 314086809,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1670261603
    },
    {
        "content": "<p>Ah sorry I just put the error through <code>dbg!</code> and got more info:</p>\n<blockquote>\n<p>import <code>wasi-filesystem</code> not defined</p>\n</blockquote>",
        "id": 314087025,
        "sender_full_name": "Ari Seyhun",
        "timestamp": 1670261681
    },
    {
        "content": "<p>ah yeah you'll need to define the host functions in the <code>component::Linker</code>, and this is where the works isn't finished yet but you can find a bit of a demo in the <code>host</code> folder</p>",
        "id": 314087633,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1670261908
    },
    {
        "content": "<p>the theory is to use <code>*.wit</code> to generate host bindings which you implement for your host</p>",
        "id": 314087674,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1670261924
    },
    {
        "content": "<p>or, for wasi, you'd use the stock implementation provided with wasmtime</p>",
        "id": 314087702,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1670261938
    },
    {
        "content": "<p>So what I've tried is to import <code>host</code> into my crate directly, and call the <code>add_to_linker</code> function. I believe this is correct. The only issue now is that the <code>getrandom</code> implementation is <code>todo!()</code><br>\n<a href=\"https://github.com/bytecodealliance/preview2-prototyping/blob/main/host/src/random.rs#L6\">https://github.com/bytecodealliance/preview2-prototyping/blob/main/host/src/random.rs#L6</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/preview2-prototyping/blob/main/host/src/random.rs#L6\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/4d75f24c7e3a6aff4eb3adbb0dbadfe142f97b39\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f613335313261373131613036636436333736653530393033386566386339663466393266316236353436336333626439626534373532396134653437353330312f62797465636f6465616c6c69616e63652f70726576696577322d70726f746f747970696e67)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/preview2-prototyping/blob/main/host/src/random.rs#L6\" title=\"preview2-prototyping/random.rs at main · bytecodealliance/preview2-prototyping\">preview2-prototyping/random.rs at main · bytecodealliance/preview2-prototyping</a></div><div class=\"message_embed_description\">Polyfill adapter for preview1-using wasm modules to call preview2 functions. - preview2-prototyping/random.rs at main · bytecodealliance/preview2-prototyping</div></div></div>",
        "id": 314091754,
        "sender_full_name": "Ari Seyhun",
        "timestamp": 1670263197
    },
    {
        "content": "<p>heh indeed! As you can see it's earning its name of \"prototyping\" in the repo name</p>",
        "id": 314092025,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1670263260
    },
    {
        "content": "<p>Awesome, I can hopefully get through it all from here filling in any todos as neeeded. I'm just not too familiar with the wasi_snapshot_preview1 spec.<br>\nI assume <code>getrandom(&amp;mut self, len: u32) -&gt; anyhow::Result&lt;Vec&lt;u8&gt;&gt;</code> should just return <code>len</code> random bytes?</p>",
        "id": 314092439,
        "sender_full_name": "Ari Seyhun",
        "timestamp": 1670263362
    },
    {
        "content": "<p><code>Ok((&amp;mut self.rng).sample_iter(Standard).take(len).collect())</code></p>",
        "id": 314092914,
        "sender_full_name": "Ari Seyhun",
        "timestamp": 1670263517
    },
    {
        "content": "<p>indeed!</p>",
        "id": 314093068,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1670263560
    },
    {
        "content": "<p>And this is where the WASI APIs are being iterated on sort of live here as well, there's not a strict specification for WASI yet for a <code>*.wit</code>-defined WASI</p>",
        "id": 314093195,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1670263585
    },
    {
        "content": "<p>perfect, it all works now ! Thanks for the help</p>",
        "id": 314094201,
        "sender_full_name": "Ari Seyhun",
        "timestamp": 1670263895
    },
    {
        "content": "<p>I've updated the builds so now there's a <code>wasi_snapshot_preview1.wasm</code> which doesn't export <code>command</code> and there's a <code>wasi_snapshot_preview1.command.wasm</code> which does export a command</p>",
        "id": 314492950,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1670428569
    },
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span> </p>\n<p>I've also been trying to use the host bindings from the preview2-prototyping repo. Weirdly, my component doesn't seem to ever call the <code>wasi-logging/log</code> or the <code>wasi-filesystem/pwrite</code> functions, even after compiling to <code>wasm32-wasi</code>, including a <code>println!</code>, and making sure that the component was created using the <code>wasi_snapshot_preview1.wasm</code> adapter module.</p>\n<p>Any ideas why this would be the case? I would definitely think that <em>something</em> would print out given that if I don't <code>add_to_linker</code>, then my module won't instantiate because of unsatisfied imports...</p>",
        "id": 314545882,
        "sender_full_name": "Amit Prasad",
        "timestamp": 1670442848
    },
    {
        "content": "<p>Can you share the core wasm or the component that you're working with?</p>",
        "id": 314545979,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1670442895
    },
    {
        "content": "<p>sure:<br>\nSource Code:<br>\n<a href=\"https://github.com/AmitPr/wasm-component-serverless/blob/wasi/crates/guest/src/lib.rs\">https://github.com/AmitPr/wasm-component-serverless/blob/wasi/crates/guest/src/lib.rs</a><br>\nCompiled WASM (after passing it through wasm-tools):<br>\n<a href=\"https://github.com/AmitPr/wasm-component-serverless/tree/wasi/wasm\">https://github.com/AmitPr/wasm-component-serverless/tree/wasi/wasm</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/AmitPr/wasm-component-serverless/blob/wasi/crates/guest/src/lib.rs\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/cf635e66b2bca49f37d3c67f16a4b04982d60dfa\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f663231663339613561333238656336393438376435636536373035653337663038303939383962633938633162376663363032383033653864623234323364352f416d697450722f7761736d2d636f6d706f6e656e742d7365727665726c657373)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/AmitPr/wasm-component-serverless/blob/wasi/crates/guest/src/lib.rs\" title=\"wasm-component-serverless/lib.rs at wasi · AmitPr/wasm-component-serverless\">wasm-component-serverless/lib.rs at wasi · AmitPr/wasm-component-serverless</a></div><div class=\"message_embed_description\">Contribute to AmitPr/wasm-component-serverless development by creating an account on GitHub.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/AmitPr/wasm-component-serverless/tree/wasi/wasm\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/cf635e66b2bca49f37d3c67f16a4b04982d60dfa\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f663231663339613561333238656336393438376435636536373035653337663038303939383962633938633162376663363032383033653864623234323364352f416d697450722f7761736d2d636f6d706f6e656e742d7365727665726c657373)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/AmitPr/wasm-component-serverless/tree/wasi/wasm\" title=\"wasm-component-serverless/wasm at wasi · AmitPr/wasm-component-serverless\">wasm-component-serverless/wasm at wasi · AmitPr/wasm-component-serverless</a></div><div class=\"message_embed_description\">Contribute to AmitPr/wasm-component-serverless development by creating an account on GitHub.</div></div></div>",
        "id": 314546351,
        "sender_full_name": "Amit Prasad",
        "timestamp": 1670443042
    },
    {
        "content": "<p>I transpiled to WAT and manually traced the function executions.. Looks like it should call the imported <code>pwrite</code> or <code>log</code></p>",
        "id": 314546495,
        "sender_full_name": "Amit Prasad",
        "timestamp": 1670443094
    },
    {
        "content": "<p>I have a copy of the host bindings in the crates subfolder of that repository. It's pretty much identical to what's in the <code>preview2-prototyping</code> repo</p>",
        "id": 314546654,
        "sender_full_name": "Amit Prasad",
        "timestamp": 1670443145
    },
    {
        "content": "<p><a href=\"https://github.com/AmitPr/wasm-component-serverless/blob/wasi/crates/wasi/src/lib.rs#L10-L17\">https://github.com/AmitPr/wasm-component-serverless/blob/wasi/crates/wasi/src/lib.rs#L10-L17</a></p>\n<p>Could this change to <code>wasmtime::component::bindgen!</code> somehow be screwing something up? Everything looks like it checks out to me, but I could be wrong.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/AmitPr/wasm-component-serverless/blob/wasi/crates/wasi/src/lib.rs#L10-L17\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/cf635e66b2bca49f37d3c67f16a4b04982d60dfa\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f663231663339613561333238656336393438376435636536373035653337663038303939383962633938633162376663363032383033653864623234323364352f416d697450722f7761736d2d636f6d706f6e656e742d7365727665726c657373)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/AmitPr/wasm-component-serverless/blob/wasi/crates/wasi/src/lib.rs#L10-L17\" title=\"wasm-component-serverless/lib.rs at wasi · AmitPr/wasm-component-serverless\">wasm-component-serverless/lib.rs at wasi · AmitPr/wasm-component-serverless</a></div><div class=\"message_embed_description\">Contribute to AmitPr/wasm-component-serverless development by creating an account on GitHub.</div></div></div>",
        "id": 314547269,
        "sender_full_name": "Amit Prasad",
        "timestamp": 1670443352
    },
    {
        "content": "<p>trying to trace through all this myself</p>",
        "id": 314547408,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1670443406
    },
    {
        "content": "<p>Haha there's a lot to unpack in that repo, but I think for the most part the gist of it is that the <code>println!(\"Got Request!\")</code> line in the guest module should be doing something but seems like it's doing nothing</p>",
        "id": 314547823,
        "sender_full_name": "Amit Prasad",
        "timestamp": 1670443544
    },
    {
        "content": "<p>yeah nothing jumps out here to me</p>",
        "id": 314548002,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1670443605
    },
    {
        "content": "<p>lemme try running and see what happens</p>",
        "id": 314548022,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1670443613
    },
    {
        "content": "<p>I'm seeing</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code>\n</code></pre></div>",
        "id": 314548121,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1670443653
    },
    {
        "content": "<p>er, I'm seeing</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">tokio</span><span class=\"o\">-</span><span class=\"n\">runtime</span><span class=\"o\">-</span><span class=\"n\">worker</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">called</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Result</span>::<span class=\"n\">unwrap</span><span class=\"p\">()</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Err</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">value</span>: <span class=\"nc\">import</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">testwasi</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">defined</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">crates</span><span class=\"o\">/</span><span class=\"n\">host</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">70</span>:<span class=\"mi\">22</span><span class=\"w\"></span>\n<span class=\"n\">note</span>: <span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 314548150,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1670443664
    },
    {
        "content": "<p>are you seeing something different?</p>",
        "id": 314548159,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1670443669
    },
    {
        "content": "<p>Ah - are you cloning <code>main</code> or <code>wasi</code> branch -- I've been moving away from a test WASI implementation so <code>main</code> is broken</p>",
        "id": 314548275,
        "sender_full_name": "Amit Prasad",
        "timestamp": 1670443705
    },
    {
        "content": "<p>I'm using <code>main</code>, should I look at something else?</p>",
        "id": 314548393,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1670443744
    },
    {
        "content": "<p>yeah -- WASI branch<br>\n<a href=\"https://github.com/AmitPr/wasm-component-serverless/tree/wasi\">https://github.com/AmitPr/wasm-component-serverless/tree/wasi</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/AmitPr/wasm-component-serverless/tree/wasi\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/cf635e66b2bca49f37d3c67f16a4b04982d60dfa\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f663231663339613561333238656336393438376435636536373035653337663038303939383962633938633162376663363032383033653864623234323364352f416d697450722f7761736d2d636f6d706f6e656e742d7365727665726c657373)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/AmitPr/wasm-component-serverless/tree/wasi\" title=\"GitHub - AmitPr/wasm-component-serverless at wasi\">GitHub - AmitPr/wasm-component-serverless at wasi</a></div><div class=\"message_embed_description\">Contribute to AmitPr/wasm-component-serverless development by creating an account on GitHub.</div></div></div>",
        "id": 314548480,
        "sender_full_name": "Amit Prasad",
        "timestamp": 1670443772
    },
    {
        "content": "<p>After <code>cargo run</code>, you should be able to hit <code>curl -D - localhost:3000</code> from another terminal.</p>\n<p>Results in the response you would expect:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">HTTP</span><span class=\"o\">/</span><span class=\"mf\">1.1</span><span class=\"w\"> </span><span class=\"mi\">200</span><span class=\"w\"> </span><span class=\"n\">OK</span><span class=\"w\"></span>\n<span class=\"n\">x</span><span class=\"o\">-</span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">test</span>: <span class=\"nc\">true</span><span class=\"w\"></span>\n<span class=\"n\">content</span><span class=\"o\">-</span><span class=\"n\">length</span>: <span class=\"mi\">13</span><span class=\"w\"></span>\n<span class=\"n\">date</span>: <span class=\"nc\">Wed</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">07</span><span class=\"w\"> </span><span class=\"n\">Dec</span><span class=\"w\"> </span><span class=\"mi\">2022</span><span class=\"w\"> </span><span class=\"mi\">20</span>:<span class=\"mi\">08</span>:<span class=\"mi\">39</span><span class=\"w\"> </span><span class=\"n\">GMT</span><span class=\"w\"></span>\n\n<span class=\"n\">Hello</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">world</span><span class=\"o\">!</span><span class=\"w\"></span>\n</code></pre></div>\n<p>But there's no output in the rust server process that I would expect from the print statement that should be triggered by WASI</p>\n<p>In essence it's instantiating and running the guest component every time an HTTP request is received</p>",
        "id": 314548800,
        "sender_full_name": "Amit Prasad",
        "timestamp": 1670443879
    },
    {
        "content": "<p>Let me see if I can make a minimum example that has the same issue -- This repo is pretty messy (as you can see ;P)</p>",
        "id": 314548990,
        "sender_full_name": "Amit Prasad",
        "timestamp": 1670443952
    },
    {
        "content": "<p>nah it's ok, I've got it now and something is definitely fishy</p>",
        "id": 314549231,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1670444056
    },
    {
        "content": "<p>Hahaha yeah I was/am extremely confused about the lack of anything. Even putting in <code>panic!()</code> everywhere in the host bindings doesn't seem to do anything.</p>",
        "id": 314549430,
        "sender_full_name": "Amit Prasad",
        "timestamp": 1670444149
    },
    {
        "content": "<p>oh I see the bug</p>",
        "id": 314551109,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1670444787
    },
    {
        "content": "<p>the problem is that the initial state isn't configured</p>",
        "id": 314551172,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1670444810
    },
    {
        "content": "<p>I'll file an issue in a bit</p>",
        "id": 314551181,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1670444817
    },
    {
        "content": "<p>basically the <code>command</code> entrypoint sets up fds 1/2/3 but you're not calling that</p>",
        "id": 314551214,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1670444830
    },
    {
        "content": "<p>and you arguably shouldn't need to call it either</p>",
        "id": 314551227,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1670444836
    },
    {
        "content": "<p>Ah! Interesting. I'll see if I can get around it for now. Thanks for the help :)</p>",
        "id": 314551941,
        "sender_full_name": "Amit Prasad",
        "timestamp": 1670445068
    },
    {
        "content": "<p>Is there any literature / documentation that explains what these <code>command</code> features/entrypoints all refer to?</p>",
        "id": 314552157,
        "sender_full_name": "Amit Prasad",
        "timestamp": 1670445148
    },
    {
        "content": "<p><a href=\"https://github.com/bytecodealliance/preview2-prototyping/blob/main/src/lib.rs#L41-L53\">https://github.com/bytecodealliance/preview2-prototyping/blob/main/src/lib.rs#L41-L53</a></p>\n<p>I assume that I would have to modify &amp; compile the adapter to include these lines in some other location that's called during initialization/instantiation? Would <code>State::new()</code> be inappropriate?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/preview2-prototyping/blob/main/src/lib.rs#L41-L53\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/4d75f24c7e3a6aff4eb3adbb0dbadfe142f97b39\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f613335313261373131613036636436333736653530393033386566386339663466393266316236353436336333626439626534373532396134653437353330312f62797465636f6465616c6c69616e63652f70726576696577322d70726f746f747970696e67)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/preview2-prototyping/blob/main/src/lib.rs#L41-L53\" title=\"preview2-prototyping/lib.rs at main · bytecodealliance/preview2-prototyping\">preview2-prototyping/lib.rs at main · bytecodealliance/preview2-prototyping</a></div><div class=\"message_embed_description\">Polyfill adapter for preview1-using wasm modules to call preview2 functions. - preview2-prototyping/lib.rs at main · bytecodealliance/preview2-prototyping</div></div></div>",
        "id": 314555893,
        "sender_full_name": "Amit Prasad",
        "timestamp": 1670446513
    },
    {
        "content": "<p>the <code>command</code> was intended for CLI-like executables where it's the main entrypoint</p>",
        "id": 314559919,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1670448073
    },
    {
        "content": "<p>what you sort of need though is some init-style function for non-command things</p>",
        "id": 314559951,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1670448083
    },
    {
        "content": "<p>or... something like that, honestly I didn't see this coming at all so I dunno what the solution is</p>",
        "id": 314559970,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1670448093
    },
    {
        "content": "<p>ok I talked with dan/pat a bit and I think there's a reasonable solution to this which <a href=\"https://github.com/bytecodealliance/preview2-prototyping/pull/19\">I've now PR'd</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/preview2-prototyping/pull/19\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/5a351ab5e082be88b8874f49c475d7f90bd3b8d1\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f346636653433396535656261643961343039376131663332353265366565636135346331663538633131353465633664373966373365616637396635663039352f62797465636f6465616c6c69616e63652f70726576696577322d70726f746f747970696e672f70756c6c2f3139)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/preview2-prototyping/pull/19\" title=\"Fix prints in non-command builds by alexcrichton · Pull Request #19 · bytecodealliance/preview2-prototyping\">Fix prints in non-command builds by alexcrichton · Pull Request #19 · bytecodealliance/preview2-prototyping</a></div><div class=\"message_embed_description\">When the command entrypoint isn't invoked, such as for non-command builds, then prints were not working as they would return ERRNO_BADF which is swallowed by at least Rust right now. This instead s...</div></div></div>",
        "id": 314572336,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1670452874
    }
]