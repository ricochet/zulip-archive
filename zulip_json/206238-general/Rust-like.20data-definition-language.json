[
    {
        "content": "<p>I'd like to implement a small subset of Rust language features into a JIT data definition language to implement a kind of strongly typed serde. The language would include a subset of struct initialization like:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">MyStruct</span><span class=\"p\">{</span>\n<span class=\"w\">   </span><span class=\"n\">a</span>: <span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"c1\">// i32</span>\n<span class=\"w\">   </span><span class=\"n\">b</span>: <span class=\"nc\">B</span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">c</span>: <span class=\"mi\">123</span><span class=\"p\">,</span><span class=\"w\">  </span><span class=\"c1\">//usize</span>\n<span class=\"w\">       </span><span class=\"o\">..</span><span class=\"n\">B</span>::<span class=\"n\">default</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"c1\">// B</span>\n<span class=\"w\">   </span><span class=\"n\">d</span>: <span class=\"p\">[</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"c1\">// [ u32; 5 ]</span>\n<span class=\"w\">   </span><span class=\"n\">e</span>: <span class=\"p\">(</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">1.6</span><span class=\"w\"> </span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"c1\">// ( bool, i32, f32 )</span>\n<span class=\"w\">   </span><span class=\"o\">..</span><span class=\"w\"> </span><span class=\"n\">MyStruct</span>::<span class=\"n\">default</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"c1\">// defaults a-z</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p><code>MyStruct</code>, <code>B</code>, <code>&lt;T&gt;::default()</code> and everything from <code>a</code> to <code>z</code> would be defined in Rust and the struct definitions made available to the JIT directly from Rust. I wouldn't support control structures of any form, but some <code>impl</code> functions would be included(e.g. default).</p>\n<p>Where do I start?</p>",
        "id": 432596284,
        "sender_full_name": "Joshua Caleb Pedrick",
        "timestamp": 1712787076
    },
    {
        "content": "<p>You might be able to get more specific support from a Rust community. I believe there's a Zulip for Rust, for example. Perhaps you'd also be interested in the RON format, which seems to do some of what you're interested in.<br>\n<a href=\"https://www.rust-lang.org/community\">https://www.rust-lang.org/community</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://www.rust-lang.org/community\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/147ecc3caab69e5abda8478c67ed1c5c29a30233\\/68747470733a2f2f7777772e727573742d6c616e672e6f72672f7374617469632f696d616765732f727573742d736f6369616c2d776964652e6a7067)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://www.rust-lang.org/community\" title=\"Community\">Community</a></div><div class=\"message_embed_description\">A language empowering everyone to build reliable and efficient software.</div></div></div>",
        "id": 432610427,
        "sender_full_name": "IFcoltransG",
        "timestamp": 1712796534
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"570431\">IFcoltransG</span> <a href=\"#narrow/stream/206238-general/topic/Rust-like.20data-definition-language/near/432610427\">said</a>:</p>\n<blockquote>\n<p>You might be able to get more specific support from a Rust community. I believe there's a Zulip for Rust, for example. Perhaps you'd also be interested in the RON format, which seems to do some of what you're interested in.<br>\n<a href=\"https://www.rust-lang.org/community\">https://www.rust-lang.org/community</a></p>\n</blockquote>\n<p>Thanks. So, what I'm trying to accomplish is a data definition language that's a subset of Rust, so that I can do something like the following, which would give me compile errors when running <code>cargo test</code>.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[cfg(test)]</span>\n<span class=\"k\">mod</span> <span class=\"nn\">test</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">test_data</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"k\">crate</span>::<span class=\"n\">my_data_objects</span>::<span class=\"o\">*</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">_data</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"fm\">include!</span><span class=\"p\">(</span><span class=\"s\">\"my_data/data.rd\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">load_data</span><span class=\"p\">(</span><span class=\"w\"> </span><span class=\"n\">path</span>: <span class=\"kp\">&amp;</span><span class=\"kt\">str</span> <span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">MyStruct</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"c1\">// path = \"my_data/data.rd\"</span>\n<span class=\"w\">   </span><span class=\"n\">micro_rust</span>::<span class=\"n\">jit</span>::<span class=\"n\">load</span>::<span class=\"o\">&lt;</span><span class=\"n\">MyStruct</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>So, I'm really am looking to implement a Jit using cranelift</p>",
        "id": 432621057,
        "sender_full_name": "Joshua Caleb Pedrick",
        "timestamp": 1712805390
    }
]