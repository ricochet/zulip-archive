[
    {
        "content": "<p>Does wasmtime have a mechanism to control or track exported memory? Or do we just have to check the size periodically and kill the program if it's too unwieldy?</p>",
        "id": 197232116,
        "sender_full_name": "Alex Vidal",
        "timestamp": 1589256290
    },
    {
        "content": "<p>Wasm itself has a concept of a maximum size for a linear memory, which Wasmtime enforces.</p>",
        "id": 197311432,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1589305157
    },
    {
        "content": "<p>Currently Wasmtime will let applications request any maximum they want, but it'd be straightforward to add way to run applications with a lower maximum than they request.</p>",
        "id": 197311582,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1589305216
    },
    {
        "content": "<p>ok so to confirm: wasmtime enforces the spec which dictates the max memory size in the guest, but there's currently no way, using wasmtime, to lower that max memory size?</p>",
        "id": 197317070,
        "sender_full_name": "Alex Vidal",
        "timestamp": 1589307633
    },
    {
        "content": "<p>currently i check memory size on every host call so i can abort if it gets too large (which hasn't happened yet since my instances exit pretty quickly)</p>",
        "id": 197317132,
        "sender_full_name": "Alex Vidal",
        "timestamp": 1589307666
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"300054\">@Alex Vidal</span> you can further limit it using the <a href=\"https://bytecodealliance.github.io/wasmtime/api/wasmtime/struct.Config.html#method.with_host_memory\"><code>Config::with_host_memory</code></a> method which allows hooking all calls to memory growth</p>",
        "id": 197320249,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1589309073
    },
    {
        "content": "<p>ah, looks like that isn't exposed in wasmtime-go atm?</p>",
        "id": 197321012,
        "sender_full_name": "Alex Vidal",
        "timestamp": 1589309458
    },
    {
        "content": "<p>True yeah, those sorts of interfaces have not been bound yet</p>",
        "id": 197321472,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1589309666
    }
]