[
    {
        "content": "<p>Hi here, I just converted my wasm to a component, and I indeed see that in the wit that wasm-tools told be, it is now asking multiple imports. Like wasi-stderr, wasi-stdio... </p>\n<p>And when trying to instantiate with wasmtime, well it panics because apparently, the WASM misses some imports.<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/issues/5830\">https://github.com/bytecodealliance/wasmtime/issues/5830</a><br>\nThis is a very similar problem to this issue, but I didn't understand the answer given by pchickey. How can I do the bindings? Thanks in advance</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/issues/5830\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/c3e1e3aa25907a611426069a4cb94f6793341825\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f353166326434376135613363643633613165303536353566613139323237353264636661303134363539303266336335353864646531373563343463643835352f62797465636f6465616c6c69616e63652f7761736d74696d652f6973737565732f35383330)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/issues/5830\" title=\"Error loading component - Error: import wasi-stderr has the wrong type · Issue #5830 · bytecodealliance/wasmtime\">Error loading component - Error: import wasi-stderr has the wrong type · Issue #5830 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Hello I am currently experimenting with the component model and encounter the following problem. I know that the component model is not stable but maybe someone can help me. To reproduce the error ...</div></div></div>",
        "id": 329245851,
        "sender_full_name": "bachrc",
        "timestamp": 1676999815
    },
    {
        "content": "<p>A host implementation of those imports is provided over in the preview2-prototyping repo under <code>host/</code></p>",
        "id": 329245967,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1676999856
    },
    {
        "content": "<p>it uses a fork of wasi-common, and its very incomplete and buggy</p>",
        "id": 329245992,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1676999865
    },
    {
        "content": "<p>and its rapidly changing</p>",
        "id": 329246005,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1676999870
    },
    {
        "content": "<p>Oh I see, so I cannot make the bindings for now? Am I forced to use this?</p>",
        "id": 329246227,
        "sender_full_name": "bachrc",
        "timestamp": 1676999941
    },
    {
        "content": "<p>so, you need to depend on that crate, and use its <code>add_to_linker</code> and <code>WasiCommand</code> export like here: <a href=\"https://github.com/bytecodealliance/preview2-prototyping/blob/main/host/src/main.rs\">https://github.com/bytecodealliance/preview2-prototyping/blob/main/host/src/main.rs</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/preview2-prototyping/blob/main/host/src/main.rs\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/3e02534907adfe141338b2b91709bf65cd279dd7\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f383864363433643832303063336638393232303837363231366361613961386262613534643536303237623838333135343337373964633864656163373738642f62797465636f6465616c6c69616e63652f70726576696577322d70726f746f747970696e67)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/preview2-prototyping/blob/main/host/src/main.rs\" title=\"preview2-prototyping/main.rs at main · bytecodealliance/preview2-prototyping\">preview2-prototyping/main.rs at main · bytecodealliance/preview2-prototyping</a></div><div class=\"message_embed_description\">Polyfill adapter for preview1-using wasm modules to call preview2 functions. - preview2-prototyping/main.rs at main · bytecodealliance/preview2-prototyping</div></div></div>",
        "id": 329246378,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1676999989
    },
    {
        "content": "<p>but note that you need to depend on the previee2-prototyping wasi-common, not the <a href=\"http://crates.io\">crates.io</a> wasi-common, so please use a git dependency</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"http://crates.io\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/75f8c66509c680a2345cca9b6adaf7e2cdb6f41b\\/68747470733a2f2f6372617465732e696f2f6173736574732f6f672d696d6167652e706e67)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"http://crates.io\" title=\"crates.io: Rust Package Registry\">crates.io: Rust Package Registry</a></div></div></div>",
        "id": 329246534,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1677000020
    },
    {
        "content": "<p>you can either use the implementation in prototyping's host, or you can write your own using wasmtime's wit bindgen. i dont recommend writing your own because its quite hard</p>",
        "id": 329246726,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1677000082
    },
    {
        "content": "<p>but if you need to, it is possible</p>",
        "id": 329246742,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1677000088
    },
    {
        "content": "<p>you'll have to follow the general pattern we used in that repo of invoking wasmtime::component::bindgen!() to do so, and then impl all of the traits.</p>",
        "id": 329246804,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1677000109
    },
    {
        "content": "<p>Yup, I tried to pull your host project : </p>\n<div class=\"codehilite\" data-code-language=\"TOML\"><pre><span></span><code><span class=\"k\">[dependencies]</span>\n<span class=\"p\">.......</span>\n<span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">version</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"^6.0.0\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">features</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"component-model\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"async\"</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"n\">host</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">git</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"https://github.com/bytecodealliance/preview2-prototyping\"</span><span class=\"w\"> </span><span class=\"p\">}</span>\n</code></pre></div>\n<p>But when trying to build, I have a version conflict that I... don't understand o.o</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime_host_test</span><span class=\"w\"> </span><span class=\"n\">git</span>:<span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"err\">✗</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">check</span>\n<span class=\"w\">    </span><span class=\"n\">Updating</span><span class=\"w\"> </span><span class=\"n\">crates</span><span class=\"p\">.</span><span class=\"n\">io</span><span class=\"w\"> </span><span class=\"n\">index</span>\n<span class=\"w\">    </span><span class=\"n\">Updating</span><span class=\"w\"> </span><span class=\"n\">git</span><span class=\"w\"> </span><span class=\"n\">repository</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">https</span>:<span class=\"c1\">//github.com/bytecodealliance/preview2-prototyping`</span>\n<span class=\"w\">    </span><span class=\"n\">Updating</span><span class=\"w\"> </span><span class=\"n\">git</span><span class=\"w\"> </span><span class=\"n\">repository</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">https</span>:<span class=\"c1\">//github.com/bytecodealliance/wasmtime`</span>\n<span class=\"n\">error</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">select</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">version</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">fiber</span><span class=\"err\">`</span><span class=\"p\">.</span>\n<span class=\"w\">    </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">required</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"w\"> </span><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">v6</span><span class=\"p\">.</span><span class=\"mf\">0.0</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">https</span>:<span class=\"c1\">//github.com/bytecodealliance/wasmtime?branch=release-6.0.0#c00d3f05)`</span>\n<span class=\"w\">    </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">which</span><span class=\"w\"> </span><span class=\"n\">satisfies</span><span class=\"w\"> </span><span class=\"n\">git</span><span class=\"w\"> </span><span class=\"n\">dependency</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasmtime</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">host</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"mf\">0.0</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">https</span>:<span class=\"c1\">//github.com/bytecodealliance/preview2-prototyping#7736fd0c)`</span>\n<span class=\"w\">    </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">which</span><span class=\"w\"> </span><span class=\"n\">satisfies</span><span class=\"w\"> </span><span class=\"n\">git</span><span class=\"w\"> </span><span class=\"n\">dependency</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">host</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasmtime_host_test</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"mf\">1.0</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">yohann</span><span class=\"o\">/</span><span class=\"n\">devs</span><span class=\"o\">/</span><span class=\"n\">neo</span><span class=\"o\">-</span><span class=\"n\">michel</span><span class=\"o\">/</span><span class=\"n\">wasmtime_host_test</span><span class=\"p\">)</span><span class=\"err\">`</span>\n<span class=\"n\">versions</span><span class=\"w\"> </span><span class=\"n\">that</span><span class=\"w\"> </span><span class=\"n\">meet</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">requirements</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"o\">=</span><span class=\"mf\">6.0.0</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">are</span>: <span class=\"mf\">6.0.0</span>\n\n<span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">fiber</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">links</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">native</span><span class=\"w\"> </span><span class=\"n\">library</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">fiber</span><span class=\"o\">-</span><span class=\"n\">shims</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">but</span><span class=\"w\"> </span><span class=\"n\">it</span><span class=\"w\"> </span><span class=\"n\">conflicts</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">previous</span><span class=\"w\"> </span><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"n\">which</span><span class=\"w\"> </span><span class=\"n\">links</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">fiber</span><span class=\"o\">-</span><span class=\"n\">shims</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">well</span>:\n<span class=\"nc\">package</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">fiber</span><span class=\"w\"> </span><span class=\"n\">v6</span><span class=\"p\">.</span><span class=\"mf\">0.0</span><span class=\"err\">`</span>\n<span class=\"w\">    </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">which</span><span class=\"w\"> </span><span class=\"n\">satisfies</span><span class=\"w\"> </span><span class=\"n\">dependency</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">fiber</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"=6.0.0\"</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">v6</span><span class=\"p\">.</span><span class=\"mf\">0.0</span><span class=\"err\">`</span>\n<span class=\"w\">    </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">which</span><span class=\"w\"> </span><span class=\"n\">satisfies</span><span class=\"w\"> </span><span class=\"n\">dependency</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"^6.0.0\"</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasmtime_host_test</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"mf\">1.0</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">yohann</span><span class=\"o\">/</span><span class=\"n\">devs</span><span class=\"o\">/</span><span class=\"n\">neo</span><span class=\"o\">-</span><span class=\"n\">michel</span><span class=\"o\">/</span><span class=\"n\">wasmtime_host_test</span><span class=\"p\">)</span><span class=\"err\">`</span>\n<span class=\"n\">Only</span><span class=\"w\"> </span><span class=\"n\">one</span><span class=\"w\"> </span><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">dependency</span><span class=\"w\"> </span><span class=\"n\">graph</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">specify</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">same</span><span class=\"w\"> </span><span class=\"n\">links</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">This</span><span class=\"w\"> </span><span class=\"n\">helps</span><span class=\"w\"> </span><span class=\"n\">ensure</span><span class=\"w\"> </span><span class=\"n\">that</span><span class=\"w\"> </span><span class=\"n\">only</span><span class=\"w\"> </span><span class=\"n\">one</span><span class=\"w\"> </span><span class=\"n\">copy</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">native</span><span class=\"w\"> </span><span class=\"n\">library</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">linked</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"kr\">final</span><span class=\"w\"> </span><span class=\"n\">binary</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">Try</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">adjust</span><span class=\"w\"> </span><span class=\"n\">your</span><span class=\"w\"> </span><span class=\"n\">dependencies</span><span class=\"w\"> </span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"n\">that</span><span class=\"w\"> </span><span class=\"n\">only</span><span class=\"w\"> </span><span class=\"n\">one</span><span class=\"w\"> </span><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"n\">uses</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">links</span><span class=\"w\"> </span><span class=\"o\">='</span><span class=\"na\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">fiber</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">For</span><span class=\"w\"> </span><span class=\"n\">more</span><span class=\"w\"> </span><span class=\"n\">information</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">see</span><span class=\"w\"> </span><span class=\"n\">https</span>:<span class=\"c1\">//doc.rust-lang.org/cargo/reference/resolver.html#links.</span>\n\n<span class=\"n\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">select</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">version</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">fiber</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">which</span><span class=\"w\"> </span><span class=\"n\">could</span><span class=\"w\"> </span><span class=\"n\">resolve</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">conflict</span>\n</code></pre></div>",
        "id": 329247052,
        "sender_full_name": "bachrc",
        "timestamp": 1677000170
    },
    {
        "content": "<p>thats crgo's way of showing you there are multiple versions of wasmtime pulled in</p>",
        "id": 329247206,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1677000214
    },
    {
        "content": "<p>(not ideal)</p>",
        "id": 329247215,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1677000219
    },
    {
        "content": "<p>You need to use</p>\n<div class=\"codehilite\" data-code-language=\"TOML\"><pre><span></span><code><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">git</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"https://github.com/bytecodealliance/wasmtime\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">features</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"component-model\"</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"n\">branch</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">'release-6.0.0'</span><span class=\"w\"> </span><span class=\"p\">}</span>\n</code></pre></div>\n<p>as that is what preview2-prototyping used too.</p>",
        "id": 329247277,
        "sender_full_name": "bjorn3",
        "timestamp": 1677000238
    },
    {
        "content": "<p>Yeah, but all I see are version 6.0.0, so there should be no problem haha</p>",
        "id": 329247318,
        "sender_full_name": "bachrc",
        "timestamp": 1677000244
    },
    {
        "content": "<p>Thank to both of you, I'm gonna try this :)</p>",
        "id": 329247376,
        "sender_full_name": "bachrc",
        "timestamp": 1677000258
    },
    {
        "content": "<p>git versions and <a href=\"http://crates.io\">crates.io</a> versions are not compatible, even if they say the same string</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"http://crates.io\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/75f8c66509c680a2345cca9b6adaf7e2cdb6f41b\\/68747470733a2f2f6372617465732e696f2f6173736574732f6f672d696d6167652e706e67)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"http://crates.io\" title=\"crates.io: Rust Package Registry\">crates.io: Rust Package Registry</a></div></div></div>",
        "id": 329247391,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1677000262
    },
    {
        "content": "<p>we can update preview2-prototyping to point at the <a href=\"http://crates.io\">crates.io</a> release, it landed this morning, but all of the people who hack on that are in a meeting today so we havent gotten to it yet</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"http://crates.io\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/75f8c66509c680a2345cca9b6adaf7e2cdb6f41b\\/68747470733a2f2f6372617465732e696f2f6173736574732f6f672d696d6167652e706e67)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"http://crates.io\" title=\"crates.io: Rust Package Registry\">crates.io: Rust Package Registry</a></div></div></div>",
        "id": 329247512,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1677000294
    },
    {
        "content": "<p>Okay, I understand better now :) And this is working like this! Thank you for your kind and quick answers and your hard work :)</p>",
        "id": 329247962,
        "sender_full_name": "bachrc",
        "timestamp": 1677000425
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"541537\">bachrc</span> has marked this topic as resolved.</p>",
        "id": 329247992,
        "sender_full_name": "Notification Bot",
        "timestamp": 1677000437
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"541537\">bachrc</span> has marked this topic as unresolved.</p>",
        "id": 329250218,
        "sender_full_name": "Notification Bot",
        "timestamp": 1677001017
    },
    {
        "content": "<p>Well, I guess using the <code>add_to_linker</code> is incompatible with the one given by my bindgen! macro? :(</p>",
        "id": 329250543,
        "sender_full_name": "bachrc",
        "timestamp": 1677001094
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Linker</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">);</span>\n<span class=\"n\">host</span>::<span class=\"n\">add_to_linker</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">x</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"n\">Michel</span>::<span class=\"n\">add_to_linker</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">state</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"n\">MichelApiForPlugins</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">state</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n</code></pre></div>",
        "id": 329250650,
        "sender_full_name": "bachrc",
        "timestamp": 1677001126
    },
    {
        "content": "<p>can you share the error message?</p>",
        "id": 329251273,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1677001276
    },
    {
        "content": "<p>Here the compiler isn't happy because there is two types or states given to the linker : WasiCtx (by the host), and MichelApiForPlugins (which is my state)</p>",
        "id": 329251346,
        "sender_full_name": "bachrc",
        "timestamp": 1677001300
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0631</span><span class=\"p\">]</span>: <span class=\"nc\">type</span><span class=\"w\"> </span><span class=\"n\">mismatch</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">closure</span><span class=\"w\"> </span><span class=\"n\">arguments</span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">wasmtime_host_test</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">34</span>:<span class=\"mi\">5</span>\n<span class=\"w\">   </span><span class=\"o\">|</span>\n<span class=\"mi\">34</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"n\">Michel</span>::<span class=\"n\">add_to_linker</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">state</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"n\">MichelApiForPlugins</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">state</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"o\">^^^^^^^^^^^^^^^^^^^^^</span><span class=\"w\">              </span><span class=\"o\">---------------------------------</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"n\">signature</span><span class=\"w\"> </span><span class=\"n\">defined</span><span class=\"w\"> </span><span class=\"n\">here</span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"o\">|</span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"n\">due</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">this</span>\n<span class=\"w\">   </span><span class=\"o\">|</span>\n<span class=\"w\">   </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">note</span>: <span class=\"nc\">expected</span><span class=\"w\"> </span><span class=\"n\">closure</span><span class=\"w\"> </span><span class=\"n\">signature</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"k\">for</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"p\">(</span><span class=\"o\">&amp;'</span><span class=\"na\">a</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">WasiCtx</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">_</span><span class=\"err\">`</span>\n<span class=\"w\">              </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"n\">closure</span><span class=\"w\"> </span><span class=\"n\">signature</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"k\">for</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"p\">(</span><span class=\"o\">&amp;'</span><span class=\"na\">a</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">MichelApiForPlugins</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">_</span><span class=\"err\">`</span>\n</code></pre></div>",
        "id": 329251453,
        "sender_full_name": "bachrc",
        "timestamp": 1677001331
    },
    {
        "content": "<p>right, so you want to make some <code>struct Ctx { wasi: WasiCtx, michel: MichaelApiForPlugins }</code>, and in the linker you use <code>|ctx| &amp;mut ctx.wasi</code> for wasi, <code>|ctx| &amp;mut ctx.michel</code> for michel</p>",
        "id": 329251494,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1677001345
    },
    {
        "content": "<p>thats how the linker is designed to deal with compositions of state</p>",
        "id": 329251560,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1677001368
    },
    {
        "content": "<p>Oh okay I see! I hope my struggles will help people searching here :) Thanks again for your answer!</p>",
        "id": 329251721,
        "sender_full_name": "bachrc",
        "timestamp": 1677001409
    },
    {
        "content": "<p>Yup, but making the Linker contain our new <code>Ctx</code> is incompatible with the <code>instantiate_async</code> generated by the bindgen!. </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">bindings</span><span class=\"p\">,</span><span class=\"n\">_</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Michel</span>::<span class=\"n\">instantiate_async</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">component</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">linker</span><span class=\"p\">).</span><span class=\"k\">await</span><span class=\"o\">?</span><span class=\"p\">;</span>\n</code></pre></div>\n<p>Here it waits for the same generic type for store and linker. Well I guess my Store should not be <code>MichelPluginForApi</code> anymore, but <code>Ctx</code> ? But for creating a Ctx object, I need to create a WasiCtx. You know how I could do this? :(</p>",
        "id": 329255611,
        "sender_full_name": "bachrc",
        "timestamp": 1677002402
    },
    {
        "content": "<p>Oh yes, the WasiCtxBuilder !</p>",
        "id": 329255849,
        "sender_full_name": "bachrc",
        "timestamp": 1677002457
    },
    {
        "content": "<p>I'm trying this now.</p>",
        "id": 329255872,
        "sender_full_name": "bachrc",
        "timestamp": 1677002463
    },
    {
        "content": "<p>yes</p>",
        "id": 329255877,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1677002463
    },
    {
        "content": "<p>and your store will need to be a <code>Store&lt;Ctx&gt;</code></p>",
        "id": 329255915,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1677002470
    },
    {
        "content": "<p>Sorry to bother again, but trying to get the WasiCtsBuilder with the wasmtime-wasi dependency :</p>\n<div class=\"codehilite\" data-code-language=\"TOML\"><pre><span></span><code><span class=\"n\">wasmtime-wasi</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">git</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"https://github.com/bytecodealliance/wasmtime\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">branch</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">'release-6.0.0'</span><span class=\"w\"> </span><span class=\"p\">}</span>\n</code></pre></div>\n<p>But again, a version conflict. I don't see what's wrong here :(</p>\n<div class=\"codehilite\" data-code-language=\"Bash Session\"><pre><span></span><code><span class=\"go\">stdout :     Updating crates.io index</span>\n<span class=\"go\">    Updating git repository `https://github.com/bytecodealliance/wasmtime`</span>\n<span class=\"go\">error: failed to select a version for `wasi-common`.</span>\n<span class=\"go\">    ... required by package `wasmtime-wasi v6.0.0 (https://github.com/bytecodealliance/wasmtime?branch=release-6.0.0#c00d3f05)`</span>\n<span class=\"go\">    ... which satisfies git dependency `wasmtime-wasi` of package `wasmtime_host_test v0.1.0 (/home/yohann/devs/neo-michel/wasmtime_host_test)`</span>\n<span class=\"go\">versions that meet the requirements `=6.0.0` are: 6.0.0</span>\n\n<span class=\"go\">the package `wasi-common` links to the native library `wasi-common-19`, but it conflicts with a previous package which links to `wasi-common-19` as well:</span>\n<span class=\"go\">package `wasi-common v0.0.0 (https://github.com/bytecodealliance/preview2-prototyping#7736fd0c)`</span>\n<span class=\"go\">    ... which satisfies git dependency `wasi-common` (locked to 0.0.0) of package `host v0.0.0 (https://github.com/bytecodealliance/preview2-prototyping#7736fd0c)`</span>\n<span class=\"go\">    ... which satisfies git dependency `host` (locked to 0.0.0) of package `wasmtime_host_test v0.1.0 (/home/yohann/devs/neo-michel/wasmtime_host_test)`</span>\n<span class=\"go\">Only one package in the dependency graph may specify the same links value. This helps ensure that only one copy of a native library is linked in the final binary. Try to adjust your dependencies so that only one package uses the links ='wasi-common' value. For more information, see https://doc.rust-lang.org/cargo/reference/resolver.html#links.</span>\n\n<span class=\"go\">failed to select a version for `wasi-common` which could resolve this conflict</span>\n</code></pre></div>",
        "id": 329293226,
        "sender_full_name": "bachrc",
        "timestamp": 1677014044
    },
    {
        "content": "<p>You can’t use wasi-common from the prototype repo and the one upstream in Wasmtime in the same project right now.</p>",
        "id": 329299307,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1677016353
    },
    {
        "content": "<p>We will merge all that functionality back in upstream at some point, but right now they can’t coexist</p>",
        "id": 329299378,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1677016388
    },
    {
        "content": "<p>If you delete the links section in the prototype cargo.toml it might work</p>",
        "id": 329299414,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1677016405
    },
    {
        "content": "<p>Ah. So I can't use WasiCtxBuilder, and so using wit-bindgen</p>",
        "id": 329301753,
        "sender_full_name": "bachrc",
        "timestamp": 1677017289
    },
    {
        "content": "<p>I can't modify the prototype Cargo.toml without doing a fork</p>",
        "id": 329301905,
        "sender_full_name": "bachrc",
        "timestamp": 1677017369
    },
    {
        "content": "<p>And i don't see any links section in <a href=\"https://github.com/bytecodealliance/preview2-prototyping/blob/main/Cargo.toml\">https://github.com/bytecodealliance/preview2-prototyping/blob/main/Cargo.toml</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/preview2-prototyping/blob/main/Cargo.toml\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/3e02534907adfe141338b2b91709bf65cd279dd7\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f383864363433643832303063336638393232303837363231366361613961386262613534643536303237623838333135343337373964633864656163373738642f62797465636f6465616c6c69616e63652f70726576696577322d70726f746f747970696e67)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/preview2-prototyping/blob/main/Cargo.toml\" title=\"preview2-prototyping/Cargo.toml at main · bytecodealliance/preview2-prototyping\">preview2-prototyping/Cargo.toml at main · bytecodealliance/preview2-prototyping</a></div><div class=\"message_embed_description\">Polyfill adapter for preview1-using wasm modules to call preview2 functions. - preview2-prototyping/Cargo.toml at main · bytecodealliance/preview2-prototyping</div></div></div>",
        "id": 329302688,
        "sender_full_name": "bachrc",
        "timestamp": 1677017647
    },
    {
        "content": "<p>Well I see here (<a href=\"#narrow/stream/327223-wit-bindgen/topic/.5Brust.5D.20wasmtime.20.26.20custom.20wit.20type.20.28record.29\">https://bytecodealliance.zulipchat.com/#narrow/stream/327223-wit-bindgen/topic/.5Brust.5D.20wasmtime.20.26.20custom.20wit.20type.20.28record.29</a>) that i should maybe import wasi_cap_sync from the std!</p>",
        "id": 329322567,
        "sender_full_name": "bachrc",
        "timestamp": 1677027324
    },
    {
        "content": "<p>Hey i managed to get it working by adding the following line to my cargo.toml of the host project:<br>\n<code>wasi-cap-std-sync = { git = \"https://github.com/bytecodealliance/preview2-prototyping\", rev = \"7736fd0\" }</code></p>\n<p>Then i was able to use the WasiCtxBuilder.</p>",
        "id": 329465216,
        "sender_full_name": "Giom",
        "timestamp": 1677081535
    },
    {
        "content": "<p>Yeah, to make this work, I was forced to clone locally the preview2-prototyping, and remove the [links] section.</p>",
        "id": 335045246,
        "sender_full_name": "bachrc",
        "timestamp": 1677189401
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"541537\">bachrc</span> has marked this topic as resolved.</p>",
        "id": 335045379,
        "sender_full_name": "Notification Bot",
        "timestamp": 1677189468
    },
    {
        "content": "<p>Could you send me the example you used to get it working?</p>",
        "id": 339690577,
        "sender_full_name": "Elia Bieri",
        "timestamp": 1678020609
    }
]