[
    {
        "content": "<p>I think <code>func_builder.ins().store(mem_flags, r_ptr, val1, *r0 as i32 * MEM_CELL_SIZE);</code> got the order of the pointer and the value wrong. Same for <code>func_builder.ins().store(mem_flags, r_ptr, constants[*c], *r0 as i32 * MEM_CELL_SIZE);</code>.</p>",
        "id": 484098037,
        "sender_full_name": "bjorn3",
        "timestamp": 1732397652
    },
    {
        "content": "<p>By the way use CallConv::SystemV instead of CallConv::Fast. The latter is currently identical to the former, but unlike the former it is explicitly not guaranteed to be stable between Cranelift versions, nor guaranteed to be identical to any call conv that Rust can call, so you can't use it for functions that need to be called from Rust as opposed to from other Cranelift compiled code.</p>",
        "id": 484098174,
        "sender_full_name": "bjorn3",
        "timestamp": 1732397786
    },
    {
        "content": "<p>Also it seems like you are forgetting to pass the length argument when calling the compiled function.</p>",
        "id": 484098229,
        "sender_full_name": "bjorn3",
        "timestamp": 1732397861
    },
    {
        "content": "<p>oh shoot it was that simple? :)</p>",
        "id": 484146889,
        "sender_full_name": "Farooq",
        "timestamp": 1732449933
    }
]