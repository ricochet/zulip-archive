[
    {
        "content": "<p>So for example this: &lt;<a href=\"https://gist.github.com/playXE/bcadfaefeecaf511d81f4b141ca1e1bc\">https://gist.github.com/playXE/bcadfaefeecaf511d81f4b141ca1e1bc</a>&gt;. There is relatively large Cranelift IR dump but when I look at disassembly it seems that it just splits function into a few and other parts I can't see</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://gist.github.com/playXE/bcadfaefeecaf511d81f4b141ca1e1bc\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/2aafd906f69f8f71c7544060163ba3e419b173e8\\/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f696d616765732f6d6f64756c65732f67697374732f676973742d6f672d696d6167652e706e67)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://gist.github.com/playXE/bcadfaefeecaf511d81f4b141ca1e1bc\" title=\"asm.s\">asm.s</a></div><div class=\"message_embed_description\">GitHub Gist: instantly share code, notes, and snippets.</div></div></div>",
        "id": 271752227,
        "sender_full_name": "Adel Prokurov",
        "timestamp": 1644767800
    },
    {
        "content": "<p>Cranelift can't split functions into multiple parts. I think whatever you used for disassembling returned an incomplete disassembly. It likely chokes on the constant embedded inside the instruction stream. At address 0x1478140d0 there should be a 64 bit constant followed by the rest of the code. The branch instruction at the end of the disassembly jumps over this constant.</p>",
        "id": 271768006,
        "sender_full_name": "bjorn3",
        "timestamp": 1644789915
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"382336\">@Adel Prokurov</span> ^</p>",
        "id": 271768011,
        "sender_full_name": "bjorn3",
        "timestamp": 1644789936
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"264278\">bjorn3</span> <a href=\"#narrow/stream/206238-general/topic/Aarch64.3A.20does.20cranelift.20split.20function.20into.20multiple.3F/near/271768006\">said</a>:</p>\n<blockquote>\n<p>Cranelift can't split functions into multiple parts. I think whatever you used for disassembling returned an incomplete disassembly. It likely chokes on the constant embedded inside the instruction stream. At address 0x1478140d0 there should be a 64 bit constant followed by the rest of the code. The branch instruction at the end of the disassembly jumps over this constant.</p>\n</blockquote>\n<p>Thanks for the reply. I'll look into alternative disassembler then (I am using capstone at the moment)</p>",
        "id": 271799565,
        "sender_full_name": "Adel Prokurov",
        "timestamp": 1644829612
    },
    {
        "content": "<p>So I tried to use bad64 to disarm arm64 code and it works just fine. Probably capstone just does not work correctly for M1?</p>",
        "id": 271800326,
        "sender_full_name": "Adel Prokurov",
        "timestamp": 1644829992
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"382336\">Adel Prokurov</span> has marked this topic as resolved.</p>",
        "id": 271800329,
        "sender_full_name": "Notification Bot",
        "timestamp": 1644829995
    },
    {
        "content": "<p>For capstone you will have to explicitly enable the skipdata option. Cranelift uses also capstone for debugging: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/05ace6c0e24f4fd8e256edab7de841a5b28c5735/cranelift/src/disasm.rs#L96\">https://github.com/bytecodealliance/wasmtime/blob/05ace6c0e24f4fd8e256edab7de841a5b28c5735/cranelift/src/disasm.rs#L96</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/05ace6c0e24f4fd8e256edab7de841a5b28c5735/cranelift/src/disasm.rs#L96\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/d91a4ad3f99037f45d92e3a14a4aca29d29ebd8a\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f386261333834396662313066666130346132613364393435663432313733316237643133316238383938316334616562336438323761353232383839656535352f62797465636f6465616c6c69616e63652f7761736d74696d65)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/05ace6c0e24f4fd8e256edab7de841a5b28c5735/cranelift/src/disasm.rs#L96\" title=\"wasmtime/disasm.rs at 05ace6c0e24f4fd8e256edab7de841a5b28c5735 · bytecodealliance/wasmtime\">wasmtime/disasm.rs at 05ace6c0e24f4fd8e256edab7de841a5b28c5735 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Standalone JIT-style runtime for WebAssembly, using Cranelift - wasmtime/disasm.rs at 05ace6c0e24f4fd8e256edab7de841a5b28c5735 · bytecodealliance/wasmtime</div></div></div>",
        "id": 271812162,
        "sender_full_name": "bjorn3",
        "timestamp": 1644836978
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"264278\">bjorn3</span> <a href=\"#narrow/stream/206238-general/topic/.E2.9C.94.20Aarch64.3A.20does.20cranelift.20split.20function.20into.20multiple.3F/near/271812162\">said</a>:</p>\n<blockquote>\n<p>For capstone you will have to explicitly enable the skipdata option. Cranelift uses also capstone for debugging: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/05ace6c0e24f4fd8e256edab7de841a5b28c5735/cranelift/src/disasm.rs#L96\">https://github.com/bytecodealliance/wasmtime/blob/05ace6c0e24f4fd8e256edab7de841a5b28c5735/cranelift/src/disasm.rs#L96</a></p>\n</blockquote>\n<p>I didn't know that! Thanks for help</p>",
        "id": 271936138,
        "sender_full_name": "Adel Prokurov",
        "timestamp": 1644910577
    }
]