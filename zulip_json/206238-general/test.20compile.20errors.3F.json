[
    {
        "content": "<p>With a fresh clone of wasmtime, it seems i hit compile errors when running <code>cargo test --all</code>:</p>\n<div class=\"codehilite\"><pre><span></span>error[E0554]: `#![feature]` may not be used on the stable release channel\n --&gt; /home/ben/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasm-0.5.2/src/lib.rs:1:1\n  |\n1 | #![feature(proc_macro_diagnostic)]\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0554]: `#![feature]` may not be used on the stable release channel\n --&gt; /home/ben/.cargo/registry/src/github.com-1ecc6299db9ec823/dynasm-0.5.2/src/lib.rs:2:1\n  |\n2 | #![feature(proc_macro_span)]\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</pre></div>\n\n\n<p>Is it expected?</p>",
        "id": 192543845,
        "sender_full_name": "Benjamin Bouvier",
        "timestamp": 1585754122
    },
    {
        "content": "<p>That's from Lightbeam, which currently only works on Nightly, which is why we only run these tests on Nightly: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/.github/workflows/main.yml#L227\" title=\"https://github.com/bytecodealliance/wasmtime/blob/master/.github/workflows/main.yml#L227\">https://github.com/bytecodealliance/wasmtime/blob/master/.github/workflows/main.yml#L227</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/master/.github/workflows/main.yml#L227\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/.github/workflows/main.yml#L227\" title=\"bytecodealliance/wasmtime\">bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Standalone JIT-style runtime for WebAssembly, using Cranelift - bytecodealliance/wasmtime</div></div></div>",
        "id": 192544556,
        "sender_full_name": "Till Schneidereit",
        "timestamp": 1585754387
    },
    {
        "content": "<p>and <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/.github/workflows/main.yml#L243-L244\" title=\"https://github.com/bytecodealliance/wasmtime/blob/master/.github/workflows/main.yml#L243-L244\">https://github.com/bytecodealliance/wasmtime/blob/master/.github/workflows/main.yml#L243-L244</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/master/.github/workflows/main.yml#L243-L244\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/.github/workflows/main.yml#L243-L244\" title=\"bytecodealliance/wasmtime\">bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Standalone JIT-style runtime for WebAssembly, using Cranelift - bytecodealliance/wasmtime</div></div></div>",
        "id": 192544635,
        "sender_full_name": "Till Schneidereit",
        "timestamp": 1585754404
    },
    {
        "content": "<p>Ok, thanks! Indeed it compiles at least with <code>cargo +nightly test --all</code></p>",
        "id": 192544903,
        "sender_full_name": "Benjamin Bouvier",
        "timestamp": 1585754506
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"254393\">@Benjamin Bouvier</span> you can also do <code>cargo test --all --exclude lightbeam</code></p>",
        "id": 192546949,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1585755239
    },
    {
        "content": "<p>it's a bummer you have to do that though :(</p>",
        "id": 192546974,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1585755243
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span> Ah nice, thanks! Would it make sense to have a tiny bash utility at the top-level, with a \"test\" command, to do this? (and we could put other utility commands, for other cases like this)</p>",
        "id": 192554305,
        "sender_full_name": "Benjamin Bouvier",
        "timestamp": 1585758290
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"254393\">@Benjamin Bouvier</span> perhaps yeah, but I'd ideally prefer to put effort towards getting <code>cargo test --all</code> working or something like that (e.g. by disabling tests in <code>lightbeam</code> or moving them behind a feature)</p>",
        "id": 192557409,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1585759608
    },
    {
        "content": "<p>One piece of information: dynasm requires a nightly Rust to build: <a href=\"https://github.com/CensoredUsername/dynasm-rs/issues/31\" title=\"https://github.com/CensoredUsername/dynasm-rs/issues/31\">https://github.com/CensoredUsername/dynasm-rs/issues/31</a>, and lightbeam uses dynasm. Recently one of the nightly requirements has been removed, but there's still one that can't be easily removed, it seems.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/CensoredUsername/dynasm-rs/issues/31\" style=\"background-image: url(https://avatars2.githubusercontent.com/u/3411575?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/CensoredUsername/dynasm-rs/issues/31\" title=\"Use on stable Rust? 路 Issue #31 路 CensoredUsername/dynasm-rs\">Use on stable Rust? 路 Issue #31 路 CensoredUsername/dynasm-rs</a></div><div class=\"message_embed_description\">Is there a plan to make the crate work on stable Rust at some point, i.e. using procedural macros (either via https://github.com/dtolnay/proc-macro-hack or using proper expression macros when they ...</div></div></div>",
        "id": 192677361,
        "sender_full_name": "Benjamin Bouvier",
        "timestamp": 1585839546
    },
    {
        "content": "<p>I don't understand much about proc macros and all, but if anybody wanted to take a look, then we could make it work on Rust too in general, and that would benefit the whole ecosystem, etc.</p>",
        "id": 192677569,
        "sender_full_name": "Benjamin Bouvier",
        "timestamp": 1585839616
    },
    {
        "content": "<p>Another thing: now when i run <code>cargo test --all --exclude lightbeam</code>, the C-API tests fail because it seems the files don't exist??</p>\n<div class=\"codehilite\"><pre><span></span>---- test_run_trap_example stdout ----\nthread &#39;test_run_trap_example&#39; panicked at &#39;success: Os { code: 2, kind: NotFound, message: &quot;No such file or directory&quot; }&#39;, crates/c-api/tests/wasm-c-examples.rs:10:18\n\nfailures:\n    test_run_callback_example\n    test_run_global_example\n    test_run_hello_example\n    test_run_memory_example\n    test_run_reflect_example\n    test_run_start_example\n    test_run_trap_example\n</pre></div>",
        "id": 192677704,
        "sender_full_name": "Benjamin Bouvier",
        "timestamp": 1585839674
    },
    {
        "content": "<p>Oh i see the line Till linked to also contains something to not run these tests.</p>",
        "id": 192678553,
        "sender_full_name": "Benjamin Bouvier",
        "timestamp": 1585839983
    },
    {
        "content": "<p>You probably want to exclude \"wasmtime-c-api \" too -- it requires <code>--test-threads 1</code></p>",
        "id": 192678640,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1585840012
    },
    {
        "content": "<p>Yep, thanks!</p>",
        "id": 192679246,
        "sender_full_name": "Benjamin Bouvier",
        "timestamp": 1585840220
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"253991\">Yury Delendik</span> <a href=\"#narrow/stream/206238-general/topic/test.20compile.20errors.3F/near/192678640\" title=\"#narrow/stream/206238-general/topic/test.20compile.20errors.3F/near/192678640\">said</a>:</p>\n<blockquote>\n<p>You probably want to exclude \"wasmtime-c-api \" too -- it requires <code>--test-threads 1</code></p>\n</blockquote>\n<p>Out of curiosity, why does it require <code>--test-threads 1</code>? I glanced at the tests but the answer didn't immediately jump out at me. Would it work to have a global lock to sequentialize each test thread? That way, even though they would still run sequentially, one wouldn't have to supply <code>--test-threads 1</code>.</p>",
        "id": 192682969,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1585841397
    },
    {
        "content": "<p>it calls <code>make</code> which call <code>cargo</code> to build wasmtime for c-api -- lots of cargo locks</p>",
        "id": 192683328,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1585841519
    },
    {
        "content": "<p>but that should Just Work, right? cargo's build locks shouldn't get broken if you don't pass <code>--test-threads 1</code>, right?</p>",
        "id": 192683499,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1585841570
    },
    {
        "content": "<p>they are not</p>",
        "id": 192683591,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1585841602
    },
    {
        "content": "<p>ok, then it shouldn't require <code>--test-threads 1</code> (at least for that reason) right?</p>",
        "id": 192683692,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1585841642
    },
    {
        "content": "<p>not sure, it might due to multiple <code>make</code> (which do not have a lock)</p>",
        "id": 192683917,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1585841710
    },
    {
        "content": "<p>To be clear, I was just meant that for efficient wasmtime-c-api run, it will make sense to use \"test-threads 1\". it might not to related to failures</p>",
        "id": 192684244,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1585841831
    },
    {
        "content": "<p>They seem to have two problems:</p>\n<ol>\n<li>\n<p>be using the wrong examples dir: <code>crates/c-api/examples</code> rather than <code>examples/</code> which is where the source files are, and</p>\n</li>\n<li>\n<p>invoking <code>make</code> when there doesn't appear to be a makefile anywhere</p>\n</li>\n</ol>",
        "id": 192685441,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1585842298
    },
    {
        "content": "<p>(1) is an easy fix, but I don't know where the makefile is supposed to be...</p>",
        "id": 192685492,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1585842322
    },
    {
        "content": "<p>going to switch them to use <code>cc</code> I suppose...</p>",
        "id": 192685789,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1585842445
    },
    {
        "content": "<p>There was Makefile in c-api/examples at one point <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 192688287,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1585843311
    },
    {
        "content": "<p>It was removed at <a href=\"https://github.com/bytecodealliance/wasmtime/commit/3c51d3adb8646fd271771b6a7bfa0253f8af0477#diff-6462c44c9f4a73be62c7d161adb35442\" title=\"https://github.com/bytecodealliance/wasmtime/commit/3c51d3adb8646fd271771b6a7bfa0253f8af0477#diff-6462c44c9f4a73be62c7d161adb35442\">https://github.com/bytecodealliance/wasmtime/commit/3c51d3adb8646fd271771b6a7bfa0253f8af0477#diff-6462c44c9f4a73be62c7d161adb35442</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/commit/3c51d3adb8646fd271771b6a7bfa0253f8af0477#diff-6462c44c9f4a73be62c7d161adb35442\" style=\"background-image: url(https://avatars2.githubusercontent.com/u/64996?s=200&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/commit/3c51d3adb8646fd271771b6a7bfa0253f8af0477#diff-6462c44c9f4a73be62c7d161adb35442\" title=\"Move all examples to a top-level directory (#1286) 路 bytecodealliance/wasmtime@3c51d3a\">Move all examples to a top-level directory (#1286) 路 bytecodealliance/wasmtime@3c51d3a</a></div><div class=\"message_embed_description\">* Move all examples to a top-level directory\r\n\r\nThis commit moves all API examples (Rust and C) to a top-level\r\n`examples` directory. This is intended to make it more discoverable and\r\nconventional...</div></div></div>",
        "id": 192689220,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1585843672
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253990\">@fitzgen (he/him)</span> I guess this line prevented us from noticing any errors on CI <a href=\"https://github.com/bytecodealliance/wasmtime/pull/904/files#diff-90829e76e906f1c73140c7ded7e1b268R203\" title=\"https://github.com/bytecodealliance/wasmtime/pull/904/files#diff-90829e76e906f1c73140c7ded7e1b268R203\">https://github.com/bytecodealliance/wasmtime/pull/904/files#diff-90829e76e906f1c73140c7ded7e1b268R203</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/904/files#diff-90829e76e906f1c73140c7ded7e1b268R203\" style=\"background-image: url(https://avatars3.githubusercontent.com/u/1523410?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/904/files#diff-90829e76e906f1c73140c7ded7e1b268R203\" title=\"Test wasmtime-c-api crate by yurydelendik 路 Pull Request #904 路 bytecodealliance/wasmtime\">Test wasmtime-c-api crate by yurydelendik 路 Pull Request #904 路 bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Attempt to add some testing and its CI automation to C API crate.</div></div></div>",
        "id": 192690071,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1585844033
    },
    {
        "content": "<p>I've fixed the tests and enabled them in CI here: <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1463\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1463\">https://github.com/bytecodealliance/wasmtime/pull/1463</a></p>\n<p><span class=\"user-mention\" data-user-id=\"253991\">@Yury Delendik</span> PTAL</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/1463\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/1463\" title=\"Fix wasmtime-c-api tests and run them in CI by fitzgen 路 Pull Request #1463 路 bytecodealliance/wasmtime\">Fix wasmtime-c-api tests and run them in CI by fitzgen 路 Pull Request #1463 路 bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">GitHub is home to over 40 million developers working together to host and review code, manage projects, and build software together.</div></div></div>",
        "id": 192696911,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1585847107
    },
    {
        "content": "<p>I get new compile errors when trying to use <code>cargo test --all --exclude lightbeam</code> from the top level directory:</p>\n<div class=\"codehilite\"><pre><span></span>failures:\n    src/externals.rs - externals::Memory::grow (line 811)\n    src/externals.rs - externals::Memory::new (line 671)\n    src/func.rs - func::Func (line 101)\n    src/func.rs - func::Func (line 35)\n    src/func.rs - func::Func (line 65)\n    src/func.rs - func::Func::wrap (line 335)\n    src/func.rs - func::Func::wrap (line 361)\n    src/func.rs - func::Func::wrap (line 392)\n    src/func.rs - func::Func::wrap (line 425)\n    src/linker.rs - linker::Linker::allow_shadowing (line 97)\n    src/linker.rs - linker::Linker::define (line 135)\n    src/linker.rs - linker::Linker::func (line 186)\n    src/linker.rs - linker::Linker::instance (line 234)\n    src/linker.rs - linker::Linker::new (line 71)\n    src/module.rs - module::Module::exports (line 429)\n    src/module.rs - module::Module::from_binary (line 223)\n    src/module.rs - module::Module::imports (line 371)\n    src/module.rs - module::Module::imports (line 383)\n    src/module.rs - module::Module::new (line 151)\n    src/runtime.rs - runtime::Store::interrupt_handle (line 643)\n    src/trap.rs - trap::Trap::new (line 28)\n</pre></div>\n\n\n<p>A detailed failure shows a <code>cc</code> failure, with <code>ld</code> returning 1 exit status. How can I run these tests properly on my machine?</p>",
        "id": 195049634,
        "sender_full_name": "Benjamin Bouvier",
        "timestamp": 1587643011
    },
    {
        "content": "<p>Oh well, cargo clean and a rerun made those pass. <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 195050064,
        "sender_full_name": "Benjamin Bouvier",
        "timestamp": 1587643252
    }
]