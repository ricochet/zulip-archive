[
    {
        "content": "<p>I'm not sure whether this is an issue with <code>wit-bindgen</code>, <code>cargo-component</code>, <code>wit-parser</code>, or some combination, so I figured I'd ask here for guidance.</p>\n<p>Given a world that defines a type outside of an interface, for example:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"n\">gumbo</span><span class=\"p\">:</span><span class=\"nc\">logging</span><span class=\"o\">@</span><span class=\"mf\">0.1.0</span><span class=\"p\">;</span>\n\n<span class=\"sd\">/// The `logging` world provides a standardized entry point for logging capabilities.</span>\n<span class=\"sd\">/// It serves as a dedicated interface for interacting with the logging functionality</span>\n<span class=\"sd\">/// defined within the `logging` interface, allowing for structured logging, context management,</span>\n<span class=\"sd\">/// and tracing within a plugin or application.</span>\n<span class=\"o\">@</span><span class=\"n\">since</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">0.1.0</span><span class=\"p\">)</span>\n<span class=\"n\">world</span><span class=\"w\"> </span><span class=\"n\">logging</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"sd\">/// Defines the severity level of a log message.</span>\n<span class=\"w\">        </span><span class=\"o\">@</span><span class=\"n\">since</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">0.1.0</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"k\">enum</span><span class=\"w\"> </span><span class=\"nc\">log</span><span class=\"o\">-</span><span class=\"n\">level</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"sd\">/// Detailed information typically used for diagnosing issues.</span>\n<span class=\"w\">            </span><span class=\"n\">trace</span><span class=\"p\">,</span>\n\n<span class=\"w\">            </span><span class=\"sd\">/// Information useful for developers to debug the application.</span>\n<span class=\"w\">            </span><span class=\"n\">debug</span><span class=\"p\">,</span>\n\n<span class=\"w\">            </span><span class=\"sd\">/// General operational information about the application's state.</span>\n<span class=\"w\">            </span><span class=\"n\">info</span><span class=\"p\">,</span>\n\n<span class=\"w\">            </span><span class=\"sd\">/// Indicates a potential problem that should be investigated.</span>\n<span class=\"w\">            </span><span class=\"n\">warn</span><span class=\"p\">,</span>\n\n<span class=\"w\">            </span><span class=\"sd\">/// Indicates a significant issue that could impact the application's functionality.</span>\n<span class=\"w\">            </span><span class=\"n\">error</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n\n<span class=\"w\">        </span><span class=\"sd\">/// Gets the current `log-level` of the application.</span>\n<span class=\"w\">        </span><span class=\"sd\">///</span>\n<span class=\"w\">        </span><span class=\"sd\">/// # Returns</span>\n<span class=\"w\">        </span><span class=\"sd\">/// - The current log level, or `None` if logging is disabled.</span>\n<span class=\"w\">        </span><span class=\"o\">@</span><span class=\"n\">since</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">0.1.0</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">get</span><span class=\"o\">-</span><span class=\"n\">log</span><span class=\"o\">-</span><span class=\"n\">level</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">option</span><span class=\"o\">&lt;</span><span class=\"n\">log</span><span class=\"o\">-</span><span class=\"n\">level</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n\n<span class=\"w\">        </span><span class=\"sd\">/// Logs an event with the specified severity level, target, and message.</span>\n<span class=\"w\">        </span><span class=\"sd\">///</span>\n<span class=\"w\">        </span><span class=\"sd\">/// # Parameters</span>\n<span class=\"w\">        </span><span class=\"sd\">/// - `level`: The severity level of the log event.</span>\n<span class=\"w\">        </span><span class=\"sd\">/// - `target`: The target or category of the log event.</span>\n<span class=\"w\">        </span><span class=\"sd\">/// - `message`: The log message.</span>\n<span class=\"w\">        </span><span class=\"sd\">///</span>\n<span class=\"w\">        </span><span class=\"sd\">/// # Returns</span>\n<span class=\"w\">        </span><span class=\"sd\">/// - `Ok(())`: If the event was logged successfully.</span>\n<span class=\"w\">        </span><span class=\"sd\">/// - `Err(log-error)`: If the logging operation failed.</span>\n<span class=\"w\">        </span><span class=\"o\">@</span><span class=\"n\">since</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">0.1.0</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">log</span><span class=\"o\">-</span><span class=\"n\">event</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">(</span><span class=\"n\">level</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">log</span><span class=\"o\">-</span><span class=\"n\">level</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">string</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">message</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">string</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>When using <code>wit_bindgen::generate!</code> with the <code>pub_export_macro</code> option, I get an error when using <code>cargo component build</code> </p>\n<div class=\"codehilite\" data-code-language=\"error\"><pre><span></span><code>Caused by:\n    0: failed to merge worlds from two documents\n    1: duplicate import found for interface `log-level`\n</code></pre></div>\n<p>I'm trying to track down the bug, but it's a bit complicated because <code>cargo-component</code> uses an older version of <code>wit-parser</code> than <code>wit-bindgen</code>.</p>\n<p>It's also weird because <code>log-level</code> is a type, not an interface...</p>",
        "id": 464754458,
        "sender_full_name": "Joe Sylve",
        "timestamp": 1724451371
    },
    {
        "content": "<p>If I wrap the functionality into an interface, there's no problem</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">@</span><span class=\"n\">since</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">0.1.0</span><span class=\"p\">)</span>\n<span class=\"n\">world</span><span class=\"w\"> </span><span class=\"n\">logging</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">logging</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">interface</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"sd\">/// Defines the severity level of a log message.</span>\n<span class=\"w\">        </span><span class=\"o\">@</span><span class=\"n\">since</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">0.1.0</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"k\">enum</span><span class=\"w\"> </span><span class=\"nc\">log</span><span class=\"o\">-</span><span class=\"n\">level</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"sd\">/// Detailed information typically used for diagnosing issues.</span>\n<span class=\"w\">            </span><span class=\"n\">trace</span><span class=\"p\">,</span>\n\n<span class=\"w\">            </span><span class=\"sd\">/// Information useful for developers to debug the application.</span>\n<span class=\"w\">            </span><span class=\"n\">debug</span><span class=\"p\">,</span>\n\n<span class=\"w\">            </span><span class=\"sd\">/// General operational information about the application's state.</span>\n<span class=\"w\">            </span><span class=\"n\">info</span><span class=\"p\">,</span>\n\n<span class=\"w\">            </span><span class=\"sd\">/// Indicates a potential problem that should be investigated.</span>\n<span class=\"w\">            </span><span class=\"n\">warn</span><span class=\"p\">,</span>\n\n<span class=\"w\">            </span><span class=\"sd\">/// Indicates a significant issue that could impact the application's functionality.</span>\n<span class=\"w\">            </span><span class=\"n\">error</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n\n<span class=\"w\">        </span><span class=\"sd\">/// Gets the current `log-level` of the application.</span>\n<span class=\"w\">        </span><span class=\"sd\">///</span>\n<span class=\"w\">        </span><span class=\"sd\">/// # Returns</span>\n<span class=\"w\">        </span><span class=\"sd\">/// - The current log level, or `None` if logging is disabled.</span>\n<span class=\"w\">        </span><span class=\"o\">@</span><span class=\"n\">since</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">0.1.0</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"n\">get</span><span class=\"o\">-</span><span class=\"n\">log</span><span class=\"o\">-</span><span class=\"n\">level</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">option</span><span class=\"o\">&lt;</span><span class=\"n\">log</span><span class=\"o\">-</span><span class=\"n\">level</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n\n<span class=\"w\">        </span><span class=\"sd\">/// Logs an event with the specified severity level, target, and message.</span>\n<span class=\"w\">        </span><span class=\"sd\">///</span>\n<span class=\"w\">        </span><span class=\"sd\">/// # Parameters</span>\n<span class=\"w\">        </span><span class=\"sd\">/// - `level`: The severity level of the log event.</span>\n<span class=\"w\">        </span><span class=\"sd\">/// - `target`: The target or category of the log event.</span>\n<span class=\"w\">        </span><span class=\"sd\">/// - `message`: The log message.</span>\n<span class=\"w\">        </span><span class=\"sd\">///</span>\n<span class=\"w\">        </span><span class=\"sd\">/// # Returns</span>\n<span class=\"w\">        </span><span class=\"sd\">/// - `Ok(())`: If the event was logged successfully.</span>\n<span class=\"w\">        </span><span class=\"sd\">/// - `Err(log-error)`: If the logging operation failed.</span>\n<span class=\"w\">        </span><span class=\"o\">@</span><span class=\"n\">since</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">0.1.0</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"n\">log</span><span class=\"o\">-</span><span class=\"n\">event</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">(</span><span class=\"n\">level</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">log</span><span class=\"o\">-</span><span class=\"n\">level</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">string</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">message</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">string</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>",
        "id": 464754665,
        "sender_full_name": "Joe Sylve",
        "timestamp": 1724451504
    },
    {
        "content": "<p>That’s a wit-bindgen bug, types and functions in a world rather than an interface have historically been a source of bugs but it all should work</p>",
        "id": 464755139,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1724451810
    },
    {
        "content": "<p>Can you file it on that repo?</p>",
        "id": 464755151,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1724451818
    },
    {
        "content": "<p>Yes, I'll put together a minimal example and file a bug.  Just didn't know which project to file it under.  Thanks!</p>",
        "id": 464755238,
        "sender_full_name": "Joe Sylve",
        "timestamp": 1724451862
    },
    {
        "content": "<p>Wait hmm. I actually take it back that may be a wit-component bug that is due to being on an old version in cargo component… but I’m not sure. I’m done with my laptop for the day and answering from mobile so I can’t reproduce to check quick. But file it on wit-bindgen and we will look</p>",
        "id": 464755315,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1724451919
    },
    {
        "content": "<p>Yeah, it looks like the resolver stuff was refactored in <code>wit-parser</code>.  I attempted to update wit-component with the newer version, but it requires changes that I'm not comfortable with.</p>",
        "id": 464755451,
        "sender_full_name": "Joe Sylve",
        "timestamp": 1724451997
    },
    {
        "content": "<p>Porting to the updated dependencies might fix things.</p>",
        "id": 464755493,
        "sender_full_name": "Joe Sylve",
        "timestamp": 1724452027
    }
]