[
    {
        "content": "<p>As part of my work with Go bindings generation, I’d like to have a reliable way to test component implementations. </p>\n<p>I’d like to have a Test component and an Implementation component where the Test component imports an interface exported by the Implementation component. Is there a process for combining the two components into a single component that, say, Wasmtime can run?</p>\n<p>The Test component would use a world that combines <code>wasi:cli/command</code> + another world to test. The Implementation component would export the latter.</p>",
        "id": 426172787,
        "sender_full_name": "Randy Reddig",
        "timestamp": 1710262714
    },
    {
        "content": "<p>There is the <code>wasm-tools compose</code> subcommand of the <code>wasm-tools</code> CLI: <a href=\"https://github.com/bytecodealliance/wasm-tools\">https://github.com/bytecodealliance/wasm-tools</a></p>\n<p>Or there is the Rust crate that does the same things as a library: <a href=\"https://crates.io/crates/wasm-compose\">https://crates.io/crates/wasm-compose</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasm-tools\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/f5bd0b4afe0c7f1c599beff6dab3ac5ef3804249\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f306237313534346334313034333838356534643765336631373939616537643934613933636639643137616362353639383231306264313766363435616139642f62797465636f6465616c6c69616e63652f7761736d2d746f6f6c73)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasm-tools\" title=\"GitHub - bytecodealliance/wasm-tools: CLI and Rust libraries for low-level manipulation of WebAssembly modules\">GitHub - bytecodealliance/wasm-tools: CLI and Rust libraries for low-level manipulation of WebAssembly modules</a></div><div class=\"message_embed_description\"> CLI and Rust libraries for low-level manipulation of WebAssembly modules  - GitHub - bytecodealliance/wasm-tools: CLI and Rust libraries for low-level manipulation of WebAssembly modules</div></div></div>",
        "id": 426173445,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1710262885
    },
    {
        "content": "<p>looks like the crate's README is a bit outdated</p>",
        "id": 426173655,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1710262938
    },
    {
        "content": "<p>in the bit about implementation status</p>",
        "id": 426173683,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1710262949
    },
    {
        "content": "<p><a href=\"https://github.com/bytecodealliance/wasm-tools/pull/1447\">https://github.com/bytecodealliance/wasm-tools/pull/1447</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasm-tools/pull/1447\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/37de3636c01bebfbf45ae61db564b9d26b5de96b\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f633865393763343135643637366262383532376264623336383266623362333232306332333061636635313036343765353964303637313736363365646164642f62797465636f6465616c6c69616e63652f7761736d2d746f6f6c732f70756c6c2f31343437)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasm-tools/pull/1447\" title=\"Remove outdated warning about no/wip component support in runtimes from wasm-compose README by fitzgen · Pull Request #1447 · bytecodealliance/wasm-tools\">Remove outdated warning about no/wip component support in runtimes from wasm-compose README by fitzgen · Pull Request #1447 · bytecodealliance/wasm-tools</a></div><div class=\"message_embed_description\"> CLI and Rust libraries for low-level manipulation of WebAssembly modules  - Remove outdated warning about no/wip component support in runtimes from wasm-compose README by fitzgen · Pull Request #1447 · bytecodealliance/wasm-tools</div></div></div>",
        "id": 426173930,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1710263038
    },
    {
        "content": "<p>I'll also drop a link to <a href=\"https://github.com/peterhuene/wac\">https://github.com/peterhuene/wac</a> which is intended for compositions as well and is sort of the \"next generation\" of <code>wasm-tools compose</code>, although it's still in development so it may not be suitable for all use cases yet</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/peterhuene/wac\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/6538c738e5bbd9b7bd669ceb0b681c77c28632b7\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f666365343237383034323864303764616461343863316435306161393537616632616466366565306333306532366233303332303332383665373932376162382f70657465726875656e652f776163)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/peterhuene/wac\" title=\"GitHub - peterhuene/wac: WebAssembly Composition (WAC) tooling\">GitHub - peterhuene/wac: WebAssembly Composition (WAC) tooling</a></div><div class=\"message_embed_description\">WebAssembly Composition (WAC) tooling. Contribute to peterhuene/wac development by creating an account on GitHub.</div></div></div>",
        "id": 426174612,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1710263251
    },
    {
        "content": "<p>OK, thanks!</p>",
        "id": 426174619,
        "sender_full_name": "Randy Reddig",
        "timestamp": 1710263253
    },
    {
        "content": "<p>I'll also mention that the testing story in wit-bindgen is one I've always lamented is \"not great\". It's pretty heavyweight today and is one that I would love to improve, and what you're describing is a way I've wanted to try implementing before.</p>",
        "id": 426174758,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1710263291
    },
    {
        "content": "<p>tl;dr; I like your idea, and if it works out I'd like to change wit-bindgen to a similar scheme</p>",
        "id": 426174829,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1710263313
    },
    {
        "content": "<p>ideally one day I'd hope that there could be sort of a shared test suite for all bindings generators to easily use</p>",
        "id": 426174871,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1710263328
    },
    {
        "content": "<p>That’d be great.</p>",
        "id": 426182975,
        "sender_full_name": "Randy Reddig",
        "timestamp": 1710266038
    },
    {
        "content": "<p>something like a straightforward invocation of a standard tool to compose a <code>wasi:cli/command</code> + another component + with a <code>--test-world $WORLD</code></p>",
        "id": 426183242,
        "sender_full_name": "Randy Reddig",
        "timestamp": 1710266115
    }
]