[
    {
        "content": "<p>I have a minor problem with VSCode IDE (as described by colleague) with our new language. When loading source into a pane it is not possible to immediately set breakpoints graphically. Instead we need to set the BP in the configuration. I suspect this is due to the JIT nature of DWARF generation. If so, how can this be worked around, e.g. by passing some option to <code>wasmtime</code>? Anybody knows how this is handled for e.g. Rust?</p>\n<p>My other theory is that we don't emit <code>DW_AT_main_subprogram</code> attribute yet, but I doubt that <code>wasmtime</code> handles that at all.</p>\n<p>Maybe we just have to declare the file type <code>.mo</code> of our language in the IDE as _debuggable_? (Not that I know where to even look for such a setting...)</p>\n<p>Thanks in advance for any hints,</p>\n<p>cheers,</p>\n<p>Gabor</p>",
        "id": 197531051,
        "sender_full_name": "Gabor Greif",
        "timestamp": 1589449847
    },
    {
        "content": "<p>CC <span class=\"user-mention\" data-user-id=\"253991\">@Yury Delendik</span></p>",
        "id": 197531651,
        "sender_full_name": "Till Schneidereit",
        "timestamp": 1589450220
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"268007\">@Gabor Greif</span> Yeah, JIT breakpoints are picked up when wasmtime is running. VSCode can be configured to set breakpoint anywhere. See \"Allow setting breakpoints in any file\" setting. Such breakpoints will \"materialize\" as soon as JIT code is generated.</p>",
        "id": 197558738,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1589465189
    },
    {
        "content": "<p>Theoretically it is possible to pause at the end of module instantiation and before wasm start function is run, e.g. by adding some breakpoint (at wasm file or wasmtime symbol) definition in \".lldbinit\" or in debugger params.</p>",
        "id": 197559958,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1589465368
    }
]