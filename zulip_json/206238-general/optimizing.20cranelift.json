[
    {
        "content": "<p>are there any ways to improve cranelift output? i know there is the speed/size opt setting but even going for best perf the code isn't fantastic. are there maybe like some addon modules which can do better optimizations or something?</p>",
        "id": 228101321,
        "sender_full_name": "snek",
        "timestamp": 1614482750
    },
    {
        "content": "<p>Are you using the new x64 backend or the old x86 backend? When using wasmtime you can enable the former using the \"experimental_x64\" crate feature. The new x64 backend can result in better output.</p>",
        "id": 228124481,
        "sender_full_name": "bjorn3",
        "timestamp": 1614511558
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"311553\">@snek</span> I have a module to do constant propagation but I can't really upstream it until the IR structs in cranelift-codegen get moved somewhere else (otherwise there is a circular dependency). I can share that module if you're interested, though.</p>",
        "id": 228277577,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1614621900
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"264278\">bjorn3</span> <a href=\"#narrow/stream/206238-general/topic/optimizing.20cranelift/near/228124481\">said</a>:</p>\n<blockquote>\n<p>Are you using the new x64 backend or the old x86 backend? When using wasmtime you can enable the former using the \"experimental_x64\" crate feature. The new x64 backend can result in better output.</p>\n</blockquote>\n<p>not using wasmtime, just cranelift directly (not doing wasm stuff either)</p>",
        "id": 228285131,
        "sender_full_name": "snek",
        "timestamp": 1614624588
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"254110\">Andrew Brown</span> <a href=\"#narrow/stream/206238-general/topic/optimizing.20cranelift/near/228277577\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"311553\">snek</span> I have a module to do constant propagation but I can't really upstream it until the IR structs in cranelift-codegen get moved somewhere else (otherwise there is a circular dependency). I can share that module if you're interested, though.</p>\n</blockquote>\n<p>sounds cool, is it on gh?</p>",
        "id": 228285248,
        "sender_full_name": "snek",
        "timestamp": 1614624620
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"311553\">snek</span> <a href=\"#narrow/stream/206238-general/topic/optimizing.20cranelift/near/228285131\">said</a>:</p>\n<blockquote>\n<p>not using wasmtime, just cranelift directly (not doing wasm stuff either)</p>\n</blockquote>\n<p>It's an option in Cranelift actually, though when using <code>cranelift-codegen</code> directly, you need to build with the <code>x64</code> feature (<code>x86</code> is the old backend) and then choose <code>BackendVariant::MachInst</code> when instantiating the backend. @bjorn3's point stands: the new backend will generally produce better code, so it's worth experimenting with if you're not already! We're hoping to make it the default soon, once a few more features are finished.</p>",
        "id": 228285630,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1614624773
    },
    {
        "content": "<p>so i need to stop using the <code>cranelift</code> package, spilt that into <code>cranelift-frontend</code> and <code>cranelift-codegen</code> with x64 feature?</p>",
        "id": 228286005,
        "sender_full_name": "snek",
        "timestamp": 1614624906
    },
    {
        "content": "<p>Oh, no, you can do all this via <code>cranelift</code> too</p>",
        "id": 228286611,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1614625118
    },
    {
        "content": "<p>In that case build with <code>experimental_x64</code></p>",
        "id": 228286631,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1614625127
    },
    {
        "content": "<p>there is no x64 or experimental_x64 feature for the cranelift crate</p>",
        "id": 228286655,
        "sender_full_name": "snek",
        "timestamp": 1614625141
    },
    {
        "content": "<p>Urgh, I was looking at <code>cranelift-tools</code> actually, sorry about that</p>",
        "id": 228286728,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1614625168
    },
    {
        "content": "<p>Yes, to access the new backend you'll need to depend on the -codegen crate directly</p>",
        "id": 228286779,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1614625190
    }
]