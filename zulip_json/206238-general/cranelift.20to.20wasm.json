[
    {
        "content": "<p>Hello, i am interested i writing a functional compiler bac end for a functional language. I have been thining of targetting llvm but cranelift may be an easier to use alternative. One of my main questions Is whether cranelift can Targets wasm like llvm can</p>",
        "id": 392894572,
        "sender_full_name": "Diego Antonio Rosario Palomino",
        "timestamp": 1695611067
    },
    {
        "content": "<p>Hey, currently cranelift only supports 4 targets, x86, AArch64, S390X and RISC-V. Adding a WebAssembly backend has been brought up before in this issue: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2566\">https://github.com/bytecodealliance/wasmtime/issues/2566</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/issues/2566\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/b65081c7af59a359a4d7dd29933afab4a7e25b22\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f393338366236353364323236353131666363636434373937356237323730333235366238316335656635356235323337303261363263373031373735633439652f62797465636f6465616c6c69616e63652f7761736d74696d652f6973737565732f32353636)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/issues/2566\" title=\"Add Webassembly backend · Issue #2566 · bytecodealliance/wasmtime\">Add Webassembly backend · Issue #2566 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Feature Add a Cranelift backend that compiles to Webassembly. Benefit This would allow a compiler to run in the browser and compile code to run in the browser. Implementation No plan yet Alternativ...</div></div></div>",
        "id": 393007603,
        "sender_full_name": "Afonso Bordado",
        "timestamp": 1695647032
    },
    {
        "content": "<p>I see, so it could be done, but it has Yet to be implemented. Is there anything in the cranelift ir that would make it not an ideal Fit to Target wasm? <br>\nI have seem other SSA ir that Targets wasm so i hope it Is as well:<br>\n<a href=\"https://github.com/GetFirefly/firefly\">https://github.com/GetFirefly/firefly</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/GetFirefly/firefly\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/c54b15140578b3d82e24858291eaf71e785f74c3\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f346631646634353531653038646336363339643466393762366633663032653230626233386138353832366664316536313438646333643133343735646161302f47657446697265666c792f66697265666c79)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/GetFirefly/firefly\" title=\"GitHub - GetFirefly/firefly: An alternative BEAM implementation, designed for WebAssembly\">GitHub - GetFirefly/firefly: An alternative BEAM implementation, designed for WebAssembly</a></div><div class=\"message_embed_description\">An alternative BEAM implementation, designed for WebAssembly - GitHub - GetFirefly/firefly: An alternative BEAM implementation, designed for WebAssembly</div></div></div>",
        "id": 393038087,
        "sender_full_name": "Diego Antonio Rosario Palomino",
        "timestamp": 1695654276
    },
    {
        "content": "<p>I'm not entirely sure if there's anything cranelift specific that makes it worse, <span class=\"user-mention\" data-user-id=\"254389\">@Chris Fallin</span> has a good summary on the topic in this <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2566#issuecomment-1350345180\">comment</a>.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/issues/2566#issuecomment-1350345180\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/b65081c7af59a359a4d7dd29933afab4a7e25b22\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f393338366236353364323236353131666363636434373937356237323730333235366238316335656635356235323337303261363263373031373735633439652f62797465636f6465616c6c69616e63652f7761736d74696d652f6973737565732f32353636)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/issues/2566#issuecomment-1350345180\" title=\"Add Webassembly backend · Issue #2566 · bytecodealliance/wasmtime\">Add Webassembly backend · Issue #2566 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Feature Add a Cranelift backend that compiles to Webassembly. Benefit This would allow a compiler to run in the browser and compile code to run in the browser. Implementation No plan yet Alternativ...</div></div></div>",
        "id": 393042148,
        "sender_full_name": "Afonso Bordado",
        "timestamp": 1695655286
    },
    {
        "content": "<p>Thanks. That comment links to a very useful project</p>",
        "id": 393112048,
        "sender_full_name": "Diego Antonio Rosario Palomino",
        "timestamp": 1695676324
    },
    {
        "content": "<p>I have been talking with the Gerbil/ Gambit scheme developers and the lead developer of Gambit says he would rather target web assembly directly as another IR could limit the performance of the generated code and the Gambit Bytecode Machine already does relooping of sorts to target other languages and is already an stack machine</p>",
        "id": 393113438,
        "sender_full_name": "Diego Antonio Rosario Palomino",
        "timestamp": 1695676954
    },
    {
        "content": "<p>I am checking the Gambit Bytecode Machine to see whether its actually similar to wasm and cranelift to see if using it would add a performance penalty.</p>\n<p>Would rather use cranelift ( or a similar alternative ) to gain more native backends, low level optimizations and the ability to define custom calling conventions</p>",
        "id": 393114043,
        "sender_full_name": "Diego Antonio Rosario Palomino",
        "timestamp": 1695677248
    },
    {
        "content": "<p>Redox os developers say faster context switching could be achieved by using a non standard system call ABI</p>",
        "id": 393114172,
        "sender_full_name": "Diego Antonio Rosario Palomino",
        "timestamp": 1695677294
    }
]