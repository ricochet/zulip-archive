[
    {
        "content": "<p>I am able to build programs using upstream LLVM and clang, with a self-compiled wasi-libc sysroot, and I can run them locally using wasmtime (mostly, I ran into some issues with tmpfile not being defined in wasi-libc at link time, but that's not a wasmtime problem). I've been trying to find a way to run these wasm files on a browser, but it looks like I need some polyfill for WASI. Some time ago there was a WASI polyfill available for browsers (I guess there's still a version of it lying around at <a href=\"https://wasi.dev/polyfill/\">https://wasi.dev/polyfill/</a>), but that older version doesn't work with some namespace changes done on WASI (looks like the namespace now is called wasi_snapshot_preview1).</p>\n<p>Looks like there was some work to move the polyfill implementation to Rust, but that seems to have stalled (<a href=\"https://github.com/bytecodealliance/wasmtime/pull/720\">https://github.com/bytecodealliance/wasmtime/pull/720</a> , waiting on a generator implementation using *.witx files?).</p>\n<p>I guess my question is if there is any way to experiment with WASI on a modern web browser?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/720\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/720\" title=\"Js-polyfill using wasi-common crate by kubkon 路 Pull Request #720 路 bytecodealliance/wasmtime\">Js-polyfill using wasi-common crate by kubkon 路 Pull Request #720 路 bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">This commit drafts out js-polyfill using wasi-common crate.\nThere is a couple of issues with this PR, so I&#39;m gonna mark it as a draft PR until all (or at least a vast majority is satisfactorily...</div></div></div>",
        "id": 221420224,
        "sender_full_name": "Gabriel Marcano",
        "timestamp": 1609625654
    },
    {
        "content": "<p>There are a few different options; could you say more about what specifically you're looking to do?</p>",
        "id": 221421031,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1609626949
    },
    {
        "content": "<p>I'm mostly just trying to learn the ecosystem and how everything ties together. I was mostly curious if there was a more up-to-date polyfill available, as the one in <a href=\"https://wasi.dev/polyfill/\">https://wasi.dev/polyfill/</a> doesn't seem to be compatible anymore (I might be able to hack something from it to make it work again?).</p>\n<p>The application I'm trying to run as an experiment right now is something I wrote over the summer (<a href=\"https://gitlab.com/gemarcano/libspc_tag\">https://gitlab.com/gemarcano/libspc_tag</a>), just a simple command-line parser for SNES .spc metadata. I'm not even trying to get it to read in data, just to run and print the help string as a proof of concept (even if running means sending all output to console.log).</p>\n<p>From converting the wasm file to a .wat file, these are the required imports:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"s\">\"proc_exit\"</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"w\"> </span><span class=\"p\">(;</span><span class=\"mi\">0</span><span class=\"p\">;)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">4</span><span class=\"p\">)))</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"s\">\"args_sizes_get\"</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"w\"> </span><span class=\"p\">(;</span><span class=\"mi\">1</span><span class=\"p\">;)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">1</span><span class=\"p\">)))</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"s\">\"args_get\"</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"w\"> </span><span class=\"p\">(;</span><span class=\"mi\">2</span><span class=\"p\">;)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">1</span><span class=\"p\">)))</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"s\">\"fd_prestat_get\"</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"w\"> </span><span class=\"p\">(;</span><span class=\"mi\">3</span><span class=\"p\">;)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">1</span><span class=\"p\">)))</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"s\">\"fd_prestat_dir_name\"</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"w\"> </span><span class=\"p\">(;</span><span class=\"mi\">4</span><span class=\"p\">;)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">0</span><span class=\"p\">)))</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"s\">\"fd_fdstat_get\"</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"w\"> </span><span class=\"p\">(;</span><span class=\"mi\">5</span><span class=\"p\">;)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">1</span><span class=\"p\">)))</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"s\">\"path_open\"</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"w\"> </span><span class=\"p\">(;</span><span class=\"mi\">6</span><span class=\"p\">;)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">13</span><span class=\"p\">)))</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"s\">\"fd_close\"</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"w\"> </span><span class=\"p\">(;</span><span class=\"mi\">7</span><span class=\"p\">;)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">2</span><span class=\"p\">)))</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"s\">\"fd_fdstat_set_flags\"</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"w\"> </span><span class=\"p\">(;</span><span class=\"mi\">8</span><span class=\"p\">;)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">1</span><span class=\"p\">)))</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"s\">\"fd_read\"</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"w\"> </span><span class=\"p\">(;</span><span class=\"mi\">9</span><span class=\"p\">;)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">7</span><span class=\"p\">)))</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"s\">\"fd_seek\"</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"w\"> </span><span class=\"p\">(;</span><span class=\"mi\">10</span><span class=\"p\">;)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">14</span><span class=\"p\">)))</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"s\">\"fd_write\"</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"w\"> </span><span class=\"p\">(;</span><span class=\"mi\">11</span><span class=\"p\">;)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">7</span><span class=\"p\">)))</span><span class=\"w\"></span>\n</code></pre></div>\n<p>As an actual goal a little further down the line, I have an ARM emulator written in C that I would like to run inside a web browser (<a href=\"https://github.com/lab11/M-ulator\">https://github.com/lab11/M-ulator</a>). I'm in the process of refactoring it to make it easier to run in single-threaded environments.</p>\n<p>In reality, I don't think I need all of the file IO functions for either program, as I should be able to have JS code read in whatever into the webasm memory and just pass those buffers around if I call the underlying functions manually from Javascript.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://gitlab.com/gemarcano/libspc_tag\" style=\"background-image: url(https://assets.gitlab-static.net/uploads/-/system/project/avatar/18840337/libspc_tag.png)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://gitlab.com/gemarcano/libspc_tag\" title=\"Gabriel / libspc_tag\">Gabriel / libspc_tag</a></div><div class=\"message_embed_description\">SNES SPC file format tag library and utilities.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/lab11/M-ulator\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/4251084?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/lab11/M-ulator\" title=\"lab11/M-ulator\">lab11/M-ulator</a></div><div class=\"message_embed_description\">A highly extensible ARM {e,si}mulator. Contribute to lab11/M-ulator development by creating an account on GitHub.</div></div></div>",
        "id": 221422251,
        "sender_full_name": "Gabriel Marcano",
        "timestamp": 1609628698
    },
    {
        "content": "<p>Most of the WASI ecosystem right now is focused on non-browser use cases, but there are a few polyfills which may get you pretty close: <a href=\"https://github.com/bjorn3/rust/blob/compile_rustc_wasm4/rustc.html\">https://github.com/bjorn3/rust/blob/compile_rustc_wasm4/rustc.html</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bjorn3/rust/blob/compile_rustc_wasm4/rustc.html\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/17426603?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bjorn3/rust/blob/compile_rustc_wasm4/rustc.html\" title=\"bjorn3/rust\">bjorn3/rust</a></div><div class=\"message_embed_description\">A safe, concurrent, practical language. Contribute to bjorn3/rust development by creating an account on GitHub.</div></div></div>",
        "id": 221423459,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1609630595
    },
    {
        "content": "<p><a href=\"https://github.com/WebAssembly/waterfall/blob/master/src/wasi.js\">https://github.com/WebAssembly/waterfall/blob/master/src/wasi.js</a> is another</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/waterfall/blob/master/src/wasi.js\" style=\"background-image: url(https://avatars3.githubusercontent.com/u/11578470?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/waterfall/blob/master/src/wasi.js\" title=\"WebAssembly/waterfall\">WebAssembly/waterfall</a></div><div class=\"message_embed_description\">Build and test bots. Contribute to WebAssembly/waterfall development by creating an account on GitHub.</div></div></div>",
        "id": 221423461,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1609630602
    },
    {
        "content": "<p>I just wrote my own custom polyfill since none of the ones I saw seemed to be updated recently:<br>\n<a href=\"https://salsa.debian.org/Kazan-team/power-cpu-sim/-/blob/master/index.html\">https://salsa.debian.org/Kazan-team/power-cpu-sim/-/blob/master/index.html</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://salsa.debian.org/Kazan-team/power-cpu-sim/-/blob/master/index.html\" style=\"background-image: url(https://salsa.debian.org/assets/gitlab_logo-7ae504fe4f68fdebb3c2034e36621930cd36ea87924c11ff65dbcb8ed50dca58.png)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://salsa.debian.org/Kazan-team/power-cpu-sim/-/blob/master/index.html\" title=\"index.html 路 master 路 Kazan / power-cpu-sim\">index.html 路 master 路 Kazan / power-cpu-sim</a></div><div class=\"message_embed_description\">Debian Salsa Gitlab</div></div></div>",
        "id": 221428639,
        "sender_full_name": "Jacob Lifshay",
        "timestamp": 1609639740
    },
    {
        "content": "<p>Thanks for all the pointers! I'll take a look at them.</p>\n<p>Worst case scenario, I think I might be able to get away by stubbing all of the IO related required imports since I don't think I'll actually need them for what I'm trying to run in the web, so long as I can export some of the underlying functions used in the programs so I can call them from Javascript directly.</p>",
        "id": 221445161,
        "sender_full_name": "Gabriel Marcano",
        "timestamp": 1609670755
    }
]