[
    {
        "content": "<p>An old project of mine had a function defined, which had a return type of <code>expected&lt;_, error&gt;</code>. <code>_</code> used to correlate to Rust unit type <code>()</code>, but it seems like it's no longer valid.</p>\n<p>What type should I use for Rust's <code>()</code> unit type?</p>",
        "id": 281536460,
        "sender_full_name": "Ari Seyhun",
        "timestamp": 1651924177
    },
    {
        "content": "<p>Looking at the wit spec, it seems like <code>expected&lt;_, error&gt;</code> should be valid?<br>\nThe spec shows:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">expected</span><span class=\"w\"> </span>::<span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">expected</span><span class=\"sc\">' '</span><span class=\"o\">&lt;'</span><span class=\"w\"> </span><span class=\"n\">expected</span><span class=\"o\">-</span><span class=\"n\">ty</span><span class=\"w\"> </span><span class=\"sc\">','</span><span class=\"w\"> </span><span class=\"n\">expected</span><span class=\"o\">-</span><span class=\"n\">ty</span><span class=\"w\"> </span><span class=\"sc\">'&gt;'</span><span class=\"w\"></span>\n<span class=\"n\">expected</span><span class=\"o\">-</span><span class=\"n\">ty</span><span class=\"w\"> </span>::<span class=\"o\">=</span><span class=\"w\"> </span><span class=\"sc\">'_'</span><span class=\"w\"></span>\n<span class=\"w\">              </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">ty</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 281536669,
        "sender_full_name": "Ari Seyhun",
        "timestamp": 1651924398
    },
    {
        "content": "<p>Oh it seems like <code>tuple&lt;&gt;</code> might be the correct approach now</p>",
        "id": 281536753,
        "sender_full_name": "Ari Seyhun",
        "timestamp": 1651924482
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"474928\">Ari Seyhun</span> has marked this topic as resolved.</p>",
        "id": 281542916,
        "sender_full_name": "Notification Bot",
        "timestamp": 1651933331
    },
    {
        "content": "<p>With the latest in <code>main</code>, <code>unit</code> is now the unit type, so <code>expected&lt;unit, error&gt;</code> should be used instead.</p>",
        "id": 281622322,
        "sender_full_name": "Peter Huene",
        "timestamp": 1652050434
    },
    {
        "content": "<p><code>unit</code> might be replaced with <code>()</code> like in Rust, discussion is here: <a href=\"https://github.com/bytecodealliance/wit-bindgen/issues/217\">https://github.com/bytecodealliance/wit-bindgen/issues/217</a></p>",
        "id": 281622391,
        "sender_full_name": "Peter Huene",
        "timestamp": 1652050539
    },
    {
        "content": "<p>on a related note, <code>tuple</code> might also be replaced with <code>(...)</code> like in Rust, discussion here: <a href=\"https://github.com/bytecodealliance/wit-bindgen/issues/216\">https://github.com/bytecodealliance/wit-bindgen/issues/216</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wit-bindgen/issues/216\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/ac2e29f1152a3fe773cc9d3a92ecff816e11cb9e\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f316439323934373230306537623432363764313534623264373762333461643530373033376634343638313535616437363134613964336232366561346464362f62797465636f6465616c6c69616e63652f7769742d62696e6467656e2f6973737565732f323136)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wit-bindgen/issues/216\" title=\"Syntax for tuples 路 Issue #216 路 bytecodealliance/wit-bindgen\">Syntax for tuples 路 Issue #216 路 bytecodealliance/wit-bindgen</a></div><div class=\"message_embed_description\">Right now the syntax for tuples is tuple&lt;A, B, C&gt;, but the only reason for this was to disambiguate the multi-value returns we originally had which had the shape -&gt; (A, B, C). It&#39;s pro...</div></div></div>",
        "id": 281622436,
        "sender_full_name": "Peter Huene",
        "timestamp": 1652050571
    }
]