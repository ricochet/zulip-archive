[
    {
        "content": "<p>Hi, I wanted to pick up this issue and take a stab at it: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1980\">https://github.com/bytecodealliance/wasmtime/issues/1980</a></p>\n<p>Are there any relevant documentation to this, or pointers on where to get started? I'm currently taking a look at cranelift/codegen/src/isa/x64/</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/issues/1980\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/c9143c9dc9ca55149c49f0df8f9d65f166db11f5/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f353631396666376439663031326339346136396534366536633036666632616331366233643163343066646662623336663865353434346361386331373237332f62797465636f6465616c6c69616e63652f7761736d74696d652f6973737565732f31393830&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/issues/1980\" title=\"Support x86-32 in new instruction selection framework 路 Issue #1980 路 bytecodealliance/wasmtime\">Support x86-32 in new instruction selection framework 路 Issue #1980 路 bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">We don't currently have fully working x86 support, but we have a backend in-tree that's largely completely. However, it uses the old instructions selection framework, and as described in #1936, Cra...</div></div></div>",
        "id": 472999116,
        "sender_full_name": "Ryan Nguyen",
        "timestamp": 1727401938
    },
    {
        "content": "<p>Hello! You'll probably want to read over existing backends to get started, but it's worth pointing out that all backends at this time are 64-bit so that's probably going to be one of the more significant tasks to take on for this backend.</p>",
        "id": 473135578,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1727450620
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"761246\">@Ryan Nguyen</span> the one 32-bit-specific thing is in <code>ValueRegs</code>, where we define the maximum number of machine registers that an SSA value takes; that will have to be 4 instead of 2 when x86-32 is enabled</p>",
        "id": 473136174,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1727450793
    },
    {
        "content": "<p>Otherwise the big-picture question here is how much reuse we can get from the x64 backend. The heart of the instruction encodings are the same, except of course where they aren't (operand length prefixes etc, no REX bytes, ...); it will probably take some investigation to see if we can extract an \"assembler library\" (probably still a different MachInst enum def) or start with a simple copy</p>",
        "id": 473136505,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1727450888
    },
    {
        "content": "<p>Finally, just to make sure there aren't any mismatching expectations -- I expect a basic \"Wasm 1.0 functional\" x86-32 backend is probably a month or so of fulltime work for someone familiar with Cranelift backends already, 2-3 months if this is a \"starter project\". We're very happy to answer questions! But not a small task</p>",
        "id": 473136969,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1727451017
    },
    {
        "content": "<p>Thanks for the tips, and for clarifying expectations!</p>",
        "id": 473736691,
        "sender_full_name": "Ryan Nguyen",
        "timestamp": 1727703971
    }
]