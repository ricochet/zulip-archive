[
    {
        "content": "<p>I compiled a rust program <code>cargo build --target wasm32-wasi</code>, I guess that exported functions can be mapped back to rust ones, but is there a way to map non-exported ones? (This is so I can find the rust code that generates some big wasm/clif)</p>",
        "id": 189683257,
        "sender_full_name": "Joey Gouly",
        "timestamp": 1583322441
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"265780\">@Joey Gouly</span> you mean like exploring a wasm module via the wasmtime API, or just figuring info about the wasm itself?</p>",
        "id": 189698239,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1583333558
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span> the latter. I found a function that takes a long time to compile, and want to figure out the rust code it came from</p>",
        "id": 189698419,
        "sender_full_name": "Joey Gouly",
        "timestamp": 1583333662
    },
    {
        "content": "<p>hm wanna gist the wasm module?</p>",
        "id": 189698512,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1583333729
    },
    {
        "content": "<p>and/or do you have the rust source to poke around?</p>",
        "id": 189698522,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1583333736
    },
    {
        "content": "<p>oh one other thing you may be able to do is to use llvm-dwarfdump somehow</p>",
        "id": 189698546,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1583333754
    },
    {
        "content": "<p>I know nothing about dwarfdump but there's presumably filename/location information in there somewhere</p>",
        "id": 189698604,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1583333765
    },
    {
        "content": "<p>esp for a debug build</p>",
        "id": 189698609,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1583333769
    },
    {
        "content": "<p>I guess the problem with a debug build is that it might not match up to the release one</p>",
        "id": 189698748,
        "sender_full_name": "Joey Gouly",
        "timestamp": 1583333868
    },
    {
        "content": "<p>but rust has debug info by default, so I'll give it a try</p>",
        "id": 189698819,
        "sender_full_name": "Joey Gouly",
        "timestamp": 1583333886
    },
    {
        "content": "<p>release builds can still have DWARF info</p>",
        "id": 189698847,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1583333904
    },
    {
        "content": "<p>name section normally contains rust names for every function</p>",
        "id": 189698962,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1583333973
    },
    {
        "content": "<p>Oh, and I guess wasm2wat uses that? I just tried wasm2wat and see the names</p>",
        "id": 189699176,
        "sender_full_name": "Joey Gouly",
        "timestamp": 1583334099
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"265780\">@Joey Gouly</span> cranelift has ability to read name section -- maybe there is a way to plug that into clif or just instrument code in some other way</p>",
        "id": 189699559,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1583334325
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253991\">@Yury Delendik</span> in <code>cranelift/src/wasm.rs</code> line ~175, would be a good place to print it. have you got some pointers on how to do that?</p>",
        "id": 189699725,
        "sender_full_name": "Joey Gouly",
        "timestamp": 1583334431
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"265780\">@Joey Gouly</span> is <code>DummyEnvironment</code> used by that? it needs to implement <code>declare_func_name</code> <a href=\"https://github.com/bytecodealliance/wasmtime/blob/8597930eed2e5e92c78ec4cb6d6b39d80c5ea220/cranelift/wasm/src/sections_translator.rs#L429\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/blob/8597930eed2e5e92c78ec4cb6d6b39d80c5ea220/cranelift/wasm/src/sections_translator.rs#L429\">https://github.com/bytecodealliance/wasmtime/blob/8597930eed2e5e92c78ec4cb6d6b39d80c5ea220/cranelift/wasm/src/sections_translator.rs#L429</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/8597930eed2e5e92c78ec4cb6d6b39d80c5ea220/cranelift/wasm/src/sections_translator.rs#L429\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\" target=\"_blank\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/8597930eed2e5e92c78ec4cb6d6b39d80c5ea220/cranelift/wasm/src/sections_translator.rs#L429\" target=\"_blank\" title=\"bytecodealliance/wasmtime\">bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Standalone JIT-style runtime for WebAssembly, using Cranelift - bytecodealliance/wasmtime</div></div></div>",
        "id": 189700316,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1583334765
    },
    {
        "content": "<p>thanks, it does implement that! I'll try print from that then</p>",
        "id": 189700559,
        "sender_full_name": "Joey Gouly",
        "timestamp": 1583334896
    }
]