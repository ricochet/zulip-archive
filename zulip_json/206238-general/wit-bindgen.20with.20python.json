[
    {
        "content": "<p>Hello everyone. I'm currently trying to use wit-bindgen for a project. Let me explain what I did: First I wrote this .wit file</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">record</span><span class=\"w\"> </span><span class=\"n\">crypto</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">yo</span>: <span class=\"nc\">list</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"kt\">u8</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"n\">hello</span>: <span class=\"nc\">function</span><span class=\"p\">(</span><span class=\"n\">data</span>: <span class=\"nc\">crypto</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">list</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"kt\">u8</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n</code></pre></div>\n<p>then uses the <code>export!</code> macro to generate the right rust code to compile to wasm. Then I want to launch this wasm module into a python file. I generated a python file thanks to the wit-bindgen-cli to run with wasmtime-python. But it's not working it's asking for <code>canonical_abi_realloc</code> function from exports but it doesn't exist in my .wasm file if I convert it to .wat. Do you have an idea of where I'm wrong please ?</p>",
        "id": 263438493,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1638452672
    },
    {
        "content": "<p>Are you able to share some code associated with what you're doing? If functions like <code>canonical_abi_realloc</code> aren't exported then it may mean that the wasm file wasn't produced with <code>wit_bindgen_rust</code> perhaps?</p>",
        "id": 263456898,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1638460053
    },
    {
        "content": "<p>I'm not an expert, but I think witx-bindgen should have generated the <code>canonical_abi_realloc</code>.  Maybe it doesn't realise it has to for that signature.  What if in addition you add a string-&gt;string function, I wonder if that would force it to create it.</p>",
        "id": 263456940,
        "sender_full_name": "Scott Waye",
        "timestamp": 1638460074
    },
    {
        "content": "<p>Oh, an expert did reply just as I was typing, ignore me, you have much better help now.</p>",
        "id": 263457062,
        "sender_full_name": "Scott Waye",
        "timestamp": 1638460109
    },
    {
        "content": "<p>Did the \"x\" get dropped from \"wit-bindgen\" ?</p>",
        "id": 263457410,
        "sender_full_name": "Scott Waye",
        "timestamp": 1638460233
    },
    {
        "content": "<p>Ah yeah <code>witx-bindgen</code> was recently renamed to <code>wit-bindgen</code></p>",
        "id": 263457722,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1638460339
    },
    {
        "content": "<p>Well, (I work with Benjamin), we generated the rust-wasm bindings using:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">bindgen</span><span class=\"w\"> </span><span class=\"n\">rust</span><span class=\"o\">-</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">e</span><span class=\"w\"> </span><span class=\"o\">../</span><span class=\"n\">input</span><span class=\"p\">.</span><span class=\"n\">wit</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Then we implemented the trait <code>Input</code> of those bindings and build the <code>wasm32-unknown-unknown</code> target (there are only 2 exported functions in our test code). </p>\n<p>Next, we used <code>wasmtime-py</code> to load the WASM. That is where we noticed the missing exports<code>canonical_abi_realloc</code> and <code>canonical_abe_free</code> when using Python. </p>\n<p>That's why we tried the <code>wasmlink-cli</code> (I am not totally sure if I use the correct input args) :</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"n\">wasmlink</span><span class=\"o\">-</span><span class=\"n\">cli</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"n\">input</span><span class=\"o\">=</span><span class=\"n\">input</span><span class=\"p\">.</span><span class=\"n\">wit</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"n\">hello_world</span><span class=\"o\">=</span><span class=\"n\">hello_world</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">hello_world_linked</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">hello_world</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n</code></pre></div>\n<p>We tried again with the linked WASM version (with same result). Here is our Python loader code:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">config</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Config</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">wasm_module_linking</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">True</span><span class=\"w\"></span>\n<span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Engine</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Store</span><span class=\"p\">(</span><span class=\"n\">engine</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">linker</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Linker</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">.</span><span class=\"n\">engine</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">store</span><span class=\"p\">.</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">engine</span><span class=\"w\"></span>\n<span class=\"n\">my_module</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Module</span><span class=\"p\">.</span><span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">.</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"hello_world_linked.wasm\"</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">input</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">bindings</span><span class=\"p\">.</span><span class=\"n\">Input</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">my_module</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n<p>What did we miss?</p>",
        "id": 263470816,
        "sender_full_name": "Manuthor",
        "timestamp": 1638465468
    },
    {
        "content": "<p>oh for the rust code you'll need to link against the <code>witx_bindgen_rust</code> crate in addition to using the generated code (and I'd recommend using the generated code via the proc-macro rather than generating the source yourself)</p>",
        "id": 263470985,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1638465521
    },
    {
        "content": "<p>the Rust crate brings in the intrinsics needed</p>",
        "id": 263471009,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1638465529
    },
    {
        "content": "<p>Terrific! thanks a lot, it worked with <code>wit_bindgen_rust</code></p>",
        "id": 263496136,
        "sender_full_name": "Manuthor",
        "timestamp": 1638476874
    },
    {
        "content": "<p>Thanks for your help and your great work <span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span></p>",
        "id": 263496450,
        "sender_full_name": "Coenen Benjamin",
        "timestamp": 1638477020
    }
]