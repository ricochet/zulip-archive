[
    {
        "content": "<p>When having multiple <code>wit_bindgen::generate!</code> macro calls, (e.g. in two dependencies)  they each create their own types.<br>\nSo if they both use a resource type, the resource type from each <code>generate!</code> is different, making it impossible to reuse code between them.<br>\nI.e. you can't take a <code>wasi:http/request-options</code> from one, and pass it to the other, even though they're really the same underlying thing.<br>\nIs there any way to work around this? Perhaps I'm missing something?</p>",
        "id": 433185944,
        "sender_full_name": "Mendy Berger",
        "timestamp": 1713146954
    },
    {
        "content": "<p>yep, this is what <code>with</code> clauses are for: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/wasi-http/src/lib.rs#L60\">https://github.com/bytecodealliance/wasmtime/blob/main/crates/wasi-http/src/lib.rs#L60</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/wasi-http/src/lib.rs#L60\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/972ad46f1c27a7b5c43006d1bc47970b568d0a78\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f393237616332646631333836663336313466373465336136653334323861323132376565343835386166613232363339383164383631333361653063303836632f62797465636f6465616c6c69616e63652f7761736d74696d65)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/wasi-http/src/lib.rs#L60\" title=\"wasmtime/crates/wasi-http/src/lib.rs at main · bytecodealliance/wasmtime\">wasmtime/crates/wasi-http/src/lib.rs at main · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A fast and secure runtime for WebAssembly. Contribute to bytecodealliance/wasmtime development by creating an account on GitHub.</div></div></div>",
        "id": 433186127,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1713147067
    },
    {
        "content": "<p>Does wit-bindgen support the same thing? I'm having this issue on the guest side, not the runtime's side.</p>",
        "id": 433186245,
        "sender_full_name": "Mendy Berger",
        "timestamp": 1713147180
    },
    {
        "content": "<p>ah, sorry. i think that feature may be missing in guest wit-bindgen</p>",
        "id": 433186279,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1713147204
    },
    {
        "content": "<p>i recall this comes up pretty frequently</p>",
        "id": 433186354,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1713147247
    },
    {
        "content": "<p>maybe someone did add it in the last month, ive been offline</p>",
        "id": 433186368,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1713147266
    },
    {
        "content": "<p>To make it a bit more concrete, this is relevant for wasi-webgpu where we expect most rust users to use the wgpu crate instead of relying on wasi-webgpu directly.<br>\nSo I'm working on a wasi-backend for wgpu, but we also expect the users to be able to connect the gpu device to a canvas/window. And now the wgpu generated types are incompatible with the types generated by the crate itself.</p>",
        "id": 433186874,
        "sender_full_name": "Mendy Berger",
        "timestamp": 1713147631
    },
    {
        "content": "<p><span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span>  If only I'd read the docs...<br>\nIt specifically addresses this case...<br>\n<a href=\"https://docs.rs/wit-bindgen/0.24.0/wit_bindgen/macro.generate.html#options-to-generate\">https://docs.rs/wit-bindgen/0.24.0/wit_bindgen/macro.generate.html#options-to-generate</a></p>",
        "id": 433190798,
        "sender_full_name": "Mendy Berger",
        "timestamp": 1713150299
    }
]