[
    {
        "content": "<p>Hello, I'm getting started with wasmtime, and want to experiment with a wasm module that I have that requires some imports. Is there a way to specify these via the wasmtime run cli?</p>",
        "id": 189867872,
        "sender_full_name": "Itay Shakury",
        "timestamp": 1583478713
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"269278\">@Itay Shakury</span> currently the cli can only implement wasi imports, for other cases you'll need to dive into the api</p>",
        "id": 189908835,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1583511714
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"269278\">@Itay Shakury</span> can you describe your use case a bit? We want to make sure that any future support for this addresses real-world use cases, so that'd be really helpful!</p>",
        "id": 189908985,
        "sender_full_name": "Till Schneidereit",
        "timestamp": 1583511822
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"234973\">@Till Schneidereit</span> I have a wasm module which have some imports: memory, functions that I wanted to test our quickly. I'm aware this is a conceptual challenge - how to implement the imports. I just thought I'd check if by any chance there's a solution which I haven't considered.</p>",
        "id": 189924480,
        "sender_full_name": "Itay Shakury",
        "timestamp": 1583521797
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"269278\">@Itay Shakury</span> wasmtime cli supports wasi related imports at this moment. Is embedding wasmtime something you considered? e.g. <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/docs/embed-rust.md\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/blob/master/docs/embed-rust.md\">https://github.com/bytecodealliance/wasmtime/blob/master/docs/embed-rust.md</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/master/docs/embed-rust.md\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\" target=\"_blank\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/docs/embed-rust.md\" target=\"_blank\" title=\"bytecodealliance/wasmtime\">bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Standalone JIT-style runtime for WebAssembly, using Cranelift - bytecodealliance/wasmtime</div></div></div>",
        "id": 189925027,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1583522114
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253991\">@Yury Delendik</span> currently I'm just playing around so I started with the cli as that was quickest. after realizing I need imports I looking at embedding (in C), however the wasmtime docs were very poor for this matter so I'm now POCing <a href=\"http://wasmer.io\" target=\"_blank\" title=\"http://wasmer.io\">wasmer.io</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"http://wasmer.io\" style=\"background-image: url(http://wasmer.io/static/icons/social-icon.png)\" target=\"_blank\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"http://wasmer.io\" target=\"_blank\" title=\"Wasmer - The Universal WebAssembly Runtime\">Wasmer - The Universal WebAssembly Runtime</a></div><div class=\"message_embed_description\">Wasmer - The Universal WebAssembly Runtime</div></div></div>",
        "id": 189925313,
        "sender_full_name": "Itay Shakury",
        "timestamp": 1583522329
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"269278\">@Itay Shakury</span> are you looking at embedding in C? wasmtime provides that via wasm-c-api -- it is not as convenient as rust's but shall provided functionality you need</p>",
        "id": 189925903,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1583522856
    },
    {
        "content": "<p>examples for wasm-c-api can be found at <a href=\"https://github.com/WebAssembly/wasm-c-api/tree/master/example\" target=\"_blank\" title=\"https://github.com/WebAssembly/wasm-c-api/tree/master/example\">https://github.com/WebAssembly/wasm-c-api/tree/master/example</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/wasm-c-api/tree/master/example\" style=\"background-image: url(https://avatars3.githubusercontent.com/u/11578470?s=400&amp;v=4)\" target=\"_blank\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/wasm-c-api/tree/master/example\" target=\"_blank\" title=\"WebAssembly/wasm-c-api\">WebAssembly/wasm-c-api</a></div><div class=\"message_embed_description\">Wasm C API prototype. Contribute to WebAssembly/wasm-c-api development by creating an account on GitHub.</div></div></div>",
        "id": 189925987,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1583522895
    },
    {
        "content": "<p>thanks, I saw that but didn't know where to start, and the lack of explanations was concerning. the wasmer docs were more compelling so I started there. after I grasp wasmer I'll try to look at wasmtime again.</p>",
        "id": 189926689,
        "sender_full_name": "Itay Shakury",
        "timestamp": 1583523385
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"269278\">@Itay Shakury</span> it is possible to bind different WASM modules together with the current wasmtime API (similar to how Windows DLLs work). I just hooked it up for my wasmtime wrapper. So it is easy to hook up testing a WASM module using other WASM modules - but writing WAT manually is not nice for more complicated tests. When API is by-value only it is simple - only handling of different memory segments needs special attention.</p>",
        "id": 189976065,
        "sender_full_name": "Ren√© Fonseca",
        "timestamp": 1583597746
    }
]