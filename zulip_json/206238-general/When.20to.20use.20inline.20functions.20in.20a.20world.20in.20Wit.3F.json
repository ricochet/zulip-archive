[
    {
        "content": "<p>Besides interfaces, a world can contain inline functions. What's the use case for this?</p>\n<p>The docs[^1][^2] specifically mention that such a component can't be composed with other components, only if the world contains only interfaces.</p>\n<p>[^1]: \"to use your component from another component, it must export an interface.\" <a href=\"https://component-model.bytecodealliance.org/language-support/rust.html?highlight=must%20export#exporting-an-interface-with-cargo-component\">source</a></p>\n<p>[^2]: \"The component's world (.wit file) must export an interface. (Do not export functions directly, only interfaces.)\" <a href=\"https://component-model.bytecodealliance.org/creating-and-consuming/running.html#running-components-with-custom-exports\">source</a></p>",
        "id": 404232796,
        "sender_full_name": "Michael Fuller",
        "timestamp": 1700993764
    },
    {
        "content": "<p>my observation as a user was that \"export and import functions\" was the default about a year or so ago when I started toying with wit, but the closer we got to preview2, the more problems arose with directly exported functions and it feels like they should be deprecated soon. I don't know if that's correct, as I said that's what I experienced from the outside</p>",
        "id": 404264195,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1701009836
    },
    {
        "content": "<p>The use case depends on the world in question, mostly the perspective from an embedding. For example it might be a good model for what the host wants to give a component or what the host would require from a component.</p>\n<p>The limitations in the documentation refer to conventions around the <code>wasm-tools compose</code> subcommand. That's not a limitation of components or component runtimes in general, so it might be something worth clarifying in the documentation but I wouldn't say for sure without reading more closely</p>",
        "id": 404330150,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1701057939
    }
]