[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"473128\">Paul Colomiets</span> <a href=\"#narrow/stream/206238-general/topic/Building.20a.20platform.20for.20users.20to.20deploy.20wasm.20libraries/near/269962690\">said</a>:</p>\n<blockquote>\n<p>You can use <code>resource</code> to keep state: <a href=\"https://github.com/bytecodealliance/wit-bindgen/blob/main/WIT.md#item-resource\">https://github.com/bytecodealliance/wit-bindgen/blob/main/WIT.md#item-resource</a> (or just use global/static variables in Rust).</p>\n</blockquote>\n<p>I'm looking into using resources with the following .wit file:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">resource</span><span class=\"w\"> </span><span class=\"n\">aggregate</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"n\">new</span>: <span class=\"nc\">function</span><span class=\"p\">(</span><span class=\"n\">id</span>: <span class=\"nc\">string</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">aggregate</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">apply</span><span class=\"o\">-</span><span class=\"n\">events</span>: <span class=\"nc\">function</span><span class=\"p\">(</span><span class=\"n\">event</span>: <span class=\"nc\">list</span><span class=\"o\">&lt;</span><span class=\"n\">list</span><span class=\"o\">&lt;</span><span class=\"kt\">u8</span><span class=\"o\">&gt;&gt;</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Which generates:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">Aggregate</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">new</span><span class=\"p\">(</span><span class=\"n\">id</span>: <span class=\"nb\">String</span><span class=\"p\">,)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">wit_bindgen_rust</span>::<span class=\"n\">Handle</span><span class=\"o\">&lt;</span><span class=\"k\">super</span>::<span class=\"n\">Aggregate</span><span class=\"o\">&gt;</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">apply_events</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"n\">event</span>: <span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"kt\">u8</span><span class=\"o\">&gt;&gt;</span><span class=\"p\">,);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>But using the <a href=\"https://bytecodealliance.github.io/wit-bindgen/\">online demo</a> to see the generated rust code for export, the <code>apply-events</code> method takes <code>&amp;self</code>. But what if I want to mutate self with <code>&amp;mut self</code>? Is this possible?</p>",
        "id": 276013322,
        "sender_full_name": "Ari Seyhun",
        "timestamp": 1647847047
    },
    {
        "content": "<p>I've made a GH issue for it here:<br>\n<a href=\"https://github.com/bytecodealliance/wit-bindgen/issues/178\">https://github.com/bytecodealliance/wit-bindgen/issues/178</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wit-bindgen/issues/178\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/464cfe15412c2fd12b9d86dabc3dec834cf655a5\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f356138623437386532666135643737336336313163643264386561373563376432343365363030363162383636323733303766383534343437633161653832332f62797465636f6465616c6c69616e63652f7769742d62696e6467656e2f6973737565732f313738)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wit-bindgen/issues/178\" title=\"Mutable methods in wit resources 路 Issue #178 路 bytecodealliance/wit-bindgen\">Mutable methods in wit resources 路 Issue #178 路 bytecodealliance/wit-bindgen</a></div><div class=\"message_embed_description\">I&#39;m looking into using resources with the following .wit file: resource aggregate { static new: function(id: string) -&gt; aggregate apply-events: function(event: list&lt;list&lt;u8&gt;&gt;) } ...</div></div></div>",
        "id": 276051574,
        "sender_full_name": "Ari Seyhun",
        "timestamp": 1647870017
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"474928\">Ari Seyhun</span> has marked this topic as resolved.</p>",
        "id": 276066185,
        "sender_full_name": "Notification Bot",
        "timestamp": 1647875793
    }
]