[
    {
        "content": "<p>Hi all, does anybody know if there's already an SDK for C or C++ that generates atomics proposed in the proposal: <a href=\"https://github.com/WebAssembly/threads/blob/master/proposals/threads/Overview.md\">https://github.com/WebAssembly/threads/blob/master/proposals/threads/Overview.md</a>? I've tried wasi-sdk but couldn't get it to work. Many thanks in advance</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/threads/blob/master/proposals/threads/Overview.md\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/da281d2a9a8394d29960f8e36b07865ff84efe21\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f343239613561656463316332643965343535643663663633363035383331323830313865313733326630653031353763356262643233656262353265356561322f576562417373656d626c792f74687265616473)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/threads/blob/master/proposals/threads/Overview.md\" title=\"threads/Overview.md at master 路 WebAssembly/threads\">threads/Overview.md at master 路 WebAssembly/threads</a></div><div class=\"message_embed_description\">Threads and Atomics in WebAssembly. Contribute to WebAssembly/threads development by creating an account on GitHub.</div></div></div>",
        "id": 289993655,
        "sender_full_name": "Marcin Kolny",
        "timestamp": 1658163416
    },
    {
        "content": "<p>If you pass <code>-matomics</code> to the <code>cc</code> in wasi-sdk, I believe it should emit atomic instructions.</p>",
        "id": 289994405,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1658163692
    },
    {
        "content": "<p>Sorry, I should have been more clear; what C/C++ instructions actually emit atomic instructions in webassembly? I tried with _Atomic but that didn't seem to work. If anyone has any code example, that would be really helpful (mainly I'm interested in <code>wait</code> and <code>notify</code>)</p>",
        "id": 290110016,
        "sender_full_name": "Marcin Kolny",
        "timestamp": 1658242249
    },
    {
        "content": "<blockquote>\n<p>I tried with _Atomic but that didn't seem to work.</p>\n</blockquote>\n<p>Also if you use <code>-matomics</code>?</p>",
        "id": 290110286,
        "sender_full_name": "bjorn3",
        "timestamp": 1658242340
    },
    {
        "content": "<p>hi <span class=\"user-mention\" data-user-id=\"264278\">@bjorn3</span> I think it still doesn't work. This is my simple application:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code>#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">atomic</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">std</span>::<span class=\"n\">atomic_flag</span><span class=\"w\"> </span><span class=\"n\">atomicFlag</span><span class=\"p\">{};</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">atomicFlag</span><span class=\"p\">.</span><span class=\"n\">wait</span><span class=\"p\">(</span><span class=\"kc\">false</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>and I compile it with a command: <code>/opt/wasi-sdk16/bin/clang++ -std=c++11  -Wno-format atomic.cpp -matomics</code><br>\nIn the output WASM file I can see that the wait was implemented using spins rather than atomic wait operations (<code>memory.atomic.wait32</code>). I wonder if any SDK currently can translate the C++ code (or any other language) to use atomics?</p>",
        "id": 290134126,
        "sender_full_name": "Marcin Kolny",
        "timestamp": 1658251902
    },
    {
        "content": "<p>Ah, the issue there is probably that wasi-sdk's libc++ build is configured without threads support.</p>",
        "id": 290134338,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1658251995
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"254083\">@Dan Gohman</span> do you know of any other SDK where this is enabled? Tried with emcc but that doesn't work either</p>",
        "id": 290140548,
        "sender_full_name": "Marcin Kolny",
        "timestamp": 1658255030
    },
    {
        "content": "<p>Could you say more about what you're looking to do here?</p>",
        "id": 290146625,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1658257807
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"254083\">@Dan Gohman</span> I'm trying to implement a mutex just like in the proposal here: <a href=\"https://github.com/WebAssembly/threads/blob/master/proposals/threads/Overview.md\">https://github.com/WebAssembly/threads/blob/master/proposals/threads/Overview.md</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/threads/blob/master/proposals/threads/Overview.md\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/da281d2a9a8394d29960f8e36b07865ff84efe21\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f343239613561656463316332643965343535643663663633363035383331323830313865313733326630653031353763356262643233656262353265356561322f576562417373656d626c792f74687265616473)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/threads/blob/master/proposals/threads/Overview.md\" title=\"threads/Overview.md at master 路 WebAssembly/threads\">threads/Overview.md at master 路 WebAssembly/threads</a></div><div class=\"message_embed_description\">Threads and Atomics in WebAssembly. Contribute to WebAssembly/threads development by creating an account on GitHub.</div></div></div>",
        "id": 290149268,
        "sender_full_name": "Marcin Kolny",
        "timestamp": 1658259042
    },
    {
        "content": "<p>In what context will this mutex be used?</p>",
        "id": 290149347,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1658259078
    },
    {
        "content": "<p>I'd like to implement wasi native threads (like in the proposal <a href=\"https://github.com/WebAssembly/wasi-native-threads\">https://github.com/WebAssembly/wasi-native-threads</a>) in WASM user space with only having the thread_spawn syscall. I need conditionals for mutex, but not only for that but also for thread pool</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/wasi-native-threads\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/4f9af6b3c70230d0ed7169d5a2d53bf5659e3088\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f363562636665373633616335653535663631313335383263366437343862303333626435313563313738393332616566643065333231666662313737323063622f576562417373656d626c792f776173692d6e61746976652d74687265616473)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/wasi-native-threads\" title=\"GitHub - WebAssembly/wasi-native-threads\">GitHub - WebAssembly/wasi-native-threads</a></div><div class=\"message_embed_description\">Contribute to WebAssembly/wasi-native-threads development by creating an account on GitHub.</div></div></div>",
        "id": 290149965,
        "sender_full_name": "Marcin Kolny",
        "timestamp": 1658259372
    },
    {
        "content": "<p>Perhaps <span class=\"user-mention\" data-user-id=\"254110\">@Andrew Brown</span> may be able to help here.</p>",
        "id": 290150369,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1658259589
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"513417\">@Marcin Kolny</span>, sounds like we're interested in the same things; ping me if you want to discuss more</p>",
        "id": 290170466,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1658270352
    }
]