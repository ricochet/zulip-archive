[
    {
        "content": "<p>Hi, I'm new to wasmtime, and am running into some trouble using it from .NET, was hoping to get some help if that's alright.  I've got a crate that successfully compiles to a wasm module, and that loads into wasmtime fine, but some modifications to the crate result in a WasmtimeException with the message that the module is invalid. When this happens, wasm-validate --enable-multi-result returns that the module is still correct, but there's no more information from the exception to help debug. Thanks for the help!</p>",
        "id": 189952273,
        "sender_full_name": "Chris Granade",
        "timestamp": 1583546593
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253989\">@Peter Huene</span> sounds like something you might be able to help with</p>",
        "id": 189972499,
        "sender_full_name": "Till Schneidereit",
        "timestamp": 1583591381
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"269573\">@Chris Granade</span>.  If you have a Wasm file that makes use of upcoming proposals, like multi-value, you'll need to enable it in the <code>Engine</code> like you would with <code>wasmtime</code> CLI.  To do that, use the 0.12.0 release of the .NET package and construct your <code>Engine</code> with an <code>EngineBuilder</code>.  An example of doing that can be found here: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/crates/misc/dotnet/tests/Fixtures/ModuleFixture.cs#L11-L14\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/blob/master/crates/misc/dotnet/tests/Fixtures/ModuleFixture.cs#L11-L14\">https://github.com/bytecodealliance/wasmtime/blob/master/crates/misc/dotnet/tests/Fixtures/ModuleFixture.cs#L11-L14</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/master/crates/misc/dotnet/tests/Fixtures/ModuleFixture.cs#L11-L14\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\" target=\"_blank\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/crates/misc/dotnet/tests/Fixtures/ModuleFixture.cs#L11-L14\" target=\"_blank\" title=\"bytecodealliance/wasmtime\">bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Standalone JIT-style runtime for WebAssembly, using Cranelift - bytecodealliance/wasmtime</div></div></div>",
        "id": 189991568,
        "sender_full_name": "Peter Huene",
        "timestamp": 1583625445
    },
    {
        "content": "<p>Thanks for the help, <span class=\"user-mention\" data-user-id=\"253989\">@Peter Huene</span>! It looks like the latest version on <a href=\"http://nuget.org\" target=\"_blank\" title=\"http://nuget.org\">nuget.org</a> is 0.12.0-preview1, which went before the PR that added EngineBuilder. To resolve that, I tried building from source and that got me a lot futher, but it's still failing with an exception indicating that my module isn't valid. If I patch the <code>c-api</code> crate when building from source to add a panic when loading the wasm module if it's not valid, I can now see the new error after enabling EngineBuilder:</p>\n<div class=\"codehilite\"><pre><span></span>thread &#39;&lt;unnamed&gt;&#39; panicked at &#39;Section header is too big to fit into section body (at offset 134697)&#39;, crates/c-api/src/lib.rs:838:13\n</pre></div>\n\n\n<p>For context, the module I'm trying to load was built using cargo-wasi and wasm_bindgen, and passes wasm-validate. Thanks again for the help!</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"http://nuget.org\" style=\"background-image: url(https://www.nuget.org/Content/gallery/img/logo-og-600x600.png)\" target=\"_blank\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"http://nuget.org\" target=\"_blank\" title=\"NuGet Gallery | Home\">NuGet Gallery | Home</a></div><div class=\"message_embed_description\">The NuGet Gallery is the central package repository for NuGet, the package manager for .NET.</div></div></div>",
        "id": 189995684,
        "sender_full_name": "Chris Granade",
        "timestamp": 1583634416
    },
    {
        "content": "<p>Oh right, I forgot 0.12.0 was released prior. I can see about updating the NuGet package to include EngineBuilder.</p>",
        "id": 189995808,
        "sender_full_name": "Peter Huene",
        "timestamp": 1583634694
    },
    {
        "content": "<p>Regarding the failure, if you have a repo project I can build or get the Wasm file, I can investigate on Monday.</p>",
        "id": 189995846,
        "sender_full_name": "Peter Huene",
        "timestamp": 1583634735
    },
    {
        "content": "<p>Awesome, thanks! I'll see if I can extract a good MWE, to share here.</p>",
        "id": 189995962,
        "sender_full_name": "Chris Granade",
        "timestamp": 1583635003
    },
    {
        "content": "<p>Sorry for the delay, <span class=\"user-mention\" data-user-id=\"253989\">@Peter Huene</span>! Please find an MWE at <a href=\"https://github.com/cgranade/wasm-experiments\" target=\"_blank\" title=\"https://github.com/cgranade/wasm-experiments\">https://github.com/cgranade/wasm-experiments</a>, thank you again for your help!</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/cgranade/wasm-experiments\" style=\"background-image: url(https://avatars3.githubusercontent.com/u/31516?s=400&amp;v=4)\" target=\"_blank\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/cgranade/wasm-experiments\" target=\"_blank\" title=\"cgranade/wasm-experiments\">cgranade/wasm-experiments</a></div><div class=\"message_embed_description\">In which I experiment with different wasm stuff to try and learn some. - cgranade/wasm-experiments</div></div></div>",
        "id": 190040653,
        "sender_full_name": "Chris Granade",
        "timestamp": 1583727629
    }
]