[
    {
        "content": "<p>Hi,</p>\n<p>It seems I can use wasmtime to embed wat into Rust/C. If I wanted to compile this code with the embedded wat into wasm, would there be an overhead in the wasm module?</p>",
        "id": 286231568,
        "sender_full_name": "Mario",
        "timestamp": 1655307973
    },
    {
        "content": "<p>Referring to this section in the docs: <a href=\"https://docs.wasmtime.dev/examples-rust-hello-world.html\">https://docs.wasmtime.dev/examples-rust-hello-world.html</a></p>\n<p>I would like to compile the <a href=\"http://hello.rs\">hello.rs</a> file into a wasm module, could not find any compiletime strategies so now looking at a way to do it at runtime</p>",
        "id": 286231790,
        "sender_full_name": "Mario",
        "timestamp": 1655308064
    },
    {
        "content": "<p>Sorry when you say \"embed wat\" do you meant embedding a translation from the text format of WebAssembly to the binary format? Or do you mean embedding a wasm engine in general?</p>",
        "id": 286234824,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1655309175
    },
    {
        "content": "<p>The former; to embed wat so that its inlined in the final wasm binary. I was not able to see a way to do it like inline_asm!, so I started looking at wasmtime... It may not be the correct strategy, please let me know</p>",
        "id": 286235032,
        "sender_full_name": "Mario",
        "timestamp": 1655309253
    },
    {
        "content": "<p>Wasmtime in general cannot be compiled to WebAssembly itself, and in general I don't think there's any way to embed <code>*.wat</code> text syntax into a wasm binary and run it at runtime of the wasm binary itself, or at least not a portable way of doing so.</p>",
        "id": 286236661,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1655309909
    },
    {
        "content": "<p>So the only solution is to either write all of your code in a high level language or write all of your code in wat, given that you want the final output to be a wasm binary?</p>",
        "id": 286237078,
        "sender_full_name": "Mario",
        "timestamp": 1655310106
    },
    {
        "content": "<p>I think LLVM has a textual format for its object file format which you may be able to use, but I'm not personally aware of a great way of writing <code>*.wat</code> and linking it into a final wasm binary myself.</p>",
        "id": 286237579,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1655310331
    },
    {
        "content": "<p>Oh thanks for the pointer, I'll check out LLVM</p>",
        "id": 286238047,
        "sender_full_name": "Mario",
        "timestamp": 1655310557
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span> does this also apply to embedding wasm byte code too?</p>",
        "id": 286241844,
        "sender_full_name": "Mario",
        "timestamp": 1655312285
    },
    {
        "content": "<p>to the best of my knowledge yeah, it's not easy to do. You basically need to craft an input to <code>wasm-ld</code> which I don't think is a trivial operation (in that I don't know of off-the-shelf methods to do that)</p>",
        "id": 286241924,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1655312331
    },
    {
        "content": "<p>Ah I see, okay Iâ€™ll look into doing it first and then trying to package it so that others can use it</p>",
        "id": 286243012,
        "sender_full_name": "Mario",
        "timestamp": 1655312717
    }
]