[
    {
        "content": "<p>Is it the expected default that building <code>wac</code> and trying to use it to replace <code>wasm-tools compose</code> means access to my keychain has to be granted, I guess to access <a href=\"http://wa.dev\">wa.dev</a> if it runs into the need?</p>\n<p>I'm trying to run <code>wac plug</code> to see how it can replace the <code>wasm-tools compose</code> in a build script and the mac OS is asking me if it should grant the program permission to use my confidential information for the warg-auth-token. The Wasm components I'm trying to compose with are all local.</p>\n<p>I could try reinstalling <code>wac</code> without the registery feature for now, but I still wonder what the plan for accessing confidential information is, for uses that shouldn't require it.</p>",
        "id": 438366707,
        "sender_full_name": "Frank Rehwinkel",
        "timestamp": 1715607920
    },
    {
        "content": "<p>I would say that is probably a bug; could you open an issue please?</p>",
        "id": 438367608,
        "sender_full_name": "Lann Martin",
        "timestamp": 1715608184
    },
    {
        "content": "<p>Okay, will open an issue. Will add that even when I disallowed access, the composition proceeded and the results were correct. In the build script, I could replace <code>wasm-tools compose</code> with <code>wac plug</code> and the multiple argument flags of <code>-d</code> with <code>--plug</code> and otherwise the new command was just a slip in for the old one and wasmtime could run the resulting component as before. Nice.</p>",
        "id": 438371471,
        "sender_full_name": "Frank Rehwinkel",
        "timestamp": 1715609157
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"704709\">Frank Rehwinkel</span> has marked this topic as resolved.</p>",
        "id": 438373753,
        "sender_full_name": "Notification Bot",
        "timestamp": 1715609764
    }
]