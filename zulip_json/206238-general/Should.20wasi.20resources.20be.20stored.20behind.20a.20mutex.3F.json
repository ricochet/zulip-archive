[
    {
        "content": "<p>Should wasi resources be locked behind a mutex, or are we relying on the wasm apps themselves to ensure that data is accessed in a safe way?</p>",
        "id": 421774121,
        "sender_full_name": "Mendy Berger",
        "timestamp": 1708049317
    },
    {
        "content": "<p>We don't yet have thread support in WASI 0.2, so it technically doesn't come up yet. Core wasm support is being <a href=\"https://github.com/webassembly/shared-everything-threads?tab=readme-ov-file#draft-shared-everything-threads-proposal\">worked on</a>, and once that's complete, we'll need to design support for the component model, and that's when we'll need to answer questions about how threads and handles interact.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/webassembly/shared-everything-threads?tab=readme-ov-file#draft-shared-everything-threads-proposal\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/0abf2ffce44e3c7d2b060f8df47d549afad930c6\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f666337636163383431613361663134313130393433663536353162373465316166663262363137663931333962653833613939616634333939366362316434622f576562417373656d626c792f7368617265642d65766572797468696e672d74687265616473)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/webassembly/shared-everything-threads?tab=readme-ov-file#draft-shared-everything-threads-proposal\" title=\"GitHub - WebAssembly/shared-everything-threads: A draft proposal for spawning threads in WebAssembly\">GitHub - WebAssembly/shared-everything-threads: A draft proposal for spawning threads in WebAssembly</a></div><div class=\"message_embed_description\">A draft proposal for spawning threads in WebAssembly - WebAssembly/shared-everything-threads</div></div></div>",
        "id": 421774735,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1708049739
    },
    {
        "content": "<p>So for now no thread safety, right?</p>",
        "id": 421774822,
        "sender_full_name": "Mendy Berger",
        "timestamp": 1708049782
    },
    {
        "content": "<p>Right; for now, you can assume there's only one thread.</p>",
        "id": 421774843,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1708049801
    },
    {
        "content": "<p>Sounds good. Thanks!</p>",
        "id": 421774861,
        "sender_full_name": "Mendy Berger",
        "timestamp": 1708049817
    },
    {
        "content": "<p>One thing I'd recommend though, in Rust at least, is to <code>assert!(!cfg(target_feature = \"atomics\"))</code> whenever you write a single-threaded assumption to send up a warning flag if threads support is added in the future</p>",
        "id": 421886398,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1708098882
    }
]