[
    {
        "content": "<p>I'm exploring using a WASI binary committed to source control as a way to portably build Zig from source. The experiment is a success, however, I have an issue that the cache system doesn't work properly because WASI does not support an advisory file system locking mechanism. How can I propose to add this to the WASI specification?</p>\n<p><a href=\"https://github.com/ziglang/zig/issues/13589\">https://github.com/ziglang/zig/issues/13589</a></p>\n<p><a href=\"https://github.com/ziglang/zig/blob/2823fcabd1974550b889a56e8ada0eb52f3d2080/src/Cache.zig#L859-L886\">https://github.com/ziglang/zig/blob/2823fcabd1974550b889a56e8ada0eb52f3d2080/src/Cache.zig#L859-L886</a></p>\n<p><a href=\"https://github.com/WebAssembly/wasi-filesystem/issues/2\">https://github.com/WebAssembly/wasi-filesystem/issues/2</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/ziglang/zig/issues/13589\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/66dbe7e258b645062f68962200a2f51338959428\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f396233663038393063393361336463613436323533646263356231303138363561653535646137343036376230666566346132613365643164623464323363662f7a69676c616e672f7a69672f6973737565732f3133353839)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/ziglang/zig/issues/13589\" title=\"Bootstrap WASM interpreter doesn't implement flock · Issue #13589 · ziglang/zig\">Bootstrap WASM interpreter doesn't implement flock · Issue #13589 · ziglang/zig</a></div><div class=\"message_embed_description\">Zig Version 9f317bf Steps to Reproduce and Observed Behavior git checkout wasi-bootstrap mkdir build &amp;&amp; cd build &amp;&amp; cmake .. [stuff] make -j$N # where N &gt; 1 Expected Behavior The...</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/ziglang/zig/blob/2823fcabd1974550b889a56e8ada0eb52f3d2080/src/Cache.zig#L859-L886\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/c1bc2c4f0c3b2b9e312f41bd72f1ff54aab3c33f\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f343166323863336632316462646334623165643132343038343931626166353931356464333134613532393534363765386461313735383231623238336131362f7a69676c616e672f7a6967)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/ziglang/zig/blob/2823fcabd1974550b889a56e8ada0eb52f3d2080/src/Cache.zig#L859-L886\" title=\"zig/Cache.zig at 2823fcabd1974550b889a56e8ada0eb52f3d2080 · ziglang/zig\">zig/Cache.zig at 2823fcabd1974550b889a56e8ada0eb52f3d2080 · ziglang/zig</a></div><div class=\"message_embed_description\">General-purpose programming language and toolchain for maintaining robust, optimal, and reusable software. - zig/Cache.zig at 2823fcabd1974550b889a56e8ada0eb52f3d2080 · ziglang/zig</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/wasi-filesystem/issues/2\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/f07478499d15194573a813570d596359d4648166\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f636663396330333931623763393632626462343935333563303933383661386666346337333332623839663338663832303461386462613531613563316336322f576562417373656d626c792f776173692d66696c6573797374656d2f6973737565732f32)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/wasi-filesystem/issues/2\" title=\"File locking · Issue #2 · WebAssembly/wasi-filesystem\">File locking · Issue #2 · WebAssembly/wasi-filesystem</a></div><div class=\"message_embed_description\">Sqlite and the Emscripten cache file are two cases where file locking has come up in real-world use cases. The POSIX way to do file locking, with fcntl and F_SETLK/F_GETLK-style locks has the unfor...</div></div></div>",
        "id": 313383509,
        "sender_full_name": "Andrew Kelley",
        "timestamp": 1669930942
    },
    {
        "content": "<p>The PR to add it to the wasi-filesystem proposal is here: <a href=\"https://github.com/WebAssembly/wasi-filesystem/pull/69\">https://github.com/WebAssembly/wasi-filesystem/pull/69</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/wasi-filesystem/pull/69\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/e2a9fb9ab44e04d55a7426da3eab9a83fc030d68\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f323730346635333465373961323037343636306363333731663332633430373335353330326333626462396639346261643635643639353636316461393763322f576562417373656d626c792f776173692d66696c6573797374656d2f70756c6c2f3639)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/wasi-filesystem/pull/69\" title=\"Add advisory file locking support. by sunfishcode · Pull Request #69 · WebAssembly/wasi-filesystem\">Add advisory file locking support. by sunfishcode · Pull Request #69 · WebAssembly/wasi-filesystem</a></div><div class=\"message_embed_description\">Add functions which correspond to flock in Unix. This is not a POSIX interface, but it's sufficiently portable, there's a way to implement it on Windows, and it doesn't have problematic process-ass...</div></div></div>",
        "id": 313527627,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1669995866
    },
    {
        "content": "<p>That said, it won't be immediately available in wasm engines, because new spec work is being done in the wit IDL, which replaces the old witx IDL, and WASI is currently still working on transitioning everything over to wit.</p>",
        "id": 313527828,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1669995920
    }
]