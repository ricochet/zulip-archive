[
    {
        "content": "<p>Any tips on debugging this?  It's in a rust guest exported function.  The export works fine until I try to call a function from a third party crate in it,  but calling the function creates the error </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">RuntimeError</span>: <span class=\"nc\">unreachable</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">__wasi_proc_exit</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"n\">anonymous</span><span class=\"o\">&gt;</span>:<span class=\"nc\">wasm</span><span class=\"o\">-</span><span class=\"n\">function</span><span class=\"p\">[</span><span class=\"mi\">482</span><span class=\"p\">]</span>:<span class=\"mh\">0x1c73a</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">_Exit</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"n\">anonymous</span><span class=\"o\">&gt;</span>:<span class=\"nc\">wasm</span><span class=\"o\">-</span><span class=\"n\">function</span><span class=\"p\">[</span><span class=\"mi\">483</span><span class=\"p\">]</span>:<span class=\"mh\">0x1c740</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">__wasilibc_populate_preopens</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"n\">anonymous</span><span class=\"o\">&gt;</span>:<span class=\"nc\">wasm</span><span class=\"o\">-</span><span class=\"n\">function</span><span class=\"p\">[</span><span class=\"mi\">491</span><span class=\"p\">]</span>:<span class=\"mh\">0x1cc42</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">__wasm_call_ctors</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"n\">anonymous</span><span class=\"o\">&gt;</span>:<span class=\"nc\">wasm</span><span class=\"o\">-</span><span class=\"n\">function</span><span class=\"p\">[</span><span class=\"mi\">17</span><span class=\"p\">]</span>:<span class=\"mh\">0xbfa</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 312553690,
        "sender_full_name": "Daniel Macovei",
        "timestamp": 1669609810
    },
    {
        "content": "<p>if i were just compiling, I guess I could add a flag for better errors, but not quite sure how to do that executing the wasm module from a js host</p>",
        "id": 312553813,
        "sender_full_name": "Daniel Macovei",
        "timestamp": 1669609918
    },
    {
        "content": "<p>The only cases <code>__wasilibc_populate_preopens</code> calls <code>_Exit</code> seem to be when <code>fd_prestat_get</code> or <code>fd_prestat_dir_name</code> return an error.</p>",
        "id": 312613396,
        "sender_full_name": "bjorn3",
        "timestamp": 1669637472
    },
    {
        "content": "<p>Are you treating the wasm module as a library and calling a function other than the start function? If so you will need to compile as a wasi reactor rather than wasi command like is the default.</p>",
        "id": 312613699,
        "sender_full_name": "bjorn3",
        "timestamp": 1669637571
    },
    {
        "content": "<p>A wasi command has it's start function called once and after that can't be called into again. A wasi reactor has an initialize function called once and after that you can call any exported function you want.</p>",
        "id": 312613873,
        "sender_full_name": "bjorn3",
        "timestamp": 1669637631
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"486181\">@Daniel Macovei</span></p>",
        "id": 312613932,
        "sender_full_name": "bjorn3",
        "timestamp": 1669637643
    }
]