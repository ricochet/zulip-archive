[
    {
        "content": "<p>Does anybody know of any interpreters that closely follow the shape and structure of the specification? My goal is to pretty much use it as a reference implementation for some tests after modifying it with changes to the spec that I have in mind. I want to avoid missing implementation-specific details with the modifications, and so for that reason specifically it would be nice if the implementation was mirroring the spec as close to 1:1 as possible, including the instruction reduction mechanism used in the spec. As far as Rust implementations go, <a href=\"https://github.com/rhysd/wain\">wain</a> seems to fit the bill the best so far, but that implementation has chosen to eschew the reduction approach for the more straightforward <code>loop { match { ... } }</code>.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/rhysd/wain\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/a4860dc8d3b0b7299fe3a428535a3a007bc90dc9\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f366362343864313235363835303463613662353636363964616237636633633634376138396137366430316137646164363061353764353161363961303230392f72687973642f7761696e)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/rhysd/wain\" title=\"GitHub - rhysd/wain: WebAssembly implementation from scratch in Safe Rust with zero dependencies\">GitHub - rhysd/wain: WebAssembly implementation from scratch in Safe Rust with zero dependencies</a></div><div class=\"message_embed_description\">WebAssembly implementation from scratch in Safe Rust with zero dependencies - GitHub - rhysd/wain: WebAssembly implementation from scratch in Safe Rust with zero dependencies</div></div></div>",
        "id": 291691489,
        "sender_full_name": "nagisa",
        "timestamp": 1659436855
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"515815\">@nagisa</span> the spec repository itself has the reference interpreter, which seems to be the best fit I can think of for your request; it's written in a way that basically mirrors the spec's reduction rules into OCaml</p>",
        "id": 291732759,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1659457258
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"477864\">@Conrad Watt</span> has done work to make it fast with a few tweaks (otherwise it has some unfortunate quadratic behavior) and we use that version as an oracle for fuzzing</p>",
        "id": 291732827,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1659457293
    },
    {
        "content": "<p>just to add, you should _definitely_ use the unmodified reference interpreter if you can get away with it, rather than my fork, which contains code generated using a theorem prover and isn't really human-readable</p>",
        "id": 291743069,
        "sender_full_name": "Conrad Watt",
        "timestamp": 1659462197
    },
    {
        "content": "<p>Yeah performance is of little concern in my case, integrability into a typical Rust crate’s test suite and ability to modify it is however. I think might be able to live with ocaml as a dep, but I’ll need to see if I can get up to speed with the impl reasonably quickly.</p>",
        "id": 291743774,
        "sender_full_name": "nagisa",
        "timestamp": 1659462554
    },
    {
        "content": "<p>It would be pretty useful to have the OCaml based Wasm spec interpreter as a Rust crate on <a href=\"http://crates.io\">crates.io</a>. I see it fruitful for things like fuzz testing Wasm validation and runtime execution against the Wasm spec interpreter.</p>",
        "id": 292404043,
        "sender_full_name": "Robin Freyler",
        "timestamp": 1659966579
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"374806\">@Hero Bird</span>, with a little bit of work, the <code>wasm-spec-interpreter</code> crate in Wasmtime (<a href=\"https://github.com/bytecodealliance/wasmtime/tree/main/crates/fuzzing/wasm-spec-interpreter\">here</a>) could be adapted and published on <a href=\"http://crates.io\">crates.io</a>. Are you interested in that?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/tree/main/crates/fuzzing/wasm-spec-interpreter\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/c4246974f8d26db3ebae03fb64e15457f86670da\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f363039626339333266663839626231643235323433663566393736626333356336343431336330343433393865646231383930313832303434653436386132632f62797465636f6465616c6c69616e63652f7761736d74696d65)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/tree/main/crates/fuzzing/wasm-spec-interpreter\" title=\"wasmtime/crates/fuzzing/wasm-spec-interpreter at main · bytecodealliance/wasmtime\">wasmtime/crates/fuzzing/wasm-spec-interpreter at main · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A standalone runtime for WebAssembly. Contribute to bytecodealliance/wasmtime development by creating an account on GitHub.</div></div></div>",
        "id": 292413661,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1659970888
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"254110\">@Andrew Brown</span> If the BytecodeAlliance team appreciates the idea I'd definitely be interested in publishing the <code>wasm-spec-interpreter</code> to <a href=\"http://crates.io\">crates.io</a>. I could really use this for <code>wasmi</code>. :)</p>",
        "id": 292415236,
        "sender_full_name": "Robin Freyler",
        "timestamp": 1659971597
    },
    {
        "content": "<p>Well I think it's a fine idea personally, I think there's a couple of things to figure out:</p>\n<ul>\n<li>should we move the code to a separate BA repository?</li>\n<li>who should have publication rights? (I think it would be great if you wanted to be the primary publisher but we might want to have some other BA maintainers there as well)</li>\n<li>the code probably needs a bit of tweaking: e.g., we probably want a way (Cargo feature?) to decide between using <span class=\"user-mention\" data-user-id=\"477864\">@Conrad Watt</span>'s interpreter and the reference interpreter, certainly more documentation is needed (esp. about build dependencies necessary for this to work), etc.</li>\n</ul>",
        "id": 292415864,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1659971870
    },
    {
        "content": "<p>I will bring this up in the Cranelift meeting in a few minutes to see what people think</p>",
        "id": 292415959,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1659971897
    },
    {
        "content": "<p>Okay thanks a lot for this information and thanks for bringing up the idea at the next Cranelift meeting! :)<br>\nI'd just make the BytecodeAlliance the publisher of the crate as with all other BytecodeAlliance crates. Please keep me updated about this.</p>",
        "id": 292416407,
        "sender_full_name": "Robin Freyler",
        "timestamp": 1659972126
    },
    {
        "content": "<p>Maybe having an issue where we can discuss this would be valuable once the decision for this idea has been made.</p>",
        "id": 292416717,
        "sender_full_name": "Robin Freyler",
        "timestamp": 1659972251
    },
    {
        "content": "<p>Sorry if I've misunderstood, but will this be discussed at the Wasmtime meeting on the 18th? I can dial in.</p>\n<p>EDIT: ah, I guess I missed the relevant call, no worries :)</p>",
        "id": 292417666,
        "sender_full_name": "Conrad Watt",
        "timestamp": 1659972707
    },
    {
        "content": "<p>Sure, I can add it as an agenda topic for the Wasmtime meeting as well</p>",
        "id": 292417861,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1659972781
    },
    {
        "content": "<p>btw, the version of the interpreter I maintain has a command line switch that lets you use the \"original\" interpreter definitions</p>",
        "id": 292418008,
        "sender_full_name": "Conrad Watt",
        "timestamp": 1659972842
    },
    {
        "content": "<p>so there wouldn't be a strict need for any further configuration on that front</p>",
        "id": 292418105,
        "sender_full_name": "Conrad Watt",
        "timestamp": 1659972871
    },
    {
        "content": "<p>(although maybe some work is needed in the top-level <code>interpret.ml</code> file of the crate to expose this)</p>",
        "id": 292418271,
        "sender_full_name": "Conrad Watt",
        "timestamp": 1659972956
    },
    {
        "content": "<p>Where can I find a link to <span class=\"user-mention\" data-user-id=\"477864\">@Conrad Watt</span> 's interpreter. Is this interpreter also meant to be a spec reference implementation of Wasm?</p>",
        "id": 292420757,
        "sender_full_name": "Robin Freyler",
        "timestamp": 1659974075
    },
    {
        "content": "<p>link: <a href=\"https://github.com/conrad-watt/spec/tree/wasmtime_fuzzing/interpreter\">https://github.com/conrad-watt/spec/tree/wasmtime_fuzzing/interpreter</a></p>\n<p>its story is a little more complicated - the interpreter is based on a logical model of the spec written in the Isabelle theorem prover - the model is the \"reference\", and the interpreter isn't meant to be directly readable, but instead trusted because there's a proof that it's correct wrt the model</p>\n<p>paper: <a href=\"https://vtss.doc.ic.ac.uk/publications/Watt2021Two.pdf\">https://vtss.doc.ic.ac.uk/publications/Watt2021Two.pdf</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/conrad-watt/spec/tree/wasmtime_fuzzing/interpreter\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/a1eaba7b75101451dc7b1cbfd18cb0ac27505f76\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f623532653836336238633863343038323662653639623062646363653962396261656463353133633134383166666466313533633535396134646662326164372f636f6e7261642d776174742f73706563)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/conrad-watt/spec/tree/wasmtime_fuzzing/interpreter\" title=\"spec/interpreter at wasmtime_fuzzing · conrad-watt/spec\">spec/interpreter at wasmtime_fuzzing · conrad-watt/spec</a></div><div class=\"message_embed_description\">WebAssembly specification, reference interpreter, and test suite. - spec/interpreter at wasmtime_fuzzing · conrad-watt/spec</div></div></div>",
        "id": 292423495,
        "sender_full_name": "Conrad Watt",
        "timestamp": 1659975237
    },
    {
        "content": "<p>this approach means I can implement optimisations without breaking the \"trust story\"</p>",
        "id": 292423721,
        "sender_full_name": "Conrad Watt",
        "timestamp": 1659975332
    },
    {
        "content": "<p>Ok, here is the agenda topic for the 18th: <a href=\"https://github.com/bytecodealliance/meetings/pull/12\">https://github.com/bytecodealliance/meetings/pull/12</a>. <span class=\"user-mention\" data-user-id=\"374806\">@Hero Bird</span>, can you make it to that meeting as well?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/meetings/pull/12\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/c48941f277be69643df4242f1750f3d5be6ca1b7\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f636164613263316437323963323138366635346166376663663737323164363037353739313538353038366339613031386338316263333330613037383730632f62797465636f6465616c6c69616e63652f6d656574696e67732f70756c6c2f3132)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/meetings/pull/12\" title=\"Add agenda item to discuss wasm-spec-interpreter by abrown · Pull Request #12 · bytecodealliance/meetings\">Add agenda item to discuss wasm-spec-interpreter by abrown · Pull Request #12 · bytecodealliance/meetings</a></div><div class=\"message_embed_description\">Contribute to bytecodealliance/meetings development by creating an account on GitHub.</div></div></div>",
        "id": 292423955,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1659975432
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"477864\">@Conrad Watt</span> Thanks for the link and explanations!<br>\n<span class=\"user-mention\" data-user-id=\"254110\">@Andrew Brown</span> Never took part in such a meeting but I guess it is about time, right?</p>",
        "id": 292429017,
        "sender_full_name": "Robin Freyler",
        "timestamp": 1659977820
    },
    {
        "content": "<p>Unfortunately I've just found out that I'll only be able to join the meeting for the first 30 minutes. I'm very sorry about this, and if it turns out not to be enough time I'm happy to call/message anyone who's interested out-of-band.</p>",
        "id": 293969544,
        "sender_full_name": "Conrad Watt",
        "timestamp": 1660767533
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"254110\">@Andrew Brown</span> Do I need to contact someone in order to participate in the meeting later or am I already signed up?</p>",
        "id": 294027161,
        "sender_full_name": "Robin Freyler",
        "timestamp": 1660808932
    },
    {
        "content": "<p>Not totally sure; perhaps contact <span class=\"user-mention\" data-user-id=\"253990\">@fitzgen (he/him)</span>?</p>",
        "id": 294075865,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1660828854
    },
    {
        "content": "<p>okay will do</p>",
        "id": 294076270,
        "sender_full_name": "Robin Freyler",
        "timestamp": 1660829019
    },
    {
        "content": "<p>I've created <a href=\"https://github.com/bytecodealliance/wasm-spec-interpreter\">https://github.com/bytecodealliance/wasm-spec-interpreter</a> for a repo here</p>",
        "id": 294125217,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1660841087
    },
    {
        "content": "<p>Maybe I am just stupid but GitHub does not allow me to fork the repo or create a bare PR for it because the repo is empty.</p>",
        "id": 294307583,
        "sender_full_name": "Robin Freyler",
        "timestamp": 1660924822
    },
    {
        "content": "<p>I'll move the code there in a few minutes so we can get started...</p>",
        "id": 294308924,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1660925178
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"374806\">@Robin Freyler</span>, what is your GitHub handle?</p>",
        "id": 294317119,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1660925783
    },
    {
        "content": "<p>never mind, I think I figured it out</p>",
        "id": 294326714,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1660928783
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"374806\">@Robin Freyler</span>, <span class=\"user-mention\" data-user-id=\"477864\">@Conrad Watt</span>, <span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span>: I could use some reviews on the setup of that repository, <a href=\"https://github.com/bytecodealliance/wasm-spec-interpreter/pulls\">https://github.com/bytecodealliance/wasm-spec-interpreter/pulls</a>. (Not sure what I did wrong in the CI infrastructure one because I thought it would run the CI even in the PR; maybe we need to merge it first to activate GitHub Actions?).</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasm-spec-interpreter/pulls\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/a9d602f6418173ef164ccf95c8e01c8f2ed2a1e8\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f653862643739396430666664623932643662353565633438646134353263656561663965316561646563616135636237643965646362333838313266623838362f62797465636f6465616c6c69616e63652f7761736d2d737065632d696e746572707265746572)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasm-spec-interpreter/pulls\" title=\"Pull requests · bytecodealliance/wasm-spec-interpreter\">Pull requests · bytecodealliance/wasm-spec-interpreter</a></div><div class=\"message_embed_description\">Contribute to bytecodealliance/wasm-spec-interpreter development by creating an account on GitHub.</div></div></div>",
        "id": 294327246,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1660928992
    },
    {
        "content": "<p>you'll need to merge to <code>main</code> to trigger CI on future PRs</p>",
        "id": 294327362,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1660929030
    },
    {
        "content": "<p>CI added just in a PR for the first time doesn't trigger a run automatically</p>",
        "id": 294327381,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1660929038
    }
]