[
    {
        "content": "<p>I'm not sure about that. please feel free to correct me.</p>\n<p>I noticed the <code>global.get</code> in <em>lib-foo</em> in <a href=\"https://github.com/bytecodealliance/wasm-tools/blob/main/crates/wit-component/tests/components/link/lib-foo.wat#L36\">link case</a> is:</p>\n<div class=\"codehilite\" data-code-language=\"WebAssembly\"><pre><span></span><code>    <span class=\"nb\">local.get</span> <span class=\"mi\">0</span>\n    <span class=\"nb\">global.get</span> <span class=\"nv\">$um</span>\n    <span class=\"nb\">i32.load</span> <span class=\"k\">offset</span><span class=\"o\">=</span><span class=\"mi\">16</span>\n</code></pre></div>\n<p>Because <em>lib-bar</em> will be linked with other wasm modules but run with its own <em>data area</em> (<code>(data $.data (global.get $__memory_base) \"\\04\\00\\00\\00\")</code>). Does it mean its <code>global.get</code> should read from <code>__memory_base + $offset</code>instead of <code>$offset</code>, in this case, <code>local.get 0</code> provides <code>$offset</code>?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasm-tools/blob/main/crates/wit-component/tests/components/link/lib-foo.wat#L36\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/779d4eab32a232b1c746dc26a9c29cd9b75f7056\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f376333646638396661646261323434663862356363616133663936363130383362316334313730636137373261643935623635336235633661343135343233622f62797465636f6465616c6c69616e63652f7761736d2d746f6f6c73)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasm-tools/blob/main/crates/wit-component/tests/components/link/lib-foo.wat#L36\" title=\"wasm-tools/crates/wit-component/tests/components/link/lib-foo.wat at main · bytecodealliance/wasm-tools\">wasm-tools/crates/wit-component/tests/components/link/lib-foo.wat at main · bytecodealliance/wasm-tools</a></div><div class=\"message_embed_description\"> CLI and Rust libraries for low-level manipulation of WebAssembly modules  - bytecodealliance/wasm-tools</div></div></div>",
        "id": 431654546,
        "sender_full_name": "lum1n0us",
        "timestamp": 1712392730
    },
    {
        "content": "<p><code>wasm-tools component link</code> will synthesize an \"init\" module which is responsible for initializing all <code>GOT.mem</code> global variables based on the computed memory offsets, which means that by the time the <code>global.get</code> and <code>i32.load</code> instructions you linked to are run, the <code>$um</code> global variable has already been updated to point to the correct place in memory.  See <a href=\"https://github.com/WebAssembly/tool-conventions/blob/main/DynamicLinking.md#imports\">https://github.com/WebAssembly/tool-conventions/blob/main/DynamicLinking.md#imports</a> for more details.  See also <a href=\"https://github.com/bytecodealliance/wasm-tools/blob/c85632b22db1fd7a6b9b7146fc1df204e19d5afb/crates/wit-component/src/linking.rs#L675-L697\">https://github.com/bytecodealliance/wasm-tools/blob/c85632b22db1fd7a6b9b7146fc1df204e19d5afb/crates/wit-component/src/linking.rs#L675-L697</a> for where the code initializes the <code>GOT.mem</code> global variables based on the appropriate <code>__memory_base</code> value.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/tool-conventions/blob/main/DynamicLinking.md#imports\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/2004e71472b8f330dedabd13dba60ccb6c23726c\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f666632333738663231626664393164353663343366383837613738303164626237373435353230353263356464383939346432393839633764356338613862362f576562417373656d626c792f746f6f6c2d636f6e76656e74696f6e73)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/tool-conventions/blob/main/DynamicLinking.md#imports\" title=\"tool-conventions/DynamicLinking.md at main · WebAssembly/tool-conventions\">tool-conventions/DynamicLinking.md at main · WebAssembly/tool-conventions</a></div><div class=\"message_embed_description\">Conventions supporting interoperatibility between tools working with WebAssembly. - WebAssembly/tool-conventions</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasm-tools/blob/c85632b22db1fd7a6b9b7146fc1df204e19d5afb/crates/wit-component/src/linking.rs#L675-L697\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/919cb119ed848642c856f50f89f87ee72e95bcd8\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f366666633431306238613364623331663063313964343335363031303739313131333964616638653939383736326230366165336237376339313333326530622f62797465636f6465616c6c69616e63652f7761736d2d746f6f6c73)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasm-tools/blob/c85632b22db1fd7a6b9b7146fc1df204e19d5afb/crates/wit-component/src/linking.rs#L675-L697\" title=\"wasm-tools/crates/wit-component/src/linking.rs at c85632b22db1fd7a6b9b7146fc1df204e19d5afb · bytecodealliance/wasm-tools\">wasm-tools/crates/wit-component/src/linking.rs at c85632b22db1fd7a6b9b7146fc1df204e19d5afb · bytecodealliance/wasm-tools</a></div><div class=\"message_embed_description\"> CLI and Rust libraries for low-level manipulation of WebAssembly modules  - bytecodealliance/wasm-tools</div></div></div>",
        "id": 431683581,
        "sender_full_name": "Joel Dice",
        "timestamp": 1712418474
    },
    {
        "content": "<p>Also, here's the \"init\" module produced for the test case you linked to above: <a href=\"https://github.com/bytecodealliance/wasm-tools/blob/c85632b22db1fd7a6b9b7146fc1df204e19d5afb/crates/wit-component/tests/components/link/component.wat#L146-L182\">https://github.com/bytecodealliance/wasm-tools/blob/c85632b22db1fd7a6b9b7146fc1df204e19d5afb/crates/wit-component/tests/components/link/component.wat#L146-L182</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasm-tools/blob/c85632b22db1fd7a6b9b7146fc1df204e19d5afb/crates/wit-component/tests/components/link/component.wat#L146-L182\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/919cb119ed848642c856f50f89f87ee72e95bcd8\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f366666633431306238613364623331663063313964343335363031303739313131333964616638653939383736326230366165336237376339313333326530622f62797465636f6465616c6c69616e63652f7761736d2d746f6f6c73)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasm-tools/blob/c85632b22db1fd7a6b9b7146fc1df204e19d5afb/crates/wit-component/tests/components/link/component.wat#L146-L182\" title=\"wasm-tools/crates/wit-component/tests/components/link/component.wat at c85632b22db1fd7a6b9b7146fc1df204e19d5afb · bytecodealliance/wasm-tools\">wasm-tools/crates/wit-component/tests/components/link/component.wat at c85632b22db1fd7a6b9b7146fc1df204e19d5afb · bytecodealliance/wasm-tools</a></div><div class=\"message_embed_description\"> CLI and Rust libraries for low-level manipulation of WebAssembly modules  - bytecodealliance/wasm-tools</div></div></div>",
        "id": 431683946,
        "sender_full_name": "Joel Dice",
        "timestamp": 1712418747
    }
]