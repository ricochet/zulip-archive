[
    {
        "content": "<p>Hi, new member here,<br>\nI wanted to know if here was the right place, being a total beginner in compiler development, to ask for help</p>",
        "id": 279988117,
        "sender_full_name": "infrandomness",
        "timestamp": 1650817301
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"496398\">infrandomness</span> <a href=\"#narrow/stream/206238-general/topic/A.20bit.20of.20help.20.3F/near/279988117\">said</a>:</p>\n<blockquote>\n<p>Hi, new member here,<br>\nI wanted to know if here was the right place, being a total beginner in compiler development, to ask for help</p>\n</blockquote>\n<p>if I can ask for help here : </p>\n<p>Hello guys, I'm in the process of creating a compiler  for my programming language in rust with cranelift<br>\nI had questions about cranelift-module and cranelift-object <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span><br>\nI currently use both cranelift-module and cranelift-object to put together an ELF file. (I helped myself of <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/object/tests/basic.rs#L149\">https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/object/tests/basic.rs#L149</a> to put something together)<br>\nThe ELF file looks fine except for a thing, the file headers of the ELF file indicate </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">object</span>:     <span class=\"nc\">file</span><span class=\"w\"> </span><span class=\"n\">format</span><span class=\"w\"> </span><span class=\"n\">elf64</span><span class=\"o\">-</span><span class=\"n\">x86</span><span class=\"o\">-</span><span class=\"mi\">64</span><span class=\"w\"></span>\n<span class=\"n\">architecture</span>: <span class=\"nc\">i386</span>:<span class=\"nc\">x86</span><span class=\"o\">-</span><span class=\"mi\">64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">flags</span><span class=\"w\"> </span><span class=\"mh\">0x00000011</span>:\n<span class=\"nc\">HAS_RELOC</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">HAS_SYMS</span><span class=\"w\"></span>\n<span class=\"n\">start</span><span class=\"w\"> </span><span class=\"n\">address</span><span class=\"w\"> </span><span class=\"mh\">0x0000000000000000</span><span class=\"w\"></span>\n</code></pre></div>\n<p>the start_address variable is set to 0, which means that the ELF file will never be able to know where to start execution at if the kernel executes the ELF<br>\nDoes anyone know how to fix that ? What am I missing ? <br>\nand last question : in the code, there is usage of malloc and <a href=\"https://docs.rs/cranelift-frontend/latest/cranelift_frontend/struct.FunctionBuilder.html#method.call_memset\">https://docs.rs/cranelift-frontend/latest/cranelift_frontend/struct.FunctionBuilder.html#method.call_memset</a>,<br>\nbut ldd states my ELF is not dynamically linked against anything (I can't tell if it is statically linked and if so, where is memset and memcpy)</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/object/tests/basic.rs#L149\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/73089191c495420cc7c8fd6956b6fe824d2cd03e\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f383334376231326164633930366434363263653362316432633532396131316335663639356538333230613339626464303132666264366332373064653635302f62797465636f6465616c6c69616e63652f7761736d74696d65)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/object/tests/basic.rs#L149\" title=\"wasmtime/basic.rs at main · bytecodealliance/wasmtime\">wasmtime/basic.rs at main · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Standalone JIT-style runtime for WebAssembly, using Cranelift - wasmtime/basic.rs at main · bytecodealliance/wasmtime</div></div></div>",
        "id": 279988667,
        "sender_full_name": "infrandomness",
        "timestamp": 1650818198
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"496398\">infrandomness</span> has marked this topic as resolved.</p>",
        "id": 279990404,
        "sender_full_name": "Notification Bot",
        "timestamp": 1650820936
    },
    {
        "content": "<p>I was also wondering if anyone knows what part of the cranelift code determines what IR function should be considered global symbols ?<br>\nI’m having troubles having a function seen as main to my linker because it is not global</p>",
        "id": 280046197,
        "sender_full_name": "infrandomness",
        "timestamp": 1650880307
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"496398\">@infrandomness</span> You should use call declare_function with Linkage::Export instead of Linkage::Local of you want to export a function.</p>",
        "id": 280116255,
        "sender_full_name": "bjorn3",
        "timestamp": 1650914418
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"264278\">bjorn3</span> <a href=\"#narrow/stream/206238-general/topic/.E2.9C.94.20A.20bit.20of.20help.20.3F/near/280116255\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"496398\">infrandomness</span> You should use call declare_function with Linkage::Export instead of Linkage::Local of you want to export a function.</p>\n</blockquote>\n<p>I am not willing to export a function, but I am willing to have GNU ld detect my main function, and I think the reason as to why it does not is because the main symbol is not global</p>",
        "id": 280125315,
        "sender_full_name": "infrandomness",
        "timestamp": 1650919014
    },
    {
        "content": "<p>EDIT: your suggestion seems to have fixed it <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 280138462,
        "sender_full_name": "infrandomness",
        "timestamp": 1650926059
    },
    {
        "content": "<p>The linker doesn't export symbols from am executable by default. You need to export <code>main</code> from the local object file for the linker to resolve it in the crt object which uses it.</p>",
        "id": 280166004,
        "sender_full_name": "bjorn3",
        "timestamp": 1650954208
    }
]