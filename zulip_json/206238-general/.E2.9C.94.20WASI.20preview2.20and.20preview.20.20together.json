[
    {
        "content": "<p>Hi! This is my first message here, I hope I'm writing it in the right place. I am experimenting with using the latest WASI preview2 interfaces such as <a href=\"https://github.com/WebAssembly/wasi-http\">wasi-http</a> from Rust, creating components and running them with wasmtime, using a custom host implementation of all these WASI interfaces. I ran into some tooling issues and I feel I'm close to the point of understanding what's going on but anyway I will describe the whole problem so maybe you can point out if I'm doing something different as it's intended to (I'm quite new to this whole world of WASM).</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/wasi-http\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/505f392c08a43d6ee0afd367cdcd9484490671b9\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f633166373965363335333931623539333732363033373862363237616532393733356263343733386233386633356538373131306463303233346635306330612f576562417373656d626c792f776173692d68747470)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/wasi-http\" title=\"GitHub - WebAssembly/wasi-http\">GitHub - WebAssembly/wasi-http</a></div><div class=\"message_embed_description\">Contribute to WebAssembly/wasi-http development by creating an account on GitHub.</div></div></div>",
        "id": 361081461,
        "sender_full_name": "Daniel Vigovszky",
        "timestamp": 1685025638
    },
    {
        "content": "<p>So what I'm trying to do is using Rust (1.69), and latest <code>cargo component</code>to build the component. Using the preview1 adapter I can create components using some subset of the preview2 interfaces by mapping Rust's preview1 based std lib implementation. What I have trouble with is using some of the new interfaces, let's say wasi-http. To do so, I was using <code>wit-deps</code> to add the WITs to the project as dependencies (wasi-http and all its transitive depencencies). Then I'm importing the <code>outgoing-http</code> interface in my top level WIT so the binding generator generates code for it and I can use it in my implementation. This all works fine and compiles, but then in the step of creating the component from the core module, I get errors of merging WIT interfaces.</p>\n<p>The error is the following:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">error</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">merge</span><span class=\"w\"> </span><span class=\"n\">WIT</span><span class=\"w\"> </span><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"n\">sets</span><span class=\"w\"> </span><span class=\"n\">together</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n  <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">merge</span><span class=\"w\"> </span><span class=\"n\">WIT</span><span class=\"w\"> </span><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"n\">sets</span><span class=\"w\"> </span><span class=\"n\">together</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n  <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">merge</span><span class=\"w\"> </span><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">http</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">into</span><span class=\"w\"> </span><span class=\"n\">existing</span><span class=\"w\"> </span><span class=\"n\">copy</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n  <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">merge</span><span class=\"w\"> </span><span class=\"n\">document</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">types</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">into</span><span class=\"w\"> </span><span class=\"n\">existing</span><span class=\"w\"> </span><span class=\"n\">copy</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n  <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">merge</span><span class=\"w\"> </span><span class=\"n\">interface</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">types</span><span class=\"err\">`</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n  <span class=\"nc\">expected</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">incoming</span><span class=\"o\">-</span><span class=\"n\">request</span><span class=\"o\">-</span><span class=\"n\">path</span><span class=\"o\">-</span><span class=\"n\">with</span><span class=\"o\">-</span><span class=\"n\">query</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">be</span><span class=\"w\"> </span><span class=\"n\">present</span>\n</code></pre></div>\n<p>Later I realized if I'm doing it \"by hand\" (not via <code>cargo-component</code> but compiling to a core wasm module and running <code>wasm-tools</code>myself) then I get a bit more info, it says it fails to merge the preview1 adapter module.</p>\n<p>For a long time I did not understand where could a different <code>types</code> interface coming in the picture. I even renamed the <code>types</code> interface in <code>wasi-filesystem</code> to see if that is colliding somehow with the one from <code>wasi-http</code>. (That did not help).</p>\n<p>I also have a trace output from <code>wasm-tools</code> but that's also not very helpful<br>\n(Ends with:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">[</span><span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">05</span><span class=\"o\">-</span><span class=\"mi\">25</span><span class=\"n\">T11</span>:<span class=\"mi\">18</span>:<span class=\"mi\">36</span><span class=\"n\">Z</span><span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">merging</span><span class=\"w\"> </span><span class=\"n\">duplicate</span><span class=\"w\"> </span><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"n\">http</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"s\">\"path:/http\"</span><span class=\"p\">)</span>\n<span class=\"n\">error</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">merge</span><span class=\"w\"> </span><span class=\"n\">WIT</span><span class=\"w\"> </span><span class=\"n\">packages</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">adapter</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasi_snapshot_preview1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">into</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"w\"> </span><span class=\"n\">packages</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"mi\">0</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">merge</span><span class=\"w\"> </span><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">http</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">into</span><span class=\"w\"> </span><span class=\"n\">existing</span><span class=\"w\"> </span><span class=\"n\">copy</span>\n<span class=\"w\">    </span><span class=\"mi\">1</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">merge</span><span class=\"w\"> </span><span class=\"n\">document</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">types</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">into</span><span class=\"w\"> </span><span class=\"n\">existing</span><span class=\"w\"> </span><span class=\"n\">copy</span>\n<span class=\"w\">    </span><span class=\"mi\">2</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">merge</span><span class=\"w\"> </span><span class=\"n\">interface</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">types</span><span class=\"err\">`</span>\n<span class=\"w\">    </span><span class=\"mi\">3</span>: <span class=\"nc\">expected</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">incoming</span><span class=\"o\">-</span><span class=\"n\">request</span><span class=\"o\">-</span><span class=\"n\">path</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">be</span><span class=\"w\"> </span><span class=\"n\">present</span>\n</code></pre></div>\n<p>)</p>\n<p>After all this I think I realized that there is an other version of the WASI WIT documents in some binary form embedded as custom sections in the preview1 module, and that must be in conflict with the one I'm bringing in. Probably just an older version as the <code>incoming-request-path</code> mentioned in the error was changed to <code>incoming-request-path-and-query</code> I think. </p>\n<p>So the question is how can I fix this? Should I build a preview1 adapter for myself using the latest WIT packages? Or am I doing something else wrong?</p>",
        "id": 361084142,
        "sender_full_name": "Daniel Vigovszky",
        "timestamp": 1685026309
    },
    {
        "content": "<p>You are spot on with the reason; the conflicting types are coming from here: <a href=\"https://github.com/bytecodealliance/preview2-prototyping/tree/main/wit/deps/http\">https://github.com/bytecodealliance/preview2-prototyping/tree/main/wit/deps/http</a><br>\nA previous conversation on this topic: <a href=\"#narrow/stream/327223-wit-bindgen/topic/dependency.20namespacing\">https://bytecodealliance.zulipchat.com/#narrow/stream/327223-wit-bindgen/topic/dependency.20namespacing</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/preview2-prototyping/tree/main/wit/deps/http\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/d3580108ef9a284edbe750aa96e2c387066642f5\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f343539353561366334373532623837343631303336646633363133386430373366366633646261316636653265396134623663393932323261363662346130352f62797465636f6465616c6c69616e63652f70726576696577322d70726f746f747970696e67)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/preview2-prototyping/tree/main/wit/deps/http\" title=\"preview2-prototyping/wit/deps/http at main · bytecodealliance/preview2-prototyping\">preview2-prototyping/wit/deps/http at main · bytecodealliance/preview2-prototyping</a></div><div class=\"message_embed_description\">Polyfill adapter for preview1-using wasm modules to call preview2 functions. - preview2-prototyping/wit/deps/http at main · bytecodealliance/preview2-prototyping</div></div></div>",
        "id": 361093755,
        "sender_full_name": "Lann Martin",
        "timestamp": 1685028382
    },
    {
        "content": "<p>Thanks for the link! Indeed by using the older WITs that are in the adapter module everywhere the merging error is gone. (Now I'm having a linking error on the host but that's another story to figure out). That said, I think the wasi-http implementation in wasmtime is already using the newer version of the interface not the one in the adapter module. I understand everything is very much work in progress. If there is any way I can contribute to improve this situation please let me know!</p>",
        "id": 361099255,
        "sender_full_name": "Daniel Vigovszky",
        "timestamp": 1685029577
    },
    {
        "content": "<p>It sounds like, at a minimum, the adapters built into <code>cargo-component</code> are pretty out of date, I can do an update to latest</p>",
        "id": 361117264,
        "sender_full_name": "Peter Huene",
        "timestamp": 1685033880
    },
    {
        "content": "<p>Given we've just merged a change to the binary encoding of components, I'm going to hold off on updating <code>cargo-component</code> until wit-bindgen and the WASI adapaters have been updated</p>",
        "id": 361153359,
        "sender_full_name": "Peter Huene",
        "timestamp": 1685044097
    },
    {
        "content": "<p>the wasmtime-wasi-http implementation isnt set up to work correctly with the wasmtime-wasi::preview2 implementation yet</p>",
        "id": 361185264,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1685058562
    },
    {
        "content": "<p>so even when these other issues are resolved, there are still some hurdles to overcome to use wasi-http in wasmtime</p>",
        "id": 361185304,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1685058598
    },
    {
        "content": "<p>im working on that soon</p>",
        "id": 361185318,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1685058601
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"620014\">Daniel Vigovszky</span> has marked this topic as resolved.</p>",
        "id": 362140385,
        "sender_full_name": "Notification Bot",
        "timestamp": 1685443174
    }
]