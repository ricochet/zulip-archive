[
    {
        "content": "<p>Hello again! It seems that <code>store</code> on <code>r_ptr</code> here has been used wrong. It gives a SEGFAULT. Where am I wrong?</p>\n<p><a href=\"https://codeberg.org/farooqkz/wakegp/src/branch/master/src/compiler.rs#L159\">https://codeberg.org/farooqkz/wakegp/src/branch/master/src/compiler.rs#L159</a><br>\n<a href=\"https://codeberg.org/farooqkz/wakegp/src/branch/master/src/compiler.rs#L163\">https://codeberg.org/farooqkz/wakegp/src/branch/master/src/compiler.rs#L163</a></p>\n<p><code>r_ptr</code> comes from the second argument of the function(see <a href=\"https://codeberg.org/farooqkz/wakegp/src/branch/master/src/compiler.rs#L76\">this</a> and <a href=\"https://codeberg.org/farooqkz/wakegp/src/branch/master/src/compiler.rs#L188\">this</a>). The offset is calculated by the index(<code>r0</code>) multiplied by size of each element in the array(<a href=\"https://codeberg.org/farooqkz/wakegp/src/branch/master/src/compiler.rs#L188\">https://codeberg.org/farooqkz/wakegp/src/branch/master/src/compiler.rs#L188</a>).</p>\n<p>Thanks in advance!</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://codeberg.org/farooqkz/wakegp/src/branch/master/src/compiler.rs#L159\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/776324b1528ffb4fde3a7d0cd8261b7c74306dcd/68747470733a2f2f636f6465626572672e6f72672f617661746172732f6133653939613562666333633638303466633062656635386234366663333466&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://codeberg.org/farooqkz/wakegp/src/branch/master/src/compiler.rs#L159\" title=\"wakegp/src/compiler.rs at master\">wakegp/src/compiler.rs at master</a></div><div class=\"message_embed_description\">wakegp - Detecting wake words using Linear Genetic Programming</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://codeberg.org/farooqkz/wakegp/src/branch/master/src/compiler.rs#L163\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/776324b1528ffb4fde3a7d0cd8261b7c74306dcd/68747470733a2f2f636f6465626572672e6f72672f617661746172732f6133653939613562666333633638303466633062656635386234366663333466&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://codeberg.org/farooqkz/wakegp/src/branch/master/src/compiler.rs#L163\" title=\"wakegp/src/compiler.rs at master\">wakegp/src/compiler.rs at master</a></div><div class=\"message_embed_description\">wakegp - Detecting wake words using Linear Genetic Programming</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://codeberg.org/farooqkz/wakegp/src/branch/master/src/compiler.rs#L76\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/776324b1528ffb4fde3a7d0cd8261b7c74306dcd/68747470733a2f2f636f6465626572672e6f72672f617661746172732f6133653939613562666333633638303466633062656635386234366663333466&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://codeberg.org/farooqkz/wakegp/src/branch/master/src/compiler.rs#L76\" title=\"wakegp/src/compiler.rs at master\">wakegp/src/compiler.rs at master</a></div><div class=\"message_embed_description\">wakegp - Detecting wake words using Linear Genetic Programming</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://codeberg.org/farooqkz/wakegp/src/branch/master/src/compiler.rs#L188\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/776324b1528ffb4fde3a7d0cd8261b7c74306dcd/68747470733a2f2f636f6465626572672e6f72672f617661746172732f6133653939613562666333633638303466633062656635386234366663333466&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://codeberg.org/farooqkz/wakegp/src/branch/master/src/compiler.rs#L188\" title=\"wakegp/src/compiler.rs at master\">wakegp/src/compiler.rs at master</a></div><div class=\"message_embed_description\">wakegp - Detecting wake words using Linear Genetic Programming</div></div></div>",
        "id": 484152324,
        "sender_full_name": "Farooq",
        "timestamp": 1732454991
    },
    {
        "content": "<p>The problem was that I had to map a memory and make it executable. I still have other questions. Should I ask here or open a new topic?</p>",
        "id": 484178373,
        "sender_full_name": "Farooq",
        "timestamp": 1732480591
    },
    {
        "content": "<p>Asking here is fine. Won't get around to answering any questions today (CET) though.</p>",
        "id": 484183886,
        "sender_full_name": "bjorn3",
        "timestamp": 1732486186
    },
    {
        "content": "<p>I cannot find <code>brnz</code> in the docs which is used here:<br>\n<a href=\"https://github.com/Rodrigodd/bf-compiler/blob/master/cranelift-jit/src/main.rs#L219\">https://github.com/Rodrigodd/bf-compiler/blob/master/cranelift-jit/src/main.rs#L219</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/Rodrigodd/bf-compiler/blob/master/cranelift-jit/src/main.rs#L219\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/acb72b116f08afa31d1f516512cbca4d8da58a98/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f356432393661313665373531346237363233626531343135646231616634633133656438636633326437653339616338626164343732303361663537323163322f526f647269676f64642f62662d636f6d70696c6572&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/Rodrigodd/bf-compiler/blob/master/cranelift-jit/src/main.rs#L219\" title=\"bf-compiler/cranelift-jit/src/main.rs at master 路 Rodrigodd/bf-compiler\">bf-compiler/cranelift-jit/src/main.rs at master 路 Rodrigodd/bf-compiler</a></div><div class=\"message_embed_description\">Interpreted, optimized, JITed and compiled implementations of the Brainfuck lang. - Rodrigodd/bf-compiler</div></div></div>",
        "id": 484356093,
        "sender_full_name": "Farooq",
        "timestamp": 1732555792
    },
    {
        "content": "<p>I basically doing an <code>fcmp</code>, if it's true, there will be a jump, either backward or forward within the function(jump offsets are guarrented to be always inside my function). If it's false, there won't be any jump.</p>",
        "id": 484356368,
        "sender_full_name": "Farooq",
        "timestamp": 1732555873
    },
    {
        "content": "<p>Furthermore, for forward jumps, how can I jump to an address which I've yet to write the instructions for? I mean if I don't have instructions yet, how do I get the jump address?</p>\n<p>Edit: nvm this. There is an example in the bf compiler repository.</p>",
        "id": 484356560,
        "sender_full_name": "Farooq",
        "timestamp": 1732555932
    },
    {
        "content": "<p>hmm it seems that repo is using an ancient version of cranelift :)</p>",
        "id": 484357256,
        "sender_full_name": "Farooq",
        "timestamp": 1732556185
    },
    {
        "content": "<p>There is <code>br_if</code> and <code>br_table</code>. The first accepts arguments for both the <code>true</code> and <code>else/false</code> cases which does not match in my use case. The latter seems more like it, but I'm unsure if I can do backward jumps with it.</p>",
        "id": 484357773,
        "sender_full_name": "Farooq",
        "timestamp": 1732556392
    },
    {
        "content": "<p>Clif ir uses basic blocks rather than extended basic blocks, so every branch instruction is always jumps to another block and must be the last instruction in the block. In the backend a jump to the block immediately following the current block will be optimized away though.</p>",
        "id": 484471246,
        "sender_full_name": "bjorn3",
        "timestamp": 1732614410
    },
    {
        "content": "<p>brz/brnz no longer exist and have been replaced by br_if when we moved from extended basic blocks to basic blocks.</p>",
        "id": 484471331,
        "sender_full_name": "bjorn3",
        "timestamp": 1732614443
    },
    {
        "content": "<p>Can you please post an example on how to use do a simple if else statement like in C with cranelift?</p>",
        "id": 484765217,
        "sender_full_name": "Farooq",
        "timestamp": 1732727306
    },
    {
        "content": "<p>Here's an example of the use of <code>brif</code> in Wasmtime's translation to CLIF: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/66910067642ce2ddf5509845306508f89a24fc9e/crates/cranelift/src/func_environ.rs#L913\">https://github.com/bytecodealliance/wasmtime/blob/66910067642ce2ddf5509845306508f89a24fc9e/crates/cranelift/src/func_environ.rs#L913</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/66910067642ce2ddf5509845306508f89a24fc9e/crates/cranelift/src/func_environ.rs#L913\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/a9aa4448d95c1ebadc90fefbec150da1b598108b/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f376431383765306239626333356432333838666137366639656264643136333034333737336134303964643932396631376634393362656239623737636332322f62797465636f6465616c6c69616e63652f7761736d74696d65&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/66910067642ce2ddf5509845306508f89a24fc9e/crates/cranelift/src/func_environ.rs#L913\" title=\"wasmtime/crates/cranelift/src/func_environ.rs at 66910067642ce2ddf5509845306508f89a24fc9e 路 bytecodealliance/wasmtime\">wasmtime/crates/cranelift/src/func_environ.rs at 66910067642ce2ddf5509845306508f89a24fc9e 路 bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A fast and secure runtime for WebAssembly. Contribute to bytecodealliance/wasmtime development by creating an account on GitHub.</div></div></div>",
        "id": 484765529,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1732727412
    },
    {
        "content": "<p>note the \"continuation block\" -- that's a common idiom, if you have what is logically a \"one-way branch\" (if condition, go somewhere else)</p>",
        "id": 484765606,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1732727439
    },
    {
        "content": "<p>and note you can create blocks so you have their labels for targets before you fill them in</p>",
        "id": 484765628,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1732727449
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 484765669,
        "sender_full_name": "Farooq",
        "timestamp": 1732727462
    }
]