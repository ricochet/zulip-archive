[
    {
        "content": "<p>Is it possible to combine another module into one instance later?</p>",
        "id": 455805216,
        "sender_full_name": "Hoping White",
        "timestamp": 1722565967
    },
    {
        "content": "<p>No, an instance is an instantiation of a single module. You can have two instances (one for each module) where one imports functions from another instance though.</p>",
        "id": 455950219,
        "sender_full_name": "bjorn3",
        "timestamp": 1722609651
    },
    {
        "content": "<p>can they share the same memory?</p>",
        "id": 456085589,
        "sender_full_name": "Hoping White",
        "timestamp": 1722654342
    },
    {
        "content": "<p>Yes, provided that at least one of the two imports the memory and you have built both wasm modules as PIC to ensure they can put their data at different addresses. I don't know exactly how you are supposed to instantiate a PIC wasm module though.</p>",
        "id": 456197350,
        "sender_full_name": "bjorn3",
        "timestamp": 1722707517
    },
    {
        "content": "<p>I want to simulate multiple DLLs to work in Wasm.  Thanks.</p>",
        "id": 456441314,
        "sender_full_name": "Hoping White",
        "timestamp": 1722834064
    },
    {
        "content": "<p>For core Wasm, you might want to look at Emscripten's support for dynamic libraries (e.g. <a href=\"https://github.com/WebAssembly/tool-conventions/blob/main/DynamicLinking.md#implementation-status\">https://github.com/WebAssembly/tool-conventions/blob/main/DynamicLinking.md#implementation-status</a>).  The Component Model <a href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/Linking.md\">also supports composing shared libraries</a>, and that's what <a href=\"https://github.com/bytecodealliance/componentize-py\">componentize-py</a> uses to generate components.  <code>componentize-py</code> composes <a href=\"http://libc.so\">libc.so</a>, <a href=\"http://libpython312.so\">libpython312.so</a>, etc. to generate components, and <a href=\"https://github.com/bytecodealliance/componentize-py/issues/28\">the plan</a> is to optionally support importing those libraries from the host so they don't need to be bundled.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/tool-conventions/blob/main/DynamicLinking.md#implementation-status\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/f18b9657cab71a231dd00dddd21955ee5fa909c2/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f613065333632633561626365373530633530613964653662303231393732326438306364376134623139323465306461316161663535393861363730336235612f576562417373656d626c792f746f6f6c2d636f6e76656e74696f6e73&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/tool-conventions/blob/main/DynamicLinking.md#implementation-status\" title=\"tool-conventions/DynamicLinking.md at main · WebAssembly/tool-conventions\">tool-conventions/DynamicLinking.md at main · WebAssembly/tool-conventions</a></div><div class=\"message_embed_description\">Conventions supporting interoperatibility between tools working with WebAssembly. - WebAssembly/tool-conventions</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/Linking.md\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/64d29806d7a54834a361a036af867e94861efc8e/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f643938346133303964656263616565633339616164623866363862313430633036666534656235646161393437666138366566383535346235303637633162332f576562417373656d626c792f636f6d706f6e656e742d6d6f64656c&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/Linking.md\" title=\"component-model/design/mvp/Linking.md at main · WebAssembly/component-model\">component-model/design/mvp/Linking.md at main · WebAssembly/component-model</a></div><div class=\"message_embed_description\">Repository for design and specification of the Component Model - WebAssembly/component-model</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/componentize-py\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/5aeaeafa94c62a17082f97bf88fee112f4fbdba6/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f643262303634363063636264316335633164646438383330383563356630643763306664313865343362323133653564663066313264306662633762653361642f62797465636f6465616c6c69616e63652f636f6d706f6e656e74697a652d7079&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/componentize-py\" title=\"GitHub - bytecodealliance/componentize-py\">GitHub - bytecodealliance/componentize-py</a></div><div class=\"message_embed_description\">Contribute to bytecodealliance/componentize-py development by creating an account on GitHub.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/componentize-py/issues/28\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/0f03207f46144388535501ed80e66682bf1d1310/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f393161363230343930636635396465333935396438383864373935336233663038386666303066393735343339663830333934613030663135656239343435332f62797465636f6465616c6c69616e63652f636f6d706f6e656e74697a652d70792f6973737565732f3238&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/componentize-py/issues/28\" title=\"Optionally produce component which imports libpython311.so, libc.so, etc. instead of bundling them · Issue #28 · bytecodealliance/componentize-py\">Optionally produce component which imports libpython311.so, libc.so, etc. instead of bundling them · Issue #28 · bytecodealliance/componentize-py</a></div><div class=\"message_embed_description\">This would dramatically reduce binary sizes in cases where the host can provide these libraries.</div></div></div>",
        "id": 456784767,
        "sender_full_name": "Joel Dice",
        "timestamp": 1722928542
    }
]