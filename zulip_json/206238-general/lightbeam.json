[
    {
        "content": "<p>I really like the idea of lightbeam (fan of dynasmrt too). Is there (1) a documentation somewhere of why it became unmaintaneid and (2) last known good version? I'm looking for a semi-working starting point to hack from.</p>",
        "id": 247252076,
        "sender_full_name": "zeroexcuses",
        "timestamp": 1627328845
    },
    {
        "content": "<p>(1) the maintainer stopped working on it. but the basic idea of it still makes sense.</p>",
        "id": 247253885,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1627329721
    },
    {
        "content": "<p>(2) I expect the current trunk is as good as any other revision. That said, the code is fairly complex, in part because it had ambitions of doing advanced optimizations on the fly, so if you want something simple (and a single-pass wasm jit can be fairly simple), it may be easier to start something new.</p>",
        "id": 247254420,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1627329920
    },
    {
        "content": "<p><a href=\"https://github.com/bytecodealliance/wasmtime/tree/main/crates/lightbeam\">https://github.com/bytecodealliance/wasmtime/tree/main/crates/lightbeam</a> looks like there is some type of rewrite / migration going on ... and quit halfway</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/tree/main/crates/lightbeam\" style=\"background-image: url(https://opengraph.githubassets.com/64811f57afaf6be93fd065eec425623eb116f3d1f4e3fbf4090ce2e25971aa71/bytecodealliance/wasmtime)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/tree/main/crates/lightbeam\" title=\"wasmtime/crates/lightbeam at main · bytecodealliance/wasmtime\">wasmtime/crates/lightbeam at main · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Standalone JIT-style runtime for WebAssembly, using Cranelift - wasmtime/crates/lightbeam at main · bytecodealliance/wasmtime</div></div></div>",
        "id": 247268671,
        "sender_full_name": "zeroexcuses",
        "timestamp": 1627336353
    },
    {
        "content": "<p>Lightbeam was always in a state of migration; I don't recall a time when it really settled in.</p>",
        "id": 247275868,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1627341448
    },
    {
        "content": "<p>I had worked on a paper involving wasm baseline  compiler so I have investigated this a bit. I have actually bisected the git history, and my conclusion is that such \"good version\" never existed: (1) lightbeam never supported br_table. You will hit this wasm instruction if your source code has anything like a function pointer or virtual methods, so you will get an unsupported error for basically any real-world module. (2) I have hit another error saying \"virtual registers have run out\", so it seems like lightbeam is making unreasonable assumptions on the size/complexity of input code as well.</p>",
        "id": 247381962,
        "sender_full_name": "Haoran Xu",
        "timestamp": 1627415370
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"405103\">@Haoran Xu</span> : Thank you for sharing the insightful experience. I am still trying to get Lightbeam to exeucte \\ x y -&gt; x + y applied to (5_u32, 3_u32). One thing I do like about Lighteam is I am fasicnated by the idea of wasm -&gt; dynasm without involving LLVM / Cranelift. For your paper, did you end up sticking with Lighteam or dod you go with wasmer-singlepass (which I believe also does wasm -&gt; dynasm).</p>",
        "id": 247425312,
        "sender_full_name": "zeroexcuses",
        "timestamp": 1627452630
    },
    {
        "content": "<p>I wrote my own baseline compiler so lightbeam/wasmer singlepass (and those from web browsers) are my benchmark rivals. The paper is still moving through the conf reviewing process, but if you are interested in productionzing my baseline compiler (currently supporting wasm 1.0 spec but nothing more) feel free to PM me.</p>",
        "id": 247428370,
        "sender_full_name": "Haoran Xu",
        "timestamp": 1627456308
    },
    {
        "content": "<p>I have been refactoring lightbeam. I got the following to work:</p>\n<p>(i32.const 42)</p>\n<p>(i32.const 20) (i32.const 22) i32.add</p>\n<p>It seems that when passing parameters to lightbeam, it can't read the args properly (i.e. passing (5, 3) it gets (5, some gigantic large number)). This looks like a calling convention problem. I am going to hack on lightbeam a bit more, still hopeful there is an interesting core to refactor out of it.</p>",
        "id": 247536747,
        "sender_full_name": "zeroexcuses",
        "timestamp": 1627523267
    }
]