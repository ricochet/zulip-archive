[
    {
        "content": "<p>If you had asked me for what one thing about chat I'd change, adding titles to threads probably wouldn't have been it, but I'm willing to give it a try.</p>",
        "id": 183387086,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1576262713
    },
    {
        "content": "<p>I do enjoy the threading, but I find the UI a little hard to visually parse quickly</p>",
        "id": 183409004,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1576277405
    },
    {
        "content": "<p>Can we have several levels deep within a thread? (stream &gt; thread &gt; thread &gt; thread...)</p>",
        "id": 183569857,
        "sender_full_name": "Benjamin Bouvier",
        "timestamp": 1576516322
    },
    {
        "content": "<p>I think replies within a thread just extend that thread</p>",
        "id": 183570023,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1576516428
    },
    {
        "content": "<p>The topics are analogous to email subjects. They don't nest.</p>",
        "id": 183572452,
        "sender_full_name": "Sean Stangl",
        "timestamp": 1576518092
    },
    {
        "content": "<p>They're intended to be cheap and disposable. It's easy to create a new topic, and easy for people to ignore it, so you don't worry about getting the topic right or anything like that.</p>",
        "id": 183572607,
        "sender_full_name": "Sean Stangl",
        "timestamp": 1576518203
    },
    {
        "content": "<p>Related to GitHub being kind of hard to find out about new issues/review requests/updates/etc., it is possible to connect that via webhooks to post into Zulip.</p>",
        "id": 183591621,
        "sender_full_name": "Sean Stangl",
        "timestamp": 1576530973
    },
    {
        "content": "<p>You could give each project its own channel like <code>#git-cranelift</code>. Every update to the project would then be reported into that channel. On my other project, it means that we never have to check email anymore, we never miss anything, and everyone knows what's happening in the project.</p>",
        "id": 183591759,
        "sender_full_name": "Sean Stangl",
        "timestamp": 1576531065
    },
    {
        "content": "<p>Each issue and merge request is automatically given its own Zulip topic. So by pressing Shift+S, you can see the whole change history of the issue/request right from chat, to get immediate context.</p>",
        "id": 183591837,
        "sender_full_name": "Sean Stangl",
        "timestamp": 1576531094
    },
    {
        "content": "<p>At least for me it has been a very effective way of working. Without it I miss basically everything.</p>",
        "id": 183591847,
        "sender_full_name": "Sean Stangl",
        "timestamp": 1576531108
    },
    {
        "content": "<p>#git-cranelift here in zulip sounds like something worth trying</p>",
        "id": 183592009,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1576531208
    },
    {
        "content": "<p>The instructions for doing that are here: <a href=\"integrations/doc/github\" target=\"_blank\" title=\"integrations/doc/github\">https://bytecodealliance.zulipchat.com/integrations/doc/github</a></p>\n<p>It would require a Zulip administrator to set up an incoming webhook bot. (Ours was just named the equivalent of \"GitHub.\") That generates an incoming URL.</p>\n<p>The Admin then hands that URL to a Cranelift repo maintainer, who follows the rest of the instructions in GitHub, by going to Settings -&gt; Webhooks.</p>",
        "id": 183592237,
        "sender_full_name": "Sean Stangl",
        "timestamp": 1576531367
    },
    {
        "content": "<p>I'm not a zulip admin here, so I'll ping <span class=\"user-mention\" data-user-id=\"234973\">@Till Schneidereit</span> who can hopefully look into this</p>",
        "id": 183593894,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1576532444
    },
    {
        "content": "<p>Note that Escape followed by \"?\" will show you many (so many!) keyboard shortcuts one can use to navigate between streams and topics.</p>",
        "id": 183632542,
        "sender_full_name": "Benjamin Bouvier",
        "timestamp": 1576575834
    },
    {
        "content": "<p>Hello everyone I am Akshat Agarwal (@humancalico). I have been interested in WebAssembly for a while now and understand why it's needed. But what I don't understand is why do we need it to run outside of the browser. Is the similar like the Node's JavaScript everywhere paradigm or is there a greater reason behind it? Thank you in advance</p>",
        "id": 189301200,
        "sender_full_name": "Akshat Agarwal",
        "timestamp": 1582888329
    },
    {
        "content": "<p>Hi Akshat, and welcome! The announcement post for the Bytecode Alliance gives a good overview of some of the most important reasons for doing all this: <a href=\"https://bytecodealliance.org/articles/announcing-the-bytecode-alliance\" target=\"_blank\" title=\"https://bytecodealliance.org/articles/announcing-the-bytecode-alliance\">https://bytecodealliance.org/articles/announcing-the-bytecode-alliance</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://bytecodealliance.org/articles/announcing-the-bytecode-alliance\" style=\"background-image: url(https://bytecodealliance.org/articles/img/featured-image.png)\" target=\"_blank\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://bytecodealliance.org/articles/announcing-the-bytecode-alliance\" target=\"_blank\" title=\"Announcing the Bytecode Alliance: Building a secure by default, composable future for WebAssembly\">Announcing the Bytecode Alliance: Building a secure by default, composable future for WebAssembly</a></div><div class=\"message_embed_description\">Today we announce the formation of the Bytecode Alliance, a new industry partnership coming together to forge WebAssemblyâ€™s outside-the-browser future by collaborating on implementing standards and proposing new ones. Our founding member...</div></div></div>",
        "id": 189303981,
        "sender_full_name": "Till Schneidereit",
        "timestamp": 1582891708
    }
]