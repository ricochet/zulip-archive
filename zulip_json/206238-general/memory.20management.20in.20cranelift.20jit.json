[
    {
        "content": "<p>I was playing around with Cranelift's JIT module and I started playing around with memory.  I tried just storing a byte at the memory address <code>0x0</code> and it crashed the program.  I assume I overwrote something important?  So, my question is, how can I find a safe place to store items in memory?</p>",
        "id": 248306720,
        "sender_full_name": "Zack",
        "timestamp": 1628046820
    },
    {
        "content": "<p>I'm not sure if WASM treats <code>0x0</code> specially, but LLVM, C, Rust all special case this address to never be valid, and cranelift might be relying on this. Does writing to other addresses work?</p>",
        "id": 248310893,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1628053119
    },
    {
        "content": "<p>The address 0x0 is not mapped on pretty much every OS.</p>",
        "id": 248357871,
        "sender_full_name": "bjorn3",
        "timestamp": 1628087504
    },
    {
        "content": "<p>If you use cranelift_jit, you don't get a big linear memory like wasm. You will read and write to the actual address space of the process you are running in when you use the <code>load</code> and <code>store</code> instructions. When compiling wasm, the <code>heap_load</code> and <code>heap_store</code> instructions are used which lower to an instruction sequence that interprets the given address as an offset into the given heap and checks that you don't go out of bounds.</p>",
        "id": 248358268,
        "sender_full_name": "bjorn3",
        "timestamp": 1628087652
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"430718\">@Zack</span></p>",
        "id": 248358305,
        "sender_full_name": "bjorn3",
        "timestamp": 1628087659
    },
    {
        "content": "<p>If you want to store data, you will either have to store it on the stack (<code>stack_load</code>/<code>stack_store</code>) or put it in a global variable (use <code>module.define_data()</code> to define it and then the <code>global_value</code> instruction to get the address of the global which you can then pass to <code>load</code> and <code>store</code>).</p>",
        "id": 248358505,
        "sender_full_name": "bjorn3",
        "timestamp": 1628087756
    }
]