[
    {
        "content": "<p>My goal is, in wasm, sending a function as a ref and call it from the host. I use <code>--export-all</code> to export it as a funcref in <code>__indirect_function_table</code>. However, later when I get it from the table, I found that its index does not match the one I get through <code>instance.get()</code>. I assume the <code>store_id</code> and <code>index</code> of the function that I found in <code>__indirect_function_table</code> and <code>instance.get()</code> would be the same. Am I using wasmtime correctly?</p>",
        "id": 321440780,
        "sender_full_name": "Wilson Wang",
        "timestamp": 1673758386
    },
    {
        "content": "<p>You have to directly get the function from the <code>__indirect_function_table</code> table if you got a function pointer on the wasm side you passed to the host. The function pointer is an index into <code>__indirect_function_table</code>. This is almost always different from the export index you pass to <code>instance.get()</code>.</p>",
        "id": 321462720,
        "sender_full_name": "bjorn3",
        "timestamp": 1673777245
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"264278\">bjorn3</span> <a href=\"#narrow/stream/206238-general/topic/Table.20Func.20index.20do.20not.20match.20the.20one.20from.20exports/near/321462720\">said</a>:</p>\n<blockquote>\n<p>You have to directly get the function from the <code>__indirect_function_table</code> table if you got a function pointer on the wasm side you passed to the host. The function pointer is an index into <code>__indirect_function_table</code>. This is almost always different from the export index you pass to <code>instance.get()</code>.</p>\n</blockquote>\n<p>Thanks for the answer. I am using wasmtime-cpp. I am actually getting the <code>Func</code> class from the <code>__indirect_function_table</code> and use its <code>store_id</code> &amp; <code>index</code> to compare with another <code>Func</code> that I get by look it up in the <code>instance.export()</code>. Although through <code>Func.call</code> I can invoke the same function. But these two <code>Func</code> classes have different <code>index</code> field. I am not very clear what is the best way if I want to compare two <code>Func</code> classes and check if they are the same class in  wasmtime-cpp. I will also at Alex since he is working on wasmtime-cpp. cc: <span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span></p>",
        "id": 321518630,
        "sender_full_name": "Wilson Wang",
        "timestamp": 1673807169
    },
    {
        "content": "<p>The interesting thing is that, if i use <code>wasmtime_func_to_raw()</code> and print the raw values of these <code>Func</code> classes. The values are different even if they are running the same function.</p>",
        "id": 321523243,
        "sender_full_name": "Wilson Wang",
        "timestamp": 1673810258
    },
    {
        "content": "<p>So here my observation is: <strong>if a wasm function is both exported and in the <code>__indirect_function_table</code>, the underlying <code>anyfunc</code> are different even though they are the same actual wasm function</strong>. Am I correct? If this is true, how do I get the exported name of a wasm function that I found inside <code>__indirect_function_table</code>?</p>",
        "id": 321524388,
        "sender_full_name": "Wilson Wang",
        "timestamp": 1673811129
    },
    {
        "content": "<p>Not clue how to get the function name.</p>",
        "id": 321531600,
        "sender_full_name": "bjorn3",
        "timestamp": 1673816816
    },
    {
        "content": "<p>thanks for the info anyway. I'll see if others can provider some clue.</p>",
        "id": 321534111,
        "sender_full_name": "Wilson Wang",
        "timestamp": 1673818916
    },
    {
        "content": "<p>Note that <code>store_id</code> and <code>index</code> are meant to be internal and are not suitable for function equality. There's no way in Wasmtime to equate two functions together at this time.</p>",
        "id": 321743238,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1673920885
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"253994\">Alex Crichton</span> <a href=\"#narrow/stream/206238-general/topic/Table.20Func.20index.20do.20not.20match.20the.20one.20from.20exports/near/321743238\">said</a>:</p>\n<blockquote>\n<p>Note that <code>store_id</code> and <code>index</code> are meant to be internal and are not suitable for function equality. There's no way in Wasmtime to equate two functions together at this time.</p>\n</blockquote>\n<p>thanks for the answer, <span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span> . Btw, if I got a funcref in <code>__indirect_function_table</code>,  how do i find the function name if it is also exported?</p>",
        "id": 321748935,
        "sender_full_name": "Wilson Wang",
        "timestamp": 1673926285
    },
    {
        "content": "<p>There is no way to do that right now, but we could provide apis to access the debug info or name section perhaps</p>",
        "id": 321749052,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1673926427
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"253994\">Alex Crichton</span> <a href=\"#narrow/stream/206238-general/topic/Table.20Func.20index.20do.20not.20match.20the.20one.20from.20exports/near/321749052\">said</a>:</p>\n<blockquote>\n<p>There is no way to do that right now, but we could provide apis to access the debug info or name section perhaps</p>\n</blockquote>\n<p>thanks, got that. maybe later i will fill a bug and try to work on this. So far it is not a blocker issue for me.</p>",
        "id": 321749178,
        "sender_full_name": "Wilson Wang",
        "timestamp": 1673926533
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"573646\">Wilson Wang</span> has marked this topic as resolved.</p>",
        "id": 321749241,
        "sender_full_name": "Notification Bot",
        "timestamp": 1673926565
    }
]