[
    {
        "content": "<p>There's been a few demos of this over the years, but nothing went upstream or became widely used. I decided to upstream this, so I wrote <a href=\"https://discourse.llvm.org/t/rfc-building-llvm-for-webassembly/79073/35\">an LLVM RFC</a>, sent <a href=\"https://github.com/llvm/llvm-project/pull/92677\">a pull request</a> currently undergoing review, and set up a <a href=\"https://github.com/YoWASP/clang\">build harness with continuous integration</a> under the <a href=\"https://yowasp.org/\">YoWASP project umbrella</a> to make sure LLVM doesn't regress on Wasm support. (I'll enable daily builds once the PR is merged.)</p>\n<p>The build harness produces Clang and LLD built for Wasm with only the Wasm target enabled, and includes a build of compiler-rt, wasi-libc, and libcxxabi/libcxx. (Targeting <code>wasm32-wasip1</code> only because I still find components incredibly confusing to work with on toolchain level, and because I'm still not quite sure if I want to have the with/without threads variants or if I want to build just the former.) Unfortunately I couldn't reuse the build scripts from wasi-sdk, at least for the moment.</p>\n<p>The next steps for me would be to add an npm package wrapping clang.wasm/lld.wasm into <a href=\"https://github.com/YoWASP/runtime-js?tab=readme-ov-file#application-api-reference\">a pure function</a> that can be used from other applications, like <a href=\"https://github.com/YoWASP/vscode?tab=readme-ov-file#yowasp-toolchain-for-vs-code\">the YoWASP toolchain VS Code plugin</a>. In the end, the Wasm build of Clang will be used to compile C++ simulation models that can be produced by Yosys or other language frontends like Spade, in order to run high(er) performance digital design simulations.</p>\n<p>All of this is making EDA both accessible and reliable like never before.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://discourse.llvm.org/t/rfc-building-llvm-for-webassembly/79073/35\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/60258390dfbe4b6a916b1ee8c6ee7ecce6ba7af9/68747470733a2f2f676c6f62616c2e646973636f757273652d63646e2e636f6d2f627573696e657373342f75706c6f6164732f6c6c766d2f6f726967696e616c2f31582f366163353436363966346233306362303730393433373563626436356432343136336235623665302e6a706567&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://discourse.llvm.org/t/rfc-building-llvm-for-webassembly/79073/35\" title=\"[RFC] Building LLVM for WebAssembly\">[RFC] Building LLVM for WebAssembly</a></div><div class=\"message_embed_description\">FWIW GitHub - olimpiadi-informatica/wasm-compilers: Tools to run LLVM in a WASI environment builds a wasi-threads version of llvm (plus a couple of other useful things) - it’s not based on @whitequark’s patches (yet), but it will be soon 🙂</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/llvm/llvm-project/pull/92677\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/833a1dd602bfc064e034849c1bde790321721ab7/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f633761663637353438373265636631316339633536613030383333653734386431313165353666356137393433396537316337393732643034363334343262632f6c6c766d2f6c6c766d2d70726f6a6563742f70756c6c2f3932363737&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/llvm/llvm-project/pull/92677\" title=\"Conditionalize use of POSIX features missing on WASI/WebAssembly by whitequark · Pull Request #92677 · llvm/llvm-project\">Conditionalize use of POSIX features missing on WASI/WebAssembly by whitequark · Pull Request #92677 · llvm/llvm-project</a></div><div class=\"message_embed_description\">See also the RFC.\n\nThis patch makes it possible to build LLVM, Clang, and LLD for WASI/WebAssembly. This patch introduces conditionals of the form defined(__wasi__) or defined(__wasm__) wherever ne...</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/YoWASP/clang\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/b79704e32db5993aff54631c87be15cfcf6e5f9b/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f326161666565333737613065316237626537643136336532306136623933656562623565316466656430353262663635623730646663643031616139303539312f596f574153502f636c616e67&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/YoWASP/clang\" title=\"GitHub - YoWASP/clang: Unofficial clang WebAssembly packages\">GitHub - YoWASP/clang: Unofficial clang WebAssembly packages</a></div><div class=\"message_embed_description\">Unofficial clang WebAssembly packages. Contribute to YoWASP/clang development by creating an account on GitHub.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/YoWASP/runtime-js?tab=readme-ov-file#application-api-reference\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/f03f5dd006d6fb5c1698a0465fc97213976c6804/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f393564613731646365373665613562393163376337643534323562613337313336646564663035616636653134663865333562373666353236626330316235302f596f574153502f72756e74696d652d6a73&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/YoWASP/runtime-js?tab=readme-ov-file#application-api-reference\" title=\"GitHub - YoWASP/runtime-js: Common runtime for YoWASP packages deployed to NPM, interfacing with Node.js and the browser\">GitHub - YoWASP/runtime-js: Common runtime for YoWASP packages deployed to NPM, interfacing with Node.js and the browser</a></div><div class=\"message_embed_description\">Common runtime for YoWASP packages deployed to NPM, interfacing with Node.js and the browser - YoWASP/runtime-js</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/YoWASP/vscode?tab=readme-ov-file#yowasp-toolchain-for-vs-code\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/8bc300fc50ef462eee396cc835144ee68d084e5b/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f336431346137336665323136346266353838323066313633323065373961323039346134663161643432653566363439626330643132313130323130323838372f596f574153502f7673636f6465&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/YoWASP/vscode?tab=readme-ov-file#yowasp-toolchain-for-vs-code\" title=\"GitHub - YoWASP/vscode: YoWASP toolchain for Visual Studio Code\">GitHub - YoWASP/vscode: YoWASP toolchain for Visual Studio Code</a></div><div class=\"message_embed_description\">YoWASP toolchain for Visual Studio Code. Contribute to YoWASP/vscode development by creating an account on GitHub.</div></div></div>",
        "id": 451235000,
        "sender_full_name": "Catherine (whitequark)",
        "timestamp": 1720910357
    }
]