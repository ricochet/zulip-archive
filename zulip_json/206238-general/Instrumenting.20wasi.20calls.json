[
    {
        "content": "<p>Hi</p>\n<p>Is it possible to instrument wasmtime source code such that I can redirect all wasi calls to some monitor first before the actual wasi call?<br>\nIs this feasible?</p>\n<p>Thanks</p>",
        "id": 492797974,
        "sender_full_name": "celine santosh",
        "timestamp": 1736449772
    },
    {
        "content": "<p>At a conceptual level this is possible because WASI is inserted by calling <code>add_to_linker</code> and you can instead add whatever you want to the linker instead (and avoid calling <code>add_to_linker</code>). From a practical standpoint that's difficult to do because you'd have to duplicate all the type signatures and such, however.</p>",
        "id": 492799818,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1736450375
    },
    {
        "content": "<p>Thanks, could you please also show a file in wasmtime repo where add_to_linker is called on a wasi function</p>",
        "id": 492972032,
        "sender_full_name": "celine santosh",
        "timestamp": 1736522556
    },
    {
        "content": "<p>Ah alas I don't think we have an example of doing this, but the rough idea is that you'd call functions <a href=\"https://docs.rs/wasmtime-wasi/latest/wasmtime_wasi/preview1/wasi_snapshot_preview1/fn.environ_get.html\">like this</a> manually.</p>",
        "id": 492972343,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1736522659
    },
    {
        "content": "<p>e.g. you'd create a <code>Linker</code>, add a custom function to it, and your custom function would forward to that.</p>\n<p>Alternatively, now that I think about it, something that would be much more robust would be to write your own impl of <code>WasiSnapshotPreview1</code> which forwards to the <code>wasmtime-wasi</code> one, allowing you to interpose any function (although you're required to interpose all of them or at least forward arguments)</p>",
        "id": 492972545,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1736522746
    },
    {
        "content": "<p>Another option would be to create a component which both imports and exports all the interfaces in the <code>wasi-cli</code> <a href=\"https://github.com/WebAssembly/wasi-cli/blob/main/wit/imports.wit\">imports</a> world, forwarding every call to the host and also sending monitoring events via another, custom imported interface.</p>",
        "id": 492973804,
        "sender_full_name": "Joel Dice",
        "timestamp": 1736523137
    },
    {
        "content": "<p>Thanks</p>\n<p>I would require network calls to be redirected ,  I guess func_wrap is the one which replaces it<br>\nbut func_wrap() is not there in component model</p>",
        "id": 493012081,
        "sender_full_name": "celine santosh",
        "timestamp": 1736536979
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"253994\">Alex Crichton</span> <a href=\"#narrow/channel/206238-general/topic/Instrumenting.20wasi.20calls/near/492972545\">said</a>:</p>\n<blockquote>\n<p>e.g. you'd create a <code>Linker</code>, add a custom function to it, and your custom function would forward to that.</p>\n<p>Alternatively, now that I think about it, something that would be much more robust would be to write your own impl of <code>WasiSnapshotPreview1</code> which forwards to the <code>wasmtime-wasi</code> one, allowing you to interpose any function (although you're required to interpose all of them or at least forward arguments)</p>\n</blockquote>\n<p>Since I am using network calls especially tcp sockets this won't work in my case right</p>",
        "id": 493012205,
        "sender_full_name": "celine santosh",
        "timestamp": 1736537040
    },
    {
        "content": "<p>Is there simpler option like for example in wasmtime repository , in <a href=\"http://tcp.rs\">tcp.rs</a> file where start-connect is defined, I can call my custom function there? Changing the source code of wasmtime is what I meant by instrumenting.<br>\nwill it break any other functionality?</p>",
        "id": 493012450,
        "sender_full_name": "celine santosh",
        "timestamp": 1736537137
    },
    {
        "content": "<p>Yeah, you can certainly fork <code>wasmtime-wasi</code> and add your custom code there.  That's probably the quickest option, although you'd need to maintain that fork yourself if you plan to use it long-term.  Perhaps if the changes are generic and broadly useful, they could be upstreamed.</p>",
        "id": 493012778,
        "sender_full_name": "Joel Dice",
        "timestamp": 1736537261
    },
    {
        "content": "<p>Okay Thanks a lot</p>",
        "id": 493220179,
        "sender_full_name": "celine santosh",
        "timestamp": 1736714272
    }
]