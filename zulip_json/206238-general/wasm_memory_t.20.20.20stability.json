[
    {
        "content": "<p>Guys, I have setup with a single memory block exported from an instance, which I resolve thus : <a href=\"https://pastebin.com/LpemFPVp\" title=\"https://pastebin.com/LpemFPVp\">https://pastebin.com/LpemFPVp</a><br>\nWas hoping that'd be it, then I could just use the  wasm_memory_t  pointer, but apparently not.<br>\nSeems you release then allocate a new one under the hood sometimes so I have to walk my list of exports every callback to find what the current valid wasm_memory_t  is. This is not performant as an export list could potentially be huge.</p>\n<p>I get you have to reallocate the block sometimes. Surely wasm_memory_t  has sufficient abstraction to enable you to do this ?</p>\n<p>Please wise me up if its my stupid :)</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://pastebin.com/LpemFPVp\" style=\"background-image: url(https://pastebin.com/i/facebook.png)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://pastebin.com/LpemFPVp\" title=\"bool Assembly_Instance::Memory_Resolve()  {     wasm_extern_vec_t exports;     w - Pastebin.com\">bool Assembly_Instance::Memory_Resolve()  {     wasm_extern_vec_t exports;     w - Pastebin.com</a></div></div></div>",
        "id": 196984484,
        "sender_full_name": "Steve Williams",
        "timestamp": 1589019938
    },
    {
        "content": "<p>resolved : Shouldn't call wasm_extern_vec_delete(&amp;exports); </p>\n<p>... at that point.  needs to persist.</p>",
        "id": 196986588,
        "sender_full_name": "Steve Williams",
        "timestamp": 1589023039
    },
    {
        "content": "<p>this means I have to carry around potentially a huge export table where I only care about a couple of entries.</p>",
        "id": 196986658,
        "sender_full_name": "Steve Williams",
        "timestamp": 1589023135
    },
    {
        "content": "<p>checkpoint: cube on the screen. </p>\n<p>next up to spin it which is trivial, but gets me to where I wanted to be for first pass feasibility study.</p>\n<p>thanks all, great work. sorry for my derps. takes a while to get your head around a new system :)</p>",
        "id": 196987746,
        "sender_full_name": "Steve Williams",
        "timestamp": 1589024658
    },
    {
        "content": "<p>.</p>",
        "id": 196995305,
        "sender_full_name": "Steve Williams",
        "timestamp": 1589035979
    },
    {
        "content": "<p>there is <code>wasm_extern_copy</code> (see <a href=\"https://github.com/WebAssembly/wasm-c-api/blob/master/include/wasm.h#L331\" title=\"https://github.com/WebAssembly/wasm-c-api/blob/master/include/wasm.h#L331\">https://github.com/WebAssembly/wasm-c-api/blob/master/include/wasm.h#L331</a>)</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/wasm-c-api/blob/master/include/wasm.h#L331\" style=\"background-image: url(https://avatars3.githubusercontent.com/u/11578470?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/wasm-c-api/blob/master/include/wasm.h#L331\" title=\"WebAssembly/wasm-c-api\">WebAssembly/wasm-c-api</a></div><div class=\"message_embed_description\">Wasm C API prototype. Contribute to WebAssembly/wasm-c-api development by creating an account on GitHub.</div></div></div>",
        "id": 196995308,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1589035983
    },
    {
        "content": "<p>thanks.  so I create another exern block thingy &amp; copy the ones I want to keep into that. sounds like a plan :) cheers.</p>",
        "id": 196995424,
        "sender_full_name": "Steve Williams",
        "timestamp": 1589036142
    }
]