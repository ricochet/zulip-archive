[
    {
        "content": "<p>Building a component with a WIT and host it with wasmtime programmatically and call a function is good and going fine but I can't get a wasi:cli/run component built to run with wasmtime cli.</p>\n<p>I've tried exporting explicitly <code>wasi:cli/run</code> from my a wit and building with wasm32-wasip2 without a wit just a <code>fn main()</code> thinking it would magically create a <code>wasi:cli/run</code>.</p>\n<p>What am I missing?</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasip2</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">wasm32_wasip2</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"err\">`</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nc\">no</span><span class=\"w\"> </span><span class=\"n\">exported</span><span class=\"w\"> </span><span class=\"n\">instance</span><span class=\"w\"> </span><span class=\"n\">named</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasi</span><span class=\"p\">:</span><span class=\"nc\">cli</span><span class=\"o\">/</span><span class=\"n\">run</span><span class=\"o\">@</span><span class=\"mf\">0.2.2</span><span class=\"err\">`</span>\n</code></pre></div>",
        "id": 489569453,
        "sender_full_name": "adam",
        "timestamp": 1734468526
    },
    {
        "content": "<p>You pass <code>-Scli</code> to the wasmtime CLI?</p>",
        "id": 489570130,
        "sender_full_name": "raskyld",
        "timestamp": 1734468776
    },
    {
        "content": "<p>You shouldn't need <code>-Scli</code> as that should be enabled by default, but can you detail your reproduction steps or the wasm binary you're trying to run?</p>",
        "id": 489570245,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1734468824
    },
    {
        "content": "<p>Just building with wasm32-wasip2 a Rust file with <code>fn main()</code> should create a component that exports <code>wasi:cli/run</code>, right?</p>",
        "id": 489570672,
        "sender_full_name": "adam",
        "timestamp": 1734468970
    },
    {
        "content": "<p>yes, and locally <code>rustc foo.rs --target wasm32-wasip2 &amp;&amp; wasmtime foo.wasm</code> works for me</p>",
        "id": 489571700,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1734469378
    },
    {
        "content": "<p>Haha alright thanks.  Pairing helps my brain work.</p>\n<p>The crate was a lib and not a bin.</p>",
        "id": 489572018,
        "sender_full_name": "adam",
        "timestamp": 1734469506
    },
    {
        "content": "<p>Is it possible to create a component from a Rust crate that wit_bindgen::generates a WIT Guest and also exports cli/run?</p>\n<p>Cargo [[bin]] and [lib] will make separate components.</p>",
        "id": 489572939,
        "sender_full_name": "adam",
        "timestamp": 1734469901
    },
    {
        "content": "<p>for rust [[bin]] will create a single component and it's required that it's got <code>fn main()</code> and it'll export <code>wasi:cli/run</code>. It'll also export anything wit_bindgen::generated'd internally.</p>\n<p>For [[lib]] it only creates a component for the cdylib crate type and it'll have no exports by default, so it'll only have those that are wit_bindgen::generate'd</p>",
        "id": 489574486,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1734470649
    }
]