[
    {
        "content": "<p>lldb requires python36.dll on windows. python 3.6 is only available as source &amp; I can't be bothered building it. if anyone has a trusted python36.dll it should be up somewhere to smooth the flow around wasmtime toolchain. llvm guys should ship it, but they don't.</p>",
        "id": 200119387,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591632032
    },
    {
        "content": "<p>I've just grabbed a random download off the interweb for now, which isn't ideal, but it'll have to do. would prefer to use/ship something a little more trusted.</p>",
        "id": 200120446,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591632506
    },
    {
        "content": "<p>yuri, why go backwards. its one dll to fix this problem.</p>",
        "id": 200120499,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591632527
    },
    {
        "content": "<p>I have it running, but with a dodgy dll I downloaded. might be fine, might not :)</p>",
        "id": 200120556,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591632555
    },
    {
        "content": "<p>&amp; therein lies a security issue so this gap should be patched properly.</p>",
        "id": 200120626,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591632591
    },
    {
        "content": "<p>our entire distribution needs building from scratch on a clean system at some point.  right now, its just make it work mode. you have been warned. virus check our stuff if you run it. think I'm clean, but who knows what's lurking.</p>",
        "id": 200121166,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591632834
    },
    {
        "content": "<p>\"lldb was not built with gui support\" using  standard download from : <a href=\"https://releases.llvm.org/download.html#10.0.0\">https://releases.llvm.org/download.html#10.0.0</a></p>",
        "id": 200122843,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591633631
    },
    {
        "content": "<p>we all love having to build each others stuff every 5 minutes :)</p>",
        "id": 200122879,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591633649
    },
    {
        "content": "<p>so ... looks like a hop straight to one of the visual studio code thingies as not in the mood for building llvm from scratch either.</p>",
        "id": 200123028,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591633711
    },
    {
        "content": "<p>if anyone knows which is the best wasmtime compatible visual studio code addon, recommendations welcome.</p>",
        "id": 200123325,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591633853
    },
    {
        "content": "<p>post above says CodeLLDB just works, so lets try that.</p>",
        "id": 200123540,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591633951
    },
    {
        "content": "<p>new to vs code, so will take me a while to get head around it.</p>",
        "id": 200124271,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591634343
    },
    {
        "content": "<p>if any llvm devs around please build lldb with gui and ship whatever python dll you need with your windows binaries, thanks.</p>",
        "id": 200124450,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591634423
    },
    {
        "content": "<p>no joy yet. got lldb to execute our app from visual studio code but it won't set breakpoints. seems to want to debug our binary rather than the wasm code.</p>",
        "id": 200129156,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591636752
    },
    {
        "content": "<p>configuring lldb in vscode as follows : <a href=\"https://pastebin.com/xZJH5x6h\">https://pastebin.com/xZJH5x6h</a></p>\n<p>unsure how to tell it please debug wasm rather than app binaries.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://pastebin.com/xZJH5x6h\" style=\"background-image: url(https://pastebin.com/i/facebook.png)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://pastebin.com/xZJH5x6h\" title=\"{      // Use IntelliSense to learn about possible attributes.      // Hover to  - Pastebin.com\">{      // Use IntelliSense to learn about possible attributes.      // Hover to  - Pastebin.com</a></div></div></div>",
        "id": 200129346,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591636836
    },
    {
        "content": "<p>if you have app callbacks that called from wasm, can you set breakpoints there?</p>",
        "id": 200129924,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591637090
    },
    {
        "content": "<p>so major question here is to check if GDB JIT interface is working on Windows LLDB. if you can break at any code that was called from wasm and you can inspect call stack, it is a good news</p>",
        "id": 200130253,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591637251
    },
    {
        "content": "<p>I could in our debug build but that's not what I want to do. I want our app in release mode with wasm stuff in debug.</p>",
        "id": 200130513,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591637392
    },
    {
        "content": "<p>sure. can you still confirm the above though?</p>",
        "id": 200130747,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591637485
    },
    {
        "content": "<p>yup</p>",
        "id": 200130796,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591637503
    },
    {
        "content": "<p>if you break in the running code (+wasm) and type <code>image list</code> in the debugger terminal, you shall see a module with \"JIT\" in its name</p>",
        "id": 200131281,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591637741
    },
    {
        "content": "<p>if it is there then you are almost done -- you just need to enable breakpoints on all files in vscode</p>",
        "id": 200131531,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591637866
    },
    {
        "content": "<p>noob at lldb. gui doesn't want to let me break. seems like I have an lldb console.<br>\nwhat's the command to break ?</p>",
        "id": 200131830,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591638013
    },
    {
        "content": "<p>sorry, I usually just visual studio &amp; go :)</p>",
        "id": 200131854,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591638027
    },
    {
        "content": "<p><code>b file.c:34</code> or <code>b foo_function</code></p>",
        "id": 200131881,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591638046
    },
    {
        "content": "<p>not set a breakpoint, just halt wherever it is so we can do that 'image list'</p>",
        "id": 200131929,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591638080
    },
    {
        "content": "<p>hmmm, is there <code>pause</code> button?</p>",
        "id": 200131981,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591638109
    },
    {
        "content": "<p>yeah, its ignored but I have a console</p>",
        "id": 200132032,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591638124
    },
    {
        "content": "<p>can't we do it from there ?</p>",
        "id": 200132038,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591638130
    },
    {
        "content": "<p><code>ctrl-c</code> normally do the job in cli</p>",
        "id": 200132070,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591638147
    },
    {
        "content": "<p>maybe I get you a linux build &amp; we do this over there first.</p>",
        "id": 200132267,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591638263
    },
    {
        "content": "<p>it will save some time, yes</p>",
        "id": 200132345,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591638317
    },
    {
        "content": "<p>leave this with me for a while. I can't drive vscode properly yet. need to mess with it a bit more. linux version in due course if we need that. it doesn't have everything yet but should have enough to fire up &amp; debug our wasm examples.</p>",
        "id": 200132446,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591638364
    },
    {
        "content": "<p>also you may try smaller example such as <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/examples/fib-debug/main.c\">https://github.com/bytecodealliance/wasmtime/blob/master/examples/fib-debug/main.c</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/master/examples/fib-debug/main.c\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/examples/fib-debug/main.c\" title=\"bytecodealliance/wasmtime\">bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Standalone JIT-style runtime for WebAssembly, using Cranelift - bytecodealliance/wasmtime</div></div></div>",
        "id": 200132550,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591638437
    },
    {
        "content": "<p>can also ship an infinity version with debug mode. this is mostly likely an I can't drive lldb/vscode issue. so maybe I need to hop out of the way.</p>",
        "id": 200132564,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591638447
    },
    {
        "content": "<p>there are also <a href=\"https://github.com/bytecodealliance/wasmtime/tree/master/tests/all/debug/testsuite\">https://github.com/bytecodealliance/wasmtime/tree/master/tests/all/debug/testsuite</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/tree/master/tests/all/debug/testsuite\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/tree/master/tests/all/debug/testsuite\" title=\"bytecodealliance/wasmtime\">bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Standalone JIT-style runtime for WebAssembly, using Cranelift - bytecodealliance/wasmtime</div></div></div>",
        "id": 200132651,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591638488
    },
    {
        "content": "<p>yeah, think you're right. lets get a simple example running under the debugger first.</p>",
        "id": 200132654,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591638489
    },
    {
        "content": "<p>k, back up a step. lets drop vscode &amp; work from lldb command line</p>",
        "id": 200133574,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591639006
    },
    {
        "content": "<p>sorry for the delay, here's \"image list\" output</p>\n<p><a href=\"https://pastebin.com/vVSuba8G\">https://pastebin.com/vVSuba8G</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://pastebin.com/vVSuba8G\" style=\"background-image: url(https://pastebin.com/i/facebook.png)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://pastebin.com/vVSuba8G\" title=\"(lldb) image list  [  0]                                      infinity.exe[0x000 - Pastebin.com\">(lldb) image list  [  0]                                      infinity.exe[0x000 - Pastebin.com</a></div></div></div>",
        "id": 200136655,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591640466
    },
    {
        "content": "<p>sorry, that wasn't during a run. this one is though. ctrl-c from cmd line as advised.</p>\n<p><a href=\"https://pastebin.com/i0WhxfRC\">https://pastebin.com/i0WhxfRC</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://pastebin.com/i0WhxfRC\" style=\"background-image: url(https://pastebin.com/i/facebook.png)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://pastebin.com/i0WhxfRC\" title=\"(lldb) run  Process 7348 launched: 'C:\\Program Files (x86)\\Infinity\\infinity.exe - Pastebin.com\">(lldb) run  Process 7348 launched: 'C:\\Program Files (x86)\\Infinity\\infinity.exe - Pastebin.com</a></div></div></div>",
        "id": 200137089,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591640734
    },
    {
        "content": "<p>not seeing anything with jit. maybe I messed up adding your debug support. will go back over that.</p>",
        "id": 200137272,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591640850
    },
    {
        "content": "<p>yeah, that's missing \"JIT\" module, means debugger did not get any info about JIT code</p>",
        "id": 200137279,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591640853
    },
    {
        "content": "<p>good news is vstudio code was doing as it should. can't break on anything it doesn't understand.</p>",
        "id": 200137422,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591640915
    },
    {
        "content": "<p>it can be that windows support for lldb is not on the par with other OS</p>",
        "id": 200137448,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591640931
    },
    {
        "content": "<p>vscode can be configured to set breakpoints on everything</p>",
        "id": 200137478,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591640957
    },
    {
        "content": "<p>or it could be I've goofed. others have got wasmtime debugging on windows.</p>",
        "id": 200137490,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591640965
    },
    {
        "content": "<p>can you try simple code on linux?</p>",
        "id": 200137607,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591641007
    },
    {
        "content": "<p>yeah but I haven't given up here yet.</p>",
        "id": 200137653,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591641035
    },
    {
        "content": "<p>leave it with me. you've told me what to look for when its working. will let you know when I get there.</p>",
        "id": 200137751,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591641093
    },
    {
        "content": "<p>&amp; I will try linux if no joy windows</p>",
        "id": 200137882,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591641155
    },
    {
        "content": "<p>got this to enable debug stuff, with an audio cue so I know I hit it.<br>\n<a href=\"https://pastebin.com/rqNqkTAP\">https://pastebin.com/rqNqkTAP</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://pastebin.com/rqNqkTAP\" style=\"background-image: url(https://pastebin.com/i/facebook.png)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://pastebin.com/rqNqkTAP\" title=\" const bool debug_mode = true; // for now        if (debug_mode)      {          - Pastebin.com\"> const bool debug_mode = true; // for now        if (debug_mode)      {          - Pastebin.com</a></div></div></div>",
        "id": 200139473,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591641731
    },
    {
        "content": "<p>did I miss something. its just that &amp; compile with -g</p>",
        "id": 200139511,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591641751
    },
    {
        "content": "<p>missing a linker flag ?</p>",
        "id": 200139530,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591641762
    },
    {
        "content": "<p>checked wasm with llvm-dwarfdump?</p>",
        "id": 200139590,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591641795
    },
    {
        "content": "<p>not yet, that's next I guess.</p>",
        "id": 200139829,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591641924
    },
    {
        "content": "<p>build script as follows : <a href=\"https://pastebin.com/rfUWxrd8\">https://pastebin.com/rfUWxrd8</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://pastebin.com/rfUWxrd8\" style=\"background-image: url(https://pastebin.com/i/facebook.png)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://pastebin.com/rfUWxrd8\" title=\"rem ===============        &lt;&gt;&lt;&gt; Infinity Web Assembly SDK makefile (batch file f - Pastebin.com\">rem ===============        &lt;&gt;&lt;&gt; Infinity Web Assembly SDK makefile (batch file f - Pastebin.com</a></div></div></div>",
        "id": 200139976,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591641994
    },
    {
        "content": "<p><a href=\"http://advance-software.com/misc/app.wasm\">http://advance-software.com/misc/app.wasm</a></p>",
        "id": 200140448,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591642224
    },
    {
        "content": "<p>don't seem to have llvm-dwarfdump windows. might have to boot linux after all :)</p>",
        "id": 200140521,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591642252
    },
    {
        "content": "<p>nope. don't have it. llvm 10 standard binary distribution, windows is rubbish :)</p>",
        "id": 200140672,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591642321
    },
    {
        "content": "<p>got llvm-dwarfdump linux, so ran that. don't know what I'm doing with it yet. didn't seem to spot anything interesting so perhaps entry level fail &amp; no debug info in the wasm.   just compiled with -g as requested. maybe that's not enough.</p>",
        "id": 200144896,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591644598
    },
    {
        "content": "<p>Line 27 , no “-g”</p>",
        "id": 200145476,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591644920
    },
    {
        "content": "<p>there is, it expands from COMPILE_OPTIONS, which gets it from EXTRA_COMPILE_OPTIONS</p>",
        "id": 200145760,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591645081
    },
    {
        "content": "<p>expands as follows :</p>\n<p><a href=\"https://pastebin.com/Bt06aMTq\">https://pastebin.com/Bt06aMTq</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://pastebin.com/Bt06aMTq\" style=\"background-image: url(https://pastebin.com/i/facebook.png)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://pastebin.com/Bt06aMTq\" title=\"Z:\\dev\\infinity\\wasm\\xsg_sdk\\examples\\simple&gt;make_d    Z:\\dev\\infinity\\wasm\\xsg_ - Pastebin.com\">Z:\\dev\\infinity\\wasm\\xsg_sdk\\examples\\simple&gt;make_d    Z:\\dev\\infinity\\wasm\\xsg_ - Pastebin.com</a></div></div></div>",
        "id": 200145893,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591645135
    },
    {
        "content": "<p>on line 36, we have the actual compilation, which includes -g flag</p>",
        "id": 200146029,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591645195
    },
    {
        "content": "<p>as I have no clue how to use llvm-dwarfdump can I get a minimal command line or output to look for please</p>",
        "id": 200146246,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591645294
    },
    {
        "content": "<p>I can experiment with other flags into the compiler to hopefully generate some debug.</p>",
        "id": 200146292,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591645314
    },
    {
        "content": "<p>this is almost comp sci 101 fail territory :)</p>",
        "id": 200146366,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591645335
    },
    {
        "content": "<p>this bit doesn't require running any of our binaries, just running llvm 10.0 distribution out of the box, with make script above instead of the release script shipped in our sdk above.</p>",
        "id": 200146956,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591645657
    },
    {
        "content": "<p>realise its my problem, just saying its safe for others to help identify why we're compiling without debug info if you wanted to.</p>",
        "id": 200147100,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591645722
    },
    {
        "content": "<p>am I missing an obvious link flag I need ?</p>",
        "id": 200147184,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591645779
    },
    {
        "content": "<p>maybe clang is weird &amp; the position of the flag on the command line matters ?</p>",
        "id": 200147570,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591645974
    },
    {
        "content": "<p>llvm-dwarfdump just prints entire dwarf sections, so if nothing then it’s empty</p>",
        "id": 200148034,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591646175
    },
    {
        "content": "<p>I place -g before files but it shall not matter</p>",
        "id": 200148128,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591646226
    },
    {
        "content": "<p>k, so I got nothing. so we're at bottom of the class here. how embarassing :)</p>",
        "id": 200148163,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591646243
    },
    {
        "content": "<p>wasm-ld just combines these sections</p>",
        "id": 200148213,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591646276
    },
    {
        "content": "<p>Do llvmdwarfdump for obj file</p>",
        "id": 200148474,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591646399
    },
    {
        "content": "<p>llvm-dwarfdump app.o<br>\napp.o: Invalid data was encountered while parsing the file</p>",
        "id": 200148813,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591646529
    },
    {
        "content": "<p>Is dwarfdump new e.g. from wadi-sdk</p>",
        "id": 200148919,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591646572
    },
    {
        "content": "<p>nope. I have no idea what version., should update it.</p>",
        "id": 200148998,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591646615
    },
    {
        "content": "<p>however, whichever version I have says this :</p>\n<p>llvm-dwarfdump app.wasm<br>\napp.wasm: No available targets are compatible with this triple.<br>\napp.wasm:   file format WASM</p>\n<p>.debug_info contents:</p>",
        "id": 200149031,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591646631
    },
    {
        "content": "<p>Right. Use one from wadi-sdk</p>",
        "id": 200149129,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591646664
    },
    {
        "content": "<p>link to wadi-sdk please. jfgi but not obvious</p>",
        "id": 200149174,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591646686
    },
    {
        "content": "<p>The one you have probably from 10 years ago :p</p>",
        "id": 200149193,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591646699
    },
    {
        "content": "<p>Wasi-sdk it is</p>",
        "id": 200149285,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591646748
    },
    {
        "content": "<p>llvm-dwarfdump --version<br>\nLLVM (<a href=\"http://llvm.org/\">http://llvm.org/</a>):<br>\n  LLVM version 6.0.0</p>\n<p>Optimized build.<br>\n  Default target: x86_64-pc-linux-gnu<br>\n  Host CPU: skylake</p>",
        "id": 200149300,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591646752
    },
    {
        "content": "<p>so yeah, my linux box needs an update</p>",
        "id": 200149342,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591646762
    },
    {
        "content": "<p>ah, it is wasi sdk &amp; so a typo</p>",
        "id": 200149399,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591646800
    },
    {
        "content": "<p>Right. You have wasm-ld so you may have dwarfdump near it</p>",
        "id": 200149671,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591646959
    },
    {
        "content": "<p>nope. gonna do that linux. upgrading my llvm to 10.0 ubuntu</p>",
        "id": 200150097,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591647140
    },
    {
        "content": "<p>yup, 10 linux has it, 10 windoze doesn't :)</p>",
        "id": 200150364,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591647289
    },
    {
        "content": "<p>pre-built binary distributions</p>",
        "id": 200150384,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591647300
    },
    {
        "content": "<p>then as no installer  ubuntu, looks like I just drop the directories into the file system</p>",
        "id": 200150566,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591647394
    },
    {
        "content": "<p>LLVM (<a href=\"http://llvm.org/\">http://llvm.org/</a>):<br>\n  LLVM version 10.0.0<br>\n  Optimized build.<br>\n  Default target: x86_64-unknown-linux-gnu<br>\n  Host CPU: skylake</p>",
        "id": 200150914,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591647582
    },
    {
        "content": "<p>from : llvm-dwarfdump --version</p>",
        "id": 200150987,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591647611
    },
    {
        "content": "<p>so think that's how you install it :)</p>",
        "id": 200151005,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591647623
    },
    {
        "content": "<p>tired. simple obvious things aren't working so gonna stop there for today &amp; get something simple compiling with debug info in the morning.<br>\ncheers all.</p>",
        "id": 200151107,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591647697
    },
    {
        "content": "<p>k, progress. ported my make script to bash, compiled our thing ubuntu, llvm 10. ran llvm-dwarfdump app.wasm got a ton out output, unlike yesterday :)</p>",
        "id": 200189281,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591687661
    },
    {
        "content": "<p>apparent bug llvm 10 wasm win64 : debug info not generated when requested, though need to verify.</p>",
        "id": 200189409,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591687754
    },
    {
        "content": "<p>image list from llvm on windows not showing anything jit related, unless I'm blind. this is with the wasm with debug in it compiled on linux.<br>\nstill running on windows, next step is perhaps run linux. which wouldn't hurt anyway.<br>\n<a href=\"https://pastebin.com/fL3TpAqn\">https://pastebin.com/fL3TpAqn</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://pastebin.com/fL3TpAqn\" style=\"background-image: url(https://pastebin.com/i/facebook.png)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://pastebin.com/fL3TpAqn\" title=\"(lldb) image list  [  0]                                      0x0000000140000000 - Pastebin.com\">(lldb) image list  [  0]                                      0x0000000140000000 - Pastebin.com</a></div></div></div>",
        "id": 200201386,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591695810
    },
    {
        "content": "<ul>\n<li>from lldb</li>\n</ul>\n<p>however confidence low that lldb 10 precompiled binary version on windows is solid anyway.</p>",
        "id": 200201487,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591695898
    },
    {
        "content": "<p>from wasm. for standard compilation, it gets exercised plenty.</p>",
        "id": 200201538,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591695945
    },
    {
        "content": "<p>so, back to basics until standard stuff is working as expected. maybe a wasmtime.exe example next, rather than our stuff.</p>",
        "id": 200201679,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591696037
    },
    {
        "content": "<p>looking at debug example posted above.  we have differences. its not just this :<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/examples/fib-debug/main.c#L18\">https://github.com/bytecodealliance/wasmtime/blob/master/examples/fib-debug/main.c#L18</a></p>\n<p>most of the entrypoints in that example are wasmtime methods, whereas I assumed wasm_c_api would be sufficient.</p>\n<p>seems I assumed wrong :)</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/master/examples/fib-debug/main.c#L18\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/examples/fib-debug/main.c#L18\" title=\"bytecodealliance/wasmtime\">bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Standalone JIT-style runtime for WebAssembly, using Cranelift - bytecodealliance/wasmtime</div></div></div>",
        "id": 200207933,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591700377
    },
    {
        "content": "<p>as of 0.16 you have a regression, yury</p>\n<p>./main.c:74:68: error: too many arguments to function call, expected 5, have 6<br>\n  error = wasmtime_instance_new(store, module, NULL, 0, &amp;instance, &amp;trap);</p>",
        "id": 200208175,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591700529
    },
    {
        "content": "<p>store parameter needs removing from that call.</p>",
        "id": 200208396,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591700678
    },
    {
        "content": "<p>no cargo.toml so instructions in <a href=\"http://main.rs\">main.rs</a> cannot be completed.</p>",
        "id": 200216983,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591705518
    },
    {
        "content": "<p>for fib-debug</p>",
        "id": 200217066,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591705543
    },
    {
        "content": "<p>if I could have that missing file, please, I should be able to run your example as-is to see if I can reproduce expected behaviour :)</p>",
        "id": 200217338,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591705601
    },
    {
        "content": "<p>sorry misunderstood - <a href=\"http://main.rs\">main.rs</a> is equivalent of main.c which I don't need. the wasm is in wasm :) with its toml :)</p>",
        "id": 200218720,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591705915
    },
    {
        "content": "<p>cargo build -p example-fib-debug-wasm --target wasm32-unknown-unknown</p>\n<p>should be in <a href=\"http://make.sh\">make.sh</a> in the wasm directory, not referenced in <a href=\"http://main.rs\">main.rs</a> which I'm not using :)</p>",
        "id": 200220577,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591706339
    },
    {
        "content": "<p>a make script so all of that just works would be nice :)</p>\n<p>note how my stuff has that :P</p>",
        "id": 200220843,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591706444
    },
    {
        "content": "<p>welcome back... so you are on linux today?</p>",
        "id": 200220992,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591706519
    },
    {
        "content": "<p>for right now, yup.</p>",
        "id": 200221051,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591706532
    },
    {
        "content": "<p>\"too many arguments to function call\" means you are trying to use old version of wasmtime with new example</p>",
        "id": 200221100,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591706564
    },
    {
        "content": "<p>API changed after my PR</p>",
        "id": 200221114,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591706574
    },
    {
        "content": "<p>I'm using latest shipped version :) 0.16</p>",
        "id": 200221149,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591706590
    },
    {
        "content": "<p>0.17 is source only.</p>",
        "id": 200221168,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591706602
    },
    {
        "content": "<p>but if its the runtime that's too old, can compile 0.17 myself.</p>",
        "id": 200221202,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591706629
    },
    {
        "content": "<p>I thought 0.17 is released</p>",
        "id": 200221338,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591706692
    },
    {
        "content": "<p>it is, but only as source &amp; I was keeping workload to the minimum.</p>",
        "id": 200221394,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591706731
    },
    {
        "content": "<p>yep, <a href=\"https://crates.io/crates/wasmtime\">https://crates.io/crates/wasmtime</a></p>",
        "id": 200221396,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591706732
    },
    {
        "content": "<p>but if that's a requirement, then it is :)</p>",
        "id": 200221425,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591706739
    },
    {
        "content": "<p>got fib_debug running using main.c 0.16</p>",
        "id": 200221444,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591706757
    },
    {
        "content": "<p>next job, drop in 0.17</p>",
        "id": 200221490,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591706764
    },
    {
        "content": "<p>no debugging yet, just got my head around your build process.</p>",
        "id": 200221516,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591706784
    },
    {
        "content": "<p>here's that start of a make script - compiles main.c &amp; installs wasmtime runtime. I'm a bit crap on linux, so could possibly be done better, but it works.<br>\n<a href=\"https://pastebin.com/hKznEJRC\">https://pastebin.com/hKznEJRC</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://pastebin.com/hKznEJRC\" style=\"background-image: url(https://pastebin.com/i/facebook.png)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://pastebin.com/hKznEJRC\" title=\"#!/bin/sh      # ===============      WASMTIME example make script      ======== - Pastebin.com\">#!/bin/sh      # ===============      WASMTIME example make script      ======== - Pastebin.com</a></div></div></div>",
        "id": 200222155,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591707173
    },
    {
        "content": "<p>that's right, I gave up on building 0.17 when I hit this :)<br>\ncargo build -p wasmtime-c-api --release</p>",
        "id": 200223140,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591707695
    },
    {
        "content": "<p>error: failed to parse manifest at <code>/home/x/dev/wasm/wasmtime-0.17.0/Cargo.toml</code></p>\n<p>Caused by:<br>\n  feature <code>profile-overrides</code> is required</p>\n<p>this Cargo does not support nightly features, but if you<br>\nswitch to nightly channel you can add<br>\n<code>cargo-features = [\"profile-overrides\"]</code> to enable this feature</p>",
        "id": 200223180,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591707712
    },
    {
        "content": "<p>is it really necessary to use absolutely bleeding edge functionality on everything ?<br>\n:)</p>",
        "id": 200223258,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591707733
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>$ rustc --version\nrustc 1.43.1 (8d69840ab 2020-05-04)\n</code></pre></div>",
        "id": 200223362,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591707795
    },
    {
        "content": "<p>rustc 1.36.0 (a53f9df32 2019-07-03)</p>",
        "id": 200223403,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591707819
    },
    {
        "content": "<p>k, so how do I update that plz :)</p>",
        "id": 200223421,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591707830
    },
    {
        "content": "<p><code>rustup update</code>?</p>",
        "id": 200223484,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591707849
    },
    {
        "content": "<p>apparently, I avoid the horrid thing as much as possible as it lacks elegant c/c++ syntax :P</p>",
        "id": 200223566,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591707893
    },
    {
        "content": "<p>did you install via <code>rustup</code> ?</p>",
        "id": 200223567,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591707896
    },
    {
        "content": "<p>at some stage I suppose.</p>",
        "id": 200223610,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591707919
    },
    {
        "content": "<p>running an update</p>",
        "id": 200223620,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591707926
    },
    {
        "content": "<p>its like the pascal people showed up &amp; told us how its gonna be &amp; the c++ guys when, ummm ... no ... but I digress :)</p>",
        "id": 200223722,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591707968
    },
    {
        "content": "<p>1.44</p>",
        "id": 200223770,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591707993
    },
    {
        "content": "<p>alright, bleeding edge</p>",
        "id": 200223805,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591708015
    },
    {
        "content": "<p>x@dev:~/dev/wasm/wasmtime-0.17.0$ cargo build -p wasmtime-c-api --release<br>\nerror: failed to read <code>/home/x/dev/wasm/wasmtime-0.17.0/crates/wasi-common/WASI/tools/witx/Cargo.toml</code></p>\n<p>Caused by:<br>\n  No such file or directory (os error 2)</p>",
        "id": 200223840,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591708029
    },
    {
        "content": "<p>this is why we have binary distributions of things - so everyone doesn't have to go through dependency nightmares :)</p>",
        "id": 200223892,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591708067
    },
    {
        "content": "<p>how do I install that wasi crate thingy please.</p>",
        "id": 200223980,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591708101
    },
    {
        "content": "<p>let's cleanup: <code>cargo clean</code> and <code>git submodule update --init</code> ?</p>",
        "id": 200223981,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591708101
    },
    {
        "content": "<p>its unhappy doing a cargo clean, same error.</p>",
        "id": 200224025,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591708138
    },
    {
        "content": "<p>what about submodules?</p>",
        "id": 200224068,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591708160
    },
    {
        "content": "<p>I don't need to do this. can you just build 0.17 &amp; post it, no is cool if you can't be bothered</p>",
        "id": 200224074,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591708163
    },
    {
        "content": "<p>not a git repository. I downloaded 0.17 from releases, not from git.</p>",
        "id": 200224174,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591708202
    },
    {
        "content": "<p>probably glitch in matrix, did you report it?</p>",
        "id": 200224204,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591708207
    },
    {
        "content": "<p>how do I pull that branch from git please</p>",
        "id": 200224226,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591708215
    },
    {
        "content": "<p>yeah, but then these guys with dark glasses showed up &amp; I ended up here :)</p>",
        "id": 200224266,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591708232
    },
    {
        "content": "<p><code>git fetch upstream</code> &amp;&amp; <code>git checkout upstream/master</code> normally works for me</p>",
        "id": 200224386,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591708294
    },
    {
        "content": "<p>guess I just pull wasmtime git trunk on linux, as I did on windows. cross fingers &amp; hope its solid.<br>\nwhich is what you just said.</p>",
        "id": 200224398,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591708305
    },
    {
        "content": "<p>if I'm angry with what I see in <code>git status</code>, I just nuking that  with <code>git checkout -f --recurse-submodules</code></p>",
        "id": 200224621,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591708420
    },
    {
        "content": "<p>pulled fresh trunk</p>",
        "id": 200224838,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591708523
    },
    {
        "content": "<p>x@dev:~/dev/wasm/wasmtime$ cargo build -p wasmtime-c-api --release<br>\nerror: failed to read <code>/home/x/dev/wasm/wasmtime/crates/wasi-common/WASI/tools/witx/Cargo.toml</code></p>",
        "id": 200224964,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591708578
    },
    {
        "content": "<p>can we have a binary build of 0.17 please.</p>",
        "id": 200225021,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591708611
    },
    {
        "content": "<p><a href=\"https://github.com/bytecodealliance/wasmtime/releases/tag/dev\">https://github.com/bytecodealliance/wasmtime/releases/tag/dev</a> ?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/releases/tag/dev\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/releases/tag/dev\" title=\"bytecodealliance/wasmtime\">bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Standalone JIT-style runtime for WebAssembly, using Cranelift - bytecodealliance/wasmtime</div></div></div>",
        "id": 200225132,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591708682
    },
    {
        "content": "<p>ah, that's new :)</p>",
        "id": 200225210,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591708706
    },
    {
        "content": "<p>when you go this way, it just shows source : <a href=\"https://github.com/bytecodealliance/wasmtime/releases\">https://github.com/bytecodealliance/wasmtime/releases</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/releases\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/releases\" title=\"bytecodealliance/wasmtime\">bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Standalone JIT-style runtime for WebAssembly, using Cranelift - bytecodealliance/wasmtime</div></div></div>",
        "id": 200225276,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591708746
    },
    {
        "content": "<p>thanks.</p>",
        "id": 200225289,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591708752
    },
    {
        "content": "<p>There was a build problem on CI, so exact 0.17 might be missing -- the issue needs to be opened</p>",
        "id": 200225314,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591708762
    },
    {
        "content": "<p>well, we can hop past this. if there's a binary 0.17 which you've linked, thanks. I can just use this &amp; the matrix can resolve itself :)</p>",
        "id": 200225408,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591708805
    },
    {
        "content": "<p>the Assets is what you are looking for</p>",
        "id": 200225463,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591708826
    },
    {
        "content": "<p>? I'm just wanting to link 0.17 to main.c from fibdebug so I have the same API you have in your example &amp; as close to edge as possible without losing my mind :)</p>",
        "id": 200225554,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591708869
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"254083\">@Dan Gohman</span> can we release 0.18 sinse 0.17 did not publish any assets?</p>",
        "id": 200225672,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591708920
    },
    {
        "content": "<p>Sure</p>",
        "id": 200225811,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1591708959
    },
    {
        "content": "<p>I wonder if 0.17.1 is a thing for us</p>",
        "id": 200225924,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591709015
    },
    {
        "content": "<p>whatever works :)</p>",
        "id": 200225960,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591709030
    },
    {
        "content": "<p>k, 0.17 build, runs ubuntu. no debugging yet but works</p>",
        "id": 200227047,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591709487
    },
    {
        "content": "<p>building lldb 10 from source as seems to be a requirement :)</p>",
        "id": 200229763,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591710617
    },
    {
        "content": "<p>lldb version 10 installed, ubuntu</p>",
        "id": 200234698,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591712408
    },
    {
        "content": "<p>alright, alright, alright... let me know if I shall pull mine from the closet</p>",
        "id": 200235161,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591712601
    },
    {
        "content": "<p>think that's a private matter :)</p>",
        "id": 200235344,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591712663
    },
    {
        "content": "<p>ran fib debug thingy.</p>",
        "id": 200235392,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591712679
    },
    {
        "content": "<p><a href=\"https://pastebin.com/iueXJuGj\">https://pastebin.com/iueXJuGj</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://pastebin.com/iueXJuGj\" style=\"background-image: url(https://pastebin.com/i/facebook.png)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://pastebin.com/iueXJuGj\" title=\"(lldb) image list  [  0] 65FDCEFE 0x0000000000400000 /home/x/dev/wasm/debug/bin/ - Pastebin.com\">(lldb) image list  [  0] 65FDCEFE 0x0000000000400000 /home/x/dev/wasm/debug/bin/ - Pastebin.com</a></div></div></div>",
        "id": 200235397,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591712681
    },
    {
        "content": "<p>just let it run all the way through. not sure if that's what you wanted.</p>",
        "id": 200235459,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591712700
    },
    {
        "content": "<p>so, not seeing anything jit there. to be clear I ran that after a run of the app. didn't break inside it.</p>",
        "id": 200235677,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591712779
    },
    {
        "content": "<p>sure if store is cleaned up -- there is no JIT'ed code</p>",
        "id": 200236034,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591712898
    },
    {
        "content": "<p>place a breakpoint in your app just before/after the wasm function invocation.</p>",
        "id": 200236115,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591712932
    },
    {
        "content": "<p>k, so that's expected. I have no clue how to use lldb from command line yet :) and of course compiled without gui :)</p>",
        "id": 200236429,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591713063
    },
    {
        "content": "<p>is there the equivalent of DebugBreak() on windows I can just compile in ?</p>",
        "id": 200236489,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591713088
    },
    {
        "content": "<p><a href=\"https://www.nesono.com/sites/default/files/lldb%20cheat%20sheet.pdf\">https://www.nesono.com/sites/default/files/lldb%20cheat%20sheet.pdf</a> ?<br>\n]</p>",
        "id": 200236503,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591713093
    },
    {
        "content": "<p>thanks</p>",
        "id": 200236669,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591713150
    },
    {
        "content": "<p>normally you type <code>b main.c:234</code> to set a breakpoint at specific line, <code>r</code> to run/restart, <code>c</code> to continue, <code>q</code> to quit</p>",
        "id": 200236679,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591713154
    },
    {
        "content": "<p>you don't need to know much to drive debugging session, but it will be useful to see what you did hen you post terminal in the pastebin</p>",
        "id": 200237106,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591713311
    },
    {
        "content": "<p>it is impossible to paste your mouse clicks</p>",
        "id": 200237153,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591713333
    },
    {
        "content": "<p>k, so to keep this simple, how do I single source line  step please</p>",
        "id": 200237299,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591713379
    },
    {
        "content": "<p><code>s</code> or <code>n</code></p>",
        "id": 200237417,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591713424
    },
    {
        "content": "<p>tried that - invalid process</p>",
        "id": 200237491,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591713454
    },
    {
        "content": "<p>so I have to start it somehow first ?</p>",
        "id": 200237511,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591713462
    },
    {
        "content": "<p><code>r</code>?</p>",
        "id": 200237522,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591713467
    },
    {
        "content": "<p>that runs the whole thing</p>",
        "id": 200237576,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591713483
    },
    {
        "content": "<p>so I have to put a breakpoint. I can't just step in a line at a time.</p>",
        "id": 200237662,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591713515
    },
    {
        "content": "<p>so breakpoint at main</p>",
        "id": 200237694,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591713525
    },
    {
        "content": "<p>god I hate this - we've moved on. its like hanging out with the vi is great crowd :)</p>",
        "id": 200237751,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591713549
    },
    {
        "content": "<p>right, it will break on set breakpoint though, see e.g. tests <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/tests/all/debug/lldb.rs#L71-L74\">https://github.com/bytecodealliance/wasmtime/blob/master/tests/all/debug/lldb.rs#L71-L74</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/master/tests/all/debug/lldb.rs#L71-L74\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/tests/all/debug/lldb.rs#L71-L74\" title=\"bytecodealliance/wasmtime\">bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Standalone JIT-style runtime for WebAssembly, using Cranelift - bytecodealliance/wasmtime</div></div></div>",
        "id": 200237813,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591713572
    },
    {
        "content": "<p>I don't have a set breakpoint. I just want to do like visual studio. f10, first line, next line, next line.</p>",
        "id": 200237949,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591713612
    },
    {
        "content": "<p>but you do set a breakpoint at first line, no?</p>",
        "id": 200238019,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591713644
    },
    {
        "content": "<p>in visual studio, no. turns out you can step and it figures out you wanted to start at the first line of the program :)</p>",
        "id": 200238100,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591713674
    },
    {
        "content": "<p>but that's not important. this toolchain works how it does.</p>",
        "id": 200238165,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591713701
    },
    {
        "content": "<p>yeah, usually hello world programs are debugged this way</p>",
        "id": 200238184,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591713713
    },
    {
        "content": "<p>this pretty much is hello world. its only about 50 lines</p>",
        "id": 200238261,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591713733
    },
    {
        "content": "<p>breakpoint set --name main</p>",
        "id": 200238348,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591713776
    },
    {
        "content": "<p>apparently</p>",
        "id": 200238361,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591713782
    },
    {
        "content": "<p>or <code>b main</code></p>",
        "id": 200238373,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591713786
    },
    {
        "content": "<p>which should be implict if you step from an unstarted program, but anyhow :)</p>",
        "id": 200238446,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591713818
    },
    {
        "content": "<p>omg its working :)</p>",
        "id": 200238588,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591713860
    },
    {
        "content": "<p>s steps in,  not wanting to dive deep n is next high level instruction ?</p>",
        "id": 200238760,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591713920
    },
    {
        "content": "<p>yeah, but I'm interested in <code>image list</code></p>",
        "id": 200239061,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591714034
    },
    {
        "content": "<p>at </p>\n<blockquote>\n<p>wasm_extern_vec_delete(&amp;exports);</p>\n</blockquote>",
        "id": 200239066,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591714035
    },
    {
        "content": "<p>so image list here</p>",
        "id": 200239099,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591714048
    },
    {
        "content": "<p>you're not gonna like this :)</p>",
        "id": 200239181,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591714077
    },
    {
        "content": "<p><a href=\"https://pastebin.com/uithP4MY\">https://pastebin.com/uithP4MY</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://pastebin.com/uithP4MY\" style=\"background-image: url(https://pastebin.com/i/facebook.png)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://pastebin.com/uithP4MY\" title=\"  (lldb) image list  [  0] 65FDCEFE 0x0000000000400000 /home/x/dev/wasm/debug/bi - Pastebin.com\">  (lldb) image list  [  0] 65FDCEFE 0x0000000000400000 /home/x/dev/wasm/debug/bi - Pastebin.com</a></div></div></div>",
        "id": 200239263,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591714102
    },
    {
        "content": "<p>I spy <code>[ 11] 54F9EC54 0x00007ffff7fc7000 JIT(0x737b80) (0x0000000000737b80)</code></p>",
        "id": 200239305,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591714118
    },
    {
        "content": "<p>ah, so it is :)</p>",
        "id": 200239381,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591714153
    },
    {
        "content": "<p>so, we've got the basics working. next step hop back to windows &amp; see if I can get it doing the same thing.</p>",
        "id": 200239466,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591714189
    },
    {
        "content": "<p>thanks for your assistance &amp; patience :)</p>",
        "id": 200239490,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591714198
    },
    {
        "content": "<p>hold on, set breakpoint in wasm code</p>",
        "id": 200239550,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591714207
    },
    {
        "content": "<p>how plz</p>",
        "id": 200239636,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591714243
    },
    {
        "content": "<p>use source file name and line number</p>",
        "id": 200239652,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591714249
    },
    {
        "content": "<p>just like you use mouse, but using the keyboard :P</p>",
        "id": 200239755,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591714289
    },
    {
        "content": "<p>yeah, mouse was invented so you didn't have to search through cheat sheets :)</p>",
        "id": 200239914,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591714331
    },
    {
        "content": "<p>this is like arguing with blender artists who love their key combos when I prefer 3dsmax gui but anyways :)</p>",
        "id": 200239988,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591714354
    },
    {
        "content": "<p>repeatable is a key here, mouse is an art</p>",
        "id": 200240121,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591714397
    },
    {
        "content": "<p>mouse triggers events that can be captured &amp; logged, but we digress. you want to stay with 60s tech, we'll stay with 60s tech.</p>",
        "id": 200240300,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591714450
    },
    {
        "content": "<p>(lldb) b fib.rs:4         <br>\nBreakpoint 1: no locations (pending).<br>\nWARNING:  Unable to resolve breakpoint to any actual locations.</p>",
        "id": 200240651,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591714574
    },
    {
        "content": "<p>that's from a fresh start. guessing that's too early. hasn't loaded yet so knows nothing about it.</p>",
        "id": 200240719,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591714597
    },
    {
        "content": "<p>b main</p>",
        "id": 200240870,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591714653
    },
    {
        "content": "<p>or just <code>b fib</code></p>",
        "id": 200240904,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591714664
    },
    {
        "content": "<p>when the c code is reading imports/exports you should have enough info for wasm breakpoints ?</p>",
        "id": 200241174,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591714747
    },
    {
        "content": "<p>apparently so</p>",
        "id": 200241229,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591714770
    },
    {
        "content": "<p>yeah, if wasm code has <em>valid</em> DWARF info</p>",
        "id": 200241288,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591714787
    },
    {
        "content": "<p>seems happy.</p>",
        "id": 200241415,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591714821
    },
    {
        "content": "<p>looking for continue command</p>",
        "id": 200241442,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591714829
    },
    {
        "content": "<p><code>c</code>?</p>",
        "id": 200241460,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591714836
    },
    {
        "content": "<p><a href=\"https://pastebin.com/5fAGJQdU\">https://pastebin.com/5fAGJQdU</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://pastebin.com/5fAGJQdU\" style=\"background-image: url(https://pastebin.com/i/facebook.png)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://pastebin.com/5fAGJQdU\" title=\"Process 20814 stopped  * thread #1, name = 'test_app', stop reason = breakpoint  - Pastebin.com\">Process 20814 stopped  * thread #1, name = 'test_app', stop reason = breakpoint  - Pastebin.com</a></div></div></div>",
        "id": 200241577,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591714881
    },
    {
        "content": "<p>seems happy :)</p>",
        "id": 200241593,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591714886
    },
    {
        "content": "<p>is it good?</p>",
        "id": 200241630,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591714901
    },
    {
        "content": "<p>nah</p>",
        "id": 200241659,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591714908
    },
    {
        "content": "<p>try <code>bt</code></p>",
        "id": 200241703,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591714920
    },
    {
        "content": "<p>should say var, not let mut</p>",
        "id": 200241738,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591714922
    },
    {
        "content": "<p>it works, the syntax is horrid :P</p>",
        "id": 200241797,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591714936
    },
    {
        "content": "<p>you are using wrong examples, did you see <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/tests/all/debug/testsuite/reverse-str.c\">https://github.com/bytecodealliance/wasmtime/blob/master/tests/all/debug/testsuite/reverse-str.c</a> ?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/master/tests/all/debug/testsuite/reverse-str.c\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/tests/all/debug/testsuite/reverse-str.c\" title=\"bytecodealliance/wasmtime\">bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Standalone JIT-style runtime for WebAssembly, using Cranelift - bytecodealliance/wasmtime</div></div></div>",
        "id": 200241895,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591714976
    },
    {
        "content": "<p>to be clear. system is functioning as expected. thank you. I have a syntax quibble but that's an issue for another day.</p>",
        "id": 200241916,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591714983
    },
    {
        "content": "<p>I used the fib example you linked above. think my whine about rust syntax has confused you.</p>",
        "id": 200242042,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591715028
    },
    {
        "content": "<p>install vscode on ubuntu and try to drive debugging via GUI</p>",
        "id": 200242057,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591715032
    },
    {
        "content": "<p>that sounds crazy</p>",
        "id": 200242138,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591715048
    },
    {
        "content": "<p>nope, vscode is using LLDB</p>",
        "id": 200242173,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591715056
    },
    {
        "content": "<p>yup, might even work :)</p>",
        "id": 200242244,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591715085
    },
    {
        "content": "<p>if so, screw up is bcoz I was using wasm-c-api entrypoints but you require wasmtime api calls ?</p>",
        "id": 200242317,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591715120
    },
    {
        "content": "<p>not sure</p>",
        "id": 200242646,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591715248
    },
    {
        "content": "<p>generating of DWARF is an overhead, the engine needs to do be configured to spend CPU/memory for debug info</p>",
        "id": 200243680,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591715614
    },
    {
        "content": "<p>c api \"outsourced\" this type of operation to implementers</p>",
        "id": 200243878,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591715678
    },
    {
        "content": "<p>vscode, linux refusing to start, but I had that working windows &amp; not concerned linux right now other than diagnostics, which we've just completed.</p>",
        "id": 200243937,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591715698
    },
    {
        "content": "<p>so, let me head back to windows &amp; repeat the above somehow. might have to compile llvm trunk or 11 candidate as 10 wasn't behaving.</p>",
        "id": 200244163,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591715766
    },
    {
        "content": "<p>cheers. leave that with me for now. I can see we can debug lldb, regardless of what vscode's doing.</p>",
        "id": 200244284,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591715815
    },
    {
        "content": "<p>building llvm trunk, windows, gonna be a while.</p>",
        "id": 200255276,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591719952
    },
    {
        "content": "<blockquote>\n<p>c api \"outsourced\" this type of operation to implementers</p>\n</blockquote>\n<p>which is why I don't understand why you have so many wasmtime calls in fib-debug. surely just the first call to set debugging info as that's not present in wasm-c-api is enough. then standard api.</p>",
        "id": 200265717,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591724750
    },
    {
        "content": "<p>&amp; even that, surely an environment variable would be better, then you can override &amp; enable debug from any wasmtime runtime without anyone having to modify anything.</p>",
        "id": 200268205,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591725971
    },
    {
        "content": "<p>right, but the main question is does it work on windows?</p>",
        "id": 200268470,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591726115
    },
    {
        "content": "<p>the environment feature is good, but irrelevant</p>",
        "id": 200268551,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591726172
    },
    {
        "content": "<p>fighting with llvm build system. their latest windows snapshot is 20th feb. 10 released in march.</p>",
        "id": 200268567,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591726179
    },
    {
        "content": "<p>its not irrelevent, its a refinement once we're working.</p>",
        "id": 200268592,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591726196
    },
    {
        "content": "<p>this is what I hate about open source. everyone's like \"but you can build it yourself\". I. don't. want. to.</p>",
        "id": 200268666,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591726228
    },
    {
        "content": "<p>I'd like a beer please. sure sir, there's a field, go plant yourself some hops ...</p>",
        "id": 200268694,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591726244
    },
    {
        "content": "<p>:)</p>",
        "id": 200268711,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591726250
    },
    {
        "content": "<p>which version of LLDB is included in vscode plugins?</p>",
        "id": 200268723,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591726261
    },
    {
        "content": "<p>right now it doesn't matter bcoz clang doesn't generate debug info and I can't ship a toolchain that requires our users to switch to linux to compile their scripts.</p>",
        "id": 200268795,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591726302
    },
    {
        "content": "<p>just built llvm windows using standard cmake environment, which built everything except what I want, so going through more slowly, second pass to see if I can get thing to do what I want.</p>",
        "id": 200268898,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591726349
    },
    {
        "content": "<p>this \"windows snapshot build\" is older than the current release : <a href=\"https://llvm.org/builds\">https://llvm.org/builds</a></p>\n<p>realise it's not your project, just sayin' :)</p>",
        "id": 200269512,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591726677
    },
    {
        "content": "<p>going with this as a llvm configure script :</p>\n<p>cmake ../llvm -G Ninja -DLLVM_ENABLE_PROJECTS=\"clang;lldb;lld\" -DCMAKE_BUILD_TYPE=\"Release\"  -DLLVM_TARGETS_TO_BUILD=\"WebAssembly\"  -DLLVM_BUILD_EXAMPLES=0 -DLLVM_INCLUDE_EXAMPLES=0 -DLLVM_INCLUDE_TESTS=0 -DLLVM_INCLUDE_BENCHMARKS=0</p>",
        "id": 200272790,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591728221
    },
    {
        "content": "<p>nope, not that :)</p>",
        "id": 200272949,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591728285
    },
    {
        "content": "<p>/me would just use <a href=\"https://github.com/WebAssembly/wasi-sdk/\">https://github.com/WebAssembly/wasi-sdk/</a> as a base</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/wasi-sdk/\" style=\"background-image: url(https://avatars3.githubusercontent.com/u/11578470?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/wasi-sdk/\" title=\"WebAssembly/wasi-sdk\">WebAssembly/wasi-sdk</a></div><div class=\"message_embed_description\">WASI-enabled WebAssembly C/C++ toolchain. Contribute to WebAssembly/wasi-sdk development by creating an account on GitHub.</div></div></div>",
        "id": 200273020,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591728323
    },
    {
        "content": "<p>have you tested windows, coz my understanding was you're linux only.</p>",
        "id": 200273154,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591728377
    },
    {
        "content": "<p><a href=\"https://github.com/WebAssembly/wasi-sdk/blob/master/Makefile#L7\">https://github.com/WebAssembly/wasi-sdk/blob/master/Makefile#L7</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/wasi-sdk/blob/master/Makefile#L7\" style=\"background-image: url(https://avatars3.githubusercontent.com/u/11578470?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/wasi-sdk/blob/master/Makefile#L7\" title=\"WebAssembly/wasi-sdk\">WebAssembly/wasi-sdk</a></div><div class=\"message_embed_description\">WASI-enabled WebAssembly C/C++ toolchain. Contribute to WebAssembly/wasi-sdk development by creating an account on GitHub.</div></div></div>",
        "id": 200273178,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591728393
    },
    {
        "content": "<p>hence going trunk to see if whatever's wrong has been fixed.</p>",
        "id": 200273180,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591728394
    },
    {
        "content": "<p>have you used your sdk tools to compile with debug on windows &amp; confirmed you get debug info with dwarf tool thingy who's name I can't remember ?<br>\n:)</p>",
        "id": 200273322,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591728464
    },
    {
        "content": "<p>llvm-dwarfdump</p>",
        "id": 200273414,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591728498
    },
    {
        "content": "<p>llvm-dwarfdump</p>",
        "id": 200273462,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591728533
    },
    {
        "content": "<p>we need to be able to compile wasm with debug on windows or there's no point going further with any of this as our only viable dev platform right this minute is windows. our plan is complete there, then fill in the gaps linux &amp; others.</p>",
        "id": 200273660,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591728613
    },
    {
        "content": "<p>that build still going, thought it had failed, but just some warnings.</p>",
        "id": 200273968,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591728753
    },
    {
        "content": "<p>again, that's a pull, fight dependency hell &amp; hope rather than a install package. I'll give it a go. thanks.</p>",
        "id": 200274251,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591728918
    },
    {
        "content": "<p>completing llvm build I have going first. may as well, its half way thru.</p>",
        "id": 200275458,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591729495
    },
    {
        "content": "<p>wasi-sdk : what do I run windows, please. no make, that makefile isn't nmake compatible</p>",
        "id": 200278195,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591730967
    },
    {
        "content": "<p>got mozilla build tools which does have make, but it doesn't have cmake :)</p>",
        "id": 200278384,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591731051
    },
    {
        "content": "<p>mozmake?</p>",
        "id": 200278437,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591731078
    },
    {
        "content": "<p>dunno, I'll figure something out.</p>",
        "id": 200278598,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591731157
    },
    {
        "content": "<p>however all of this is some way from it just works (tm)</p>",
        "id": 200278640,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591731171
    },
    {
        "content": "<p>such is free</p>",
        "id": 200278676,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591731196
    },
    {
        "content": "<p>k, got cmake in my mozilla tools cmd thingy</p>",
        "id": 200279548,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591731732
    },
    {
        "content": "<p>it can't find llvm stuff now.<br>\nso must be a step before make that i've skipped</p>",
        "id": 200279582,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591731752
    },
    {
        "content": "<p>backing up a step, why am I not just running <a href=\"https://github.com/WebAssembly/wasi-sdk/releases\">https://github.com/WebAssembly/wasi-sdk/releases</a><br>\nwasi-sdk-11 mingw ?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/wasi-sdk/releases\" style=\"background-image: url(https://avatars3.githubusercontent.com/u/11578470?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/wasi-sdk/releases\" title=\"WebAssembly/wasi-sdk\">WebAssembly/wasi-sdk</a></div><div class=\"message_embed_description\">WASI-enabled WebAssembly C/C++ toolchain. Contribute to WebAssembly/wasi-sdk development by creating an account on GitHub.</div></div></div>",
        "id": 200279912,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591731914
    },
    {
        "content": "<p>I'll build if I have to, but surely that's what I want, your most recent built tools. if they work, we're good.</p>",
        "id": 200279949,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591731950
    },
    {
        "content": "<p>I was using standard llvm-10 - haven't tried this yet, so maybe that's the hassle free fix.</p>",
        "id": 200280030,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591731973
    },
    {
        "content": "<p>its only 6 days old so unless you've fixed something I need more recently than that, think that's where I should be.</p>",
        "id": 200280218,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591732073
    },
    {
        "content": "<p>k, progress :) compiles windows with debug &amp; do have llvm-dwarfdump there as its in the mingw distribution.<br>\nyay :)</p>",
        "id": 200282414,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591733031
    },
    {
        "content": "<p>solution was to use wasi-sdk tools rather than standard llvm-10 equivalent, as advised, thank you :)</p>",
        "id": 200282533,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591733068
    },
    {
        "content": "<p>no lldb in that package. I should use standard llvm 10 version ?</p>",
        "id": 200283342,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591733412
    },
    {
        "content": "<p>if its missing &amp; you plan to add, please build it with curses so can use gui</p>",
        "id": 200283379,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591733431
    },
    {
        "content": "<p>using lldb 10 for now</p>",
        "id": 200284015,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591733711
    },
    {
        "content": "<p>ctrl-c to break</p>",
        "id": 200284052,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591733726
    },
    {
        "content": "<p>no JIT. as expected, as that's just the same as compiling wasm on linux then running it on windows as yesterday.</p>",
        "id": 200284270,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591733841
    },
    {
        "content": "<p>so back up a step, run fib-debug windows, see if can repro behaviour on linux.</p>",
        "id": 200284328,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591733859
    },
    {
        "content": "<p><a href=\"https://pastebin.com/m1X4Matq\">https://pastebin.com/m1X4Matq</a></p>\n<p>test_app is fib_debug compiled with debug info, windows</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://pastebin.com/m1X4Matq\" style=\"background-image: url(https://pastebin.com/i/facebook.png)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://pastebin.com/m1X4Matq\" title=\"Z:\\dev\\infinity\\wasm\\xsg_sdk\\examples\\fib_debug\\bin&gt;lldb test_app  (lldb) target - Pastebin.com\">Z:\\dev\\infinity\\wasm\\xsg_sdk\\examples\\fib_debug\\bin&gt;lldb test_app  (lldb) target - Pastebin.com</a></div></div></div>",
        "id": 200285290,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591734374
    },
    {
        "content": "<p>so that lldb sucks</p>",
        "id": 200285324,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591734392
    },
    {
        "content": "<p>build trunk lldb ?</p>",
        "id": 200285394,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591734431
    },
    {
        "content": "<p>sanity check. standard lldb, standard simple c program. see what happens.</p>",
        "id": 200285662,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591734567
    },
    {
        "content": "<p>ummm, losing it - was trying to debug fib debug linux on windows, hadn't actually built it. surprised it got that far. doh :)</p>",
        "id": 200286052,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591734728
    },
    {
        "content": "<p>k, built fib_debug using visual studio on windows as clang was giving me weird errors. as our stuff is vstudio, that's probably better as closer to the same thing.</p>",
        "id": 200291560,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591737281
    },
    {
        "content": "<p>stepping thru using lldb</p>",
        "id": 200291596,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591737302
    },
    {
        "content": "<p><a href=\"https://pastebin.com/70x2JF35\">https://pastebin.com/70x2JF35</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://pastebin.com/70x2JF35\" style=\"background-image: url(https://pastebin.com/i/facebook.png)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://pastebin.com/70x2JF35\" title=\"  95     wasm_instance_delete(instance);     96     97     // Call.  -&gt; 98     p - Pastebin.com\">  95     wasm_instance_delete(instance);     96     97     // Call.  -&gt; 98     p - Pastebin.com</a></div></div></div>",
        "id": 200291805,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591737416
    },
    {
        "content": "<p>that's using wasmtime from here : <a href=\"https://github.com/bytecodealliance/wasmtime/releases/tag/dev\">https://github.com/bytecodealliance/wasmtime/releases/tag/dev</a> released today.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/releases/tag/dev\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/releases/tag/dev\" title=\"bytecodealliance/wasmtime\">bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Standalone JIT-style runtime for WebAssembly, using Cranelift - bytecodealliance/wasmtime</div></div></div>",
        "id": 200291889,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591737465
    },
    {
        "content": "<p>can you guys please confirm your stuff works windows. doesn't seem to for me.</p>",
        "id": 200291996,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591737512
    },
    {
        "content": "<p>Could be that GDB JIT interface does not work on Windows. can you file an issue? maybe someone can weight in before I look at it?</p>",
        "id": 200292143,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591737590
    },
    {
        "content": "<p>long shot: can you try <code>settings set plugin.jit-loader.gdb.enable on</code> before doing <code>r</code></p>",
        "id": 200292282,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591737631
    },
    {
        "content": "<p>sure. let me try that.</p>",
        "id": 200292353,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591737660
    },
    {
        "content": "<p>can mozilla get yury a windows box please :)</p>",
        "id": 200292390,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591737675
    },
    {
        "content": "<p>... in the closet</p>",
        "id": 200292421,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591737699
    },
    {
        "content": "<p>I gotta be bi-os so have u :)</p>",
        "id": 200292530,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591737747
    },
    {
        "content": "<p>this times, tri-os is acceptable</p>",
        "id": 200292624,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591737796
    },
    {
        "content": "<p>yeah, got all that fun ahead. quad os if we're going android and mac stuff</p>",
        "id": 200292842,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591737905
    },
    {
        "content": "<p>and then we have ps-5 &amp; xbox next fun &amp; games. but lets keep it simple for now.</p>",
        "id": 200292875,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591737926
    },
    {
        "content": "<p>not spotting any difference.<br>\n<a href=\"https://pastebin.com/mTxufwp9\">https://pastebin.com/mTxufwp9</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://pastebin.com/mTxufwp9\" style=\"background-image: url(https://pastebin.com/i/facebook.png)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://pastebin.com/mTxufwp9\" title=\"-&gt; 98     printf(&quot;Calling fib...\\n&quot;);     99     wasm_val_t params[1] = { {.kind - Pastebin.com\">-&gt; 98     printf(\"Calling fib...\\n\");     99     wasm_val_t params[1] = { {.kind - Pastebin.com</a></div></div></div>",
        "id": 200293089,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591738054
    },
    {
        "content": "<p>where would you like me to raise a bug</p>",
        "id": 200293267,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591738153
    },
    {
        "content": "<p>should be easy enough for anyone else to reproduce. there's a possiblity I've got a weird setup.</p>",
        "id": 200293431,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591738225
    },
    {
        "content": "<p>so you might like a confirmation.</p>",
        "id": 200293447,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591738236
    },
    {
        "content": "<p>the wasmtime issue tracker is fine</p>",
        "id": 200293634,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1591738339
    },
    {
        "content": "<p>here's my fib_debug directory with a visual studio solution in the make subdir &amp; windows binary &amp; the rest of it in bin<br>\n<a href=\"http://advance-software.com/misc/fib_debug.zip\">http://advance-software.com/misc/fib_debug.zip</a><br>\ncan build yourself but that might be a helpful shortcut</p>",
        "id": 200293767,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591738419
    },
    {
        "content": "<p>I'm done unless you want me to add anything : <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1850\">https://github.com/bytecodealliance/wasmtime/issues/1850</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/issues/1850\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/issues/1850\" title=\"JIT debugging not activated windows, using unmodified fib_debug example · Issue #1850 · bytecodealliance/wasmtime\">JIT debugging not activated windows, using unmodified fib_debug example · Issue #1850 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">What are the steps to reproduce the issue? Build fib_debug, windows or use version here : http://advance-software.com/misc/fib_debug.zip Open using lldb from llvm 10.0 release, windows. Step into t...</div></div></div>",
        "id": 200294497,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591738875
    },
    {
        "content": "<p>right time for some zzzzz for me, have fun :)</p>",
        "id": 200295124,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591739174
    },
    {
        "content": "<p>whilst you're at it, if fib_debug can run with standard wasm calls instead of wasmtime calls, I think it should. should only use non standard calls when we have to.</p>",
        "id": 200295522,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591739427
    },
    {
        "content": "<p>&amp; reminder of the environment variable enabler to remove need for non-standard api altogether.</p>",
        "id": 200295575,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591739456
    },
    {
        "content": "<p>though whatever works :)</p>",
        "id": 200295588,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591739465
    },
    {
        "content": "<p>hope going well. let me row back on request to activate debug mode with an environment variable.<br>\nreason: that'd be global, but we'll want some scripting under debug control, some running normally. that just occurred.</p>",
        "id": 200320911,
        "sender_full_name": "Steve Williams",
        "timestamp": 1591767390
    },
    {
        "content": "<p>BTW, i was doing some work on OSX and debugging didn't work. I managed to figure it out why so maybe this can help some people.<br>\nThe root cause of it is that allowing the Injecting JIT debug information in LLDB has different defaults in windows/osx it would seem.</p>\n<p>In the debug console if you run:<br>\n<code>settings show plugin.jit-loader.gdb.enable</code> it will say <code>default</code>, but it seems <code>default</code> means different things on different platforms :D. So the fix is quite wasy.</p>\n<p>If you're using Code LLDB plugin for vscode, you need to set this option in your <code>settings.json</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code>    &quot;lldb.launch.preRunCommands&quot;: [\n        &quot;settings set plugin.jit-loader.gdb.enable on&quot;\n    ],\n</code></pre></div>\n\n\n<p>Then, after your module is registered, you can type in DEBUG CONSOLE <code>image list</code> and you should have a JIT(0xADDRESS)... in there as the last entry</p>",
        "id": 201962788,
        "sender_full_name": "Alexandru Ene",
        "timestamp": 1593088697
    },
    {
        "content": "<p>This is excellent, thanks <span class=\"user-mention\" data-user-id=\"298375\">@Alexandru Ene</span> . I'm wondering, should we add this somewhere in our docs perhaps? It seems like a useful bit of info. <span class=\"user-mention\" data-user-id=\"234973\">@Till Schneidereit</span> what do you think?</p>",
        "id": 201963245,
        "sender_full_name": "Jakub Konka",
        "timestamp": 1593088969
    },
    {
        "content": "<p>We could have a Debugging section and troubleshooting steps in case debugging doesn't work.</p>",
        "id": 201963320,
        "sender_full_name": "Alexandru Ene",
        "timestamp": 1593089020
    },
    {
        "content": "<p>I can raise a PR with that as I did a bunch of troubleshooting recently around it.</p>",
        "id": 201964630,
        "sender_full_name": "Alexandru Ene",
        "timestamp": 1593089749
    },
    {
        "content": "<p>There are also known issues as <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1896\">https://github.com/bytecodealliance/wasmtime/issues/1896</a> or <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1850\">https://github.com/bytecodealliance/wasmtime/issues/1850</a> , I think I'll mark them with <code>wasmtime:debugging</code></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/issues/1896\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/issues/1896\" title=\"Problem with debugging wasm module compiled from C++ · Issue #1896 · bytecodealliance/wasmtime\">Problem with debugging wasm module compiled from C++ · Issue #1896 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Hi, I&#39;m trying to use wasmtime&#39;s debug support. I followed the simple demo from #1613, and it works as expected. But when I try to debug a slightly more complex C++ program, there&#39;s som...</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/issues/1850\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/issues/1850\" title=\"JIT debugging not activated windows, using unmodified fib_debug example · Issue #1850 · bytecodealliance/wasmtime\">JIT debugging not activated windows, using unmodified fib_debug example · Issue #1850 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">What are the steps to reproduce the issue? Build fib_debug, windows or use version here : http://advance-software.com/misc/fib_debug.zip Open using lldb from llvm 10.0 release, windows. Step into t...</div></div></div>",
        "id": 201964974,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1593089912
    }
]