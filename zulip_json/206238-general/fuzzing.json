[
    {
        "content": "<p>Hey y'all is anybody working on a Wasm fuzzer? We're using the c-smith approach now, but I think indirection via C is not actually exercising some bits of Lucet.</p>",
        "id": 202365544,
        "sender_full_name": "Deian Stefan",
        "timestamp": 1593463440
    },
    {
        "content": "<p>we use <code>wasm-opt -ttf</code> for fuzzing wasmtime:</p>\n<div class=\"codehilite\"><pre><span></span><code>$ wasm-opt --help\nwasm-opt INFILE\n\nRead, write, and optimize files\n\nOptions:\n\n...\n\n  --translate-to-fuzz,-ttf                      Translate the input into a valid\n                                                wasm module *somehow*, useful\n                                                for fuzzing\n\n...\n</code></pre></div>",
        "id": 202375162,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1593469358
    },
    {
        "content": "<p>(assuming you are asking specifically about a test case generator)</p>",
        "id": 202375185,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1593469375
    },
    {
        "content": "<p>give <code>wasm-opt -ttf</code> more bytes, it generates a bigger \"random\" wasm file; give it the same byte sequence, it generates the same \"random\" wasm file</p>",
        "id": 202375233,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1593469427
    },
    {
        "content": "<p>its essentially an \"unparser\" that uses the input byte sequence as a predetermined path through its \"what should I generate next?\" decision tree</p>",
        "id": 202375342,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1593469486
    },
    {
        "content": "<p>(<code>wasm-opt</code> is part of binaryen: <a href=\"https://github.com/WebAssembly/binaryen\">https://github.com/WebAssembly/binaryen</a>)</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/binaryen\" style=\"background-image: url(https://avatars3.githubusercontent.com/u/11578470?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/binaryen\" title=\"WebAssembly/binaryen\">WebAssembly/binaryen</a></div><div class=\"message_embed_description\">Compiler infrastructure and toolchain library for WebAssembly - WebAssembly/binaryen</div></div></div>",
        "id": 202375372,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1593469508
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"270639\">@Deian Stefan</span> ^</p>",
        "id": 202375384,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1593469520
    },
    {
        "content": "<p>cool, that looks like what we were looking for. I'll take a look at it, thanks</p>",
        "id": 202376587,
        "sender_full_name": "Evan Johnson",
        "timestamp": 1593470482
    }
]