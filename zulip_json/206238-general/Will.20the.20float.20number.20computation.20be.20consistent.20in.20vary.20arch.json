[
    {
        "content": "<p>I need to run logic in different architectures that must be consistent for computation. Usually, this is done by keeping all the numbers as integers.  But this is cumbersome, I wonder if wasmtime/wasmi can keep the consistency?</p>",
        "id": 480869919,
        "sender_full_name": "Hoping White",
        "timestamp": 1730882908
    },
    {
        "content": "<p>Could you expand on what you are concerned about? The Wasm spec permits nondeterministic NaN propagation in some cases but that shouldn't impact any (non-NaN) numeric results.</p>",
        "id": 480922458,
        "sender_full_name": "Lann Martin",
        "timestamp": 1730900449
    },
    {
        "content": "<p>you can enable nan canonicalization if you require deterministic nan bit patterns as well</p>",
        "id": 480963467,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1730912470
    },
    {
        "content": "<p><a href=\"https://docs.rs/wasmtime/latest/wasmtime/struct.Config.html#method.cranelift_nan_canonicalization\">https://docs.rs/wasmtime/latest/wasmtime/struct.Config.html#method.cranelift_nan_canonicalization</a></p>",
        "id": 480963507,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1730912483
    },
    {
        "content": "<p>I use wasmtime in gameplay, battle result is generated on the client side, and validated on the server side by replay.  The client can be x86, x86_64, armv7, arm64, windows, linux, android or ios. The server side usually is x86_64 linux.  The same algorithm may get different results using float numbers in different arches. So I wonder if WASM can keep float number deterministic calculation. We don't consider Nan issue, Nan is an error in our scenario.</p>",
        "id": 481030125,
        "sender_full_name": "Hoping White",
        "timestamp": 1730944102
    },
    {
        "content": "<p>The answer is yes, then; it will be deterministic by spec and both wasmtime and wasmi are spec-compliant (or aim to be anyway, and divergence in this sense is a bug).</p>\n<p>We also do differential execution fuzzing between wasmtime and wasmi so this property should be fairly high-assurance in practice; of course let us know if that's not the case for you!</p>",
        "id": 481035670,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1730948357
    },
    {
        "content": "<p>Good news, thanks very much.</p>",
        "id": 481054960,
        "sender_full_name": "Hoping White",
        "timestamp": 1730962015
    }
]