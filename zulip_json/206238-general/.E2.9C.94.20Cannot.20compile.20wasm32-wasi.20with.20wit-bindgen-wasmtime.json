[
    {
        "content": "<p>I'm trying to compile my Rust code to wasi (using <code>wit-bindgen-wasmtime::export!</code>) with the command:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">build</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">release</span><span class=\"w\"></span>\n</code></pre></div>\n<p>But I receive some errors from the <code>region-2.2.0</code> package:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"mi\">30</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">   </span><span class=\"n\">os</span>::<span class=\"n\">lock</span><span class=\"p\">(</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">       </span><span class=\"o\">^^^^</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">os</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"mi\">60</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">   </span><span class=\"n\">os</span>::<span class=\"n\">unlock</span><span class=\"p\">(</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">       </span><span class=\"o\">^^^^^^</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">os</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"mi\">16</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"n\">INIT</span><span class=\"p\">.</span><span class=\"n\">call_once</span><span class=\"p\">(</span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"n\">PAGE_SIZE</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">os</span>::<span class=\"n\">page_size</span><span class=\"p\">());</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                                       </span><span class=\"o\">^^^^^^^^^</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">os</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">   </span><span class=\"n\">os</span>::<span class=\"n\">set_protection</span><span class=\"p\">(</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">       </span><span class=\"o\">^^^^^^^^^^^^^^</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">os</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"mi\">133</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">   </span><span class=\"n\">os</span>::<span class=\"n\">get_region</span><span class=\"p\">(</span><span class=\"n\">page</span>::<span class=\"n\">floor</span><span class=\"p\">(</span><span class=\"n\">address</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"kt\">usize</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">u8</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">       </span><span class=\"o\">^^^^^^^^^^</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">os</span><span class=\"err\">`</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Running <code>cargo tree --invert region</code> I get:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">region</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"p\">.</span><span class=\"mf\">2.0</span><span class=\"w\"></span>\n<span class=\"err\">├──</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"mf\">34.1</span><span class=\"w\"></span>\n<span class=\"err\">│</span><span class=\"w\">   </span><span class=\"err\">└──</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">bindgen</span><span class=\"o\">-</span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"mf\">1.0</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">https</span>:<span class=\"c1\">//github.com/bytecodealliance/wit-bindgen#2f46ce4c)</span>\n<span class=\"err\">│</span><span class=\"w\">       </span><span class=\"err\">└──</span><span class=\"w\"> </span><span class=\"n\">thalo</span><span class=\"o\">-</span><span class=\"n\">bank</span><span class=\"o\">-</span><span class=\"n\">account</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"mf\">1.0</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">/</span><span class=\"n\">private</span><span class=\"o\">/</span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">thalo</span><span class=\"o\">-</span><span class=\"n\">bank</span><span class=\"o\">-</span><span class=\"n\">account</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"err\">│</span><span class=\"w\">       </span><span class=\"p\">[</span><span class=\"n\">build</span><span class=\"o\">-</span><span class=\"n\">dependencies</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"err\">│</span><span class=\"w\">       </span><span class=\"err\">└──</span><span class=\"w\"> </span><span class=\"n\">thalo</span><span class=\"o\">-</span><span class=\"n\">bank</span><span class=\"o\">-</span><span class=\"n\">account</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"mf\">1.0</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">/</span><span class=\"n\">private</span><span class=\"o\">/</span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">thalo</span><span class=\"o\">-</span><span class=\"n\">bank</span><span class=\"o\">-</span><span class=\"n\">account</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"err\">├──</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">jit</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"mf\">34.1</span><span class=\"w\"></span>\n<span class=\"err\">│</span><span class=\"w\">   </span><span class=\"err\">└──</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"mf\">34.1</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"err\">└──</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">runtime</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"mf\">34.1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"err\">├──</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"mf\">34.1</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"err\">└──</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">jit</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"mf\">34.1</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 275969049,
        "sender_full_name": "Ari Seyhun",
        "timestamp": 1647785377
    },
    {
        "content": "<p>wit-bindgen-wasmtime is for host code, which is typically compiled natively for the host. You likely want to use wit-bindgen-rust instead, which is for wasm code.</p>",
        "id": 275970879,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1647788040
    },
    {
        "content": "<p>I'm planning to compile to wasi and and execute it from rust again rather than the browser. If I'm compiling from Rust and running in Rust too, it should be wit-bindgen-wasmtime right?</p>",
        "id": 275971047,
        "sender_full_name": "Ari Seyhun",
        "timestamp": 1647788207
    },
    {
        "content": "<p>wit-bindgen-wasmtime is for building host implementations meant to be linked into wasmtime. Are you using wasmtime?</p>",
        "id": 275971140,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1647788378
    },
    {
        "content": "<p>Yes I was planning to run the wasm file with wasmtime, similar to the tutorial here: &lt;<a href=\"https://docs.wasmtime.dev/examples-rust-wasi.html\">https://docs.wasmtime.dev/examples-rust-wasi.html</a>&gt;</p>",
        "id": 275971416,
        "sender_full_name": "Ari Seyhun",
        "timestamp": 1647788683
    },
    {
        "content": "<p>Ah. So, wasmtime itself is not something that can be compiled to WASI. It uses JIT compilation and other platform features which aren't supported in WASI.</p>",
        "id": 275971432,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1647788724
    },
    {
        "content": "<p>If you want to run code in the browser, it's better to look for ways to be able to use the browser's wasm engine. If you need WASI support, something like <a href=\"https://github.com/bjorn3/browser_wasi_shim\">https://github.com/bjorn3/browser_wasi_shim</a> might help.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bjorn3/browser_wasi_shim\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/51c76a19ca3196d211e81388e26c656c99b1bf06\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f363431313061613430346537636630353139313535616437633933613164396130333839393861626333633330373266633339666136363662326331653639322f626a6f726e332f62726f777365725f776173695f7368696d)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bjorn3/browser_wasi_shim\" title=\"GitHub - bjorn3/browser_wasi_shim: A WASI shim for in the browser\">GitHub - bjorn3/browser_wasi_shim: A WASI shim for in the browser</a></div><div class=\"message_embed_description\">A WASI shim for in the browser. Contribute to bjorn3/browser_wasi_shim development by creating an account on GitHub.</div></div></div>",
        "id": 275971504,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1647788830
    },
    {
        "content": "<p>Hmm I don't need to run wasi in the browser. Essentially I am using <code>wit_bindgen_rust::export(\"file.wit\");</code> in one Rust library, and in another Rust binary I want to run it with <code>wit_bindgen_rust::import(\"file.wit\");</code></p>",
        "id": 275971712,
        "sender_full_name": "Ari Seyhun",
        "timestamp": 1647789134
    },
    {
        "content": "<p>Ah, ok. To do that, you'll need <a href=\"https://github.com/bytecodealliance/wit-bindgen/tree/main/crates/wasmlink\">wasmlink</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wit-bindgen/tree/main/crates/wasmlink\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/005de3b949d0c68a533aac18a3b2fa49c41ab86a\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f396338616238316239383265633866373563346239376363346634366438613035613236626161356163613837313164656161363661323033373964363830652f62797465636f6465616c6c69616e63652f7769742d62696e6467656e)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wit-bindgen/tree/main/crates/wasmlink\" title=\"wit-bindgen/crates/wasmlink at main · bytecodealliance/wit-bindgen\">wit-bindgen/crates/wasmlink at main · bytecodealliance/wit-bindgen</a></div><div class=\"message_embed_description\">A language binding generator for WebAssembly interface types - wit-bindgen/crates/wasmlink at main · bytecodealliance/wit-bindgen</div></div></div>",
        "id": 275971803,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1647789284
    },
    {
        "content": "<p>Oh interesting. I remember trying to do the same thing I'm trying now a few months and I don't recall needing wasmlink.<br>\nMy main goal is to let users write wasi modules which I can then run from my Rust code (which I thought would be done with wasmtime).</p>\n<p>Is there a difference between wasm and wasi? I thought wasm is for running in the browser, and wasi is for running outside the browser</p>",
        "id": 275971910,
        "sender_full_name": "Ari Seyhun",
        "timestamp": 1647789463
    },
    {
        "content": "<p>Roughly speaking, wasm is the platform ISA, while wasi is an OS API.</p>",
        "id": 275972042,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1647789651
    },
    {
        "content": "<p>In browsers, you have wasm, but browsers don't provide the WASI APIs</p>",
        "id": 275972063,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1647789712
    },
    {
        "content": "<p>Ah okay I realised my issue.<br>\nI was using <code>wit-bindgen-gen-wasmtime</code> for the library, when I should've been using <code>wit-bindgen-gen-rust-wasm</code>.</p>",
        "id": 275972618,
        "sender_full_name": "Ari Seyhun",
        "timestamp": 1647790528
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"474928\">Ari Seyhun</span> has marked this topic as resolved.</p>",
        "id": 275972621,
        "sender_full_name": "Notification Bot",
        "timestamp": 1647790533
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"474928\">Ari Seyhun</span> has marked this topic as unresolved.</p>",
        "id": 275973284,
        "sender_full_name": "Notification Bot",
        "timestamp": 1647791492
    },
    {
        "content": "<p>When running <code>cargo build --target wasm32-wasi --release</code>, I cannot see any wasm or wasi file in target/wasm32-wasi/release...<br>\nThe only files are:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"c1\">// some folders...</span>\n<span class=\"c1\">// These files:</span>\n<span class=\"n\">my_lib</span><span class=\"p\">.</span><span class=\"n\">d</span><span class=\"w\"></span>\n<span class=\"n\">my_lib</span><span class=\"p\">.</span><span class=\"n\">rlib</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Should I be compiling to wasm32-unknown-unknown instead? What is the point of compiling to wasm32-wasi?</p>",
        "id": 275973371,
        "sender_full_name": "Ari Seyhun",
        "timestamp": 1647791634
    },
    {
        "content": "<p>It seems compining to wasm32-unknown-unknown also doesn't create a wasm file</p>",
        "id": 275973545,
        "sender_full_name": "Ari Seyhun",
        "timestamp": 1647791879
    },
    {
        "content": "<p>I think I may be missing a [[lib]] section in my Cargo toml but I can't recall what I need to set it to.</p>",
        "id": 275973739,
        "sender_full_name": "Ari Seyhun",
        "timestamp": 1647792027
    },
    {
        "content": "<p>Got it working with <code>crate-type = ['cdylib']</code></p>",
        "id": 275973872,
        "sender_full_name": "Ari Seyhun",
        "timestamp": 1647792197
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"474928\">Ari Seyhun</span> has marked this topic as resolved.</p>",
        "id": 275973878,
        "sender_full_name": "Notification Bot",
        "timestamp": 1647792204
    }
]