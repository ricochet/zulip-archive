[
    {
        "content": "<p>Hello folks!</p>\n<p>I'd like to make rustix build with for android with <code>libc</code> backend, but <em>without any dependency on <code>linux-raw-sys</code></em>. Right now it seems <code>linux-raw-sys</code> is always a dependency on Linux, and there are quite a few cases where <code>linux-raw-sys</code> is used outside <code>backend/linux-raw-sys</code> - as long as it's under <code>cfg(linux_kernel)</code>.</p>\n<p>Where should I look to understand how to do this in a way that makes sense for rustix architecture, and also doesn't break stuff?</p>\n<p>Would a patch like this be welcome upstream?</p>",
        "id": 426825066,
        "sender_full_name": "Marcin Radomski",
        "timestamp": 1710538234
    },
    {
        "content": "<p>Rustix on Android uses rustix's libc backend, however it also uses linux-raw-sys in order to expose Linux-specific features that aren't available through the <code>libc</code> crate.</p>",
        "id": 426825322,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1710538350
    },
    {
        "content": "<p>Is there a problem with linux-raw-sys on Android, or are you looking to ensure that everything goes through <code>libc</code> that can?</p>",
        "id": 426825656,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1710538518
    },
    {
        "content": "<p>I'm looking to use <code>libc</code> parts exclusively, even at the cost of losing some functionality that's not available via <code>libc</code>.</p>\n<p>What I'm aiming for is to use it in AOSP (Android platform). The feedback I got from Android maintainers was to avoid the <code>linux-raw-sys</code> dependency because of the <code>linux-raw-sys</code> bindings being statically generated not specifically out of Android kernel. I'm trying to figure out if that could work and make sense.</p>",
        "id": 426825957,
        "sender_full_name": "Marcin Radomski",
        "timestamp": 1710538666
    },
    {
        "content": "<p>There are several uses of linux_raw_sys in the src/backend/libc directory, but it's probably manageable.</p>",
        "id": 426826673,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1710538995
    },
    {
        "content": "<p>Some of those might be able to be upstreamed to the <code>libc</code> crate.</p>",
        "id": 426826735,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1710539029
    },
    {
        "content": "<p>There's also a bunch outside src/backend. What would be the right approach for those, disabling by some kind of <code>absolutely_no_linux_raw_sys_please</code>-like cfg?</p>",
        "id": 426827567,
        "sender_full_name": "Marcin Radomski",
        "timestamp": 1710539405
    },
    {
        "content": "<p>Ah, yes. Some of those should be able to be disabled in bulk, by disabling eg. the <code>prctl</code> module in the <code>thread</code> directory.</p>",
        "id": 426828094,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1710539658
    },
    {
        "content": "<p>OK, I'll go poke around a little. Thank you for the hints!</p>",
        "id": 426828238,
        "sender_full_name": "Marcin Radomski",
        "timestamp": 1710539763
    },
    {
        "content": "<p>For the cfg, the best way might be to make the linux-raw-sys dependency optional</p>",
        "id": 426828284,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1710539774
    },
    {
        "content": "<p>And then you can use <code>cfg(feature = \"linux-raw-sys\")</code></p>",
        "id": 426828319,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1710539792
    },
    {
        "content": "<p>Does each optional dependency implicitly declare a feature with its name?</p>",
        "id": 426828423,
        "sender_full_name": "Marcin Radomski",
        "timestamp": 1710539852
    },
    {
        "content": "<p>Yes</p>",
        "id": 426828462,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1710539877
    },
    {
        "content": "<p>That's awesome, TIL. Thank you :D</p>",
        "id": 426828529,
        "sender_full_name": "Marcin Radomski",
        "timestamp": 1710539898
    },
    {
        "content": "<p>If you run into problems, let me know, and I'll see if I can help!</p>",
        "id": 426829219,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1710540218
    }
]