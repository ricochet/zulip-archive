[
    {
        "content": "<p>I tried to reproduce the example in Fig. 5 <a href=\"https://www.usenix.org/system/files/sec20-lehmann.pdf\">https://www.usenix.org/system/files/sec20-lehmann.pdf</a><br>\nIt seems like the write direction is the same as the grow direction of the Stack.</p>\n<p><strong>Is there a possibility to change the writing direction?</strong></p>\n<p>Compiled with clang (llvm 18):</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">llvm</span><span class=\"o\">-</span><span class=\"mi\">18</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">clang</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">sysroot</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">libc</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Wl</span><span class=\"p\">,</span><span class=\"o\">--</span><span class=\"n\">no</span><span class=\"o\">-</span><span class=\"n\">entry</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Wl</span><span class=\"p\">,</span><span class=\"o\">--</span><span class=\"n\">export</span><span class=\"o\">-</span><span class=\"n\">all</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Wall</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Wextra</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">O3</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Wl</span><span class=\"p\">,</span><span class=\"o\">--</span><span class=\"n\">stack</span><span class=\"o\">-</span><span class=\"n\">first</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">buffer_overflow</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">buffer_overflow</span><span class=\"p\">.</span><span class=\"n\">c</span>\n</code></pre></div>\n<p>Code excerpt:</p>\n<div class=\"codehilite\" data-code-language=\"C\"><pre><span></span><code><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">vulnerable</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"n\">same_frame</span><span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"BBBBBBBB\"</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"n\">buffer</span><span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">];</span>\n\n<span class=\"w\">    </span><span class=\"n\">scanf</span><span class=\"p\">(</span><span class=\"s\">\"%[^</span><span class=\"se\">\\n</span><span class=\"s\">]\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">buffer</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"</span><span class=\"se\">\\n\\n</span><span class=\"s\">buffer: %s</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">buffer</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"same_frame: %s</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">same_frame</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">parent</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"n\">parent_frame</span><span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"AAAAAAAA\"</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">vulnerable</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"parent_frame: %s</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">parent_frame</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">size_t</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">size_t</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">parent_frame</span><span class=\"mi\">-40</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">size_t</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">parent_frame</span><span class=\"o\">+</span><span class=\"mi\">40</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"c1\">// (parent_frame-40)</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"%p %08zx </span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">i</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>when entering 12xC. It overwrites the same_frame buffer. </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">buffer</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">CCCCCCCCCCCC</span>\n<span class=\"n\">same_frame</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">CCCC</span>\n<span class=\"n\">parent_frame</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">AAAAAAAACCCCCCCCCCCC</span>\n\n<span class=\"n\">Stack</span><span class=\"p\">:</span>\n<span class=\"mh\">0xffd4</span><span class=\"w\"> </span><span class=\"mi\">00000000</span>\n<span class=\"mh\">0xffd8</span><span class=\"w\"> </span><span class=\"mi\">41414141</span>\n<span class=\"mh\">0xffdc</span><span class=\"w\"> </span><span class=\"mi\">41414141</span>\n<span class=\"mh\">0xffe0</span><span class=\"w\"> </span><span class=\"mi\">43434343</span>\n<span class=\"mh\">0xffe4</span><span class=\"w\"> </span><span class=\"mi\">43434343</span>\n<span class=\"mh\">0xffe8</span><span class=\"w\"> </span><span class=\"mi\">43434343</span>\n<span class=\"mh\">0xffec</span><span class=\"w\"> </span><span class=\"mi\">42424200</span>\n<span class=\"mh\">0xfff0</span><span class=\"w\"> </span><span class=\"mi\">00000000</span>\n<span class=\"mh\">0xfff4</span><span class=\"w\"> </span><span class=\"mi\">00000000</span>\n</code></pre></div>",
        "id": 450143297,
        "sender_full_name": "Lasse",
        "timestamp": 1720525179
    }
]