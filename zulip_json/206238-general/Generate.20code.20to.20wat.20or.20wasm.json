[
    {
        "content": "<p>Maybe a bit of a dumb question but say I’m making a compiler that compiles to WebAssembly, would there be reasons to target wasm binary format directly instead of wat? I’m thinking about targeting wat and letting Cranelift handle the rest, but would wat be in general a good idea? I would like to avoid the Cranelift IR since I’m already using the MLIR IR.</p>",
        "id": 492295801,
        "sender_full_name": "Rik Huijzer",
        "timestamp": 1736251031
    },
    {
        "content": "<p>By the way complements for the wasmtime team. The wasmtime API was easy to use and I’m very impressed with the final binary size when precompiling to wasm and only using the runtime</p>",
        "id": 492295963,
        "sender_full_name": "Rik Huijzer",
        "timestamp": 1736251097
    },
    {
        "content": "<p>I think I see now. I should probably use the cranelift frontend</p>",
        "id": 492328118,
        "sender_full_name": "Rik Huijzer",
        "timestamp": 1736262665
    },
    {
        "content": "<p>Hmm no seems not. Cranelift is to compile wasm to native. I’m looking to compile my IR to wasm (without LLVM). <span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span> could I target data types from the wast crate? The readme doesn’t specify that case but it could be reasonable I think?</p>",
        "id": 492485812,
        "sender_full_name": "Rik Huijzer",
        "timestamp": 1736336264
    },
    {
        "content": "<p>Have you looked at <a href=\"https://docs.rs/wasm-encoder/latest/wasm_encoder/\">wasm_encoder</a>?  That's the usual choice when generating Wasm code in Rust.  It won't do any optimization for you, but you could follow up by running the output through e.g. <code>wasm-opt</code>.</p>",
        "id": 492519243,
        "sender_full_name": "Joel Dice",
        "timestamp": 1736347517
    },
    {
        "content": "<p>Thanks Joel! I hadn’t found that yet no. Exactly what I was looking for</p>",
        "id": 492521673,
        "sender_full_name": "Rik Huijzer",
        "timestamp": 1736348165
    },
    {
        "content": "<p>I'd agree with Joel yeah that <code>wast</code> is probably not the best choice for a compiler, but <code>wasm-encoder</code> should work well. Although the text format has a lot of \"sugar\" where you don't have to worry about things that you'll have to worry about with <code>wasm-encoder</code>, so I'd recommend watching out for that</p>",
        "id": 492527811,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1736350022
    },
    {
        "content": "<p>Nice! I was wondering about that. Thanks Alex I’ll keep it in mind</p>",
        "id": 492537822,
        "sender_full_name": "Rik Huijzer",
        "timestamp": 1736353086
    }
]