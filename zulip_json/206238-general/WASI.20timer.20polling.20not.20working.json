[
    {
        "content": "<p>I'm trying to call poll_oneoff with a few file descriptor subscriptions and also a clock subscription. I want to be able to print \"Hello\" in 2 second intervals repeatedly and also handle events related to the file descriptors simultaneously.</p>\n<p>I get an invalid input error when trying to call poll. I'm not sure if my clock subscription code is right since I couldn't find any examples online so here it is:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasi</span>::<span class=\"n\">Subscription</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">userdata</span>: <span class=\"nc\">token</span><span class=\"p\">.</span><span class=\"mf\">0.</span><span class=\"n\">try_into</span><span class=\"p\">().</span><span class=\"n\">unwrap</span><span class=\"p\">(),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">u</span>: <span class=\"nc\">wasi</span>::<span class=\"n\">SubscriptionU</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">tag</span>: <span class=\"nc\">wasi</span>::<span class=\"n\">EVENTTYPE_CLOCK</span><span class=\"p\">.</span><span class=\"n\">raw</span><span class=\"p\">(),</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">u</span>: <span class=\"nc\">wasi</span>::<span class=\"n\">SubscriptionUU</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">clock</span>: <span class=\"nc\">wasi</span>::<span class=\"n\">SubscriptionClock</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"n\">id</span>: <span class=\"nc\">wasi</span>::<span class=\"n\">CLOCKID_REALTIME</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"n\">timeout</span>: <span class=\"p\">(</span><span class=\"n\">SystemTime</span>::<span class=\"n\">now</span><span class=\"p\">().</span><span class=\"n\">duration_since</span><span class=\"p\">(</span><span class=\"n\">UNIX_EPOCH</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">interval</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"p\">.</span><span class=\"n\">as_secs</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">wasi</span>::<span class=\"n\">Timestamp</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"n\">precision</span>: <span class=\"nc\">Duration</span>::<span class=\"n\">from_millis</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">).</span><span class=\"n\">as_secs</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">wasi</span>::<span class=\"n\">Timestamp</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"n\">flags</span>: <span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 276150982,
        "sender_full_name": "Alsan Ali",
        "timestamp": 1647933842
    },
    {
        "content": "<p>Okay nvm, I figured out the problem.  WASI doesn't seem to support timer subscriptions besides the monotonic timer.<br>\nI'm able to achieve a repeating interval timer (monotonic) by keeping track of how many times it ran and multiplying that number by the timeout (and reregistering the subscription every iteration).</p>",
        "id": 276175268,
        "sender_full_name": "Alsan Ali",
        "timestamp": 1647949300
    }
]