[
    {
        "content": "<p>I've waved my hands at the idea that a public-good registry could have some kind of externally-enforced namespacing: domain names, public repos, etc. How do we generally feel about that idea vs a Cargo-style first-come-first-serve flat namespace?</p>",
        "id": 326233668,
        "sender_full_name": "Lann Martin",
        "timestamp": 1675715847
    },
    {
        "content": "<p>Concrete ideas: require a prefix of either a well-known public forge e.g. <code>gitlab.com/lann/package</code> or a DNS name verified <em>somehow</em> (probably just manually, initially) e.g. <code>bytecodealliance.org/package</code>. We wouldn't have to do anything special for an initial semi-private instance but it would determine the naming convention.</p>",
        "id": 326235188,
        "sender_full_name": "Lann Martin",
        "timestamp": 1675716431
    },
    {
        "content": "<p>I don't think we want to repeat the mistake of having a flat namespace, so I just assumed we were going to go with a user/org name namespace scheme a la Docker. The policy around the user/org name would be first-come-first-served, but explicitly reserve the right to reclaim a user/org name that someone holds legal claim / trademark over (with perhaps some explicit dispute process). </p>\n<p>To me, the Docker way makes a lot of sense. In terms of a \"uniquely identifiable package name\", it'd be prefixed with the registry it came from in some format (warg url?).</p>\n<p>I'm completely open to alternatives, but we should keep in mind that not everyone publishing to a registry is part of a larger organization or company.</p>",
        "id": 326240005,
        "sender_full_name": "Peter Huene",
        "timestamp": 1675718168
    },
    {
        "content": "<blockquote>\n<p>reclaim a user/org name that someone holds legal claim / trademark over</p>\n</blockquote>\n<p>is a big part of what I don't love about the first-come namespace approach, but I would certainly take it over no namespace</p>\n<blockquote>\n<p>we should keep in mind that not everyone publishing to a registry is part of a larger organization or company</p>\n</blockquote>\n<p>Right, I don't think any solution should depend on owning a DNS name; requiring an account at a well-known forge seems like a low-enough bar to me, though it makes package names subjectively ugly</p>",
        "id": 326243088,
        "sender_full_name": "Lann Martin",
        "timestamp": 1675719479
    },
    {
        "content": "<p>Wrote up some thoughts / options: <a href=\"https://hackmd.io/@lann/B1M7L1epj\">https://hackmd.io/@lann/B1M7L1epj</a><br>\nCan discuss tomorrow too.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://hackmd.io/@lann/B1M7L1epj\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/be5883ebc78216e6d97b1f14ef5fbbb5049814a8\\/68747470733a2f2f7777772e67726176617461722e636f6d2f6176617461722f35386537303761353133356136613738313666373336386266643564396134663f733d343030)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://hackmd.io/@lann/B1M7L1epj\" title=\"Public Warg Registry Package Name Policy - HackMD\">Public Warg Registry Package Name Policy - HackMD</a></div><div class=\"message_embed_description\"># Public Warg Registry Package Name Policy  :::info This would be the policy for any BCA-operated re</div></div></div>",
        "id": 326393420,
        "sender_full_name": "Lann Martin",
        "timestamp": 1675784928
    },
    {
        "content": "<p>Does this proposal have any implications for <code>warg</code> as a protocol other than that names may need delimiters like <code>/</code>?</p>",
        "id": 326394108,
        "sender_full_name": "Robin Brown",
        "timestamp": 1675785108
    },
    {
        "content": "<blockquote>\n<p>This form of namespacing is only meaningful for registry policy enforcement; it has no meaning in the Warg protocol. There may be additional outer namespacing by the “owning” registry itself to facilitate federation.</p>\n</blockquote>\n<p><span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 326394329,
        "sender_full_name": "Lann Martin",
        "timestamp": 1675785154
    },
    {
        "content": "<p><code>/</code>-delimited names will require some changes to the API. We currently use names as url parameters in a way that I don't think can handle names with slashes.</p>",
        "id": 326394529,
        "sender_full_name": "Robin Brown",
        "timestamp": 1675785219
    },
    {
        "content": "<p>How much does this proposal, if at all, apply to the initial dogfood registry?</p>",
        "id": 326394899,
        "sender_full_name": "Robin Brown",
        "timestamp": 1675785306
    },
    {
        "content": "<p>The plan initially iirc is to only allow BCA projects to publish anyway, so I think we can start a lot simpler.</p>",
        "id": 326395428,
        "sender_full_name": "Robin Brown",
        "timestamp": 1675785426
    },
    {
        "content": "<p>If we know what we want to do we can start off prefixing those initial packages (without policy enforcement)</p>",
        "id": 326396063,
        "sender_full_name": "Lann Martin",
        "timestamp": 1675785569
    },
    {
        "content": "<p>I worry that implies a level of continuity/stability across preview registry protocols/instances that we don't want.</p>",
        "id": 326396365,
        "sender_full_name": "Robin Brown",
        "timestamp": 1675785630
    },
    {
        "content": "<p>We can use <code>bytecodealliance-preview/*</code> if we want <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 326396597,
        "sender_full_name": "Lann Martin",
        "timestamp": 1675785681
    },
    {
        "content": "<p>Maybe we should just give the entire dogfood registry as a whole a name/domain that makes it very clear that we might blow it away and repopulate it whenever we feel. In fact, it might make sense to give the new registry a new subdomain each time we do so that its semantically a new registry and doesn't confuse clients/monitors.</p>",
        "id": 326397469,
        "sender_full_name": "Robin Brown",
        "timestamp": 1675785893
    },
    {
        "content": "<p>e.g. <code>dogfood0.warg.io</code>, <code>dogfood1.warg.io</code>, ...</p>",
        "id": 326397573,
        "sender_full_name": "Robin Brown",
        "timestamp": 1675785923
    },
    {
        "content": "<p>We could do <code>preview0</code>, <code>preview1</code>, ... but I think initially we might do that several times before hitting anything that deserves preview status and should increment a preview number.</p>",
        "id": 326397830,
        "sender_full_name": "Robin Brown",
        "timestamp": 1675785981
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"480579\">@Lann Martin</span> thoughts on using the hash of the package name (<code>LogId</code>) in the url params instead of the name itself?<br>\n(that will naturally take care of the slashes for us and keep url lengths in check)</p>",
        "id": 326399515,
        "sender_full_name": "Robin Brown",
        "timestamp": 1675786404
    },
    {
        "content": "<p>If that makes sense semantically, sure. Otherwise we can just URL-encode.</p>",
        "id": 326400077,
        "sender_full_name": "Lann Martin",
        "timestamp": 1675786558
    },
    {
        "content": "<p>It's something I was already considering and I think it makes sense.</p>",
        "id": 326400459,
        "sender_full_name": "Robin Brown",
        "timestamp": 1675786643
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"480579\">@Lann Martin</span>  thanks for writing that up and sorry for the knee-jerk reaction to what was being discussed without the full context of the document ingested. My reaction was coming from a strong desire to make publishing to the registry as low-barrier as possible for individual developers given this being a nascent registry and hearing the discussion about potentially using ACME challenges for registering a namespace gave me an ignorant <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span> face (my misunderstanding was that it is not the <em>only</em> way to do so).</p>\n<p>I think this makes a lot of sense at a policy level for the BA registry and to serve as a de facto example for other instance implementations; we can continue to use some canonical form of a package log (not delimited) identifier in the protocol itself.</p>",
        "id": 326687739,
        "sender_full_name": "Peter Huene",
        "timestamp": 1675891455
    },
    {
        "content": "<p>I've updated the hackmd to use <code>:</code> as a namespace separator instead of <code>/</code> to avoid confusion with URLs. We've used <code>:</code> in some docs to separate version numbers; the hackmd now suggests <code>@</code> for that purpose, leading to release references like:</p>\n<ul>\n<li><code>wasi:filesystem@0.1.0</code></li>\n<li><code>example.com:package@0.2.0</code></li>\n<li><code>github.com/lann:dog-facts@0.3.0</code></li>\n</ul>",
        "id": 326696362,
        "sender_full_name": "Lann Martin",
        "timestamp": 1675894969
    },
    {
        "content": "<p>I've updated the <code>cargo-component</code> PR to match (specifically, looking for the last <code>@</code> in a short-form dependency to treat as the version delimiter)</p>",
        "id": 326709075,
        "sender_full_name": "Peter Huene",
        "timestamp": 1675901013
    }
]