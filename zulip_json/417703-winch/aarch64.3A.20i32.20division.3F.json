[
    {
        "content": "<p>apparently, cranelift codegen will only take a I64 for division: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/codegen/src/isa/aarch64/inst/emit.rs#L730-L734\">https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/codegen/src/isa/aarch64/inst/emit.rs#L730-L734</a> <br>\nwhy is that? Does that mean that mean that I must sign-extend I32 values?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/codegen/src/isa/aarch64/inst/emit.rs#L730-L734\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/9f7cd8ce9ecd432dd717e09a2bbb62a8819cdb67/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f306537303863343639363738366632663738643137316234356535343139363061656130643266653761653132623061396666396134646461643936393565322f62797465636f6465616c6c69616e63652f7761736d74696d65&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/codegen/src/isa/aarch64/inst/emit.rs#L730-L734\" title=\"wasmtime/cranelift/codegen/src/isa/aarch64/inst/emit.rs at main · bytecodealliance/wasmtime\">wasmtime/cranelift/codegen/src/isa/aarch64/inst/emit.rs at main · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A lightweight WebAssembly runtime that is fast, secure, and standards-compliant - bytecodealliance/wasmtime</div></div></div>",
        "id": 486612477,
        "sender_full_name": "marin",
        "timestamp": 1733529432
    },
    {
        "content": "<p>is that where it's done in cranelift? <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/codegen/src/isa/aarch64/inst.isle#L3142-L3148\">https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/codegen/src/isa/aarch64/inst.isle#L3142-L3148</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/codegen/src/isa/aarch64/inst.isle#L3142-L3148\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/9f7cd8ce9ecd432dd717e09a2bbb62a8819cdb67/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f306537303863343639363738366632663738643137316234356535343139363061656130643266653761653132623061396666396134646461643936393565322f62797465636f6465616c6c69616e63652f7761736d74696d65&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/codegen/src/isa/aarch64/inst.isle#L3142-L3148\" title=\"wasmtime/cranelift/codegen/src/isa/aarch64/inst.isle at main · bytecodealliance/wasmtime\">wasmtime/cranelift/codegen/src/isa/aarch64/inst.isle at main · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A lightweight WebAssembly runtime that is fast, secure, and standards-compliant - bytecodealliance/wasmtime</div></div></div>",
        "id": 486612495,
        "sender_full_name": "marin",
        "timestamp": 1733529447
    },
    {
        "content": "<p>That's correct, currently we have to sign-extend, given cranelift's codegen 64 bit requirement. </p>\n<p>The ARM docs state that {s/u}div can be 64 or 32 bit  [<a href=\"https://developer.arm.com/documentation/ddi0596/2020-12/Base-Instructions/SDIV--Signed-Divide-\">1</a>], [<a href=\"https://developer.arm.com/documentation/ddi0602/2024-09/Base-Instructions/UDIV--Unsigned-divide-?lang=e\">2</a>]. Unless there a fundamental reason that I'm not aware of, I  think it might make sense to add the 32-bit variants to avoid having to extend.</p>",
        "id": 486978500,
        "sender_full_name": "Saúl Cabrera",
        "timestamp": 1733746150
    },
    {
        "content": "<p>Doing some historical research, it seems that prior to migrating to ISLE, that was the intention <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3572/files#diff-bd652d5af8795961ba7456cf427fdae37bb82500e9f18fa6fc1621281bd1ab58L103\">https://github.com/bytecodealliance/wasmtime/pull/3572/files#diff-bd652d5af8795961ba7456cf427fdae37bb82500e9f18fa6fc1621281bd1ab58L103</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/3572/files#diff-bd652d5af8795961ba7456cf427fdae37bb82500e9f18fa6fc1621281bd1ab58L103\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/7203ed7b00d42dcfb19ebb9b603cc070fb2809ae/68747470733a2f2f617661746172732e67697468756275736572636f6e74656e742e636f6d2f752f36343939363f733d34303026763d34&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/3572/files#diff-bd652d5af8795961ba7456cf427fdae37bb82500e9f18fa6fc1621281bd1ab58L103\" title=\"aarch64: Migrate {s,u}{div,rem} to ISLE by alexcrichton · Pull Request #3572 · bytecodealliance/wasmtime\">aarch64: Migrate {s,u}{div,rem} to ISLE by alexcrichton · Pull Request #3572 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">This commit migrates four different instructions at once to ISLE:\n\nsdiv\nudiv\nsrem\nurem\n\nThese all share similar codegen and center around the div instruction\nto use internally. The main feature of ...</div></div></div>",
        "id": 486978574,
        "sender_full_name": "Saúl Cabrera",
        "timestamp": 1733746177
    },
    {
        "content": "<p>We probably don't have to do that in this PR though -- I'll create a separate issue to track that work and migrate the instruction over.</p>",
        "id": 486978933,
        "sender_full_name": "Saúl Cabrera",
        "timestamp": 1733746288
    }
]