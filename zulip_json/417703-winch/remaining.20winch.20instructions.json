[
    {
        "content": "<p>Hello <span class=\"user-mention\" data-user-id=\"411395\">@Saúl Cabrera</span>, I see that we are getting close to the finish line with <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8321\">https://github.com/bytecodealliance/wasmtime/issues/8321</a>. Can I take the remaining two unassigned instructions?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/issues/8321\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/a90c75ed5047615ad8eaf7c66ec05b9b15505575/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f343965303661373036333230346663373762303537663162393730656266666564643231633364386233313032646238333536396332306435373338373330302f62797465636f6465616c6c69616e63652f7761736d74696d652f6973737565732f38333231&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/issues/8321\" title=\"winch: Aarch64 MacroAssembler completeness · Issue #8321 · bytecodealliance/wasmtime\">winch: Aarch64 MacroAssembler completeness · Issue #8321 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Winch's support for Aarch64 is minimal. The objective of this issue to track the missing items in order to bring the Aarch64 MacroAssembler to parity with the x64 implementation. If you're interest...</div></div></div>",
        "id": 490057807,
        "sender_full_name": "marin",
        "timestamp": 1734646465
    },
    {
        "content": "<p>just as a note, there is one missing in the list AFAICT, <code>unsigned_truncate</code> is present but <code>signed_truncate</code> isn't.</p>",
        "id": 490058042,
        "sender_full_name": "minirop",
        "timestamp": 1734646585
    },
    {
        "content": "<p>Yes I saw that too</p>",
        "id": 490058079,
        "sender_full_name": "marin",
        "timestamp": 1734646612
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"784653\">@marin</span> I've updated the issue (thanks @minirop) and yes, feel free to take the remaining instrunctions, I'm happy to review a PR for that. Note I currently have some work-in-progress  for <code> stack_check</code>  as noted in the issue.</p>\n<p>As a general FYI I'm currently working on improving the state of the Winch board and therefore I have removed the entry for support for <code>v128</code>  from <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8321\">https://github.com/bytecodealliance/wasmtime/issues/8321</a>; I'll create separate issues to track the missing work needed for other Wasm proposals in both backends. In this case, v128 will be part of SIMD support for Winch-aarch64. ( I'll also reply to your comment <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8321\">here</a>, once I'm done with the board cleanup.)</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/issues/8321\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/b5cfa3c055c21aeac882fbce929e74a1c7819d2c/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f613232636162333835366230316136353435326432363763303530623337363832353266393163616130633862373731366132643739636439373265616565642f62797465636f6465616c6c69616e63652f7761736d74696d652f6973737565732f38333231&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/issues/8321\" title=\"winch: Aarch64 MacroAssembler completeness · Issue #8321 · bytecodealliance/wasmtime\">winch: Aarch64 MacroAssembler completeness · Issue #8321 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Winch's support for Aarch64 is minimal. The objective of this issue to track the missing items in order to bring the Aarch64 MacroAssembler to parity with the x64 implementation. If you're interest...</div></div></div>",
        "id": 490060604,
        "sender_full_name": "Saúl Cabrera",
        "timestamp": 1734647947
    }
]