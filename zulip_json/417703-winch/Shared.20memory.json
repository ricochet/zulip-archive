[
    {
        "content": "<p>I realized that I needed to get shared memory working before I could get the spec tests to pass. Do you have any pointers <span class=\"user-mention\" data-user-id=\"411395\">@Saúl Cabrera</span> ? </p>\n<p>While debugging, I found this function: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/environ/src/module.rs#L456-L473\">https://github.com/bytecodealliance/wasmtime/blob/main/crates/environ/src/module.rs#L456-L473</a><br>\nBut it find it fishy: If there is only a single shared memory in the module, this function returns 0, which seems incorrect, since we get an offset to an unexisting owned memory</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/environ/src/module.rs#L456-L473\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/4a1e8bd9dbeb85fd39493d37724d4a2ffd9be78e/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f666334383735336132303064313562313161626366333666353439653566383130373330303662393065653834623236336666646565333539303738663935652f62797465636f6465616c6c69616e63652f7761736d74696d65&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/environ/src/module.rs#L456-L473\" title=\"wasmtime/crates/environ/src/module.rs at main · bytecodealliance/wasmtime\">wasmtime/crates/environ/src/module.rs at main · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A lightweight WebAssembly runtime that is fast, secure, and standards-compliant - bytecodealliance/wasmtime</div></div></div>",
        "id": 492968412,
        "sender_full_name": "marin",
        "timestamp": 1736521431
    },
    {
        "content": "<p>IIRC \"owned\" here is defined-and-not-shared, so if a shared memory gets an owned index I think that's a bug?</p>",
        "id": 492972129,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1736522586
    },
    {
        "content": "<p>sounds like a bug to me too</p>",
        "id": 492972306,
        "sender_full_name": "marin",
        "timestamp": 1736522644
    },
    {
        "content": "<p>I believe you'd need to handle the shared memory here: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/winch/codegen/src/codegen/env.rs#L250\">https://github.com/bytecodealliance/wasmtime/blob/main/winch/codegen/src/codegen/env.rs#L250</a></p>",
        "id": 492973194,
        "sender_full_name": "Saúl Cabrera",
        "timestamp": 1736522953
    },
    {
        "content": "<p>how are owned memories laid out in the vm context? are all owned memoried contiguous? what's at index 0? because even it there's a single owned memory, this function would return 1, but I would assume that the first owned memory would be at offset 0 <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 492973330,
        "sender_full_name": "marin",
        "timestamp": 1736522998
    },
    {
        "content": "<p>it looks <a href=\"https://github.com/bytecodealliance/wasmtime/blob/de1ad347e34f00d3c10959ff14460e90b44f7907/crates/environ/src/vmoffsets.rs#L21-L35\">like this</a> in the vmcontext</p>",
        "id": 492973486,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1736523040
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"411395\">@Saúl Cabrera</span> yes, that how I got to the linked function<br>\nwhere do shared memories live?</p>",
        "id": 492973506,
        "sender_full_name": "marin",
        "timestamp": 1736523047
    },
    {
        "content": "<p>here: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/de1ad347e34f00d3c10959ff14460e90b44f7907/crates/environ/src/vmoffsets.rs#L28\">https://github.com/bytecodealliance/wasmtime/blob/de1ad347e34f00d3c10959ff14460e90b44f7907/crates/environ/src/vmoffsets.rs#L28</a>? <span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span></p>",
        "id": 492973663,
        "sender_full_name": "marin",
        "timestamp": 1736523105
    },
    {
        "content": "<p>yes all memories should live in that <code>memories</code> field, and for owned-and-not-shared memories those are self-pointers to the <code>owned_memories</code> field</p>",
        "id": 492973848,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1736523153
    },
    {
        "content": "<p>for shared memories the <code>memories</code> field should point to within the shared memory itself</p>",
        "id": 492973887,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1736523165
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"784653\">@marin</span> The <code>Memory</code> entry in <code>HeapData</code> has a <code>shared</code> field, to help you determine if it's shared or not. Here's how that case is handled in Cranelift: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/de1ad347e34f00d3c10959ff14460e90b44f7907/crates/cranelift/src/func_environ.rs#L2323\">https://github.com/bytecodealliance/wasmtime/blob/de1ad347e34f00d3c10959ff14460e90b44f7907/crates/cranelift/src/func_environ.rs#L2323</a></p>",
        "id": 492977926,
        "sender_full_name": "Saúl Cabrera",
        "timestamp": 1736524471
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"411395\">@Saúl Cabrera</span>, that's what I was looking for <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 492978113,
        "sender_full_name": "marin",
        "timestamp": 1736524544
    },
    {
        "content": "<p>alright, got it to work, all the tests are passing now. Thanks <span aria-label=\"salute\" class=\"emoji emoji-1fae1\" role=\"img\" title=\"salute\">:salute:</span></p>",
        "id": 492989028,
        "sender_full_name": "marin",
        "timestamp": 1736528227
    }
]