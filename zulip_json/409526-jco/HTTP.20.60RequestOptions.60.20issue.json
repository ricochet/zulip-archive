[
    {
        "content": "<p>Was just testing <a href=\"https://github.com/bytecodealliance/jco/pull/404\">my updates</a> to add default timeouts to the <code>RequestOptions</code> object and noticed something weird. Although the timeout fields are given default values:</p>\n<div class=\"codehilite\" data-code-language=\"JavaScript\"><pre><span></span><code><span class=\"err\">#</span><span class=\"nx\">connectTimeout</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nx\">defaultHttpTimeoutMs</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"nx\">nanoToMilliConversion</span><span class=\"p\">;</span>\n<span class=\"err\">#</span><span class=\"nx\">firstByteTimeout</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nx\">defaultHttpTimeoutMs</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"nx\">nanoToMilliConversion</span><span class=\"p\">;</span>\n<span class=\"err\">#</span><span class=\"nx\">betweenBytesTimeout</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nx\">defaultHttpTimeoutMs</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"nx\">nanoToMilliConversion</span><span class=\"p\">;</span>\n</code></pre></div>\n<p>If not explicitly set in the Guest they are still undefined. Adding the following console.log:</p>\n<div class=\"codehilite\" data-code-language=\"JavaScript\"><pre><span></span><code><span class=\"nx\">firstByteTimeoutMs</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">\"Value of #firstByteTimeout in firstByteTimeoutMs():\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"err\">#</span><span class=\"nx\">firstByteTimeout</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"err\">#</span><span class=\"nx\">firstByteTimeout</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"nx\">nanoToMilliConversion</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>Outputs:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Value</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span>#<span class=\"n\">firstByteTimeout</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">firstByteTimeoutMs</span><span class=\"p\">()</span>: <span class=\"nc\">undefined</span>\n</code></pre></div>\n<p>And ends up throwing the following error:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>TypeError:<span class=\"w\"> </span>invalid<span class=\"w\"> </span>variant<span class=\"w\"> </span>tag<span class=\"w\"> </span>value<span class=\"w\"> </span><span class=\"sb\">`</span>undefined<span class=\"sb\">`</span><span class=\"w\"> </span><span class=\"o\">(</span>received<span class=\"w\"> </span><span class=\"sb\">`</span>TypeError:<span class=\"w\"> </span>Cannot<span class=\"w\"> </span>mix<span class=\"w\"> </span>BigInt<span class=\"w\"> </span>and<span class=\"w\"> </span>other<span class=\"w\"> </span>types,<span class=\"w\"> </span>use<span class=\"w\"> </span>explicit<span class=\"w\"> </span>conversions<span class=\"sb\">`</span><span class=\"o\">)</span><span class=\"w\"> </span>specified<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"sb\">`</span>ErrorCode<span class=\"sb\">`</span>\n</code></pre></div>\n<p>Maybe I am missing something with how Resources are created in the host language that causes those fields to never be set? I did try moving setting the values into a <code>constructor()</code> function, but got the same issue there. </p>\n<p>Sorry I missed this, it was working in my initial implementation with the explicit <code>undefined</code> tests, but I missed this branch when testing the updates to the PR.</p>\n<p>CC: <span class=\"user-mention\" data-user-id=\"553681\">@Guy Bedford</span></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/jco/pull/404\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/62a9b65968ff58e1f7bd30bcbb773ad548ade299\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f373539613063396235623863393864343866393963336639326331393261346338623639613938636164386431613432363633653434663734663531643635372f62797465636f6465616c6c69616e63652f6a636f2f70756c6c2f343034)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/jco/pull/404\" title=\"Adding default timeout values for HTTP requests by landonxjames · Pull Request #404 · bytecodealliance/jco\">Adding default timeout values for HTTP requests by landonxjames · Pull Request #404 · bytecodealliance/jco</a></div><div class=\"message_embed_description\">Adding a default timeout value of 600_000Ms to each of the HTTP timeouts to align with the defaults set by Wasmtime.</div></div></div>",
        "id": 428378707,
        "sender_full_name": "Landon James",
        "timestamp": 1711128525
    },
    {
        "content": "<p>I also just saw this - have already included a fix for this in <a href=\"https://github.com/bytecodealliance/jco/pull/408\">https://github.com/bytecodealliance/jco/pull/408</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/jco/pull/408\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/51397aac780da79fdda5c96ed8b7a2fa219972ab\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f666234343135646465393565623066633363323431303662623231306433613466333439343066613039656336656437653738316263626361383136343337322f62797465636f6465616c6c69616e63652f6a636f2f70756c6c2f343038)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/jco/pull/408\" title=\"Toolchain deps update by guybedford · Pull Request #408 · bytecodealliance/jco\">Toolchain deps update by guybedford · Pull Request #408 · bytecodealliance/jco</a></div><div class=\"message_embed_description\">Updates to the latest toolchain dependencies including Wasmtime 19.\nAlso includes some features and fixes:\n\nRefined error handling resolving #405. JS errors from imported JS functions now only coer...</div></div></div>",
        "id": 428385611,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1711131080
    },
    {
        "content": "<p>Didn't get it in before you merged, but did have one question about that change: <a href=\"https://github.com/bytecodealliance/jco/pull/408#discussion_r1536012195\">https://github.com/bytecodealliance/jco/pull/408#discussion_r1536012195</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/jco/pull/408#discussion_r1536012195\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/201bf50eb7a68876ccb066cf1fc93282b4600d0e\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f373665643462383461386365323330613465336535343761663266316538663266653131386539336138313238346637646464303663376330306364643263642f62797465636f6465616c6c69616e63652f6a636f2f70756c6c2f343038)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/jco/pull/408#discussion_r1536012195\" title=\"Toolchain deps update by guybedford · Pull Request #408 · bytecodealliance/jco\">Toolchain deps update by guybedford · Pull Request #408 · bytecodealliance/jco</a></div><div class=\"message_embed_description\">Updates to the latest toolchain dependencies including Wasmtime 19.\nAlso includes some features and fixes:\n\nRefined error handling resolving #405. JS errors from imported JS functions now only coer...</div></div></div>",
        "id": 428387418,
        "sender_full_name": "Landon James",
        "timestamp": 1711131780
    }
]