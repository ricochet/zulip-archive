[
    {
        "content": "<p>what's the current opinion about async functions? For example, if I define a fetch function in an interface, then on the js host side that would have to be async so it can return the received bytes</p>\n<p>I found this <a href=\"https://github.com/bytecodealliance/jco/issues/39\">https://github.com/bytecodealliance/jco/issues/39</a> and I hope that's not the final decision, or else how do I achieve an interface function that fetches an url and returns the data it read?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/jco/issues/39\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/0b1e039d17c389b38250ebb9cb41450677d435df\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f353033643535613162323163346561633665303861383131303930303734356163613330623163353633313536323735633738666535653233303134323865612f62797465636f6465616c6c69616e63652f6a636f2f6973737565732f3339)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/jco/issues/39\" title=\"Allow async function to be imported/exported 路 Issue #39 路 bytecodealliance/jco\">Allow async function to be imported/exported 路 Issue #39 路 bytecodealliance/jco</a></div><div class=\"message_embed_description\">There are certain cases where the host/guest implementation needs to pass an asynchronous function. Can this be supported in the JavaScript codegen even when the WIT definition has its signature as...</div></div></div>",
        "id": 418443399,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1706386509
    },
    {
        "content": "<p>the atomics solution mentioned in the issue would work for me since I already run my jco transpiled component in a worker, but it's important to note that Atomics.wait() is usually forbidden on the main thread</p>",
        "id": 418443873,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1706387007
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"550770\">Ramon Klass</span> <a href=\"#narrow/stream/409526-jco/topic/async.20functions.20for.20host.20implementations/near/418443873\">said</a>:</p>\n<blockquote>\n<p>the atomics solution mentioned in the issue would work for me since I already run my jco transpiled component in a worker, but it's important to note that Atomics.wait() is usually forbidden on the main thread</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"550770\">@Ramon Klass</span> I'd be curious to take a look at your design here, mind sharing a link to it please?</p>",
        "id": 423660973,
        "sender_full_name": "DougAnderson444 | PeerPiper.io",
        "timestamp": 1709054847
    }
]