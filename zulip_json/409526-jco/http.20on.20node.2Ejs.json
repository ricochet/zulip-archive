[
    {
        "content": "<p>In terms of APIs to implement, do we also have to implement <code>http</code> on Node.js? We're currently not tracking that in the jco issue tracker, but I can create an issue for that if we want to?</p>",
        "id": 397148850,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1697561651
    },
    {
        "content": "<p>asking out of ignorance/curiosity - if http is working on the web (serviceworker for inbound, fetch for outbound), is there any way to just run that without modification on node.js?</p>",
        "id": 397149171,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1697561790
    },
    {
        "content": "<p>Not that I'm aware of; they're fundamentally different APIs</p>",
        "id": 397150574,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1697562361
    },
    {
        "content": "<p>Or well, maybe fetch could actually work. But the server won't</p>",
        "id": 397150651,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1697562383
    },
    {
        "content": "<p>A part of the mandate of the WinterCG initiative is to create common ground between the various JavaScript targets, and make sure they can run the same workloads</p>",
        "id": 397150705,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1697562416
    },
    {
        "content": "<p>But somewhat unfortunately there is no public draft available yet for a common HTTP server interface</p>",
        "id": 397150750,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1697562444
    },
    {
        "content": "<p>(I'm assuming that folks involved may have started on private drafts since it is probably the single-most important interface - but that's just me speculating)</p>",
        "id": 397150900,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1697562505
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"344849\">Yoshua Wuyts</span> <a href=\"#narrow/stream/409526-jco/topic/http.20on.20node.2Ejs/near/397148850\">said</a>:</p>\n<blockquote>\n<p>In terms of APIs to implement, do we also have to implement <code>http</code> on Node.js? We're currently not tracking that in the jco issue tracker, but I can create an issue for that if we want to?</p>\n</blockquote>\n<p>I'm just going to create issues for this, and then we can tick off what we've already implemented</p>",
        "id": 397151099,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1697562604
    },
    {
        "content": "<p>Yeah there are subtle implementation differences between Node.js fetch and browser fetch, but it might work as a shared implementation, I'm not sure. Best not to assume though.</p>",
        "id": 397154809,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1697564117
    },
    {
        "content": "<p>Oh yeah, I guess one difference off the top of my head will be the way cookies are handled</p>",
        "id": 397155917,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1697564579
    },
    {
        "content": "<p>In the browser they're persisted between sessions; in Node.js I'm pretty certain they're ephemeral</p>",
        "id": 397155953,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1697564596
    },
    {
        "content": "<p>sounds good, thanks for filling me in</p>",
        "id": 397156250,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1697564712
    }
]