[
    {
        "content": "<p>Hi, what if I wanted to create a trace for every opcode that was run during an execution, does JCO support that? maybe I could use some debuger interface or something? <span aria-label=\"pray\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"pray\">:pray:</span></p>",
        "id": 404737085,
        "sender_full_name": "Mirror Mystic",
        "timestamp": 1701213867
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"668717\">@Mirror Mystic</span> you can use the <code>--tracing</code> option for this</p>",
        "id": 404738600,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1701214647
    },
    {
        "content": "<p>that will log all imported function calls for a given component in its transpiled output</p>",
        "id": 404738700,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1701214700
    },
    {
        "content": "<p>which for eg WASI corresponds to all the WASI operations performed</p>",
        "id": 404738714,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1701214716
    },
    {
        "content": "<p>yeah, I'm looking for something deeper then that, a trace for every opcode</p>",
        "id": 404739975,
        "sender_full_name": "Mirror Mystic",
        "timestamp": 1701215426
    },
    {
        "content": "<p>yeah that would be more engine-level debugging I think</p>",
        "id": 404740922,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1701216002
    },
    {
        "content": "<p>the Node.js or browser Wasm inspector should give you the same info you need here though for the most part against the core Wasm being executed</p>",
        "id": 404741178,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1701216088
    },
    {
        "content": "<p>sorry, i didn't get that last part</p>",
        "id": 404742449,
        "sender_full_name": "Mirror Mystic",
        "timestamp": 1701216689
    }
]