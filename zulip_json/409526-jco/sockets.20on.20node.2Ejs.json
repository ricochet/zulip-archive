[
    {
        "content": "<p>Yay! I managed to create a new topic!</p>",
        "id": 397192973,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1697583338
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"553681\">@Guy Bedford</span>  please let me know If I am heading in the right direction: <a href=\"https://github.com/bytecodealliance/jco/pull/214\">https://github.com/bytecodealliance/jco/pull/214</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/jco/pull/214\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/ac21b9c4ff06e9644671dce054b285046ae85a12\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f356565363136346364343131356132646530616161626130633865636465663934343163636330346633666534613663376265356339326366303438633565312f62797465636f6465616c6c69616e63652f6a636f2f70756c6c2f323134)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/jco/pull/214\" title=\"WIP: feat: add impl for node sockets by manekinekko · Pull Request #214 · bytecodealliance/jco\">WIP: feat: add impl for node sockets by manekinekko · Pull Request #214 · bytecodealliance/jco</a></div><div class=\"message_embed_description\">A work in progress PR that adds support for node sockets.</div></div></div>",
        "id": 397193090,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1697583406
    },
    {
        "content": "<p>@Wassim Chegham nice start that's definitely the right track!</p>",
        "id": 397193895,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1697583939
    },
    {
        "content": "<p>awesome! Thanks <span class=\"user-mention\" data-user-id=\"553681\">@Guy Bedford</span></p>",
        "id": 397263026,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1697619035
    },
    {
        "content": "<p>bless you people</p>",
        "id": 397263072,
        "sender_full_name": "Ralph",
        "timestamp": 1697619060
    },
    {
        "content": "<p>Q: are we supposed to write our own implementations for wasi-sockets, or use node:net, node:dgram, etc?</p>",
        "id": 397263348,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1697619167
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"268586\">Ralph</span> <a href=\"#narrow/stream/409526-jco/topic/sockets.20on.20node.2Ejs/near/397263072\">said</a>:</p>\n<blockquote>\n<p>bless you people</p>\n</blockquote>\n<p>Hi <span class=\"user-mention\" data-user-id=\"268586\">@Ralph</span> <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 397263390,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1697619188
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"653616\">Wassim Chegham</span> <a href=\"#narrow/stream/409526-jco/topic/sockets.20on.20node.2Ejs/near/397263348\">said</a>:</p>\n<blockquote>\n<p>Q: are we supposed to write our own implementations for wasi-sockets, or use node:net, node:dgram, etc?</p>\n</blockquote>\n<p>We should be reusing <code>node:net</code>, <code>node:dgram</code>, etc. for this. The way we're implementing this is by \"virtualizing\" the Wasi Preview 2 syscalls, backing them with Node's built-ins.</p>",
        "id": 397288667,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1697627577
    },
    {
        "content": "<p>Eventually the plan is to move these bindings from being a virtualized JS layer to the <a href=\"https://github.com/nodejs/uvwasi\">uvwasi</a> project directly. But that will require some work to implement, upstream, and validate. It's all C++, and we'd need to not only land this in <code>uvwasi</code> but also upstream it to Node.js proper. So we're essentially punting on that and thinking of it as just an optimization.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/nodejs/uvwasi\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/4c055ec2bfe6754391a0f9b075cadd1d1cafcb1c\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f333034333430323766313730336632346532316131363534653561653033366561316466303564653437326534313837383830623439326636636264636166662f6e6f64656a732f757677617369)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/nodejs/uvwasi\" title=\"GitHub - nodejs/uvwasi: WASI syscall API built atop libuv\">GitHub - nodejs/uvwasi: WASI syscall API built atop libuv</a></div><div class=\"message_embed_description\">WASI syscall API built atop libuv. Contribute to nodejs/uvwasi development by creating an account on GitHub.</div></div></div>",
        "id": 397289018,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1697627722
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"653616\">@Wassim Chegham</span> oh by the way, the <code>sockets</code> API is one of the biggest surface areas of Wasi (52 methods). Doing it all in a single PR might be a lot, so please feel free to like file multiple PRs. That might make it easier to validate, review, test, etc.</p>",
        "id": 397289357,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1697627850
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"344849\">@Yoshua Wuyts</span>  that was my understanding from what <span class=\"user-mention\" data-user-id=\"553681\">@Guy Bedford</span>  said on the call. I was double-checking ^_^</p>",
        "id": 397316976,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1697636815
    },
    {
        "content": "<p>yeah, that's exactly the approach - using the Node.js sync but streaming APIs where appropriate. When we have the asyncify work we will be able to call promise-based builtins, but for now perhaps we can see how far we can get while that work is still outstanding.</p>",
        "id": 397350726,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1697647531
    },
    {
        "content": "<p>the other stopgap we have for not having asyncify support in Node.js is the approach we use here to syncify async APIs - <a href=\"https://github.com/bytecodealliance/jco/blob/main/packages/preview2-shim/lib/http/wasi-http.js#L20\">https://github.com/bytecodealliance/jco/blob/main/packages/preview2-shim/lib/http/wasi-http.js#L20</a></p>",
        "id": 397353419,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1697648637
    },
    {
        "content": "<p>the asyncify work will be a little while out so we do just have to work around that for now</p>",
        "id": 397353487,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1697648653
    },
    {
        "content": "<p>is there a reason why IP addresses are typed as tuples?</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">type</span> <span class=\"nc\">ipv4</span><span class=\"o\">-</span><span class=\"n\">address</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">tuple</span><span class=\"o\">&lt;</span><span class=\"kt\">u8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">u8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">u8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">u8</span><span class=\"o\">&gt;</span>\n<span class=\"k\">type</span> <span class=\"nc\">ipv6</span><span class=\"o\">-</span><span class=\"n\">address</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">tuple</span><span class=\"o\">&lt;</span><span class=\"kt\">u16</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">u16</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">u16</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">u16</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">u16</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">u16</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">u16</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">u16</span><span class=\"o\">&gt;</span>\n</code></pre></div>\n<p>which translate to:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">Ipv4Address</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">number</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">number</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">number</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">number</span><span class=\"p\">];</span>\n<span class=\"n\">export</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">Ipv6Address</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">number</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">number</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">number</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">number</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">number</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">number</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">number</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">number</span><span class=\"p\">];</span>\n</code></pre></div>",
        "id": 397453867,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1697703320
    },
    {
        "content": "<p>follwing that interface, a localAdress object would look like:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">        </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">localAddress</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">          </span><span class=\"n\">tag</span>: <span class=\"nc\">sockets</span><span class=\"p\">.</span><span class=\"n\">network</span><span class=\"p\">.</span><span class=\"n\">IpAddressFamily</span><span class=\"p\">.</span><span class=\"n\">ipv4</span><span class=\"p\">,</span>\n<span class=\"w\">          </span><span class=\"n\">val</span>: <span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"n\">address</span>: <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">],</span>\n<span class=\"w\">            </span><span class=\"n\">port</span>: <span class=\"mi\">0</span><span class=\"p\">,</span>\n<span class=\"w\">          </span><span class=\"p\">},</span>\n<span class=\"w\">        </span><span class=\"p\">};</span>\n</code></pre></div>",
        "id": 397454381,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1697703507
    },
    {
        "content": "<p>is that what we are expecting?</p>",
        "id": 397454528,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1697703570
    },
    {
        "content": "<p>Yes in JS that's the representation of a tuple</p>",
        "id": 397540886,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1697733313
    },
    {
        "content": "<p>Great! thank you!</p>",
        "id": 397584962,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1697753855
    },
    {
        "content": "<p>I am trying to write integration tests for wasi-sockets (nodejs impl) inside of <code>./test/preview2.js</code>, but it looks like I am missing the <code>obj/</code> folder. I assumed this folder gets generate after building the projet. I tried to run <code>npm run build</code> from the root and I am getting these errors. Did I miss something?</p>\n<p><a href=\"/user_uploads/15107/DmkTiiX_1FU0Odd9xQey-30w/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/15107/DmkTiiX_1FU0Odd9xQey-30w/image.png\" title=\"image.png\"><img src=\"/user_uploads/15107/DmkTiiX_1FU0Odd9xQey-30w/image.png\"></a></div>",
        "id": 398248047,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1698140080
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"653616\">@Wassim Chegham</span> make sure you are on the latest Rust toolchain - <code>rustup update</code> and then with <code>wasm32-unknown-unknown</code> and <code>wasm32-wasi</code> targets installed. <code>npm install &amp;&amp; npm run build</code> should then be all you need.</p>",
        "id": 398331747,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1698168261
    },
    {
        "content": "<p>good catch <span class=\"user-mention\" data-user-id=\"553681\">@Guy Bedford</span> I was missing the wasm32-wasi target 🤦🏽 now it's building. Thanks</p>",
        "id": 398443720,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1698225193
    },
    {
        "content": "<p>I've updated <a href=\"https://github.com/bytecodealliance/jco/pull/214\">https://github.com/bytecodealliance/jco/pull/214</a> to match the latest WIT updates</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/jco/pull/214\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/5249d21f7133358700084e22325061d7bd92062c\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f316131613561313262353232393437666430666366323733663738363562333163366434326435613535633530353030633662313336373538613432366636642f62797465636f6465616c6c69616e63652f6a636f2f70756c6c2f323134)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/jco/pull/214\" title=\"WIP: feat: add impl for node sockets by manekinekko · Pull Request #214 · bytecodealliance/jco\">WIP: feat: add impl for node sockets by manekinekko · Pull Request #214 · bytecodealliance/jco</a></div><div class=\"message_embed_description\">A work in progress PR that adds support for node sockets.\nCloses #154\nDone\n\n instance-network.instance-network\n ip-name-lookup.resolve-addresses\n ip-name-lookup.resolve-next-address\n ip-name-lookup...</div></div></div>",
        "id": 398526188,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1698252567
    },
    {
        "content": "<p>Also, <span class=\"user-mention\" data-user-id=\"553681\">@Guy Bedford</span>  I've changed the impl to use node.js's internal <em>libuv</em> bindings (tcp_wrap). That was the only way for us to be able to implement the specified WIT ressources.</p>",
        "id": 398526547,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1698252693
    },
    {
        "content": "<p><a href=\"https://github.com/bytecodealliance/jco/pull/214/files#diff-73e7565cdc5599fda2d180adcdb08293c5116cfb26eef129343727c94c0f4052R15-R20\">https://github.com/bytecodealliance/jco/pull/214/files#diff-73e7565cdc5599fda2d180adcdb08293c5116cfb26eef129343727c94c0f4052R15-R20</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/jco/pull/214/files#diff-73e7565cdc5599fda2d180adcdb08293c5116cfb26eef129343727c94c0f4052R15-R20\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/0cca35bad3d333b25f2d1eccc5b4de1854e00a72\\/68747470733a2f2f617661746172732e67697468756275736572636f6e74656e742e636f6d2f752f313639393335373f733d34303026763d34)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/jco/pull/214/files#diff-73e7565cdc5599fda2d180adcdb08293c5116cfb26eef129343727c94c0f4052R15-R20\" title=\"WIP: feat: add impl for node sockets by manekinekko · Pull Request #214 · bytecodealliance/jco\">WIP: feat: add impl for node sockets by manekinekko · Pull Request #214 · bytecodealliance/jco</a></div><div class=\"message_embed_description\">A work in progress PR that adds support for node sockets.\nCloses #154\nDone\n\n instance-network.instance-network\n ip-name-lookup.resolve-addresses\n ip-name-lookup.resolve-next-address\n ip-name-lookup...</div></div></div>",
        "id": 398526697,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1698252734
    },
    {
        "content": "<p>nice, I guess that will mean we don't support other JS runtimes like Deno or Bun, but we can investigate deno and Bun-specific implementations instead I think then?</p>",
        "id": 398527166,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1698252918
    },
    {
        "content": "<p>But (yes there is a but), I could not figure out what should be the impl of:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">accept</span>: <span class=\"nc\">func</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">result</span><span class=\"o\">&lt;</span><span class=\"n\">tuple</span><span class=\"o\">&lt;</span><span class=\"n\">tcp</span><span class=\"o\">-</span><span class=\"n\">socket</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">input</span><span class=\"o\">-</span><span class=\"n\">stream</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">output</span><span class=\"o\">-</span><span class=\"n\">stream</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"o\">-</span><span class=\"n\">code</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n<span class=\"n\">receive</span><span class=\"o\">-</span><span class=\"n\">buffer</span><span class=\"o\">-</span><span class=\"n\">size</span>: <span class=\"nc\">func</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">result</span><span class=\"o\">&lt;</span><span class=\"kt\">u64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"o\">-</span><span class=\"n\">code</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n<span class=\"n\">set</span><span class=\"o\">-</span><span class=\"n\">receive</span><span class=\"o\">-</span><span class=\"n\">buffer</span><span class=\"o\">-</span><span class=\"n\">size</span>: <span class=\"nc\">func</span><span class=\"p\">(</span><span class=\"n\">value</span>: <span class=\"kt\">u64</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">result</span><span class=\"o\">&lt;</span><span class=\"n\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"o\">-</span><span class=\"n\">code</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n<span class=\"n\">send</span><span class=\"o\">-</span><span class=\"n\">buffer</span><span class=\"o\">-</span><span class=\"n\">size</span>: <span class=\"nc\">func</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">result</span><span class=\"o\">&lt;</span><span class=\"kt\">u64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"o\">-</span><span class=\"n\">code</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n<span class=\"n\">set</span><span class=\"o\">-</span><span class=\"n\">send</span><span class=\"o\">-</span><span class=\"n\">buffer</span><span class=\"o\">-</span><span class=\"n\">size</span>: <span class=\"nc\">func</span><span class=\"p\">(</span><span class=\"n\">value</span>: <span class=\"kt\">u64</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">result</span><span class=\"o\">&lt;</span><span class=\"n\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"o\">-</span><span class=\"n\">code</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n<span class=\"n\">unicast</span><span class=\"o\">-</span><span class=\"n\">hop</span><span class=\"o\">-</span><span class=\"n\">limit</span>: <span class=\"nc\">func</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">result</span><span class=\"o\">&lt;</span><span class=\"kt\">u8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"o\">-</span><span class=\"n\">code</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n<span class=\"n\">set</span><span class=\"o\">-</span><span class=\"n\">unicast</span><span class=\"o\">-</span><span class=\"n\">hop</span><span class=\"o\">-</span><span class=\"n\">limit</span>: <span class=\"nc\">func</span><span class=\"p\">(</span><span class=\"n\">value</span>: <span class=\"kt\">u8</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">result</span><span class=\"o\">&lt;</span><span class=\"n\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"o\">-</span><span class=\"n\">code</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n</code></pre></div>",
        "id": 398527172,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1698252922
    },
    {
        "content": "<p>it seems to me like the correct approach</p>",
        "id": 398527180,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1698252925
    },
    {
        "content": "<p>there have been a number of changes to the sockets API</p>",
        "id": 398527300,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1698252966
    },
    {
        "content": "<p>it can be worth keeping an eye on <a href=\"https://github.com/bytecodealliance/wasmtime/pulls?q=is%3Apr+sockets+is%3Aclosed\">https://github.com/bytecodealliance/wasmtime/pulls?q=is%3Apr+sockets+is%3Aclosed</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pulls?q=is%3Apr+sockets+is%3Aclosed\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/6d514fc8c0c528462a708309bcb8b443fadf974d\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f333962663735643162313061363135376332666563653631636439323831356334623265353937316439643566656239663338623237646633376466666532652f62797465636f6465616c6c69616e63652f7761736d74696d65)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pulls?q=is%3Apr+sockets+is%3Aclosed\" title=\"Pull requests · bytecodealliance/wasmtime\">Pull requests · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A fast and secure runtime for WebAssembly. Contribute to bytecodealliance/wasmtime development by creating an account on GitHub.</div></div></div>",
        "id": 398527329,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1698252981
    },
    {
        "content": "<p>yes, I went through them and updated the impl</p>",
        "id": 398527343,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1698252986
    },
    {
        "content": "<p>to see the history and upcoming changes as well</p>",
        "id": 398527363,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1698252994
    },
    {
        "content": "<p>those seem like network configurations</p>",
        "id": 398527444,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1698253028
    },
    {
        "content": "<p>Will do</p>",
        "id": 398527445,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1698253029
    },
    {
        "content": "<p>perhaps if we don't have those hooks in Node.js we do just need noops</p>",
        "id": 398527471,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1698253037
    },
    {
        "content": "<p>it's looking really great though, congrats</p>",
        "id": 398527516,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1698253054
    },
    {
        "content": "<p>the resources update is the current big one I'm working on for HTTP</p>",
        "id": 398527562,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1698253076
    },
    {
        "content": "<p>I guess we will need similar updates on sockets</p>",
        "id": 398527585,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1698253083
    },
    {
        "content": "<p>perhaps have a look at my next HTTP PR I'm hoping to finish up today or tomorrow</p>",
        "id": 398527626,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1698253094
    },
    {
        "content": "<p>Thanks! </p>\n<p><span class=\"user-mention silent\" data-user-id=\"553681\">Guy Bedford</span> <a href=\"#narrow/stream/409526-jco/topic/sockets.20on.20node.2Ejs/near/398527516\">said</a>:</p>\n<blockquote>\n<p>it's looking really great though, congrats</p>\n</blockquote>\n<p>It's missing reads and writes thouhg <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 398527631,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1698253096
    },
    {
        "content": "<p>right, perhaps that will be related to the streams updates then</p>",
        "id": 398527669,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1698253112
    },
    {
        "content": "<p>In my last commit, I update the impl to remove all the IDs <a href=\"https://github.com/bytecodealliance/jco/pull/214/commits/54ab5cc3fe948f547f2f107cf1cd03f77d388e04\">https://github.com/bytecodealliance/jco/pull/214/commits/54ab5cc3fe948f547f2f107cf1cd03f77d388e04</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/jco/pull/214/commits/54ab5cc3fe948f547f2f107cf1cd03f77d388e04\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/0cca35bad3d333b25f2d1eccc5b4de1854e00a72\\/68747470733a2f2f617661746172732e67697468756275736572636f6e74656e742e636f6d2f752f313639393335373f733d34303026763d34)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/jco/pull/214/commits/54ab5cc3fe948f547f2f107cf1cd03f77d388e04\" title=\"WIP: feat: add impl for node sockets by manekinekko · Pull Request #214 · bytecodealliance/jco\">WIP: feat: add impl for node sockets by manekinekko · Pull Request #214 · bytecodealliance/jco</a></div><div class=\"message_embed_description\">A work in progress PR that adds support for node sockets.\nCloses #154\nDone\n\n instance-network.instance-network\n ip-name-lookup.resolve-addresses\n ip-name-lookup.resolve-next-address\n ip-name-lookup...</div></div></div>",
        "id": 398527795,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1698253173
    },
    {
        "content": "<p>I am planning to start working on upd next  <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 398528275,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1698253319
    },
    {
        "content": "<p>ah nice to see you figured that out</p>",
        "id": 398528388,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1698253338
    },
    {
        "content": "<p>if you want to verify the interface against the types in <a href=\"https://github.com/bytecodealliance/jco/blob/main/packages/preview2-shim/types/interfaces/wasi-sockets-tcp.d.ts\">https://github.com/bytecodealliance/jco/blob/main/packages/preview2-shim/types/interfaces/wasi-sockets-tcp.d.ts</a> that should roughly match what is the expected shape</p>",
        "id": 398528565,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1698253392
    },
    {
        "content": "<p>Yes. That what I did. I see you updated the type def <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 398529182,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1698253631
    },
    {
        "content": "<p>yeah it was a bunch of diffs, thank you for figuring it out there, that wasn't obvious I know</p>",
        "id": 398529555,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1698253790
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"553681\">Guy Bedford</span> <a href=\"#narrow/stream/409526-jco/topic/sockets.20on.20node.2Ejs/near/398529555\">said</a>:</p>\n<blockquote>\n<p>yeah it was a bunch of diffs, thank you for figuring it out there, that wasn't obvious I know</p>\n</blockquote>\n<p>haha! I am used to reading diffs <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 398564273,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1698270039
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"653616\">Wassim Chegham</span> <a href=\"#narrow/stream/409526-jco/topic/sockets.20on.20node.2Ejs/near/398528275\">said</a>:</p>\n<blockquote>\n<p>I am planning to start working on upd next  <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>\n</blockquote>\n<p>obviously I meant UDP 🤦🏽</p>",
        "id": 398564337,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1698270073
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"653616\">@Wassim Chegham</span> I've been implementing private fields on the other classes, based on what you were doing</p>",
        "id": 398778788,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1698360707
    },
    {
        "content": "<p>thanks for the idea on that one!</p>",
        "id": 398778792,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1698360711
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"553681\">@Guy Bedford</span> I applied the latest changes from the main branch to my WIP branch and the FS test is failing because of the new <code>Symbol.dispose</code>: <code>TypeError: stream[Symbol.dispose] is not a function</code>.  Any idea why is that?<br>\n<a href=\"/user_uploads/15107/5rQ4_Am8WBbXowyuJWbyJFNf/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/15107/5rQ4_Am8WBbXowyuJWbyJFNf/image.png\" title=\"image.png\"><img src=\"/user_uploads/15107/5rQ4_Am8WBbXowyuJWbyJFNf/image.png\"></a></div>",
        "id": 400205057,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1699045458
    },
    {
        "content": "<p>perhaps try deleting node_modules and reinstalling?</p>",
        "id": 400205098,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1699045489
    },
    {
        "content": "<p>still failing</p>",
        "id": 400205173,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1699045544
    },
    {
        "content": "<p>can I like <code>cargo xtask</code> clean build?</p>",
        "id": 400205240,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1699045572
    },
    {
        "content": "<p>sounds like it might be a bug only exposed on your branch then</p>",
        "id": 400205248,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1699045577
    },
    {
        "content": "<p>would you like to pair on it?</p>",
        "id": 400205299,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1699045618
    },
    {
        "content": "<p>sure. Let me switch computer. WIll ping you back.</p>",
        "id": 400205471,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1699045724
    },
    {
        "content": "<p>Sent you a DM on Twitter</p>",
        "id": 400206105,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1699046116
    },
    {
        "content": "<blockquote>\n<p>Adds a new --jco-debug option to jco run which doesn't delete the temporary files (so they can be debugged) and also outputs the trace calls. (<a href=\"https://github.com/bytecodealliance/jco/pull/266\">https://github.com/bytecodealliance/jco/pull/266</a>)</p>\n</blockquote>\n<p>Thank you so much <span class=\"user-mention\" data-user-id=\"553681\">@Guy Bedford</span>  for this! It will save me a lot of headaches. I was currently basically manually compiling each test program and copying it around so I could debug it</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">jco</span><span class=\"p\">.</span><span class=\"n\">js</span><span class=\"w\"> </span><span class=\"n\">new</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">submodules</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">preview2_udp_connect</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">command</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">__test</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">jco</span><span class=\"p\">.</span><span class=\"n\">js</span><span class=\"w\"> </span><span class=\"n\">transpile</span><span class=\"w\"> </span><span class=\"n\">__test</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\">  </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span>\n</code></pre></div>",
        "id": 402652626,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1700213255
    },
    {
        "content": "<p>Yay! Made my 1st conformance test pass!!<br>\n<a href=\"/user_uploads/15107/Xz2Y64q6J-v5eD646LzgTtkd/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/15107/Xz2Y64q6J-v5eD646LzgTtkd/image.png\" title=\"image.png\"><img src=\"/user_uploads/15107/Xz2Y64q6J-v5eD646LzgTtkd/image.png\"></a></div>",
        "id": 402654652,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1700213701
    },
    {
        "content": "<p>Moar conformace tests passing for wasi-socket<br>\n<a href=\"/user_uploads/15107/-RlhpHOtjNPPPXUNqGxiSZO5/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/15107/-RlhpHOtjNPPPXUNqGxiSZO5/image.png\" title=\"image.png\"><img src=\"/user_uploads/15107/-RlhpHOtjNPPPXUNqGxiSZO5/image.png\"></a></div>",
        "id": 403804825,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1700751349
    },
    {
        "content": "<p>Hi, I just opened an issue in the wasi-socket repo about a question I have, would love if any of you can help <a href=\"https://github.com/WebAssembly/wasi-sockets/issues/82\">https://github.com/WebAssembly/wasi-sockets/issues/82</a> (cc <span class=\"user-mention\" data-user-id=\"253992\">@Pat Hickey</span> )</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/wasi-sockets/issues/82\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/4e6077d4ea9e698b45bf7cc622158c566d01362a\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f313261303261336261306335336565616533356561303131303835326663646438323433323963353861303661333836656566643665613837306134366436612f576562417373656d626c792f776173692d736f636b6574732f6973737565732f3832)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/wasi-sockets/issues/82\" title=\"Should socket.local_address() throw an invalid-state error? · Issue #82 · WebAssembly/wasi-sockets\">Should socket.local_address() throw an invalid-state error? · Issue #82 · WebAssembly/wasi-sockets</a></div><div class=\"message_embed_description\">Hi, I am currently implementing wasi-sockets for jco, and I am encountering an unspecificed behavior. The test_tcp_connect_dual_stack test inside of the test programm preview2_tcp_connect.rs, creat...</div></div></div>",
        "id": 403938736,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1700821195
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"553681\">@Guy Bedford</span> as discussed yesterday, the wasi-sockets impl for node.js PR is ready for merge: <a href=\"https://github.com/bytecodealliance/jco/pull/214\">https://github.com/bytecodealliance/jco/pull/214</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/jco/pull/214\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/5ff1097c53d0b9720e1cfd3b9f3a6c87f7ace2b8\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f666232393132343465666339333038343966323933383165306138616362306532363336383564376335353133356366633562326631373766346533316638662f62797465636f6465616c6c69616e63652f6a636f2f70756c6c2f323134)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/jco/pull/214\" title=\"feat: add impl for node sockets (wip) by manekinekko · Pull Request #214 · bytecodealliance/jco\">feat: add impl for node sockets (wip) by manekinekko · Pull Request #214 · bytecodealliance/jco</a></div><div class=\"message_embed_description\">A work in progress PR that adds support for node sockets.\nCloses #154 (check issue for progress)</div></div></div>",
        "id": 404658858,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1701185036
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"553681\">@Guy Bedford</span> as discussed yesterday, the wasi-sockets impl for node.js PR is ready for merge: <a href=\"https://github.com/bytecodealliance/jco/pull/214\">https://github.com/bytecodealliance/jco/pull/214</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/jco/pull/214\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/5ff1097c53d0b9720e1cfd3b9f3a6c87f7ace2b8\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f666232393132343465666339333038343966323933383165306138616362306532363336383564376335353133356366633562326631373766346533316638662f62797465636f6465616c6c69616e63652f6a636f2f70756c6c2f323134)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/jco/pull/214\" title=\"feat: add impl for node sockets (wip) by manekinekko · Pull Request #214 · bytecodealliance/jco\">feat: add impl for node sockets (wip) by manekinekko · Pull Request #214 · bytecodealliance/jco</a></div><div class=\"message_embed_description\">A work in progress PR that adds support for node sockets.\nCloses #154 (check issue for progress)</div></div></div>",
        "id": 404658865,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1701185037
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"553681\">@Guy Bedford</span>  The wasi-sockets UDP implem is fully complete (minus a few edge cases - see TODOs in the code) <a href=\"https://github.com/bytecodealliance/jco/pull/306\">https://github.com/bytecodealliance/jco/pull/306</a> - I am planning to tackle wasi-sockets TCP next.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/jco/pull/306\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/dc553ba60d820c8175e94e84bed9141f5e3401e6\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f333366613638366637643733326333363735313839323930633765313937343333396566396234383336646335333835316239616363383361373562643035622f62797465636f6465616c6c69616e63652f6a636f2f70756c6c2f333036)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/jco/pull/306\" title=\"WIP: move UDP sockets to worker thread by manekinekko · Pull Request #306 · bytecodealliance/jco\">WIP: move UDP sockets to worker thread by manekinekko · Pull Request #306 · bytecodealliance/jco</a></div><div class=\"message_embed_description\">preview2_udp_bind\n\n test_udp_bind_ephemeral_port(&amp;net, IpAddress::IPV4_LOOPBACK);\n test_udp_bind_ephemeral_port(&amp;net, IpAddress::IPV6_LOOPBACK);\n test_udp_bind_ephemeral_port(&amp;net, IpAddress::IPV4_...</div></div></div>",
        "id": 407516817,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1702398895
    },
    {
        "content": "<p>yay!!!!</p>",
        "id": 407517098,
        "sender_full_name": "Ralph",
        "timestamp": 1702398980
    },
    {
        "content": "<p>fantastic, will review shortly</p>",
        "id": 407517530,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1702399131
    },
    {
        "content": "<p>Heya <span class=\"user-mention\" data-user-id=\"553681\">@Guy Bedford</span>  is there an issue with the recent changes on main? The test runner is now broken. Do we now need to build the tests separatly?</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">[</span><span class=\"n\">cause</span><span class=\"p\">]</span>: <span class=\"o\">'</span><span class=\"na\">Unable</span> <span class=\"nc\">to</span><span class=\"w\"> </span><span class=\"n\">read</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"n\">x1B</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"n\">m</span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">rundir</span><span class=\"o\">/</span><span class=\"n\">preview2_udp_bind</span><span class=\"p\">.</span><span class=\"n\">component</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"err\">\\</span><span class=\"n\">x1B</span><span class=\"p\">[</span><span class=\"mi\">22</span><span class=\"n\">m</span><span class=\"o\">'</span>\n</code></pre></div>\n<p><a href=\"/user_uploads/15107/_32uOS70jbZpQ-vcI4MXGZ2V/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/15107/_32uOS70jbZpQ-vcI4MXGZ2V/image.png\" title=\"image.png\"><img src=\"/user_uploads/15107/_32uOS70jbZpQ-vcI4MXGZ2V/image.png\"></a></div>",
        "id": 407935517,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1702551696
    },
    {
        "content": "<p>run <code>cargo xtask generate tests</code></p>",
        "id": 408006367,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1702573808
    },
    {
        "content": "<p>anyone knows why socket.getRecvbufferSize() would report a different value than the one is set. Eg. in the <a href=\"http://preview2_udp_sockopts.rs\">preview2_udp_sockopts.rs</a> we are setting a buffer size of 0x10000 (66kb) but when reading the value, we get 213kb?</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">crates</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"o\">-</span><span class=\"n\">programs</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">preview2_udp_sockopts</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">61</span>:<span class=\"mi\">5</span>:\n<span class=\"nc\">assertion</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">left</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">right</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">failed</span>\n<span class=\"w\">  </span><span class=\"n\">left</span>: <span class=\"mi\">212992</span>\n<span class=\"w\"> </span><span class=\"n\">right</span>: <span class=\"mi\">65536</span>\n<span class=\"n\">note</span>: <span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span>\n</code></pre></div>\n<p><a href=\"/user_uploads/15107/01D5d3mqdxLEQr2KJYdbBkBk/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/15107/01D5d3mqdxLEQr2KJYdbBkBk/image.png\" title=\"image.png\"><img src=\"/user_uploads/15107/01D5d3mqdxLEQr2KJYdbBkBk/image.png\"></a></div>",
        "id": 408057893,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1702592984
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"653616\">@Wassim Chegham</span> perhaps you need to conver the BigInt to a number when setting it</p>",
        "id": 408059492,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1702593774
    },
    {
        "content": "<p><code>Number(size)</code></p>",
        "id": 408059503,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1702593780
    },
    {
        "content": "<p>Sure. I tried that but that wasn't the issue <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span><br>\n<a href=\"/user_uploads/15107/LMbQH4GAQhmOHvf2cZVA1m9n/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/15107/LMbQH4GAQhmOHvf2cZVA1m9n/image.png\" title=\"image.png\"><img src=\"/user_uploads/15107/LMbQH4GAQhmOHvf2cZVA1m9n/image.png\"></a></div>",
        "id": 408059630,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1702593848
    },
    {
        "content": "<p>While browsing the Internet, I found this affirmation: \"In this system, by default, each socket will get a receive buffer with a size of 213 KB. Additionally, the rmem_max value of 213 KB restricts the maximum allowable receive buffer size to 213 KB during socket creation.\"<br>\n<a href=\"https://www.baeldung.com/linux/udp-socket-buffer\">https://www.baeldung.com/linux/udp-socket-buffer</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://www.baeldung.com/linux/udp-socket-buffer\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/f9aa8a90774dd144d73fa8df41eb860191e47900\\/68747470733a2f2f7777772e6261656c64756e672e636f6d2f77702d636f6e74656e742f75706c6f6164732f73697465732f322f323032322f31312f4c696e75782d46656174757265642d496d6167652d30392d6b2e706e67)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://www.baeldung.com/linux/udp-socket-buffer\" title=\"UDP Socket Buffer in Linux | Baeldung on Linux\">UDP Socket Buffer in Linux | Baeldung on Linux</a></div><div class=\"message_embed_description\">Learn about UDP sockets in Linux.</div></div></div>",
        "id": 408059766,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1702593943
    },
    {
        "content": "<p>so does this mean that setting a value has no effect?!</p>",
        "id": 408059851,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1702593979
    },
    {
        "content": "<p>so I guess it's something that should have an isolated replication</p>",
        "id": 408059879,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1702593994
    },
    {
        "content": "<p>trying now... will report</p>",
        "id": 408059934,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1702594021
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">var</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">new</span><span class=\"w\"> </span><span class=\"n\">dgram</span><span class=\"p\">.</span><span class=\"n\">Socket</span><span class=\"p\">(</span><span class=\"o\">'</span><span class=\"na\">udp4</span><span class=\"o\">'</span><span class=\"p\">)</span>\n<span class=\"n\">s</span><span class=\"p\">.</span><span class=\"n\">bind</span><span class=\"p\">();</span>\n<span class=\"n\">s</span><span class=\"p\">.</span><span class=\"n\">setRecvBufferSize</span><span class=\"p\">(</span><span class=\"mi\">1000</span><span class=\"p\">);</span>\n<span class=\"n\">s</span><span class=\"p\">.</span><span class=\"n\">getRecvBufferSize</span><span class=\"p\">()</span>\n</code></pre></div>\n<p>definitely seems to work for me</p>",
        "id": 408060031,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1702594080
    },
    {
        "content": "<p>and <code>65536</code> also works</p>",
        "id": 408060130,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1702594119
    },
    {
        "content": "<p>perhaps enable the worker-io call logging to verify its definitely being set</p>",
        "id": 408060152,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1702594135
    },
    {
        "content": "<p>or log around the call sites for the set and get</p>",
        "id": 408060173,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1702594146
    },
    {
        "content": "<p>or maybe the replication is more specific and is socket-specific</p>",
        "id": 408060203,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1702594162
    },
    {
        "content": "<p>interesting. Your exact code gave me a EBADF error.</p>",
        "id": 408060396,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1702594274
    },
    {
        "content": "<p>Hummm<br>\n<a href=\"/user_uploads/15107/NgoxRLpbD8TMMYDujCT57CBQ/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/15107/NgoxRLpbD8TMMYDujCT57CBQ/image.png\" title=\"image.png\"><img src=\"/user_uploads/15107/NgoxRLpbD8TMMYDujCT57CBQ/image.png\"></a></div>",
        "id": 408060572,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1702594359
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"553681\">@Guy Bedford</span>  can you try this code please?</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">Socket</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"n\">from</span><span class=\"w\"> </span><span class=\"s\">\"node:dgram\"</span><span class=\"p\">;</span>\n<span class=\"n\">var</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">new</span><span class=\"w\"> </span><span class=\"n\">Socket</span><span class=\"p\">(</span><span class=\"o\">'</span><span class=\"na\">udp4</span><span class=\"o\">'</span><span class=\"p\">)</span>\n<span class=\"n\">s</span><span class=\"p\">.</span><span class=\"n\">bind</span><span class=\"p\">(()</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">console</span><span class=\"p\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"o\">'</span><span class=\"na\">set</span><span class=\"w\"> </span><span class=\"mi\">1000</span><span class=\"o\">'</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">s</span><span class=\"p\">.</span><span class=\"n\">setRecvBufferSize</span><span class=\"p\">(</span><span class=\"mi\">1000</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">console</span><span class=\"p\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"o\">'</span><span class=\"na\">get</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"p\">.</span><span class=\"n\">getRecvBufferSize</span><span class=\"p\">())</span>\n<span class=\"p\">});</span>\n</code></pre></div>\n<p>I get this on WSL:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"mi\">1000</span>\n<span class=\"n\">get</span><span class=\"w\"> </span><span class=\"mi\">2304</span>\n</code></pre></div>",
        "id": 408060614,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1702594383
    },
    {
        "content": "<p>so on my machine, I'm getting the same value in <code>get</code></p>",
        "id": 408060680,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1702594435
    },
    {
        "content": "<p>on that exact case</p>",
        "id": 408060684,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1702594438
    },
    {
        "content": "<p>macOS?</p>",
        "id": 408060732,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1702594448
    },
    {
        "content": "<p>so perhaps this is system specific or something? are you on Windows?</p>",
        "id": 408060733,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1702594448
    },
    {
        "content": "<p>Yes, WSL (ubuntu)</p>",
        "id": 408060756,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1702594460
    },
    {
        "content": "<p>it might be specific to that environment somehow, I'm not sure</p>",
        "id": 408060785,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1702594476
    },
    {
        "content": "<p>ok will add a comment and push so that CI runs</p>",
        "id": 408060822,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1702594498
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"mi\">1000</span>\n<span class=\"n\">get</span><span class=\"w\"> </span><span class=\"mi\">1000</span>\n</code></pre></div>",
        "id": 408060827,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1702594501
    },
    {
        "content": "<p>Heya. So I've submitted a bunch of PRs that are migrating TCP impl to worker thread:</p>\n<ul>\n<li><a href=\"https://github.com/bytecodealliance/jco/pull/316\">https://github.com/bytecodealliance/jco/pull/316</a></li>\n<li><a href=\"https://github.com/bytecodealliance/jco/pull/319\">https://github.com/bytecodealliance/jco/pull/319</a></li>\n<li><a href=\"https://github.com/bytecodealliance/jco/pull/320\">https://github.com/bytecodealliance/jco/pull/320</a><br>\nThese PR also fix 3 test programs (out of 5). </li>\n</ul>\n<p>I am tracking the remaining tests to be fixed in <a href=\"https://github.com/bytecodealliance/jco/issues/315\">https://github.com/bytecodealliance/jco/issues/315</a>. Will work on it over the weekend (once 320 is merged).</p>\n<p>So now I am gonna get some Zzzzzzzzz <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/jco/issues/315\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/e24aa23e046f5db0f9f07674b24493ea1800170a\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f313064313963386463666463646133616433333034343139653362383731646131376636323866326537366636363732656162326364666138656539643061322f62797465636f6465616c6c69616e63652f6a636f2f6973737565732f333135)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/jco/issues/315\" title=\"Migrate current wasi-sockets TCP impl to worker thread · Issue #315 · bytecodealliance/jco\">Migrate current wasi-sockets TCP impl to worker thread · Issue #315 · bytecodealliance/jco</a></div><div class=\"message_embed_description\">✅preview2_tcp_bind ✅ preview2_tcp_sockopts ✅ preview2_tcp_states ❌ preview2_tcp_connect ❌ preview2_tcp_sample_application Closes #154</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/jco/pull/316\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/7d1d25741e51e9b73964f525e550f244e2c8c606\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f653130333437626633633736326337353632366532303164356532633063646235643030383731336233303564343937346466366463383432343838613136632f62797465636f6465616c6c69616e63652f6a636f2f70756c6c2f333136)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/jco/pull/316\" title=\"chore: migrate wasi-sockets tcp to worker thread by manekinekko · Pull Request #316 · bytecodealliance/jco\">chore: migrate wasi-sockets tcp to worker thread by manekinekko · Pull Request #316 · bytecodealliance/jco</a></div><div class=\"message_embed_description\">✅preview2_tcp_bind\n ❌  preview2_tcp_connect\n ❌ preview2_tcp_sample_application\n ❌ preview2_tcp_sockopts\n ❌ preview2_tcp_states\n\n* Failing tests are due to missing stream impl\nCloses #315</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/jco/pull/319\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/46abb4ae51f5a1b1248f336a8b76f1addb147730\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f393264643130353361306364343834656464376634303036396562393233613966383464353836356138343531373563643735616463623464336133306262622f62797465636f6465616c6c69616e63652f6a636f2f70756c6c2f333139)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/jco/pull/319\" title=\"chore: fix tcp lint by manekinekko · Pull Request #319 · bytecodealliance/jco\">chore: fix tcp lint by manekinekko · Pull Request #319 · bytecodealliance/jco</a></div><div class=\"message_embed_description\">JavaScript tooling for working with WebAssembly Components - chore: fix tcp lint by manekinekko · Pull Request #319 · bytecodealliance/jco</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/jco/pull/320\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/7d2d6840af121c25fcc8d4a900a31c184d03edad\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f316165393664393032623763373632303033393164376663653339646639613631656163653262313733623532653866303534386264366665373530366233652f62797465636f6465616c6c69616e63652f6a636f2f70756c6c2f333230)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/jco/pull/320\" title=\"chore: preview2_tcp_sockopts passing by manekinekko · Pull Request #320 · bytecodealliance/jco\">chore: preview2_tcp_sockopts passing by manekinekko · Pull Request #320 · bytecodealliance/jco</a></div><div class=\"message_embed_description\">Both preview2_tcp_states and preview2_tcp_sockopts are passing.\nRelated #315</div></div></div>",
        "id": 408271943,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1702682893
    },
    {
        "content": "<p>amazing!!!! thank you Wassim this is phenomenal progress, and yes please get some rest there!</p>",
        "id": 408273718,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1702684244
    },
    {
        "content": "<p>Just submitted a new PR that makes <code>preview2_tcp_connect</code>  pass! <a href=\"https://github.com/bytecodealliance/jco/pull/321\">https://github.com/bytecodealliance/jco/pull/321</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/jco/pull/321\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/0913019a7f737b679f5938e60460ab02f8528f94\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f376535656434363432313838373135353331316631656430653662623264303030656266316233333665323037646435316161643664353765346562386566302f62797465636f6465616c6c69616e63652f6a636f2f70756c6c2f333231)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/jco/pull/321\" title=\"chore: preview2_tcp_connect passing by manekinekko · Pull Request #321 · bytecodealliance/jco\">chore: preview2_tcp_connect passing by manekinekko · Pull Request #321 · bytecodealliance/jco</a></div><div class=\"message_embed_description\">Related #315</div></div></div>",
        "id": 408396505,
        "sender_full_name": "Wassim Chegham",
        "timestamp": 1702778441
    }
]