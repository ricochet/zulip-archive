[
    {
        "content": "<p>Hey all, been working on support for the new WIT feature gating functionality -- it's required a bunch of updates (even further than what was added just last week), and I'm trying to add a test, etc.</p>\n<p>Would love anyone with opinions/comments to take a look at the draft PR:</p>\n<p><a href=\"https://github.com/bytecodealliance/jco/pull/459\">https://github.com/bytecodealliance/jco/pull/459</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/jco/pull/459\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/9192e3c347a4b5c8952ea39098404540e5a50d4f/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f633765356163666661663764373438373262626633336134386233313139366339643964353635396366353561653734396631626133383932376439316661612f62797465636f6465616c6c69616e63652f6a636f2f70756c6c2f343539&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/jco/pull/459\" title=\"feat: support semver aware exclusions by vados-cosmonic · Pull Request #459 · bytecodealliance/jco\">feat: support semver aware exclusions by vados-cosmonic · Pull Request #459 · bytecodealliance/jco</a></div><div class=\"message_embed_description\">This PR updates jco to support the @since, @after and @unstable annotations as implemented by the upstream Rust tooling.\nCurrently there are a few issues left to address:\n\n We likely need an upstre...</div></div></div>",
        "id": 448346215,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1719843468
    },
    {
        "content": "<p>Thanks for working on this! I've left some comments in the PR.</p>",
        "id": 448661067,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1719940611
    },
    {
        "content": "<p>Hey all -- made some progress here, but I think I'm stuck. </p>\n<p>I have two tests that do what they're supposed to, and one that doesn't -- in particular <code>@since(0.2.2)</code> is not being removed from a package that is at <code>@0.2.1</code> -- and the <code>Stability</code> values I'm getting from the functions are all actually <code>Unknown</code> when I'd expect them to be marked with versions</p>",
        "id": 450203702,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1720539322
    },
    {
        "content": "<p>The PR is updated (it seems to be steadily growing...) but the relevant wit is:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"p\">:</span><span class=\"nc\">feature</span><span class=\"o\">-</span><span class=\"n\">gates</span><span class=\"o\">@</span><span class=\"mf\">0.2.1</span><span class=\"p\">;</span>\n\n<span class=\"n\">interface</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"n\">a</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">();</span>\n\n<span class=\"w\">  </span><span class=\"o\">@</span><span class=\"n\">since</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">0.2.1</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"n\">b</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">();</span>\n\n<span class=\"w\">  </span><span class=\"o\">@</span><span class=\"n\">since</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">0.2.2</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"n\">c</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">();</span>\n\n<span class=\"w\">  </span><span class=\"o\">@</span><span class=\"n\">unstable</span><span class=\"p\">(</span><span class=\"n\">feature</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fancier</span><span class=\"o\">-</span><span class=\"n\">foo</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"n\">d</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">world</span><span class=\"w\"> </span><span class=\"n\">import</span><span class=\"o\">-</span><span class=\"n\">and</span><span class=\"o\">-</span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>I've also added printlns so if you comment out the tests that aren't <code>witTest</code> you'll see output  coming from <code>ts_bindgen.rs</code> that looks like this:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"err\">│</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"n\">bytecodealliance</span><span class=\"o\">/</span><span class=\"n\">jco</span><span class=\"o\">@</span><span class=\"mf\">1.3.1</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"w\">                                                                                                                                                                                                           </span><span class=\"err\">│</span>\n<span class=\"err\">│</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">node</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">stack</span><span class=\"o\">-</span><span class=\"n\">trace</span><span class=\"o\">-</span><span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"w\"> </span><span class=\"n\">node_modules</span><span class=\"o\">/</span><span class=\"n\">mocha</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">mocha</span><span class=\"p\">.</span><span class=\"n\">js</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">u</span><span class=\"w\"> </span><span class=\"n\">tdd</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"p\">.</span><span class=\"n\">js</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">timeout</span><span class=\"w\"> </span><span class=\"mi\">30000</span><span class=\"w\">                                                                                                                                           </span><span class=\"err\">│</span>\n<span class=\"err\">│</span><span class=\"w\">                                                                                                                                                                                                                                             </span><span class=\"err\">│</span>\n<span class=\"err\">│</span><span class=\"w\">                                                                                                                                                                                                                                             </span><span class=\"err\">│</span>\n<span class=\"err\">│</span><span class=\"w\">                                                                                                                                                                                                                                             </span><span class=\"err\">│</span>\n<span class=\"err\">│</span><span class=\"w\">  </span><span class=\"n\">WIT</span><span class=\"w\">                                                                                                                                                                                                                                        </span><span class=\"err\">│</span>\n<span class=\"err\">│</span><span class=\"p\">[</span><span class=\"n\">TS_BINDGEN</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">generating</span><span class=\"w\"> </span><span class=\"n\">TS</span><span class=\"w\"> </span><span class=\"n\">func</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">a</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">stability</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Unknown</span><span class=\"p\">)</span><span class=\"w\">                                                                                                                                                                                    </span><span class=\"err\">│</span>\n<span class=\"err\">│</span><span class=\"p\">[</span><span class=\"n\">TS_BINDGEN</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">generating</span><span class=\"w\"> </span><span class=\"n\">TS</span><span class=\"w\"> </span><span class=\"n\">func</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">b</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">stability</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Unknown</span><span class=\"p\">)</span><span class=\"w\">                                                                                                                                                                                    </span><span class=\"err\">│</span>\n<span class=\"err\">│</span><span class=\"p\">[</span><span class=\"n\">TS_BINDGEN</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">generating</span><span class=\"w\"> </span><span class=\"n\">TS</span><span class=\"w\"> </span><span class=\"n\">func</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">c</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">stability</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Unknown</span><span class=\"p\">)</span><span class=\"w\">                                                                                                                                                                                    </span><span class=\"err\">│</span>\n<span class=\"err\">│</span><span class=\"w\">                                                                                                                                                                                                                                             </span><span class=\"err\">│</span>\n<span class=\"err\">│</span><span class=\"w\">                                                                                                                                                                                                                                             </span><span class=\"err\">│</span>\n<span class=\"err\">│</span><span class=\"p\">[</span><span class=\"n\">TEST</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">interfaces</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">content</span><span class=\"o\">?</span><span class=\"w\"> </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"n\">namespace</span><span class=\"w\"> </span><span class=\"n\">TestFeatureGatesFoo</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">                                                                                                                                                                       </span><span class=\"err\">│</span>\n<span class=\"err\">│</span><span class=\"w\">  </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"p\">():</span><span class=\"w\"> </span><span class=\"nc\">void</span><span class=\"p\">;</span><span class=\"w\">                                                                                                                                                                                                                 </span><span class=\"err\">│</span>\n<span class=\"err\">│</span><span class=\"w\">  </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">():</span><span class=\"w\"> </span><span class=\"nc\">void</span><span class=\"p\">;</span><span class=\"w\">                                                                                                                                                                                                                 </span><span class=\"err\">│</span>\n<span class=\"err\">│</span><span class=\"w\">  </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"p\">():</span><span class=\"w\"> </span><span class=\"nc\">void</span><span class=\"p\">;</span><span class=\"w\">                                                                                                                                                                                                                 </span><span class=\"err\">│</span>\n<span class=\"err\">│</span><span class=\"p\">}</span><span class=\"w\">                                                                                                                                                                                                                                            </span><span class=\"err\">│</span>\n<span class=\"err\">│</span><span class=\"w\">                                                                                                                                                                                                                                             </span><span class=\"err\">│</span>\n<span class=\"err\">│</span><span class=\"w\">    </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">feature</span><span class=\"o\">-</span><span class=\"n\">gates</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">since</span><span class=\"w\"> </span><span class=\"n\">should</span><span class=\"w\"> </span><span class=\"n\">exclude</span><span class=\"w\"> </span><span class=\"n\">future</span><span class=\"w\"> </span><span class=\"n\">versions</span><span class=\"w\">                                                                                                                                                                                   </span><span class=\"err\">│</span>\n<span class=\"err\">│</span><span class=\"p\">[</span><span class=\"n\">TS_BINDGEN</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">generating</span><span class=\"w\"> </span><span class=\"n\">TS</span><span class=\"w\"> </span><span class=\"n\">func</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">a</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">stability</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Unknown</span><span class=\"p\">)</span><span class=\"w\">                                                                                                                                                                                    </span><span class=\"err\">│</span>\n<span class=\"err\">│</span><span class=\"p\">[</span><span class=\"n\">TS_BINDGEN</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">generating</span><span class=\"w\"> </span><span class=\"n\">TS</span><span class=\"w\"> </span><span class=\"n\">func</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">b</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">stability</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Unknown</span><span class=\"p\">)</span><span class=\"w\">                                                                                                                                                                                    </span><span class=\"err\">│</span>\n<span class=\"err\">│</span><span class=\"p\">[</span><span class=\"n\">TS_BINDGEN</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">generating</span><span class=\"w\"> </span><span class=\"n\">TS</span><span class=\"w\"> </span><span class=\"n\">func</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">c</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">stability</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Unknown</span><span class=\"p\">)</span><span class=\"w\">                                                                                                                                                                                    </span><span class=\"err\">│</span>\n<span class=\"err\">│</span><span class=\"p\">[</span><span class=\"n\">TS_BINDGEN</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">generating</span><span class=\"w\"> </span><span class=\"n\">TS</span><span class=\"w\"> </span><span class=\"n\">func</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">d</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">stability</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Unknown</span><span class=\"p\">)</span><span class=\"w\">                                                                                                                                                                                    </span><span class=\"err\">│</span>\n<span class=\"err\">│</span><span class=\"w\">    </span><span class=\"err\">✔</span><span class=\"w\"> </span><span class=\"n\">feature</span><span class=\"o\">-</span><span class=\"n\">gates</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">unstable</span><span class=\"w\"> </span><span class=\"n\">should</span><span class=\"w\"> </span><span class=\"n\">be</span><span class=\"w\"> </span><span class=\"n\">present</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"n\">all</span><span class=\"w\"> </span><span class=\"n\">features</span><span class=\"w\"> </span><span class=\"n\">enabled</span><span class=\"w\">                                                                                                                                                                    </span><span class=\"err\">│</span>\n<span class=\"err\">│</span><span class=\"p\">[</span><span class=\"n\">TS_BINDGEN</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">generating</span><span class=\"w\"> </span><span class=\"n\">TS</span><span class=\"w\"> </span><span class=\"n\">func</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">a</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">stability</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Unknown</span><span class=\"p\">)</span><span class=\"w\">                                                                                                                                                                                    </span><span class=\"err\">│</span>\n<span class=\"err\">│</span><span class=\"p\">[</span><span class=\"n\">TS_BINDGEN</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">generating</span><span class=\"w\"> </span><span class=\"n\">TS</span><span class=\"w\"> </span><span class=\"n\">func</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">b</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">stability</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Unknown</span><span class=\"p\">)</span><span class=\"w\">                                                                                                                                                                                    </span><span class=\"err\">│</span>\n<span class=\"err\">│</span><span class=\"p\">[</span><span class=\"n\">TS_BINDGEN</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">generating</span><span class=\"w\"> </span><span class=\"n\">TS</span><span class=\"w\"> </span><span class=\"n\">func</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">c</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">stability</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Unknown</span><span class=\"p\">)</span><span class=\"w\">                                                                                                                                                                                    </span><span class=\"err\">│</span>\n<span class=\"err\">│</span><span class=\"w\">    </span><span class=\"err\">✔</span><span class=\"w\"> </span><span class=\"n\">feature</span><span class=\"o\">-</span><span class=\"n\">gates</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">unstable</span><span class=\"w\"> </span><span class=\"n\">should</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">be</span><span class=\"w\"> </span><span class=\"n\">present</span><span class=\"w\"> </span><span class=\"n\">without</span><span class=\"w\"> </span><span class=\"n\">all</span><span class=\"w\"> </span><span class=\"n\">features</span><span class=\"w\"> </span><span class=\"n\">enabled</span>\n</code></pre></div>",
        "id": 450204909,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1720539578
    },
    {
        "content": "<p>Just want to make sure I'm not misunderstanding the feature, but I'd expect to <em>not</em> see <code>c()</code> because it's <code>@since(0.2.2)</code> and the package is <code>@0.2.1</code>. </p>\n<p>I also tried with <code>0.3.0</code> just to be sure I wasn't running into a semver compat smoothing thing.</p>\n<p>Weirdly enough, <code>unstable</code> works just fine w/ all features specified (those are the passing tests)</p>",
        "id": 450205516,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1720539700
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"598440\">@Victor Adossi</span> this looks amazing. Given you're seeing information being lost, I'm wondering if the issue here is just lower-level then? There seems to have been a bit of movement in this code in wasm-tools. Perhaps this is an issue in the Wasmtime machinery itself? I wonder if the unreleased wasm-tools code here will fix it?</p>",
        "id": 450245292,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1720548381
    },
    {
        "content": "<p>Appreciate all the help so far <span aria-label=\"bow\" class=\"emoji emoji-1f647\" role=\"img\" title=\"bow\">:bow:</span> </p>\n<p>I think you're right, I'm going to take a look at the lower level wasm-tools again -- I'm already on <code>0.212.0</code>, but it really feels like they shouldn't all be <code>Unknown</code>, there may have been some movement there I haven't pulled down... Looking at the upstream code I'm also fairly certain I shouldn't even <em>see</em> the import on the to begin with (like how <code>unstable</code> worked)...</p>",
        "id": 450324233,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1720576354
    },
    {
        "content": "<p>Yesterday I encountered a panic in wit-parser because Wasi-cli's since isn't merged, yet. This was due to a mismatching since and unknown on the same interface.</p>\n<p>Perhaps upgrading cli to Joel's version already fixes things.</p>",
        "id": 450345946,
        "sender_full_name": "Christof Petig",
        "timestamp": 1720587987
    },
    {
        "content": "<p>mismatching since &amp; unknown on the same interface is a use case I don't even have in the test yet -- I should add it.</p>\n<p>Would you mind sharing a snippet of the WIT, <span class=\"user-mention\" data-user-id=\"590366\">@Christof Petig</span> ?</p>",
        "id": 450446675,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1720616580
    },
    {
        "content": "<p>I will need to gather the details, just combining Wasi-cli main with main on the other Wasi dependencies (io, fs, clocks) using wit-deps created the problem for us.</p>",
        "id": 450451387,
        "sender_full_name": "Christof Petig",
        "timestamp": 1720617818
    },
    {
        "content": "<p>Ahh thanks, let me take a look and see those changes, maybe no need to waste cycles gathering the details just yet, though I'm going to add that test</p>",
        "id": 450487119,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1720625359
    },
    {
        "content": "<p><span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> it was far more difficult to reproduce than I thought. Here it is: take this wit/deps.toml and wit/test.wit combo, run <code>wit-deps update</code> and then <code>wit-bindgen markdown wit</code>.</p>\n<p>It crashes with</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"o\">/</span><span class=\"n\">registry</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">index</span><span class=\"p\">.</span><span class=\"n\">crates</span><span class=\"p\">.</span><span class=\"n\">io</span><span class=\"o\">-</span><span class=\"mi\">6</span><span class=\"n\">f17d22bba15001f</span><span class=\"o\">/</span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">parser</span><span class=\"o\">-</span><span class=\"mf\">0.212.0</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">resolve</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">2350</span><span class=\"p\">:</span><span class=\"mi\">21</span><span class=\"p\">:</span>\n<span class=\"nc\">assertion</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">left</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">right</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">failed</span>\n<span class=\"w\">  </span><span class=\"n\">left</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Interface</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">id</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Id</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">idx</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"n\">stability</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Unknown</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"w\"> </span><span class=\"n\">right</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Interface</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">id</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Id</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">idx</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"n\">stability</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Stable</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">since</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Version</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">major</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">minor</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">patch</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"n\">feature</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nb\">None</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"n\">note</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span>\n</code></pre></div>\n<p>If you replace either clocks with v0.2.0 or cli with the version by <del>Joel</del>Yoshua the crash is gone.<br>\n<a href=\"/user_uploads/15107/p4yUUk1Uw6AgN3alLR_7YWyN/wasi-problem.tgz\">wasi-problem.tgz</a></p>",
        "id": 450558126,
        "sender_full_name": "Christof Petig",
        "timestamp": 1720643275
    },
    {
        "content": "<p>Version by Yoshua at <a href=\"https://github.com/WebAssembly/wasi-cli/pull/43\">https://github.com/WebAssembly/wasi-cli/pull/43</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/wasi-cli/pull/43\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/a7d4479b1f2e1f5bf22fb32d0eb260f27cb7fadf/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f656330646336633930386539333434383262396434363436316538636262666430643237346432616633393538653462363362663130313863613136346239332f576562417373656d626c792f776173692d636c692f70756c6c2f3433&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/wasi-cli/pull/43\" title=\"Document per-item versions using `@since` gates by yoshuawuyts · Pull Request #43 · WebAssembly/wasi-cli\">Document per-item versions using `@since` gates by yoshuawuyts · Pull Request #43 · WebAssembly/wasi-cli</a></div><div class=\"message_embed_description\">Depends on WebAssembly/component-model#332 to be merged first. This documents the stability of all items using the @since gate notation, enabling WIT documents to be updated over time without major...</div></div></div>",
        "id": 450558668,
        "sender_full_name": "Christof Petig",
        "timestamp": 1720643385
    },
    {
        "content": "<p>But to be honest I haven't yet figured out which interface is referenced both with and without since.</p>",
        "id": 450559501,
        "sender_full_name": "Christof Petig",
        "timestamp": 1720643568
    },
    {
        "content": "<p>Here is the full version (no <code>wit-deps update</code> required to retrieve the deps)<br>\n<a href=\"/user_uploads/15107/F41caJqO7mdEuD0VylJ8T2zP/wasi-problem.full.tgz\">wasi-problem.full.tgz</a></p>",
        "id": 450559977,
        "sender_full_name": "Christof Petig",
        "timestamp": 1720643700
    },
    {
        "content": "<p>Thanks for providing the tarballs -- I'm not sure I'm completely right (maybe you could confirm) but the line that is being pointed to  seems to be this one:</p>\n<p><a href=\"https://github.com/bytecodealliance/wasm-tools/blob/v1.212.0/crates/wit-parser/src/resolve.rs#L2350\">https://github.com/bytecodealliance/wasm-tools/blob/v1.212.0/crates/wit-parser/src/resolve.rs#L2350</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasm-tools/blob/v1.212.0/crates/wit-parser/src/resolve.rs#L2350\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/050eebc6b30cf87a6e925affc6cb3062554954e1/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f613864353465313637656562643666313535396466623830656239313965353930343133616563643830616538613666393031316563666430616362623765362f62797465636f6465616c6c69616e63652f7761736d2d746f6f6c73&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasm-tools/blob/v1.212.0/crates/wit-parser/src/resolve.rs#L2350\" title=\"wasm-tools/crates/wit-parser/src/resolve.rs at v1.212.0 · bytecodealliance/wasm-tools\">wasm-tools/crates/wit-parser/src/resolve.rs at v1.212.0 · bytecodealliance/wasm-tools</a></div><div class=\"message_embed_description\"> CLI and Rust libraries for low-level manipulation of WebAssembly modules  - bytecodealliance/wasm-tools</div></div></div>",
        "id": 450644740,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1720685305
    },
    {
        "content": "<p>It <em>looks</em> like wit parser expects stabilities to never change, and we're getting the interface in there as <code>Unknown</code> at one poitn then the newer version actually has it specified?</p>",
        "id": 450644904,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1720685386
    },
    {
        "content": "<p>Wonder if that <code>assert_eq!</code> should be a <code>bail!</code> with a more descriptive error message</p>",
        "id": 450645075,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1720685437
    },
    {
        "content": "<p>Ideally it would output the name of the interface which got redefined, but due to rearranging of the structure during the merge this is a far from easy to get information. Another solution would be to ignore unknown in the comparison.</p>",
        "id": 450679562,
        "sender_full_name": "Christof Petig",
        "timestamp": 1720695965
    },
    {
        "content": "<p>And yes this assert_eq is exactly the panicking line.</p>",
        "id": 450679780,
        "sender_full_name": "Christof Petig",
        "timestamp": 1720696061
    },
    {
        "content": "<p>I feel filling a bug report on wit-parser would be adequate.</p>",
        "id": 450680541,
        "sender_full_name": "Christof Petig",
        "timestamp": 1720696332
    },
    {
        "content": "<p>Filed an issue: <br>\n<a href=\"https://github.com/bytecodealliance/wasm-tools/issues/1666\">https://github.com/bytecodealliance/wasm-tools/issues/1666</a></p>\n<p><span class=\"user-mention\" data-user-id=\"344849\">@Yoshua Wuyts</span> would you mind taking a look if you find some time? The thing is that the check <em>makes sense</em> -- the same item shouldn't have it's <code>Stability</code> essentially discovered twice (and be different)... so the assert makes sense, and however we're getting the <code>Unknown</code> in there in the first place is probably what's jamming me up on the<code>jco</code> impl</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasm-tools/issues/1666\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/855b4f0d42a2c2a3c18b3efad63d8ac600418232/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f366536616236613964376238343065653065303766323637353231376238363339613930336566306638643830376436383534343738313738363637616338622f62797465636f6465616c6c69616e63652f7761736d2d746f6f6c732f6973737565732f31363636&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasm-tools/issues/1666\" title=\"`Stability` set to `Unknown` intially and triggering assert on non-empty value coming in · Issue #1666 · bytecodealliance/wasm-tools\">`Stability` set to `Unknown` intially and triggering assert on non-empty value coming in · Issue #1666 · bytecodealliance/wasm-tools</a></div><div class=\"message_embed_description\">In attempting to implement @since and related feature gates in jco I ran into an issue that may be long here. First, all the Stability values in functions on the Resolve seem to be Unknown. Secondl...</div></div></div>",
        "id": 450988736,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1720793744
    },
    {
        "content": "<p>Hmnnn, so I've updated to 0.214.0 and relevant packages but still see the issue -- all stabilities are still coming in as <code>Unknown</code>.</p>\n<p>Still looking into why this could be, maybe the right annotation is ending up in the wrong place possibly</p>",
        "id": 452127272,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1721234289
    },
    {
        "content": "<p>OK so I think I've found where the issue might be -- it seems that <code>update_stability</code> is not called when <a href=\"https://github.com/bytecodealliance/wasm-tools/blob/main/crates/wit-parser/src/resolve.rs#L627\">moving worlds, and in particular moving interfaces</a>...</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasm-tools/blob/main/crates/wit-parser/src/resolve.rs#L627\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/386f1a7d651617efb6d1e44b5531860c1c3fa9a4/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f363031343862386565323865653439343633643436363466643933383061313436656634353931313133653232616136363163363430323233323361346135332f62797465636f6465616c6c69616e63652f7761736d2d746f6f6c73&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasm-tools/blob/main/crates/wit-parser/src/resolve.rs#L627\" title=\"wasm-tools/crates/wit-parser/src/resolve.rs at main · bytecodealliance/wasm-tools\">wasm-tools/crates/wit-parser/src/resolve.rs at main · bytecodealliance/wasm-tools</a></div><div class=\"message_embed_description\"> CLI and Rust libraries for low-level manipulation of WebAssembly modules  - bytecodealliance/wasm-tools</div></div></div>",
        "id": 452161552,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1721242362
    },
    {
        "content": "<p>I'm wondering if there's not <em>enough</em> copying/moving done there -- when I print out the stabilities for the items as they pass through, they're correct (non-<code>Unknown</code>)</p>",
        "id": 452161606,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1721242391
    },
    {
        "content": "<p>Ah some interesting discussion on how the feature gating <em>should</em> work in the first place: </p>\n<p><a href=\"#narrow/stream/223391-wasm/topic/Missing.20impl.20for.20.40since.20in.20.60Resolve.3A.3Ainclude_stability.28.29.60/near/452175637\">https://bytecodealliance.zulipchat.com/#narrow/stream/223391-wasm/topic/Missing.20impl.20for.20.40since.20in.20.60Resolve.3A.3Ainclude_stability.28.29.60/near/452175637</a></p>\n<p>Found the bit that was missing -- but maybe it <em>should</em> be missing</p>",
        "id": 452363554,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1721313889
    }
]