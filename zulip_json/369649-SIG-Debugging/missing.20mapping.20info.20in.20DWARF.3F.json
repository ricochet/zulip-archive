[
    {
        "content": "<p>Heya! - I was chatting with the author of Wasmphobia (<span class=\"user-mention\" data-user-id=\"587520\">@Surma</span>) about adding Component support to their <code>wasmphobia</code> project (wasm binary -&gt; code size flame graph tool), and we noticed that several sections don't seem to carry any DWARF information.</p>",
        "id": 438342964,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1715601513
    },
    {
        "content": "<p>Some of that is expected and can probably be resolved - but maybe 1/3 of the <code>@section: code</code> seems to not have any information, and that doesn't seem right?</p>\n<p><a href=\"/user_uploads/15107/q6xKRCXnsfhdxvL8MRVPOI26/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/15107/q6xKRCXnsfhdxvL8MRVPOI26/image.png\" title=\"image.png\"><img src=\"/user_uploads/15107/q6xKRCXnsfhdxvL8MRVPOI26/image.png\"></a></div>",
        "id": 438343091,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1715601558
    },
    {
        "content": "<p>Surma specifically <a href=\"https://github.com/surma/wasmphobia/issues/2#issuecomment-2106323586\">asked the following</a>:</p>\n<blockquote>\n<p>I was under the impression that — even in the component model — all code from all modules would be in the <code>code</code> section. So I’d expect that DWARF debugging data would provide correct attributions. Am I wrong?</p>\n</blockquote>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/surma/wasmphobia/issues/2#issuecomment-2106323586\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/92ac256c99d1a4b3b1519c3fce79802644139a28/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f366263363836353566363039306562366637346632326164373564383134653564383033643834363365393761383065306537616265643438376266386236312f7375726d612f7761736d70686f6269612f6973737565732f32&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/surma/wasmphobia/issues/2#issuecomment-2106323586\" title=\"Wasm Component support? · Issue #2 · surma/wasmphobia\">Wasm Component support? · Issue #2 · surma/wasmphobia</a></div><div class=\"message_embed_description\">Heya! I was trying to upload some of my WASI 0.2 experiments, and I'm getting the following error: Could not create flamegraph: Error: Unsupported Wasm encoding I assume this has something to do wi...</div></div></div>",
        "id": 438343155,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1715601587
    },
    {
        "content": "<p>I don't know whether this is expected, a limitation of Wasm Components, of our current tooling, or perhaps a bug in wasmphobia. I figured this would be the right place to ask people who are more clued in than I am. Any help here would be appreciated!</p>",
        "id": 438343891,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1715601771
    },
    {
        "content": "<p>wasm-tools (or the language equivalent) doesn't inject the dwarf properly yet.</p>",
        "id": 438344400,
        "sender_full_name": "Ralph",
        "timestamp": 1715601914
    },
    {
        "content": "<p>I had been chatting with <span class=\"user-mention\" data-user-id=\"234973\">@Till Schneidereit</span> about this at wasmio and <span class=\"user-mention\" data-user-id=\"253990\">@fitzgen (he/him)</span> prior to wasmio, and we had a few steps that we need to take.</p>",
        "id": 438344643,
        "sender_full_name": "Ralph",
        "timestamp": 1715601978
    },
    {
        "content": "<p>among them that llvm-dwarfdump doesn't understand the component file format yet, for example.</p>",
        "id": 438344724,
        "sender_full_name": "Ralph",
        "timestamp": 1715602003
    },
    {
        "content": "<p>ahhh, ok! thank you!</p>",
        "id": 438344741,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1715602012
    },
    {
        "content": "<p>So I thought <a href=\"https://github.com/rustwasm/wasm-bindgen/issues/2389\">https://github.com/rustwasm/wasm-bindgen/issues/2389</a> was the issue tracking that, and since it had been closed all known issues had been resolved</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/rustwasm/wasm-bindgen/issues/2389\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/62d6a13648b1b843ae58a5de5d41941471fbba04/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f333039623961626637643038326430393665613230326163346535373533343738366534356464636530646661623235326265353239623239356661663361352f727573747761736d2f7761736d2d62696e6467656e2f6973737565732f32333839&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/rustwasm/wasm-bindgen/issues/2389\" title=\"Support DWARF in wasm-bindgen · Issue #2389 · rustwasm/wasm-bindgen\">Support DWARF in wasm-bindgen · Issue #2389 · rustwasm/wasm-bindgen</a></div><div class=\"message_embed_description\">Motivation Chrome, Firefox and now also Sentry support DWARF for WebAssembly as debug format. In particularly for crash reporting systems like Sentry DWARF is a very important tool to create accura...</div></div></div>",
        "id": 438344820,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1715602044
    },
    {
        "content": "<p>I didn't realized there was outstanding work here</p>",
        "id": 438344838,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1715602050
    },
    {
        "content": "<p>Are there any open issues about this I could link to?</p>",
        "id": 438344918,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1715602081
    },
    {
        "content": "<p>wasm-bindgen works FINE</p>",
        "id": 438345074,
        "sender_full_name": "Ralph",
        "timestamp": 1715602121
    },
    {
        "content": "<p>wasi 1.0 (which is just wasm core with structure!) works <em>fine</em> with mild exceptions like not enough type information because the wasm compilers are trying to optimize out code steps.</p>",
        "id": 438345223,
        "sender_full_name": "Ralph",
        "timestamp": 1715602170
    },
    {
        "content": "<p>I was able to get components to retain dwarf info, but I couldn't find a debugger to pick it up at all, so I'm entirely unsurprised here</p>",
        "id": 438345422,
        "sender_full_name": "Ralph",
        "timestamp": 1715602217
    },
    {
        "content": "<p>it had been my intention to work with Nick to figure out which steps hit the biggest bang for the buck here, or whether we might parallelize our work. His presentation on work needed was here: <a href=\"https://github.com/bytecodealliance/rfcs/pull/34\">https://github.com/bytecodealliance/rfcs/pull/34</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/rfcs/pull/34\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/8f8e67330d5807a95297394e384ebfcc278ed0df/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f303030303466346637363435636461333561646637353536373066306661363238636433376139356536643232306161656238396338643134333862363362332f62797465636f6465616c6c69616e63652f726663732f70756c6c2f3334&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/rfcs/pull/34\" title=\"Debugging support in Wasmtime by elliottt · Pull Request #34 · bytecodealliance/rfcs\">Debugging support in Wasmtime by elliottt · Pull Request #34 · bytecodealliance/rfcs</a></div><div class=\"message_embed_description\">Implement guest debugging capabilities in Wasmtime and integrate those abilities with surrounding debugging toolchains.\n\nRendered\nCo-authored-by: Nick Fitzgerald - @fitzgen\nCo-authored-by: Rainy Si...</div></div></div>",
        "id": 438345753,
        "sender_full_name": "Ralph",
        "timestamp": 1715602322
    },
    {
        "content": "<p>So if you wanna have fun, and I know you do, try using a wasi preview 1 module with dwarf in wasmphobia and I would expect it to work!!!</p>",
        "id": 438345930,
        "sender_full_name": "Ralph",
        "timestamp": 1715602371
    },
    {
        "content": "<p>but components, <em>NOPE</em>, not yet</p>",
        "id": 438345954,
        "sender_full_name": "Ralph",
        "timestamp": 1715602379
    },
    {
        "content": "<p>ok ok ok, so what I'm hearing is that this is an LLVM / Rust Toolchain issue more than anything else?</p>",
        "id": 438346079,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1715602422
    },
    {
        "content": "<p>BTW, using flamegraphs with dwarf info <em>would be the BOMB</em> and I'll help doing anything to make that begin working</p>",
        "id": 438346091,
        "sender_full_name": "Ralph",
        "timestamp": 1715602426
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"268586\">@Ralph</span> fwiw <code>wasmphobia</code> already supports components now! - this is just about making that better</p>",
        "id": 438346189,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1715602449
    },
    {
        "content": "<p>filling out the final missing sections</p>",
        "id": 438346241,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1715602463
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"344849\">Yoshua Wuyts</span> <a href=\"#narrow/stream/369649-SIG-Debugging/topic/missing.20mapping.20info.20in.20DWARF.3F/near/438346079\">said</a>:</p>\n<blockquote>\n<p>ok ok ok, so what I'm hearing is that this is an LLVM / Rust Toolchain issue more than anything else?</p>\n</blockquote>\n<p>for the original dwarf insertion, but ALSO the compilation step needs to be able to NOT optimize away tons of code</p>",
        "id": 438346258,
        "sender_full_name": "Ralph",
        "timestamp": 1715602466
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"344849\">Yoshua Wuyts</span> <a href=\"#narrow/stream/369649-SIG-Debugging/topic/missing.20mapping.20info.20in.20DWARF.3F/near/438346189\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"268586\">Ralph</span> fwiw <code>wasmphobia</code> already supports components now! - this is just about making that better</p>\n</blockquote>\n<p>WAIT WUT</p>",
        "id": 438346284,
        "sender_full_name": "Ralph",
        "timestamp": 1715602474
    },
    {
        "content": "<p>WAIT WUT</p>",
        "id": 438346320,
        "sender_full_name": "Ralph",
        "timestamp": 1715602485
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"344849\">Yoshua Wuyts</span> <a href=\"#narrow/stream/369649-SIG-Debugging/topic/missing.20mapping.20info.20in.20DWARF.3F/near/438343091\">said</a>:</p>\n<blockquote>\n<p>Some of that is expected and can probably be resolved - but maybe 1/3 of the <code>@section: code</code> seems to not have any information, and that doesn't seem right?</p>\n<p><a href=\"/user_uploads/15107/q6xKRCXnsfhdxvL8MRVPOI26/image.png\">image.png</a></p>\n</blockquote>\n<p>hehehe yeah this right here</p>",
        "id": 438346321,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1715602486
    },
    {
        "content": "<p>this is my <code>wasm-http-tools</code> concurrent HTTP client example</p>",
        "id": 438346371,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1715602503
    },
    {
        "content": "<p>surma got it working yesterday</p>",
        "id": 438346399,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1715602511
    },
    {
        "content": "<p>that is EITHER an insertion bug OR a wasmtools bug/compile opt</p>",
        "id": 438346405,
        "sender_full_name": "Ralph",
        "timestamp": 1715602513
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"344849\">Yoshua Wuyts</span> <a href=\"#narrow/stream/369649-SIG-Debugging/topic/missing.20mapping.20info.20in.20DWARF.3F/near/438346399\">said</a>:</p>\n<blockquote>\n<p>surma got it working yesterday</p>\n</blockquote>\n<p>who is this Surma person and how do we get them more donuts?</p>",
        "id": 438346478,
        "sender_full_name": "Ralph",
        "timestamp": 1715602536
    },
    {
        "content": "<p>Does Surma have a gofundme for donuts?</p>",
        "id": 438346538,
        "sender_full_name": "Ralph",
        "timestamp": 1715602558
    },
    {
        "content": "<p>_gets out wallet_</p>",
        "id": 438346599,
        "sender_full_name": "Ralph",
        "timestamp": 1715602565
    },
    {
        "content": "<p>haha, yeah Surma is great</p>",
        "id": 438346809,
        "sender_full_name": "Yoshua Wuyts",
        "timestamp": 1715602647
    },
    {
        "content": "<p>Reading over the  component support I think that there may need to be a bit more refactoring to support components. Right now it's slurping all dwarf sections into one object when each core wasm module will need to be treated separately. I'm not sure if that'd explain the current thing you're seeing though, it depends on the size of the component. Additionally though there's going to be multiple code sections within a component so it'd be good to confirm that the dwarf info is relative to the right code section start.</p>\n<p>Additionally though I see that the \"component-type\" custom section is in the component that has a flame graph, but that should be stripped out by wit-component when a component is created, so that's also suspect (but perhaps just a bug in wit-component?)</p>",
        "id": 438382281,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1715611898
    },
    {
        "content": "<p>right. So some sorting out of these things is necessary.</p>",
        "id": 438386991,
        "sender_full_name": "Ralph",
        "timestamp": 1715613108
    },
    {
        "content": "<p>following up! finally. <a href=\"https://hachyderm.io/deck/tags/webassembly\">https://hachyderm.io/deck/tags/webassembly</a> shows that you can do this now with a component using <code>wasmtime serve</code> in v23.1</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://hachyderm.io/deck/tags/webassembly\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/69793086d6a97110e27220b1a9c988a71f3cdfc0/68747470733a2f2f6d656469612e68616368796465726d2e696f2f736974655f75706c6f6164732f66696c65732f3030302f3030302f3030352f4031782f663162383436393435306363363165322e706e67&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://hachyderm.io/deck/tags/webassembly\" title=\"Hachyderm.io\">Hachyderm.io</a></div><div class=\"message_embed_description\">Hachyderm is a safe space, LGBTQIA+ and BLM, primarily comprised of tech industry professionals world wide. Note that many non-user account types have restrictions - please see our About page.</div></div></div>",
        "id": 463451529,
        "sender_full_name": "Ralph",
        "timestamp": 1724085002
    },
    {
        "content": "<p><a href=\"/user_uploads/15107/55GpDbaho8LPlSHKdpjcpC0N/image-8.png\">image-8.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/15107/55GpDbaho8LPlSHKdpjcpC0N/image-8.png\" title=\"image-8.png\"><img data-original-dimensions=\"2650x1597\" src=\"/user_uploads/thumbnail/15107/55GpDbaho8LPlSHKdpjcpC0N/image-8.png/840x560.webp\"></a></div>",
        "id": 463451877,
        "sender_full_name": "Ralph",
        "timestamp": 1724085102
    },
    {
        "content": "<p>look at all those handles!!!</p>",
        "id": 463451912,
        "sender_full_name": "Ralph",
        "timestamp": 1724085112
    },
    {
        "content": "<p>You probably meant to link <a href=\"https://hachyderm.io/@squillace/112989210932769282\">https://hachyderm.io/@squillace/112989210932769282</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://hachyderm.io/@squillace/112989210932769282\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/ebaf5362fc53977980fb320f009a668d878e91e0/68747470733a2f2f6d656469612e68616368796465726d2e696f2f6d656469615f6174746163686d656e74732f66696c65732f3131322f3938392f3231302f3339362f3631392f3639382f736d616c6c2f333637636162613766663562613231612e706e67&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://hachyderm.io/@squillace/112989210932769282\" title=\"squillace (@squillace@hachyderm.io)\">squillace (@squillace@hachyderm.io)</a></div><div class=\"message_embed_description\">Attached: 1 video\n\nBack in March at #wasmio, @anfibiacreativa@mastodon.social and I showed a WIDE array of #webassembly debugging in #vscode: https://www.youtube.com/watch?v=sofGOtwGWu8. \n\nBut, you'll note: the debugger couldn't navigate #webassemblycomponent files. Now it can!</div></div></div>",
        "id": 463495179,
        "sender_full_name": "bjorn3",
        "timestamp": 1724096333
    },
    {
        "content": "<p>Dammit</p>",
        "id": 463495293,
        "sender_full_name": "Ralph",
        "timestamp": 1724096395
    },
    {
        "content": "<p>Yes</p>",
        "id": 463495297,
        "sender_full_name": "Ralph",
        "timestamp": 1724096398
    },
    {
        "content": "<p>Thank you, <span class=\"user-mention\" data-user-id=\"264278\">@bjorn3</span></p>",
        "id": 463495584,
        "sender_full_name": "Ralph",
        "timestamp": 1724096499
    }
]