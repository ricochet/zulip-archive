[
    {
        "content": "<p>I'm on an ESP32C3, a riscv board. I'm trying to run an AOT wasm file. I find that os_mmap fails in espidf_memmap.c, specifically, heap_caps_malloc returns null when mem_caps is MALLOC_CAP_EXEC. When I replace MALLOC_CAP_EXEC with MALLC_CAP_DEFAULT, the initialization works fine. How can I get it to work?</p>",
        "id": 407009404,
        "sender_full_name": "Rusty",
        "timestamp": 1702182999
    },
    {
        "content": "<p>The ESP32-C3 uses a RISC-V 32 bit core, which is currently unsupported by wasmtime. We have discussed adding support for a very similar system (ESP32-C6) in this thread: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7311\">https://github.com/bytecodealliance/wasmtime/issues/7311</a></p>\n<p>The main missing parts are that cranelift, the compiler that wasmtime uses, supports RISC-V 64bit, but not 32bit. Adding support for that is quite a chunk of work.</p>\n<p>If you need a WASM runtime in the meanwhile I would probably point you towards <a href=\"https://github.com/bytecodealliance/wasm-micro-runtime\">WAMR</a>, that should work in that enviornment (RISC-V32 + ESP-IDF).</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/issues/7311\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/2964e654ca719c67d69431bd85cb009c322f2f8c\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f366661613737343531396166656636393465363234613937396637366335366531316235393662393238323836346637336563313565346636663036326233642f62797465636f6465616c6c69616e63652f7761736d74696d652f6973737565732f37333131)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/issues/7311\" title=\"embedded support 路 Issue #7311 路 bytecodealliance/wasmtime\">embedded support 路 Issue #7311 路 bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">my co-worker told me that wasmtime project wanted to hear use-cases/demands/requirements for embedded scenarios. here is FYI about our requirements. Feature support embedded environment by \"embedde...</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasm-micro-runtime\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/37664162776fc3f9c42257ceecfaad7d298ffe07\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f313732643339363362366365336265356432643233316632376262383863656138316461653633366139663362653864313263383934316162336165613935622f62797465636f6465616c6c69616e63652f7761736d2d6d6963726f2d72756e74696d65)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasm-micro-runtime\" title=\"GitHub - bytecodealliance/wasm-micro-runtime: WebAssembly Micro Runtime (WAMR)\">GitHub - bytecodealliance/wasm-micro-runtime: WebAssembly Micro Runtime (WAMR)</a></div><div class=\"message_embed_description\">WebAssembly Micro Runtime (WAMR). Contribute to bytecodealliance/wasm-micro-runtime development by creating an account on GitHub.</div></div></div>",
        "id": 407038017,
        "sender_full_name": "Afonso Bordado",
        "timestamp": 1702202597
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"410955\">Afonso Bordado</span> <a href=\"#narrow/stream/206238-general/topic/Can't.20use.20an.20AOT.20on.20an.20ESP32C3/near/407038017\">said</a>:</p>\n<blockquote>\n<p>The ESP32-C3 uses a RISC-V 32 bit core, which is currently unsupported by wasmtime. We have discussed adding support for a very similar system (ESP32-C6) in this thread: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7311\">https://github.com/bytecodealliance/wasmtime/issues/7311</a></p>\n<p>The main missing parts are that cranelift, the compiler that wasmtime uses, supports RISC-V 64bit, but not 32bit. Adding support for that is quite a chunk of work.</p>\n<p>If you need a WASM runtime in the meanwhile I would probably point you towards <a href=\"https://github.com/bytecodealliance/wasm-micro-runtime\">WAMR</a>, that should work in that enviornment (RISC-V32 + ESP-IDF).</p>\n</blockquote>\n<p>The problem is in WAMR</p>",
        "id": 407095941,
        "sender_full_name": "Rusty",
        "timestamp": 1702234123
    },
    {
        "content": "<p>Oh, sorry, I mistakenly assumed this was wasmtime! I'm not too familiar with WAMR, so someone else might have to step in.</p>",
        "id": 407097058,
        "sender_full_name": "Afonso Bordado",
        "timestamp": 1702235089
    },
    {
        "content": "<p>This topic was moved here from <a class=\"stream-topic\" data-stream-id=\"206238\" href=\"/#narrow/stream/206238-general/topic/Can.27t.20use.20an.20AOT.20on.20an.20ESP32C3\">#general &gt; Can't use an AOT on an ESP32C3</a> by <span class=\"user-mention silent\" data-user-id=\"253990\">fitzgen (he/him)</span>.</p>",
        "id": 407303216,
        "sender_full_name": "Notification Bot",
        "timestamp": 1702321716
    },
    {
        "content": "<p>I got AOT working with ESP32C3 by writing a minimal platform layer that calls into rust to do the allocation. I don't know how to write C so I can't help you there.</p>",
        "id": 430886268,
        "sender_full_name": "Hytak",
        "timestamp": 1712097288
    }
]