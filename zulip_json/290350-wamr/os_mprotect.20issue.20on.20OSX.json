[
    {
        "content": "<p>Hi, I've been experimenting more with the pthread API on OSX and noticed that it always crashes on the second <code>os_mprotect</code> call from: <br>\n<code>`static bool  init_stack_guard_pages()</code>. This happens if AOT is enabled (even if not used by the module.</p>\n<p>A quick reading online seems to suggest that on OSX mprotect can be used for regions that have been mmapped only.<br>\nI didn't do much investigation on this but just to check that I'm not using this the wrong way around before I file a bug.</p>",
        "id": 282484251,
        "sender_full_name": "Alexandru Ene",
        "timestamp": 1652702203
    },
    {
        "content": "<p>Hi, the init_stack_guard_pages is required when the memory access boundary check (besides with native stack overflow check) with hardware trap feature is enabled for AOT/JIT, so as to improve the performance. Not sure whether pthread_get_stackaddr_np and pthread_get_stacksize_np in os_thread_get_stack_boundary are called and work well in OSX platform:<br>\n<a href=\"https://github.com/bytecodealliance/wasm-micro-runtime/blob/main/core/shared/platform/common/posix/posix_thread.c#L339-L341\">https://github.com/bytecodealliance/wasm-micro-runtime/blob/main/core/shared/platform/common/posix/posix_thread.c#L339-L341</a><br>\nIf not and if it returns NULL, runtime will return false in latest code:<br>\n<a href=\"https://github.com/bytecodealliance/wasm-micro-runtime/blob/main/core/shared/platform/common/posix/posix_thread.c#L415\">https://github.com/bytecodealliance/wasm-micro-runtime/blob/main/core/shared/platform/common/posix/posix_thread.c#L415</a><br>\nAnd not sure whether the native stack space are pages mmaped? If not, mprotect may report error.</p>\n<p>If the feature isn't supported, please disable it:</p>\n<ol>\n<li>when building runtime, add <code>cmake -DWAMR_DISABLE_HW_BOUND_CHECK=1</code></li>\n<li>when running wamrc, add <code>wamrc --bounds-checks=1</code> to generate bound check instructions in AOT code<br>\nThanks.</li>\n</ol>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasm-micro-runtime/blob/main/core/shared/platform/common/posix/posix_thread.c#L339-L341\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/05542ad15faf45be9cea567ce6f16512256c2bc1\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f623935343736393637623331336437633737363365323432326431313834646337353063616435653931646233633234623134653565326365663731353766312f62797465636f6465616c6c69616e63652f7761736d2d6d6963726f2d72756e74696d65)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasm-micro-runtime/blob/main/core/shared/platform/common/posix/posix_thread.c#L339-L341\" title=\"wasm-micro-runtime/posix_thread.c at main 路 bytecodealliance/wasm-micro-runtime\">wasm-micro-runtime/posix_thread.c at main 路 bytecodealliance/wasm-micro-runtime</a></div><div class=\"message_embed_description\">WebAssembly Micro Runtime (WAMR). Contribute to bytecodealliance/wasm-micro-runtime development by creating an account on GitHub.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasm-micro-runtime/blob/main/core/shared/platform/common/posix/posix_thread.c#L415\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/05542ad15faf45be9cea567ce6f16512256c2bc1\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f623935343736393637623331336437633737363365323432326431313834646337353063616435653931646233633234623134653565326365663731353766312f62797465636f6465616c6c69616e63652f7761736d2d6d6963726f2d72756e74696d65)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasm-micro-runtime/blob/main/core/shared/platform/common/posix/posix_thread.c#L415\" title=\"wasm-micro-runtime/posix_thread.c at main 路 bytecodealliance/wasm-micro-runtime\">wasm-micro-runtime/posix_thread.c at main 路 bytecodealliance/wasm-micro-runtime</a></div><div class=\"message_embed_description\">WebAssembly Micro Runtime (WAMR). Contribute to bytecodealliance/wasm-micro-runtime development by creating an account on GitHub.</div></div></div>",
        "id": 282580996,
        "sender_full_name": "Wenyong Huang",
        "timestamp": 1652749739
    },
    {
        "content": "<p>Ok, I'll check if there's something on my side, since i've tested this on OSX and fails on that mprotect call</p>",
        "id": 282621277,
        "sender_full_name": "Alexandru Ene",
        "timestamp": 1652784744
    }
]