[
    {
        "content": "<p>I can build iwasm interpreter for RISC-V, but has anyone here succesfully configured and build any of the JIT or AOT options for RISC-V?</p>",
        "id": 357848322,
        "sender_full_name": "Mats Brorsson",
        "timestamp": 1683893168
    },
    {
        "content": "<p>Hope it is useful</p>\n<p>RISCV64, RISCV32 (RISC-V LP64 and RISC-V LP64D are tested)  <a href=\"https://github.com/bytecodealliance/wasm-micro-runtime#supported-architectures-and-platforms\">https://github.com/bytecodealliance/wasm-micro-runtime#supported-architectures-and-platforms</a></p>\n<p><a href=\"https://github.com/bytecodealliance/wasm-micro-runtime/blob/main/product-mini/README.md#esp-idf\">https://github.com/bytecodealliance/wasm-micro-runtime/blob/main/product-mini/README.md#esp-idf</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasm-micro-runtime#supported-architectures-and-platforms\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/3083816179d01294df1f4c645546ec76fe5296c3\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f353363393862323239303562633966353533613566393966636434653566633862666362666338656161643265393236313430363162383739373964346136662f62797465636f6465616c6c69616e63652f7761736d2d6d6963726f2d72756e74696d65)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasm-micro-runtime#supported-architectures-and-platforms\" title=\"GitHub - bytecodealliance/wasm-micro-runtime: WebAssembly Micro Runtime (WAMR)\">GitHub - bytecodealliance/wasm-micro-runtime: WebAssembly Micro Runtime (WAMR)</a></div><div class=\"message_embed_description\">WebAssembly Micro Runtime (WAMR). Contribute to bytecodealliance/wasm-micro-runtime development by creating an account on GitHub.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasm-micro-runtime/blob/main/product-mini/README.md#esp-idf\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/3083816179d01294df1f4c645546ec76fe5296c3\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f353363393862323239303562633966353533613566393966636434653566633862666362666338656161643265393236313430363162383739373964346136662f62797465636f6465616c6c69616e63652f7761736d2d6d6963726f2d72756e74696d65)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasm-micro-runtime/blob/main/product-mini/README.md#esp-idf\" title=\"wasm-micro-runtime/README.md at main · bytecodealliance/wasm-micro-runtime\">wasm-micro-runtime/README.md at main · bytecodealliance/wasm-micro-runtime</a></div><div class=\"message_embed_description\">WebAssembly Micro Runtime (WAMR). Contribute to bytecodealliance/wasm-micro-runtime development by creating an account on GitHub.</div></div></div>",
        "id": 358236275,
        "sender_full_name": "lum1n0us",
        "timestamp": 1684061491
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"415410\">lum1n0us</span> <a href=\"#narrow/stream/290350-wamr/topic/wamr.20on.20RISC-V/near/358236275\">said</a>:</p>\n<blockquote>\n<p>Hope it is useful</p>\n<p>RISCV64, RISCV32 (RISC-V LP64 and RISC-V LP64D are tested)  <a href=\"https://github.com/bytecodealliance/wasm-micro-runtime#supported-architectures-and-platforms\">https://github.com/bytecodealliance/wasm-micro-runtime#supported-architectures-and-platforms</a></p>\n<p><a href=\"https://github.com/bytecodealliance/wasm-micro-runtime/blob/main/product-mini/README.md#esp-idf\">https://github.com/bytecodealliance/wasm-micro-runtime/blob/main/product-mini/README.md#esp-idf</a></p>\n</blockquote>\n<p>Well, as I wrote, I can build the interpreter but what about the JIT or AOT compilers? Those does not seem to be supported for RISCV64.</p>",
        "id": 360786170,
        "sender_full_name": "Mats Brorsson",
        "timestamp": 1684933981
    },
    {
        "content": "<p>Hi, the LLVM AOT  is also supported, please<br>\nBuild iwasm:<br>\n64-bit: cmake -DWAMR_BUILD_TARGET=RISCV64/RISCV64_LP64D/RISCV_LP64<br>\n32-bit: cmake -DWAMR_BUILD_TARGET=RISCV32/RISCV32_ILP32D/RISCV_ILP32</p>\n<p>Generate AOT file:<br>\n64-bit: wamrc --target=riscv64 --target-abi=lp64/lp64d -o test.aot test.wasm<br>\n32-bit: wamrc --target=riscv32 --target-abi=ilp32/ilp32d -o test.aot test.wasm</p>\n<p>For LLVM JIT, I remember it is also supported, please try adding <code>-DWAMR_BUILD_JIT=1</code> when building iwasm.</p>",
        "id": 360991047,
        "sender_full_name": "Wenyong Huang",
        "timestamp": 1685005435
    },
    {
        "content": "<p>Thanks, I already have an LLVM installation. Can I use that or do I really need to build the llvm that is in the WAMR tree?</p>",
        "id": 361082519,
        "sender_full_name": "Mats Brorsson",
        "timestamp": 1685025902
    },
    {
        "content": "<p>eg. cmake -DLLVM_DIR=/usr/local/opt/llvm@14/lib/cmake/llvm</p>",
        "id": 361266701,
        "sender_full_name": "YAMAMOTO Takashi",
        "timestamp": 1685093391
    },
    {
        "content": "<p>Thanks, but should LLVM_DIR point to the LLVM source directory or something else?</p>",
        "id": 362351861,
        "sender_full_name": "Mats Brorsson",
        "timestamp": 1685512830
    },
    {
        "content": "<p>it's the directory containing cmake files.  eg LLVMConfig.cmake<br>\ni sometimes use a directory under llvm build tree. eg. build/lib/cmake/llvm</p>",
        "id": 367227893,
        "sender_full_name": "YAMAMOTO Takashi",
        "timestamp": 1687025284
    }
]