[
    {
        "content": "<p>Thanks to <span class=\"user-mention\" data-user-id=\"513417\">@Marcin Kolny</span> for the excellent introduction of wasi-thread: <br>\n<a href=\"https://bytecodealliance.github.io/wamr.dev/blog/introduction-to-wamr-wasi-threads/\">https://bytecodealliance.github.io/wamr.dev/blog/introduction-to-wamr-wasi-threads/</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://bytecodealliance.github.io/wamr.dev/blog/introduction-to-wamr-wasi-threads/\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/8c54c649f4409f2cc38adadf3d6f8d43a782c48f\\/68747470733a2f2f62797465636f6465616c6c69616e63652e6769746875622e696f2f77616d722e6465762f77616d722e706e67)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://bytecodealliance.github.io/wamr.dev/blog/introduction-to-wamr-wasi-threads/\" title=\"Introduction to WAMR WASI threads\">Introduction to WAMR WASI threads</a></div><div class=\"message_embed_description\">One of the functionalities missing in WebAssembly for a long time was the ability to spawn new threads within the process. Various runtimes made efforts to address this limitation by introducing non-standard APIs for thread creation. WAMR provides a WAMR pthread library that implements a wide range of pthread APIs, (including synchronization primitives, pthread_create() function and many more).\nIn 2022, the introduction of the WASI threads proposal aimed to establish a standardized API for thread creation in WebAssembly.</div></div></div>",
        "id": 372503510,
        "sender_full_name": "Wang Xin",
        "timestamp": 1688545598
    },
    {
        "content": "<p>Hello! Has anyone run the VScode extension for WAMR on a C program that embeds WAMR? I am trying to debug why is a C-written wasm module not working now that I have enabled wasi-thread, even if I'm not actually using threads.</p>",
        "id": 391718582,
        "sender_full_name": "Luis Linares",
        "timestamp": 1695049000
    }
]