[
    {
        "content": "<p>I got many crash samples while fuzzing the mini-loader of the WAMR project. I would like to know what are the advantages of mini-loader over normal loader? I noticed a discussion in issue <a href=\"https://github.com/bytecodealliance/wasm-micro-runtime/issues/569\">https://github.com/bytecodealliance/wasm-micro-runtime/issues/569</a>, and I think a memory corruption vulnerability in the mini-loader could lead to arbitrary code execution if the mini-loader is used on some devices. I'm wondering if the vulnerabilities in mini-loader would be considered security issues and assigned CVEs?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasm-micro-runtime/issues/569\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/e76b3d7bcd454a87bf5d0a831054d16220a6ce4b\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f373039313330346338333230353434613935323134633961336265316561353766376366303663356330643739626165323131646264633637306339666139372f62797465636f6465616c6c69616e63652f7761736d2d6d6963726f2d72756e74696d652f6973737565732f353639)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasm-micro-runtime/issues/569\" title=\"What is mini loader? · Issue #569 · bytecodealliance/wasm-micro-runtime\">What is mini loader? · Issue #569 · bytecodealliance/wasm-micro-runtime</a></div><div class=\"message_embed_description\">saw this in the config, curious what is the difference between mini-loader and normal loader.</div></div></div>",
        "id": 289819980,
        "sender_full_name": "P1umer",
        "timestamp": 1657965126
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"514639\">@P1umer</span> the mini-loader was designed for reducing the binary size for some embedded environments. It assumes the wasm module is protected by signature, so the module sanity check is largely removed from the loading phase.</p>\n<p>If the fuzzing test is loading invalid wasm modules, it is expected behavior.  </p>\n<p>It looks like more descriptions for mini-loader should be provided in GitHub repo.</p>",
        "id": 289853046,
        "sender_full_name": "Wang Xin",
        "timestamp": 1658014325
    },
    {
        "content": "<p>Well, this design poses a supply chain security threat. If the signature authority is compromised, it may hack into several downstream devices. So some key security checks are necessary I think.</p>",
        "id": 289856156,
        "sender_full_name": "P1umer",
        "timestamp": 1658019770
    },
    {
        "content": "<p>Yes, the system designers should be aware of such threats and provide necessary mitigations from the system level.</p>",
        "id": 289859460,
        "sender_full_name": "Wang Xin",
        "timestamp": 1658025208
    },
    {
        "content": "<p>Could you give us an example of \"a supply chain security threat\" mentioned above?</p>",
        "id": 289920103,
        "sender_full_name": "lum1n0us",
        "timestamp": 1658116663
    },
    {
        "content": "<p>I don't have an example of an actual supply chain attack at the moment, but by enabling the mini-loader, it is possible to cause memory corruption in WAMR, and I think some basic security patches are still necessary and probably won't have a huge impact on performance.</p>",
        "id": 289927079,
        "sender_full_name": "P1umer",
        "timestamp": 1658125558
    },
    {
        "content": "<p>The design of wamr is very similar to ebpf I think. And the mini-loader is not security hardened for performance, the only guarantee is through the signature mechanism. Then if the signature authority is hacked,  the wasm module with exploit capability can damage more wamr-loaded devices by forging signatures.</p>",
        "id": 289927834,
        "sender_full_name": "P1umer",
        "timestamp": 1658126332
    },
    {
        "content": "<p>I don't think users can be exposed to this kind of threat. So I think the mini-loader should be disabled or harden it with some security checks.</p>",
        "id": 289928220,
        "sender_full_name": "P1umer",
        "timestamp": 1658126679
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"514639\">@P1umer</span> The mini-loader is designed to reduce the binary size and doesn't check the integrity of  the wasm file, developer must check it by himself, which has been mentioned in the document:<br>\n<a href=\"https://github.com/bytecodealliance/wasm-micro-runtime/blob/main/doc/build_wamr.md#enable-wasm-mini-loader\">https://github.com/bytecodealliance/wasm-micro-runtime/blob/main/doc/build_wamr.md#enable-wasm-mini-loader</a></p>\n<p>The wasm_loader.c and wasm_mini_loader.c are somewhat like online verifier mode and offline verifier mode. If developer wants to check the file integrity online, he can just use the former. But if he wants to reduce the binary size, he can use the latter, but he must ensure that the wasm file is well-formed by himself, e.g. using other tools to check.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasm-micro-runtime/blob/main/doc/build_wamr.md#enable-wasm-mini-loader\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/9de6b20a12f06384c5a4f44a81e87979fd988469\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f663139623832323034613638343563616464333932626665316435383864623032633061346261626331303761616439643661333234393037653534366364332f62797465636f6465616c6c69616e63652f7761736d2d6d6963726f2d72756e74696d65)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasm-micro-runtime/blob/main/doc/build_wamr.md#enable-wasm-mini-loader\" title=\"wasm-micro-runtime/build_wamr.md at main · bytecodealliance/wasm-micro-runtime\">wasm-micro-runtime/build_wamr.md at main · bytecodealliance/wasm-micro-runtime</a></div><div class=\"message_embed_description\">WebAssembly Micro Runtime (WAMR). Contribute to bytecodealliance/wasm-micro-runtime development by creating an account on GitHub.</div></div></div>",
        "id": 289928230,
        "sender_full_name": "Wenyong Huang",
        "timestamp": 1658126689
    },
    {
        "content": "<p>okay, hope other developers can take this seriously.</p>",
        "id": 289928749,
        "sender_full_name": "P1umer",
        "timestamp": 1658127148
    }
]