[
    {
        "content": "<p>Hi all, I'm currently working on enabling IPv6 in WAMR sockets and one thing that wasn't clear to me is the expected endianness for n0,n1,... fields in the __wasi_addr_ip6_t structure. Is this expected to be a host byte order or network byte order (i.e. big endian)? If that's not decided, my suggestion is to keep it big endian so we're consistent with POSIX, although I'd like to hear your thoughts.<br>\nHaving it always the same byte order (regardless of the host) I think would simplify a lot of operations (e.g. if we want to implement ipv6 for address pool, with host byte order we'd have to have two branches for different byte orders).</p>",
        "id": 290609784,
        "sender_full_name": "Marcin Kolny",
        "timestamp": 1658577038
    },
    {
        "content": "<p>Also, I noticed some of the code might be a bit confusing at the first look; for example, in ipv4 structure n3 is the most significant byte (according for example to <a href=\"https://github.com/bytecodealliance/wasm-micro-runtime/blob/0993601d5503830ea9b144ec857fceea3fd96a5b/core/iwasm/libraries/lib-socket/src/wasi/wasi_socket_ext.c#L72\">this code</a>). However, the way we construct an address in <a href=\"https://github.com/bytecodealliance/wasm-micro-runtime/blob/0993601d5503830ea9b144ec857fceea3fd96a5b/core/iwasm/libraries/lib-socket/src/wasi/wasi_socket_ext.c#L72\">bind</a> is actually opposite (n3 is the last part, so ). The example code (tcp_client.c) works well, because we <a href=\"https://github.com/bytecodealliance/wasm-micro-runtime/blob/0993601d5503830ea9b144ec857fceea3fd96a5b/samples/socket-api/wasm-src/tcp_client.c#L34\">convert localhost address to host byte order</a> whereas it should be a network byte order in the sin_addr structure (see <a href=\"https://man7.org/linux/man-pages/man7/ip.7.html\">documentation</a> for details). I'm going to fix all this inconsistency, document clearly the data structures that are ambiguous and open a PR for that.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasm-micro-runtime/blob/0993601d5503830ea9b144ec857fceea3fd96a5b/core/iwasm/libraries/lib-socket/src/wasi/wasi_socket_ext.c#L72\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/d6d39f3dcb917f1534bd10ce254c743bcd5605c1\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f643562333937326463363235653637323763323830313031653065383331316133386438626666643066613163363939363030393738616530366163646338322f62797465636f6465616c6c69616e63652f7761736d2d6d6963726f2d72756e74696d65)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasm-micro-runtime/blob/0993601d5503830ea9b144ec857fceea3fd96a5b/core/iwasm/libraries/lib-socket/src/wasi/wasi_socket_ext.c#L72\" title=\"wasm-micro-runtime/wasi_socket_ext.c at 0993601d5503830ea9b144ec857fceea3fd96a5b · bytecodealliance/wasm-micro-runtime\">wasm-micro-runtime/wasi_socket_ext.c at 0993601d5503830ea9b144ec857fceea3fd96a5b · bytecodealliance/wasm-micro-runtime</a></div><div class=\"message_embed_description\">WebAssembly Micro Runtime (WAMR). Contribute to bytecodealliance/wasm-micro-runtime development by creating an account on GitHub.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasm-micro-runtime/blob/0993601d5503830ea9b144ec857fceea3fd96a5b/samples/socket-api/wasm-src/tcp_client.c#L34\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/d6d39f3dcb917f1534bd10ce254c743bcd5605c1\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f643562333937326463363235653637323763323830313031653065383331316133386438626666643066613163363939363030393738616530366163646338322f62797465636f6465616c6c69616e63652f7761736d2d6d6963726f2d72756e74696d65)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasm-micro-runtime/blob/0993601d5503830ea9b144ec857fceea3fd96a5b/samples/socket-api/wasm-src/tcp_client.c#L34\" title=\"wasm-micro-runtime/tcp_client.c at 0993601d5503830ea9b144ec857fceea3fd96a5b · bytecodealliance/wasm-micro-runtime\">wasm-micro-runtime/tcp_client.c at 0993601d5503830ea9b144ec857fceea3fd96a5b · bytecodealliance/wasm-micro-runtime</a></div><div class=\"message_embed_description\">WebAssembly Micro Runtime (WAMR). Contribute to bytecodealliance/wasm-micro-runtime development by creating an account on GitHub.</div></div></div>",
        "id": 290611377,
        "sender_full_name": "Marcin Kolny",
        "timestamp": 1658579320
    },
    {
        "content": "<p>Hi,<br>\nI agreed with the idea about keeping the same byte order with POSIX.</p>\n<p>Yes, it is a little wired that n3 is not always the most significant byte. Thanks for volunteer.</p>",
        "id": 290720248,
        "sender_full_name": "lum1n0us",
        "timestamp": 1658726107
    },
    {
        "content": "<p>Ok I think I know what the problem with my confusion was - I noticed that the code in wasi_socket_ext.c always assumes that host byte order != network byte order. I'm updating the code so it works on both little endian and big endian systems. Also, after having second thought about byte order in IPv6, I think it'd be actually best to go for host byte order - whereas that might add complexity to WAMR implementation, that seems to be more end-user friendly .</p>",
        "id": 290733886,
        "sender_full_name": "Marcin Kolny",
        "timestamp": 1658739349
    },
    {
        "content": "<p>I've opened a PR where I updated the documentation and fixed translation wasi address and posix address: <a href=\"https://github.com/bytecodealliance/wasm-micro-runtime/pull/1327\">https://github.com/bytecodealliance/wasm-micro-runtime/pull/1327</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasm-micro-runtime/pull/1327\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/850b7314f80172a5c9a46ee8b4a1fdd4a429e22a\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f393135626330356337633630386136623937383761353737653737633331363237306436376131613039613137323563353763313966346665656134353334342f62797465636f6465616c6c69616e63652f7761736d2d6d6963726f2d72756e74696d652f70756c6c2f31333237)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasm-micro-runtime/pull/1327\" title=\"Fix byte ordering in sockets API for systems where host byte order == network byte order by loganek · Pull Request #1327 · bytecodealliance/wasm-micro-runtime\">Fix byte ordering in sockets API for systems where host byte order == network byte order by loganek · Pull Request #1327 · bytecodealliance/wasm-micro-runtime</a></div><div class=\"message_embed_description\">Documented data structures used for storing IP addresses.\nFixed bug in bind and connect methods by updating a code in wasi_socket_ext.</div></div></div>",
        "id": 290734391,
        "sender_full_name": "Marcin Kolny",
        "timestamp": 1658739734
    }
]