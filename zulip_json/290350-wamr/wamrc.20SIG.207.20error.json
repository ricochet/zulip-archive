[
    {
        "content": "<p>Hi guys, question: why is it when compile and run this as AOT. I get a Sig 7 erorr</p>\n<div class=\"codehilite\" data-code-language=\"C++\"><pre><span></span><code><span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;vector&gt;</span>\n<span class=\"k\">struct</span><span class=\"w\">  </span><span class=\"nc\">T</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">vector</span><span class=\"o\">&lt;</span><span class=\"kt\">int</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">updates</span><span class=\"p\">;</span>\n<span class=\"p\">};</span>\n<span class=\"n\">T</span><span class=\"w\"> </span><span class=\"n\">t</span><span class=\"p\">;</span>\n<span class=\"n\">__attribute__</span><span class=\"p\">((</span><span class=\"n\">export_name</span><span class=\"p\">(</span><span class=\"s\">\"Init\"</span><span class=\"p\">)))</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">Init</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">t</span><span class=\"p\">.</span><span class=\"n\">updates</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">t</span><span class=\"p\">.</span><span class=\"n\">updates</span><span class=\"p\">.</span><span class=\"n\">push_back</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">size</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">t</span><span class=\"p\">.</span><span class=\"n\">updates</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>This works fine</p>\n<div class=\"codehilite\" data-code-language=\"C++\"><pre><span></span><code><span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;vector&gt;</span>\n<span class=\"k\">struct</span><span class=\"w\">  </span><span class=\"nc\">T</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">vector</span><span class=\"o\">&lt;</span><span class=\"kt\">int</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">updates</span><span class=\"p\">;</span>\n<span class=\"p\">};</span>\n<span class=\"n\">__attribute__</span><span class=\"p\">((</span><span class=\"n\">export_name</span><span class=\"p\">(</span><span class=\"s\">\"Init\"</span><span class=\"p\">)))</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">Init</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">   </span><span class=\"n\">T</span><span class=\"w\"> </span><span class=\"n\">t</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">t</span><span class=\"p\">.</span><span class=\"n\">updates</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">t</span><span class=\"p\">.</span><span class=\"n\">updates</span><span class=\"p\">.</span><span class=\"n\">push_back</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">size</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">t</span><span class=\"p\">.</span><span class=\"n\">updates</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>",
        "id": 450294036,
        "sender_full_name": "Binh Phan",
        "timestamp": 1720561683
    },
    {
        "content": "<p>I can tell that the difference is: <code>t</code> outside the function requires a static initializer to run while <code>t </code> inside the function will initialize <code>t </code> (call the constructor) at function entry. But I would guess that the default initialization of all zeros is valid for g++'s vector implementation.</p>",
        "id": 450561331,
        "sender_full_name": "Christof Petig",
        "timestamp": 1720644224
    },
    {
        "content": "<p>also another thing is i compile wasm with the following flags \"-pthread --target=wasm32-wasi-threads\"</p>",
        "id": 450563226,
        "sender_full_name": "Binh Phan",
        "timestamp": 1720645095
    },
    {
        "content": "<p>without -pthread, i don't get SIG 7 error either</p>",
        "id": 450563273,
        "sender_full_name": "Binh Phan",
        "timestamp": 1720645115
    }
]