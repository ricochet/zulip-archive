[
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey, I've been trying to run some of the wasmtime's fuzzers on QEMU and I'm running into a OOM error after a few minutes and I'm not sure how to get around this.</p>\n<p>I'm currently using this command:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">ALLOWED_ENGINES</span><span class=\"o\">=</span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"n\">nightly</span><span class=\"w\"> </span><span class=\"n\">fuzz</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">riscv64gc</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"w\">  </span><span class=\"n\">differential</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"n\">none</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">no</span><span class=\"o\">-</span><span class=\"n\">default</span><span class=\"o\">-</span><span class=\"n\">features</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">rss_limit_mb</span><span class=\"o\">=</span><span class=\"mi\">30000</span>\n</code></pre></div>\n<p>But it fails after around 700 executions with <code>ERROR: libFuzzer: out-of-memory (used: 31360Mb; limit: 30000Mb)</code></p>\n<p>Has anyone tried this or know a possible cause? I've only tried this with <code>cranelift-fuzzgen</code> and that target seems to support this, so I'm not sure if we do some special allocation with wasmtime .</p>\n<p>Edit: The oom artifacts are not reproducible when running in isolation</p>",
        "id": 365598826,
        "sender_full_name": "Afonso Bordado",
        "timestamp": 1686583435
    },
    {
        "content": "<p>this may have to do with the pooling allocator and/or VM reservations, but I would also expect that to be \"invisible\" do the guest and only a host-side implementation detail and if libfuzzer thinks it's OOM-ing then that's the guest determining that, so I'm also not entirely sure...</p>\n<p>In any case I haven't seen this myself before, but I also haven't tried running in QEMU before</p>",
        "id": 365606495,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1686584945
    }
]