[
    {
        "content": "<p>Is there a way with the c wasmtime API (or planned) to get the interface-type information?</p>",
        "id": 256472912,
        "sender_full_name": "Bailey Hayes",
        "timestamp": 1633549693
    },
    {
        "content": "<p>Not at this time, no, but <code>wasmtime</code>-the-crate-or-C-API don't implement interface types right now.</p>",
        "id": 256473600,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1633549979
    },
    {
        "content": "<p>there's currently no binary format for interface types so nothing either creates that or consumes it yet</p>",
        "id": 256473633,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1633549995
    },
    {
        "content": "<p>Thank you! That's what I thought. In my scenario, I'm the one both creating the wasm module and also the piece that is going to be the runtime, so I have a lot of options for how I encode this info, e.g. create a variable with the witx string and use something to decode, create a \"types\" table with indexes and information for each type,  etc. How would you encode the type information today? Once there's a binary format for interface-types, whatever hack is in place could be dropped.</p>",
        "id": 256491091,
        "sender_full_name": "Bailey Hayes",
        "timestamp": 1633557433
    },
    {
        "content": "<p>The general thinking awhile back was to pair a wasm and a witx file together, but it never really got off the ground. In that sense I don't think anyone or anything has something implemented which does this today so there's not really precedent set.</p>",
        "id": 256582763,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1633615523
    },
    {
        "content": "<p>I'm also interested in this.<br>\nUntil a binary format for WITX, would a custom section with a bespoke serialization format for the WITX file work?<br>\n(of course, pointing out that this is a temporary hack)</p>",
        "id": 256624378,
        "sender_full_name": "Radu Matei",
        "timestamp": 1633630531
    }
]