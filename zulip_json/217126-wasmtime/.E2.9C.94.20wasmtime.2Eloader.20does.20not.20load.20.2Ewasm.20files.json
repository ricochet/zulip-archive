[
    {
        "content": "<p>I wonder if <strong>wasmtime-py</strong> is able to process <strong>components</strong> in form of <strong>.wasm</strong> files. Can anyone confirm that?</p>\n<p>The example <a href=\"https://github.com/bytecodealliance/wasmtime-py/blob/main/examples/loader_component.py\">loader_component.py</a> seems to load and call a component indeed. I can see it executing. However, it loads a <strong>.wat</strong>.</p>\n<p>In case I try to load a component as <strong>.wasm</strong>, I get the following error:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$<span class=\"w\"> </span>python<span class=\"w\"> </span>-m<span class=\"w\"> </span>myloader\nTraceback<span class=\"w\"> </span><span class=\"o\">(</span>most<span class=\"w\"> </span>recent<span class=\"w\"> </span>call<span class=\"w\"> </span>last<span class=\"o\">)</span>:\n<span class=\"w\">  </span>File<span class=\"w\"> </span><span class=\"s2\">\"&lt;frozen runpy&gt;\"</span>,<span class=\"w\"> </span>line<span class=\"w\"> </span><span class=\"m\">198</span>,<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>_run_module_as_main\n<span class=\"w\">  </span>File<span class=\"w\"> </span><span class=\"s2\">\"&lt;frozen runpy&gt;\"</span>,<span class=\"w\"> </span>line<span class=\"w\"> </span><span class=\"m\">88</span>,<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>_run_code\n<span class=\"w\">  </span>File<span class=\"w\"> </span><span class=\"s2\">\"/home/finnfalter/dev/python/wasmtimecomp/myloader.py\"</span>,<span class=\"w\"> </span>line<span class=\"w\"> </span><span class=\"m\">2</span>,<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>&lt;module&gt;\n<span class=\"w\">    </span>import<span class=\"w\"> </span>demo_component\n<span class=\"w\">  </span>File<span class=\"w\"> </span><span class=\"s2\">\"&lt;frozen importlib._bootstrap&gt;\"</span>,<span class=\"w\"> </span>line<span class=\"w\"> </span><span class=\"m\">1178</span>,<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>_find_and_load\n<span class=\"w\">  </span>File<span class=\"w\"> </span><span class=\"s2\">\"&lt;frozen importlib._bootstrap&gt;\"</span>,<span class=\"w\"> </span>line<span class=\"w\"> </span><span class=\"m\">1149</span>,<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>_find_and_load_unlocked\n<span class=\"w\">  </span>File<span class=\"w\"> </span><span class=\"s2\">\"&lt;frozen importlib._bootstrap&gt;\"</span>,<span class=\"w\"> </span>line<span class=\"w\"> </span><span class=\"m\">690</span>,<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>_load_unlocked\n<span class=\"w\">  </span>File<span class=\"w\"> </span><span class=\"s2\">\"myloader.py\"</span>,<span class=\"w\"> </span>line<span class=\"w\"> </span><span class=\"m\">80</span>,<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>exec_module\n<span class=\"w\">    </span>exec<span class=\"o\">(</span>component_files<span class=\"o\">[</span>relative_path<span class=\"o\">]</span>,<span class=\"w\"> </span>module.__dict__<span class=\"o\">)</span>\n<span class=\"w\">  </span>File<span class=\"w\"> </span><span class=\"s2\">\"&lt;string&gt;\"</span>,<span class=\"w\"> </span>line<span class=\"w\"> </span><span class=\"m\">1</span>,<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>&lt;module&gt;\n<span class=\"w\">  </span>File<span class=\"w\"> </span><span class=\"s2\">\"&lt;frozen importlib._bootstrap&gt;\"</span>,<span class=\"w\"> </span>line<span class=\"w\"> </span><span class=\"m\">1178</span>,<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>_find_and_load\n<span class=\"w\">  </span>File<span class=\"w\"> </span><span class=\"s2\">\"&lt;frozen importlib._bootstrap&gt;\"</span>,<span class=\"w\"> </span>line<span class=\"w\"> </span><span class=\"m\">1149</span>,<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>_find_and_load_unlocked\n<span class=\"w\">  </span>File<span class=\"w\"> </span><span class=\"s2\">\"&lt;frozen importlib._bootstrap&gt;\"</span>,<span class=\"w\"> </span>line<span class=\"w\"> </span><span class=\"m\">690</span>,<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>_load_unlocked\n<span class=\"w\">  </span>File<span class=\"w\"> </span><span class=\"s2\">\"myloader.py\"</span>,<span class=\"w\"> </span>line<span class=\"w\"> </span><span class=\"m\">80</span>,<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>exec_module\n<span class=\"w\">    </span>exec<span class=\"o\">(</span>component_files<span class=\"o\">[</span>relative_path<span class=\"o\">]</span>,<span class=\"w\"> </span>module.__dict__<span class=\"o\">)</span>\n<span class=\"w\">         </span>~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^\nKeyError:<span class=\"w\"> </span><span class=\"s1\">'imports.py'</span>\n</code></pre></div>\n<p>Running</p>\n<div class=\"codehilite\" data-code-language=\"Python\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">wasmtime</span><span class=\"o\">,</span> <span class=\"nn\">wasmtime.loader</span>\n<span class=\"kn\">import</span> <span class=\"nn\">demo_component</span>\n\n<span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">wasmtime</span><span class=\"o\">.</span><span class=\"n\">Store</span><span class=\"p\">()</span>\n<span class=\"n\">component</span> <span class=\"o\">=</span> <span class=\"n\">demo_component</span><span class=\"o\">.</span><span class=\"n\">Root</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">)</span>\n<span class=\"n\">component</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>Where <code>demo_component</code> corresponds to <code>demo.component</code> <a href=\"https://github.com/bytecodealliance/wasmtime-py\">here</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime-py/blob/main/examples/loader_component.py\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/5d9553989e1924335e4617b74f3d14823944a7ef/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f616330376265363063623738356361303037326564616564663162363562383333666334316239633734656265303133633531623734633031343033623839312f62797465636f6465616c6c69616e63652f7761736d74696d652d7079&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime-py/blob/main/examples/loader_component.py\" title=\"wasmtime-py/examples/loader_component.py at main · bytecodealliance/wasmtime-py\">wasmtime-py/examples/loader_component.py at main · bytecodealliance/wasmtime-py</a></div><div class=\"message_embed_description\">Python WebAssembly runtime powered by Wasmtime. Contribute to bytecodealliance/wasmtime-py development by creating an account on GitHub.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime-py\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/5d9553989e1924335e4617b74f3d14823944a7ef/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f616330376265363063623738356361303037326564616564663162363562383333666334316239633734656265303133633531623734633031343033623839312f62797465636f6465616c6c69616e63652f7761736d74696d652d7079&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime-py\" title=\"GitHub - bytecodealliance/wasmtime-py: Python WebAssembly runtime powered by Wasmtime\">GitHub - bytecodealliance/wasmtime-py: Python WebAssembly runtime powered by Wasmtime</a></div><div class=\"message_embed_description\">Python WebAssembly runtime powered by Wasmtime. Contribute to bytecodealliance/wasmtime-py development by creating an account on GitHub.</div></div></div>",
        "id": 449844165,
        "sender_full_name": "Christoph Brewing",
        "timestamp": 1720438878
    },
    {
        "content": "<p>Support for this was the intention of <a href=\"https://github.com/bytecodealliance/wasmtime-py/pull/224\">https://github.com/bytecodealliance/wasmtime-py/pull/224</a> but you might have stumbled across a bug? If so mind opening an issue?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime-py/pull/224\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/35ad28c236faad59ab4a09ca7cb71448499c5f75/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f383239613234353035643433623663393062663165656131393337323963613131323164373531313061303530336236653937356363646362313735623866662f62797465636f6465616c6c69616e63652f7761736d74696d652d70792f70756c6c2f323234&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime-py/pull/224\" title=\"loader: add support for components by whitequark · Pull Request #224 · bytecodealliance/wasmtime-py\">loader: add support for components by whitequark · Pull Request #224 · bytecodealliance/wasmtime-py</a></div><div class=\"message_embed_description\">Fixes #220.\nCloses #219.\nDepends on #221.\nDepends on #222.\nWorks like this:\n$ ls\nwavedrom.wasm    ...\n$ python -c 'import wasmtime.loader, json, wavedrom; store = wasmtime.Store(); print(wavedrom.R...</div></div></div>",
        "id": 449882954,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1720448360
    },
    {
        "content": "<p>Thank you, yes, I have seen that PR and I can positively repeat it but I do not succeed with any .wasm file.</p>\n<p>Just created issue <a href=\"https://github.com/bytecodealliance/wasmtime-py/issues/245\">#245</a></p>\n<p>I also created <a href=\"https://github.com/wamli/wasmtime-py-component-loader\">a public repo</a> with an example to quickly replay my observation.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime-py/issues/245\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/6c3752add82cd4a34f6ae2e0b658819450851d8d/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f353635383962336135373165346639343066323562323464343565353730333562336535613035323461306336626539396537346230303866663834613536382f62797465636f6465616c6c69616e63652f7761736d74696d652d70792f6973737565732f323435&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime-py/issues/245\" title=\"Loading components · Issue #245 · bytecodealliance/wasmtime-py\">Loading components · Issue #245 · bytecodealliance/wasmtime-py</a></div><div class=\"message_embed_description\">Even though having successfully repeated this example to load a component, my observation is that components in form of *.wasm are not loaded but yield an error instead. See this public repo with a...</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/wamli/wasmtime-py-component-loader\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/8b795ca486eafd85537eb38dfc69248d37bd0f19/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f646134653164326462343561363934383964663563363666316463353731356232666433616562376537653863346435346438383966316639663233666366372f77616d6c692f7761736d74696d652d70792d636f6d706f6e656e742d6c6f61646572&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/wamli/wasmtime-py-component-loader\" title=\"GitHub - wamli/wasmtime-py-component-loader\">GitHub - wamli/wasmtime-py-component-loader</a></div><div class=\"message_embed_description\">Contribute to wamli/wasmtime-py-component-loader development by creating an account on GitHub.</div></div></div>",
        "id": 449970871,
        "sender_full_name": "Christoph Brewing",
        "timestamp": 1720469185
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"684890\">@Catherine (whitequark)</span> would you be able to quickly see if that may be a bug or rather a problem in front of the computer?</p>",
        "id": 450635963,
        "sender_full_name": "Christoph Brewing",
        "timestamp": 1720682127
    },
    {
        "content": "<p>This is a bug in my PR. For whatever reason, wasmtime's bindgen actually produces a different list of Python build products between .wasm and .wat inputs, so while I assumed that the .wat and .wasm cause the same code paths to be taken, that was not correct.</p>",
        "id": 450670472,
        "sender_full_name": "Catherine (whitequark)",
        "timestamp": 1720692796
    },
    {
        "content": "<p>Oh, wait. I realize now that the .wasm/.wat distinction is a red herring. Your demo component includes an import, and I don't handle those right; the included example with an adder does not.</p>\n<p>But I also don't think we have a design to handle component imports of Python functions (if I recall; I may be wrong) so that will probably have to be solved first.</p>",
        "id": 450671072,
        "sender_full_name": "Catherine (whitequark)",
        "timestamp": 1720692936
    },
    {
        "content": "<p>Thank you for your fast feedback!</p>\n<p>I am very interested in that feature. If I can help somehow, please let me know. <br>\nAt least, I might test it.</p>",
        "id": 450671994,
        "sender_full_name": "Christoph Brewing",
        "timestamp": 1720693205
    },
    {
        "content": "<p>Sorry, my health does not permit me to spend time on this fix right now.</p>",
        "id": 450694288,
        "sender_full_name": "Catherine (whitequark)",
        "timestamp": 1720700196
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"595146\">Christoph Brewing</span> has marked this topic as resolved.</p>",
        "id": 451425904,
        "sender_full_name": "Notification Bot",
        "timestamp": 1721027376
    }
]