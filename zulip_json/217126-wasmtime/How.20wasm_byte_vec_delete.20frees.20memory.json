[
    {
        "content": "<p>Hi all, I'm working on Haskell bindings of wasmtime and got a question about <code>wasm_byte_vec_delete</code>. It should only free the memory pointed by the <code>data</code> field, not the <code>wasm_byte_vec_t</code> struct itself right? Usually when the C API wants to pass a bytestring as a result, it expects the caller to provide space for the <code>wasm_byte_vec_t</code>, but there are cases where the C API directly return a pointer to <code>wasm_byte_vec_t</code> (e.g. <code>wasmtime_frame_func_name</code>). In that case, how do I free the struct's memory? Sounds like a minor source of leak to me, but I hope I'm wrong :)</p>",
        "id": 237037889,
        "sender_full_name": "Cheng Shao",
        "timestamp": 1619944627
    },
    {
        "content": "<p>Never mind, just found in the documentation that the returned names are owned by the frame and shouldn't be deallocated manually</p>",
        "id": 237042296,
        "sender_full_name": "Cheng Shao",
        "timestamp": 1619949790
    }
]