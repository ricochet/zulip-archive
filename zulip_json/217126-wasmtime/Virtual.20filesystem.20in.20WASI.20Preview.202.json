[
    {
        "content": "<p>I've been looking into WASI Preview 2 and it seems like some important functionality has been lost: The ability to define my own virtual file system by implementing the Dir and File traits. The types are now fully concrete: <a href=\"https://docs.rs/wasmtime-wasi/18.0.2/wasmtime_wasi/preview2/struct.WasiCtxBuilder.html#method.preopened_dir\">https://docs.rs/wasmtime-wasi/18.0.2/wasmtime_wasi/preview2/struct.WasiCtxBuilder.html#method.preopened_dir</a></p>\n<p>Is there a plan to fix this or is there maybe some other way that I haven't discovered yet?</p>",
        "id": 423983099,
        "sender_full_name": "CryZe",
        "timestamp": 1709200160
    },
    {
        "content": "<p>In particular I'm mostly interested in implementing the Dir trait to prevent write access to the files. This was my workaround until now to the permissions systrem also having disappeared in recent wasmtime versions.</p>",
        "id": 423983663,
        "sender_full_name": "CryZe",
        "timestamp": 1709200344
    },
    {
        "content": "<blockquote>\n<p>prevent write access to the files</p>\n</blockquote>\n<p>This particular feature is still available via the <code>file_perms</code> argument of <code>preopened_dir</code> (see also <code>perms</code> if you need the directory to be read-only as well)</p>",
        "id": 424024238,
        "sender_full_name": "Lann Martin",
        "timestamp": 1709215081
    },
    {
        "content": "<p>Oh wow, I must be blind. I didn't even look at the parameters properly, assuming the permissions would be gone there as well like in preview 1.</p>",
        "id": 424042468,
        "sender_full_name": "CryZe",
        "timestamp": 1709219806
    },
    {
        "content": "<p>mmh, I do however indeed have one folder that's entirely implemented via a trait. Is there no way to do this now?</p>",
        "id": 424044322,
        "sender_full_name": "CryZe",
        "timestamp": 1709220339
    },
    {
        "content": "<p>I believe there is no direct equivalent to the old <code>WasiFile</code>/<code>WasiDir</code> traits for WASI 0.2. It should still be possible to implement a virtual filesystem but I don't know of any friendly wrappers so it would require digging pretty deeply into the wasi filesystem details.</p>",
        "id": 424047259,
        "sender_full_name": "Lann Martin",
        "timestamp": 1709221129
    },
    {
        "content": "<p>Depending on your exact requirements wasi-virt might be of interest too: <a href=\"https://github.com/bytecodealliance/WASI-Virt/?tab=readme-ov-file#filesystem\">https://github.com/bytecodealliance/WASI-Virt/?tab=readme-ov-file#filesystem</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/WASI-Virt/?tab=readme-ov-file#filesystem\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/05bd8855bddd1d6cc1bb90e63f727b91d225f53a\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f353835373830363363653466663030656437373231303937633830306162323330396636353265373838633338663430333331636632323130393465323439642f62797465636f6465616c6c69616e63652f574153492d56697274)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/WASI-Virt/?tab=readme-ov-file#filesystem\" title=\"GitHub - bytecodealliance/WASI-Virt: Virtual implementations of WASI APIs\">GitHub - bytecodealliance/WASI-Virt: Virtual implementations of WASI APIs</a></div><div class=\"message_embed_description\">Virtual implementations of WASI APIs. Contribute to bytecodealliance/WASI-Virt development by creating an account on GitHub.</div></div></div>",
        "id": 424048981,
        "sender_full_name": "Lann Martin",
        "timestamp": 1709221634
    },
    {
        "content": "<p>that's what I was thinking....</p>",
        "id": 424049202,
        "sender_full_name": "Ralph",
        "timestamp": 1709221689
    },
    {
        "content": "<p>Yes it's intentional that the <code>Wasi{File,Dir}</code> traits did not survive the transition to preview2. No fundamental issues with p2 vs p1, just a decision we made when writing the <code>wasmtime-wasi</code> crate's support. It was concluded that supporting the traits-of-old was too much of a maintenance burden on us for not enough benefit. </p>\n<p>It's always possible to implement the bindgen-generated traits in a custom fashion and add those to a linker instead of adding the <code>wasmtime-wasi</code> implementations to the linker. That's of course much of a larger lift than just implementing the file/dir traits, however. Some of the tricky parts around polling and streams, however, are still taken care of automatically with the I/O interface.</p>",
        "id": 424055324,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1709223302
    }
]