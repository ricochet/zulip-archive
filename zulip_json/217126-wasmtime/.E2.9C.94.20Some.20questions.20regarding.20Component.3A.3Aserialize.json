[
    {
        "content": "<p>Hey, I have 3 questions surrounding <a href=\"https://docs.rs/wasmtime/latest/wasmtime/component/struct.Component.html#method.serialize\">Component::serialize</a>:</p>\n<ol>\n<li>If I'm comprehending the documentation correctly, this function isn't that different from <code>Engine::precompile_module</code>. Am I correct to assume this? </li>\n<li>When I try to do <code>Component::from_file</code> on a component compiled with <code>wasmtime compile</code>, I get the following errror: <code>Error: failed to parse </code>led.cwasm<code>: input bytes aren't valid utf-8</code>. After looking at the sourcecode for the compile command, I see that it calls <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/src/commands/compile.rs#L105C15-L105C53\">precompile_module</a>, does this mean that a compiled component should be loaded with <code>Component::deserialize_file</code> instead?</li>\n<li>In the documentation of <code>Engine::precompile_module</code> it states the following:<blockquote>\n<p>The output of this method is safe to send to another host machine for later execution. As the output is already a compiled module, translation and code generation will be skipped and this will improve the performance of constructing a <a href=\"https://docs.rs/wasmtime/latest/wasmtime/struct.Module.html\"><code>Module</code></a> from the output of this method.</p>\n</blockquote>\n<p>Does this also apply if the other host machine has a different architecture? I suppose so, but I'm not 100% certain.</p>\n</li>\n</ol>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/main/src/commands/compile.rs#L105C15-L105C53\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/ed95258ebfc4d9460a2e686f2d3b9676c5f4449c/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f363665623538633463393763373833643264383765326533303738623365353937633632393465373466316436626232653964363161323961636134306131312f62797465636f6465616c6c69616e63652f7761736d74696d65&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/src/commands/compile.rs#L105C15-L105C53\" title=\"wasmtime/src/commands/compile.rs at main · bytecodealliance/wasmtime\">wasmtime/src/commands/compile.rs at main · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A fast and secure runtime for WebAssembly. Contribute to bytecodealliance/wasmtime development by creating an account on GitHub.</div></div></div>",
        "id": 436207826,
        "sender_full_name": "Friedrich Vandenberghe",
        "timestamp": 1714460484
    },
    {
        "content": "<blockquote>\n<p>If I'm comprehending the documentation correctly, this function isn't that different from <code>Engine::precompile_module</code>. Am I correct to assume this?</p>\n</blockquote>\n<p>Correct, with the minor correction that the matching function would be <code>Engine::precompile_component</code> (component vs module); <code>Component</code>/<code>Module::serialize</code> should produce the same output as <code>Engine::precompile_component</code>/<code>_module</code>.</p>",
        "id": 436262765,
        "sender_full_name": "Lann Martin",
        "timestamp": 1714480884
    },
    {
        "content": "<blockquote>\n<p>When I try to do <code>Component::from_file</code> on a component compiled with <code>wasmtime compile</code>, I get the following [...] does this mean that a compiled component should be loaded with <code>Component::deserialize_file</code> instead?</p>\n</blockquote>\n<p>Yep: <code>from_file</code> is for loading \"regular\" binary or text (WAT) wasm from a file. <code>deserialize_file</code> is for Wasmtime/Cranelift-precompiled \"cwasm\".</p>",
        "id": 436263443,
        "sender_full_name": "Lann Martin",
        "timestamp": 1714481105
    },
    {
        "content": "<blockquote>\n<p>In the documentation of <code>Engine::precompile_module</code> it states the following: The output of this method is safe to send to another host machine for later execution. [...] Does this also apply if the other host machine has a different architecture?</p>\n</blockquote>\n<p>It is \"safe\" in the sense that it will fail to load rather than execute incorrectly, but a precompiled cwasm contains native, non-portable binary code which will not work on a different architecture, and might not even work across different processor models with the same architecture due to different features/configuration. See <a href=\"https://docs.rs/wasmtime/20.0.0/wasmtime/struct.Module.html#method.deserialize\"><code>Module::deserialize</code></a> for details.</p>\n<p>It should be possible to cross-compile cwasm from one architecture to another through careful configuration of, e.g. <a href=\"https://docs.rs/wasmtime/20.0.0/wasmtime/struct.Config.html#method.target\"><code>Config::target</code></a>, but this is really an advanced use case and not something that I have personal experience with.</p>",
        "id": 436265189,
        "sender_full_name": "Lann Martin",
        "timestamp": 1714481674
    },
    {
        "content": "<p>Big thanks for the explanation! It all makes sense now.</p>",
        "id": 436895879,
        "sender_full_name": "Friedrich Vandenberghe",
        "timestamp": 1714746694
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"661362\">Friedrich Vandenberghe</span> has marked this topic as resolved.</p>",
        "id": 436895888,
        "sender_full_name": "Notification Bot",
        "timestamp": 1714746697
    }
]