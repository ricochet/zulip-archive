[
    {
        "content": "<p>Hi there! I am getting the following assertion failure on my project's CI (macos) with wasmtime 0.27.0 on module instantiation. Will bump to 0.28.0 and investigate further, but I thought I'd report it here first just in case: </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code>#<span class=\"w\"> </span><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'&lt;</span><span class=\"n\">unnamed</span><span class=\"o\">&gt;'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">assertion</span><span class=\"w\"> </span><span class=\"n\">failed</span>: <span class=\"err\">`</span><span class=\"p\">(</span><span class=\"n\">left</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">right</span><span class=\"p\">)</span><span class=\"err\">`</span><span class=\"w\"></span>\n#<span class=\"w\">   </span><span class=\"n\">left</span>: <span class=\"err\">`</span><span class=\"mi\">268435466</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"></span>\n#<span class=\"w\">  </span><span class=\"n\">right</span>: <span class=\"err\">`</span><span class=\"mi\">0</span><span class=\"err\">`</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"n\">exception</span><span class=\"w\"> </span><span class=\"n\">port</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">crates</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">traphandlers</span><span class=\"o\">/</span><span class=\"n\">macos</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">436</span>:<span class=\"mi\">9</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 245216562,
        "sender_full_name": "Thibault Charbonnier",
        "timestamp": 1625679696
    },
    {
        "content": "<p>Ping on this - this still happens everyday on macOS (GitHub actions) with wasmtime v0.28.0; does nobody else use wasmtime on macos and encounter this?</p>",
        "id": 247256872,
        "sender_full_name": "Thibault Charbonnier",
        "timestamp": 1627331059
    },
    {
        "content": "<p>macOS os tested on CI.</p>",
        "id": 247258791,
        "sender_full_name": "bjorn3",
        "timestamp": 1627332070
    },
    {
        "content": "<p>Just a guess, but is your CI restricted in any way? Or running an older macOS version?</p>",
        "id": 247258890,
        "sender_full_name": "bjorn3",
        "timestamp": 1627332123
    },
    {
        "content": "<p>The error code is 0x1000000a by the way.</p>",
        "id": 247259575,
        "sender_full_name": "bjorn3",
        "timestamp": 1627332422
    },
    {
        "content": "<p>This corresponds to <code>MACH_SEND_INVALID_RIGHT</code></p>",
        "id": 247259825,
        "sender_full_name": "bjorn3",
        "timestamp": 1627332574
    },
    {
        "content": "<p><a href=\"https://github.com/apple/darwin-xnu/blob/8f02f2a044b9bb1ad951987ef5bab20ec9486310/osfmk/mach/message.h#L1059\">https://github.com/apple/darwin-xnu/blob/8f02f2a044b9bb1ad951987ef5bab20ec9486310/osfmk/mach/message.h#L1059</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/apple/darwin-xnu/blob/8f02f2a044b9bb1ad951987ef5bab20ec9486310/osfmk/mach/message.h#L1059\" style=\"background-image: url(https://opengraph.githubassets.com/90406b127d4e3955c834e38f8e0c5700d4f9f47bc051b9889aff3742b6e87370/apple/darwin-xnu)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/apple/darwin-xnu/blob/8f02f2a044b9bb1ad951987ef5bab20ec9486310/osfmk/mach/message.h#L1059\" title=\"darwin-xnu/message.h at 8f02f2a044b9bb1ad951987ef5bab20ec9486310 · apple/darwin-xnu\">darwin-xnu/message.h at 8f02f2a044b9bb1ad951987ef5bab20ec9486310 · apple/darwin-xnu</a></div><div class=\"message_embed_description\">The Darwin Kernel (mirror). This repository is a pure mirror and contributions are currently not accepted via pull-requests, please submit your contributions via https://developer.apple.com/bug-rep...</div></div></div>",
        "id": 247259853,
        "sender_full_name": "bjorn3",
        "timestamp": 1627332593
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"302434\">@Thibault Charbonnier</span> sorry I don't think I saw this when it was originally posted! Can you describe your setup with macOS and CI a bit more? It looks like the <code>thread_set_exception_ports</code> call is failing, but I'm not sure why such a call would fail myself (I'm not super familiar with mach)</p>\n<p>We lifted most of our mach bits from spidermonkey and looking around there if this function call fails it basically disables wasm execution in firefox. In that sense this seems like it's not really expected to fail, so I'm not sure why it's failing!</p>\n<p>As mentioned, though, we do run CI on macOS, so everything should work. If previous versions of Wasmtime work for you do you think you'd be able to run a bisection to figure out the failing commit?</p>",
        "id": 247262448,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1627333482
    },
    {
        "content": "<p>No, it is <code>macos-latest</code> and the official release artifacts for v0.28.0 + clang</p>",
        "id": 247263041,
        "sender_full_name": "Thibault Charbonnier",
        "timestamp": 1627333653
    },
    {
        "content": "<p>hm ok so this is on GitHub Actions CI? Can you describe how you're embedding Wasmtime? (e.g. language and runtime and such)</p>",
        "id": 247263477,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1627333777
    },
    {
        "content": "<p>This is wasmtime inside of Nginx, running the proxy-wasm Rust SDK</p>",
        "id": 247263833,
        "sender_full_name": "Thibault Charbonnier",
        "timestamp": 1627333875
    },
    {
        "content": "<p>is the code for this public? (e.g. could I repro locally?)</p>",
        "id": 247263968,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1627333930
    },
    {
        "content": "<p>No it is not, sorry</p>",
        "id": 247264465,
        "sender_full_name": "Thibault Charbonnier",
        "timestamp": 1627334119
    },
    {
        "content": "<p>ah ok no worries, are you able to help out in narrowing this down and/or debugging it? Without a reproduction locally I'm not sure how this could happen so I'm not sure what's going on :(</p>",
        "id": 247264524,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1627334161
    },
    {
        "content": "<p>This is how nginx is built/link to wasmtime on macos when this assertion failure happens:</p>",
        "id": 247265878,
        "sender_full_name": "Thibault Charbonnier",
        "timestamp": 1627334794
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">nginx</span><span class=\"w\"> </span><span class=\"n\">version</span>: <span class=\"nc\">nginx</span><span class=\"o\">/</span><span class=\"mf\">1.21.1</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">ngx_wasm_module</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">dev</span><span class=\"w\"> </span><span class=\"n\">debug</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"p\">])</span><span class=\"w\"></span>\n<span class=\"n\">built</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"w\"> </span><span class=\"n\">clang</span><span class=\"w\"> </span><span class=\"mf\">12.0.0</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">clang</span><span class=\"o\">-</span><span class=\"mf\">1200.0.32.29</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">configure</span><span class=\"w\"> </span><span class=\"n\">arguments</span>: <span class=\"o\">--</span><span class=\"n\">build</span><span class=\"o\">='</span><span class=\"na\">ngx_wasm_module</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">dev</span><span class=\"w\"> </span><span class=\"n\">debug</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"p\">]</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">builddir</span><span class=\"o\">=/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">runner</span><span class=\"o\">/</span><span class=\"n\">work</span><span class=\"o\">/</span><span class=\"n\">ngx_wasm_module</span><span class=\"o\">/</span><span class=\"n\">ngx_wasm_module</span><span class=\"o\">/</span><span class=\"n\">work</span><span class=\"o\">/</span><span class=\"n\">buildroot</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">prefix</span><span class=\"o\">=/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">runner</span><span class=\"o\">/</span><span class=\"n\">work</span><span class=\"o\">/</span><span class=\"n\">ngx_wasm_module</span><span class=\"o\">/</span><span class=\"n\">ngx_wasm_module</span><span class=\"o\">/</span><span class=\"n\">t</span><span class=\"o\">/</span><span class=\"n\">servroot</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">with</span><span class=\"o\">-</span><span class=\"n\">cc</span><span class=\"o\">-</span><span class=\"n\">opt</span><span class=\"o\">='-</span><span class=\"n\">O0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">ggdb3</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">gdwarf</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">with</span><span class=\"o\">-</span><span class=\"n\">ld</span><span class=\"o\">-</span><span class=\"n\">opt</span><span class=\"o\">='</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Wl</span><span class=\"p\">,</span><span class=\"o\">-</span><span class=\"n\">rpath</span><span class=\"p\">,</span><span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">runner</span><span class=\"o\">/</span><span class=\"n\">hostedtoolcache</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"mf\">0.28.0</span><span class=\"o\">/</span><span class=\"n\">x64</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">with</span><span class=\"o\">-</span><span class=\"n\">debug</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">add</span><span class=\"o\">-</span><span class=\"n\">module</span><span class=\"o\">=/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">runner</span><span class=\"o\">/</span><span class=\"n\">work</span><span class=\"o\">/</span><span class=\"n\">ngx_wasm_module</span><span class=\"o\">/</span><span class=\"n\">ngx_wasm_module</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">add</span><span class=\"o\">-</span><span class=\"n\">dynamic</span><span class=\"o\">-</span><span class=\"n\">module</span><span class=\"o\">=/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">runner</span><span class=\"o\">/</span><span class=\"n\">work</span><span class=\"o\">/</span><span class=\"n\">ngx_wasm_module</span><span class=\"o\">/</span><span class=\"n\">ngx_wasm_module</span><span class=\"o\">/</span><span class=\"n\">work</span><span class=\"o\">/</span><span class=\"n\">downloads</span><span class=\"o\">/</span><span class=\"n\">echo</span><span class=\"o\">-</span><span class=\"n\">nginx</span><span class=\"o\">-</span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">add</span><span class=\"o\">-</span><span class=\"n\">dynamic</span><span class=\"o\">-</span><span class=\"n\">module</span><span class=\"o\">=/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">runner</span><span class=\"o\">/</span><span class=\"n\">work</span><span class=\"o\">/</span><span class=\"n\">ngx_wasm_module</span><span class=\"o\">/</span><span class=\"n\">ngx_wasm_module</span><span class=\"o\">/</span><span class=\"n\">work</span><span class=\"o\">/</span><span class=\"n\">downloads</span><span class=\"o\">/</span><span class=\"n\">headers</span><span class=\"o\">-</span><span class=\"n\">more</span><span class=\"o\">-</span><span class=\"n\">nginx</span><span class=\"o\">-</span><span class=\"n\">module</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 247265899,
        "sender_full_name": "Thibault Charbonnier",
        "timestamp": 1627334808
    },
    {
        "content": "<p>The same building options have worked fine on all other platforms and still do, only the macos-latest target has this assertion failure</p>",
        "id": 247266071,
        "sender_full_name": "Thibault Charbonnier",
        "timestamp": 1627334890
    },
    {
        "content": "<p>are you able to test this out locally and reproduce with a custom build of wasmtime?</p>",
        "id": 247266134,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1627334922
    },
    {
        "content": "<p>(e.g. can you test out changes to see if the error reproduces?)</p>",
        "id": 247266144,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1627334931
    },
    {
        "content": "<p>one wild guess is that a <a href=\"https://gist.github.com/alexcrichton/84f3d8dfc2c310f13d0ed4abc164552f\">patch like this</a> may change the output depending on whether TLS in nginx works differently or not</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://gist.github.com/alexcrichton/84f3d8dfc2c310f13d0ed4abc164552f\" style=\"background-image: url(https://github.githubassets.com/images/modules/gists/gist-og-image.png)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://gist.github.com/alexcrichton/84f3d8dfc2c310f13d0ed4abc164552f\" title=\"foo.diff\">foo.diff</a></div><div class=\"message_embed_description\">GitHub Gist: instantly share code, notes, and snippets.</div></div></div>",
        "id": 247266419,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1627335055
    },
    {
        "content": "<p>I don't have a mac handy but later on will do so</p>",
        "id": 247266438,
        "sender_full_name": "Thibault Charbonnier",
        "timestamp": 1627335062
    },
    {
        "content": "<p>oh does nginx do any sort of stack switching?</p>",
        "id": 247266555,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1627335124
    },
    {
        "content": "<p>and/or coroutines?</p>",
        "id": 247266583,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1627335126
    },
    {
        "content": "<p>coroutines: it is entirely single-threaded, async I/O (by way of select/epoll/kqueue...); but for now we compile modules when worker process start, and enter/leave any and all wasm stacks before nginx does any sort of yielding - there's no pausing needed of any sort; unless there are other things wasmtime does I am not aware of</p>",
        "id": 247267207,
        "sender_full_name": "Thibault Charbonnier",
        "timestamp": 1627335484
    },
    {
        "content": "<p>so there is stack switching somewhere in nginx? (or your embedding/moudule within nginx)</p>\n<p>without async enabled (which it isn't in the C API) wasmtime itself does no stack switching</p>",
        "id": 247267304,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1627335563
    },
    {
        "content": "<p>no stack switching of any sort that I can think of no; only level-triggered events and each connection/fd gets it own wasmtime instance at the moment and it seems to have worked well so far</p>",
        "id": 247269105,
        "sender_full_name": "Thibault Charbonnier",
        "timestamp": 1627336582
    },
    {
        "content": "<p>Oh, that may have something to do with the proxy-wasm SDK now that I think of it... <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> (It uses <code>thread_local!</code>, not sure if that is a clue...)</p>",
        "id": 247269273,
        "sender_full_name": "Thibault Charbonnier",
        "timestamp": 1627336701
    }
]