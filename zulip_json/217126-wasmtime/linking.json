[
    {
        "content": "<p>Is it possible to create an instance that has the symbols for all added modules exposed? In particualar, I have modules that share an address space, but all have there own versions of the same API. I would like to be able to call them in sequence, one function, e.g. \"compute\", generating output for the next, and so on. However, when I link together ansd then create an instance it only has the final modules exports. </p>\n<p>Here is the outline of code for building the instance:</p>\n<div class=\"codehilite\"><pre><span></span><code>  let mut linker = Linker::new(&amp;store);\n   linker.allow_shadowing(true);\n    // add all but module 0 to the linker, ready for linking with module 0\n    for i in 1..wasm_bytes.len() {\n        let module = Module::new(store.engine(), &amp;wasm_bytes[i][..])?;\n        let module_name = [MODULE_PREFIX, &amp;i.to_string()].join(&quot;_&quot;);\n        linker.module(&amp;module_name, &amp;module)?;\n    }\n    // now link with module 0\n    let module = Module::new(store.engine(), &amp;wasm_bytes[0][..])?;\n    let instance = linker.instantiate(&amp;module)?;\n</code></pre></div>\n\n\n<p>and if we now enumerate the names we only get those from module 0:</p>\n<div class=\"codehilite\"><pre><span></span><code>    println!(&quot;printing names:&quot;);\n    for e in instance.exports() {\n        println!(&quot;name: {}&quot;, e.name());\n    }\n</code></pre></div>",
        "id": 208792073,
        "sender_full_name": "cuberoo_",
        "timestamp": 1599034351
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"336799\">@cuberoo_</span> I don't think that's natively exposed right now, but you can always instantiate modules yourself and create a hash map of th exports</p>",
        "id": 208842759,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1599060711
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span> thanks. is it the case that if each module uses the same store that they will have a shared address space or is it possible that they might have buffers allocated at shared \"addresses\"? For example, if module A has a global AG and module B a global BG, can B write to AG, given an index provided by A, and so on?</p>",
        "id": 208844685,
        "sender_full_name": "cuberoo_",
        "timestamp": 1599061412
    },
    {
        "content": "<p>that's up to you and how you set up the linear memories, wasmtime itself just does what you ask it</p>",
        "id": 208844800,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1599061455
    },
    {
        "content": "<p>e.g. in this case it sounds like you want all the modules importing the same memory</p>",
        "id": 208844833,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1599061465
    },
    {
        "content": "<p>ok cool. thanks</p>",
        "id": 208844948,
        "sender_full_name": "cuberoo_",
        "timestamp": 1599061512
    }
]