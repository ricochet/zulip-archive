[
    {
        "content": "<p>Hello! I can run wasmtime with my WASM module just fine on Linux, but on Windows, I get the error \"Compilation error: Implementation limit exceeded\" during the creation of a module using \"Module::new_with_name\". Any idea what this could be caused by?</p>",
        "id": 198068995,
        "sender_full_name": "Jakub Hlusička",
        "timestamp": 1589896585
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"300100\">@Jakub Hlusička</span> you're likely running into <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1587\">https://github.com/bytecodealliance/wasmtime/issues/1587</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/issues/1587\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/issues/1587\" title=\"Rust doesn't work by default on Windows · Issue #1587 · bytecodealliance/wasmtime\">Rust doesn't work by default on Windows · Issue #1587 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">I ran across this uptream in cargo-wasi, but this fails to work in this repository, but only on Windows: $ echo &quot;#[test] fn foo() {}&quot; &gt;&gt; foo.rs $ rustc foo.rs --target wasm32-wasi -...</div></div></div>",
        "id": 198069849,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1589896936
    },
    {
        "content": "<p>Thanks, I will keep an eye on the issue. :)</p>",
        "id": 198071587,
        "sender_full_name": "Jakub Hlusička",
        "timestamp": 1589897626
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"300100\">@Jakub Hlusička</span>.  I've put up a fix for the issue that will hopefully get merged after review.</p>",
        "id": 198267170,
        "sender_full_name": "Peter Huene",
        "timestamp": 1590014996
    },
    {
        "content": "<p>The PR is here: <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1734\">https://github.com/bytecodealliance/wasmtime/pull/1734</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/1734\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/1734\" title=\"Cranelift: Fix FPR saving and shadow space allocation for Windows x64. by peterhuene · Pull Request #1734 · bytecodealliance/wasmtime\">Cranelift: Fix FPR saving and shadow space allocation for Windows x64. by peterhuene · Pull Request #1734 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">This PR fixes both how FPR callee-saved registers are saved and how the\nshadow space allocation occurs when laying out the stack for Windows x64\ncalling convention.\nImportantly, this PR removes the...</div></div></div>",
        "id": 198267228,
        "sender_full_name": "Peter Huene",
        "timestamp": 1590015020
    },
    {
        "content": "<p>Thank you for fixing the issue, it seems to be working properly now! :)</p>",
        "id": 198585023,
        "sender_full_name": "Jakub Hlusička",
        "timestamp": 1590329589
    }
]