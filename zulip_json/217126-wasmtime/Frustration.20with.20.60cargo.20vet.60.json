[
    {
        "content": "<p>I'm at a point where I need to at least vent a bit of frustration with <code>cargo vet</code>. As time goes on I feel like we know less and less of how <code>cargo vet</code> works and it becomes more and more of a black box that everyone just punts questions to someone else for. I also feel like if I can't figure out how to get something working with <code>cargo vet</code> then it just doesn't get done and we have to work around it one way or another, which isn't a great feeling for me as I'm generally just as much in the dark about others when it comes to <code>cargo vet</code>.</p>\n<p>In the immediate term I have no idea <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9808\">why this PR is failing</a> for <code>cargo vet</code>. If I run the CI commands locally I can't get the same failure. The PR changes <code>supply-chain/*.toml</code> files which seems highly likely to be relevant but if I revert the changes locally and run <code>cargo vet</code> then it changes the files again. I can't figure out what the difference is.</p>\n<p>Additionally in that PR I'm adding a new crate which I'm now dreading because I know it's going to cause issues in the future. We have a common issue where <code>cargo vet</code> is going to pass until that crate is published. Once it's published it's going to break our CI on <code>main</code> and there's nothing we can do about it. We can't add annotations now because it's not published, and it's not published because it has to land in-tree first. </p>\n<p>Overall I'm personally relatively frustrated with <code>cargo vet</code> in that it's a really great property to have for the project and I don't want to give it up but I feel like it's always suffered from key usability issues that haven't gotten resolved. Forcibly breaking our CI every time we add a new crate is quite bad IMO and we've had a relatively long history of being unable to reproduce CI issues locally. I suspect I'm missing something here but everything is so opaque I have no idea where to start to figure out what the difference is.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/9808\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/50db89f443d783adf6fff56459d4d7118688e3e8/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f643931356132313339316365393361333237643465646233363766316261666330356332313838376638313330316665326333336234316434623465653431642f62797465636f6465616c6c69616e63652f7761736d74696d652f70756c6c2f39383038&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/9808\" title=\"pulley: Implement float arithmetic operations by alexcrichton · Pull Request #9808 · bytecodealliance/wasmtime\">pulley: Implement float arithmetic operations by alexcrichton · Pull Request #9808 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Fill out enough to get f32.wast and f64.wast spec tests working. A minor ABI issue was discovered along the way which is also required to get a new test working on both 32 and 64-bit platforms.\ncc ...</div></div></div>",
        "id": 488887403,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1734110552
    },
    {
        "content": "<p>I'm going to try to hack around the failure in my PR, but it means I'm about to check in a state to the repo where if anyone runs <code>cargo vet</code> locally then it just breaks and can't land the PR (the same state that PR is in). Doesn't feel great</p>",
        "id": 488887776,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1734110686
    },
    {
        "content": "<p>It might be worth re-evaluating the assumptions we made at the time we adopted the tool, too: the idea was that there would be a shared effort in vetting and that the burden would be relatively minimal. Could we take an objective look at that -- has it happened, how many vets have we had to do, what's the opportunity cost (which features, PRs, ... have we declined because they would bring in more vetting overhead), etc. Good topic for next Wasmtime meeting?</p>",
        "id": 488890131,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1734111545
    },
    {
        "content": "<p>fwiw, the last few dep updates I've done haven't run into any issues with <code>cargo vet</code> but you also do that kind of thing way more than I do</p>",
        "id": 488890910,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1734111802
    },
    {
        "content": "<p>I don't personally want to champion anything to say we should remove the tool, but I also at the same time don't think we're in a great spot. I do think that factually we haven't really been doing many vets relative to the amount of time we've been using <code>cargo vet</code></p>",
        "id": 488890946,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1734111820
    },
    {
        "content": "<p>it is probably worth filing an issue upstream and seeing what they have to say</p>",
        "id": 488891102,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1734111856
    },
    {
        "content": "<p>Personally I find it difficult to talk about issues with <code>cargo vet</code> because everything is so unclear, the (reasonable) knee-jerk reaction is \"well how can we fix that problem\" and I can't even articulate what the problem is really</p>",
        "id": 488891122,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1734111863
    },
    {
        "content": "<p>I filed an issue awhile ago for the major issue we have (a new great guarantees a CI break in the future), lemme find it</p>",
        "id": 488891194,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1734111889
    },
    {
        "content": "<p>I do think it is a really important part of our overall security story, so I'd much prefer working with upstream to resolve issues than giving it up</p>",
        "id": 488891199,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1734111891
    },
    {
        "content": "<p><a href=\"https://github.com/mozilla/cargo-vet/issues/604\">https://github.com/mozilla/cargo-vet/issues/604</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/mozilla/cargo-vet/issues/604\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/468fb5121e75e3f5fe758b8375d3db4989790e65/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f326262356534336232316636383033333736313239383934323966326539313434633765653135313936643338383464333062323965663564376335373331632f6d6f7a696c6c612f636172676f2d7665742f6973737565732f363034&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/mozilla/cargo-vet/issues/604\" title=\"Adding new crates to a workspace and forgetting `audit-as-crates-io` · Issue #604 · mozilla/cargo-vet\">Adding new crates to a workspace and forgetting `audit-as-crates-io` · Issue #604 · mozilla/cargo-vet</a></div><div class=\"message_embed_description\">Over in Wasmtime I've noticed some odd behavior around cargo vet which I think can probably be attributed to forgetting to add new entries with audit-as-crates-io. I am not 100% certain of this seq...</div></div></div>",
        "id": 488891254,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1734111906
    },
    {
        "content": "<p>my impression is that development on cargo-vet has slowed down a lot</p>",
        "id": 488891284,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1734111917
    },
    {
        "content": "<p>yeah :-/</p>",
        "id": 488891657,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1734112037
    }
]