[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span> Can you help me understand what's going on in this code: <a href=\"https://github.com/bytecodealliance/wasmtime/pull/957/files?diff=unified&amp;w=1#diff-af6ebc80017af9e760df6358eeae6b00R606\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/957/files?diff=unified&amp;w=1#diff-af6ebc80017af9e760df6358eeae6b00R606\">https://github.com/bytecodealliance/wasmtime/pull/957/files?diff=unified&amp;w=1#diff-af6ebc80017af9e760df6358eeae6b00R606</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/957/files?diff=unified&amp;w=1#diff-af6ebc80017af9e760df6358eeae6b00R606\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/64996?s=400&amp;v=4)\" target=\"_blank\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/957/files?diff=unified&amp;w=1#diff-af6ebc80017af9e760df6358eeae6b00R606\" target=\"_blank\" title=\"Pre-generate trampoline functions by alexcrichton 路 Pull Request #957 路 bytecodealliance/wasmtime\">Pre-generate trampoline functions by alexcrichton 路 Pull Request #957 路 bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">The wasmtime crate supports calling arbitrary function signatures in\nwasm code, and to do this it generates &quot;trampoline functions&quot; which have\na known ABI that then internally convert to a...</div></div></div>",
        "id": 190318989,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1583953468
    },
    {
        "content": "<p>It looks like <code>*ptr</code> is meant to be the <code>u128</code> value in memory. But then in the next line, <code>*ptr</code> is the pointer to the <code>u128</code>?</p>",
        "id": 190319035,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1583953504
    },
    {
        "content": "<p>oh that's a helper for reading a value from <code>*mut u128</code> and automatically incrementing the <code>*mut u128</code> if something was read</p>",
        "id": 190319051,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1583953510
    },
    {
        "content": "<p>it's more like a <code>*mut *mut u128</code></p>",
        "id": 190319080,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1583953526
    },
    {
        "content": "<p>oh</p>",
        "id": 190319099,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1583953537
    },
    {
        "content": "<p>no that's just straight up buggy</p>",
        "id": 190319110,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1583953541
    },
    {
        "content": "<p>ah, ok</p>",
        "id": 190319133,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1583953550
    },
    {
        "content": "<p>yeah no all of those are buggy</p>",
        "id": 190319142,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1583953556
    },
    {
        "content": "<p>wow I am bad at testing apparentluy</p>",
        "id": 190319147,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1583953561
    }
]