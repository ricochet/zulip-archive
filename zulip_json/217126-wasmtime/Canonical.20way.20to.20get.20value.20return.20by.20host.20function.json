[
    {
        "content": "<p>Hi, I'm trying to use rust wasmtime engine to instantiate wasm module and call its function, the function in the module could call some host functions to read some data on host machine, is there any canonical way to return the value to the wasm function? The current possible way I'm doing is by using get_export(\"memory\") to get Memory for the wasm instance and write back the data to the Memory which wasm instance function can read, but want to see if there is any better way for this purpose? Thanks in advance!</p>",
        "id": 484788081,
        "sender_full_name": "Stephen",
        "timestamp": 1732736517
    },
    {
        "content": "<p>What you want is the component model, and the <code>wit-bindgen</code> tool. It lets you define interfaces at a higher level, including with types like strings and lists, and generates bindings within the Wasm module and on the host side that let you call functions easily. You'll find examples in our documentation <a href=\"https://component-model.bytecodealliance.org/\">here</a>. Let us know if you have any questions!</p>",
        "id": 484789683,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1732737247
    },
    {
        "content": "<p>Cool, will read this, thanks!</p>",
        "id": 484794527,
        "sender_full_name": "Stephen",
        "timestamp": 1732739491
    }
]