[
    {
        "content": "<p>How can I inspect the output of the AOT compiler, i.e. the .cwasm file?<br>\nI'd like to see the quality of the resulting code.<br>\nSo far, I have not been able to see any significant performance advantage of using ahead of time compilation with wasmtime, as compared to wamr where the advantage is significant.</p>",
        "id": 398643251,
        "sender_full_name": "Mats Brorsson",
        "timestamp": 1698310254
    },
    {
        "content": "<p>You can use <code>objdump -d out.cwasm</code> to disassemble the <code>.cwasm</code> file.</p>\n<p>The generated code is the same, no matter if you do ahead-of-time or just-in-time compilation. You only gain not having to recompile every time you run your wasm module.</p>",
        "id": 398653081,
        "sender_full_name": "Martin Fink",
        "timestamp": 1698313698
    },
    {
        "content": "<p>Thanks! You do not happen to know how to disassemble the output of wamrc, do you?</p>",
        "id": 398654751,
        "sender_full_name": "Mats Brorsson",
        "timestamp": 1698314376
    },
    {
        "content": "<p>Unfortunately not, as I've never worked with wamr. If it also produces ELF binaries, <code>objdump</code> might work there as well, but that's just a guess.</p>",
        "id": 398656688,
        "sender_full_name": "Martin Fink",
        "timestamp": 1698315009
    },
    {
        "content": "<p>It happens to be an ELF file but that is an internal detail, not something that can be relied upon. But because of that, you can use <code>objdump</code> and similar tools to inspect it.</p>\n<p>AOT compilation doesn't do anymore optimizations than JIT compilation, it just allows you to do it ahead of time, and do things like not have a compiler at the location where you are running code.</p>",
        "id": 398720689,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1698336033
    },
    {
        "content": "<p>AOT also enables <code>mmap</code>ing code/static data from disk, which can be very useful for some workloads.</p>",
        "id": 398721173,
        "sender_full_name": "Lann Martin",
        "timestamp": 1698336153
    },
    {
        "content": "<p>the primary motivation of wasmtime AOT is to allow the code generation and code execution to take place on different processes/machines/etc, which serverless use cases like fastly, where we compile to cwasm in our control plane and deploy the cwasm to edge nodes. in addition to deduplicating that workload from a large number of systems to just a single system, it also enables us to statically configure wasmtime to not even include the ability to generate code out on edge nodes (by way of cargo features - you can disable cranelift altogether, which means Module::new wont work, just Module::load), for the sake of the principle of least privilege</p>",
        "id": 398733960,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1698340910
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"253990\">fitzgen (he/him)</span> <a href=\"#narrow/stream/217126-wasmtime/topic/Format.20of.20.2Ecwasm.20file.3F/near/398720689\">said</a>:</p>\n<blockquote>\n<p>It happens to be an ELF file but that is an internal detail, not something that can be relied upon. But because of that, you can use <code>objdump</code> and similar tools to inspect it.</p>\n<p>AOT compilation doesn't do anymore optimizations than JIT compilation, it just allows you to do it ahead of time, and do things like not have a compiler at the location where you are running code.</p>\n</blockquote>\n<p>Unfortunately this does not work for me:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">objdump</span>: <span class=\"nc\">basicmath</span><span class=\"p\">.</span><span class=\"n\">aot</span>: <span class=\"nc\">file</span><span class=\"w\"> </span><span class=\"n\">format</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">recognized</span>\n</code></pre></div>",
        "id": 399269742,
        "sender_full_name": "Mats Brorsson",
        "timestamp": 1698661005
    },
    {
        "content": "<p>How did you generate <code>basicmath.aot</code>?</p>\n<p>For example locally I get:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">cat</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"p\">.</span><span class=\"n\">wat</span>\n<span class=\"p\">(</span><span class=\"n\">module</span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">table</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">funcref</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">param</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"n\">call_indirect</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">local</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">))</span>\n<span class=\"w\">  </span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n<span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">compile</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"p\">.</span><span class=\"n\">wat</span>\n<span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">objdump</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">S</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"p\">.</span><span class=\"n\">cwasm</span>\n\n<span class=\"n\">foo</span><span class=\"p\">.</span><span class=\"n\">cwasm</span>:      <span class=\"nc\">file</span><span class=\"w\"> </span><span class=\"n\">format</span><span class=\"w\"> </span><span class=\"n\">elf64</span><span class=\"o\">-</span><span class=\"n\">littleaarch64</span>\n\n<span class=\"n\">Disassembly</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">section</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">text</span>:\n\n<span class=\"mi\">0000000000000000</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">wasm</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>::<span class=\"n\">function</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">&gt;</span>:\n       <span class=\"mi\">0</span>: <span class=\"mi\">7</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"mi\">23</span><span class=\"w\"> </span><span class=\"mi\">03</span><span class=\"w\"> </span><span class=\"n\">d5</span><span class=\"w\">   </span><span class=\"n\">hint</span><span class=\"w\">    </span>#<span class=\"mi\">27</span>\n<span class=\"w\">       </span><span class=\"mi\">4</span>: <span class=\"nc\">fd</span><span class=\"w\"> </span><span class=\"mi\">7</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"n\">bf</span><span class=\"w\"> </span><span class=\"n\">a9</span><span class=\"w\">   </span><span class=\"n\">stp</span><span class=\"w\">     </span><span class=\"n\">x29</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x30</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">sp</span><span class=\"p\">,</span><span class=\"w\"> </span>#<span class=\"o\">-</span><span class=\"mi\">16</span><span class=\"p\">]</span><span class=\"o\">!</span>\n<span class=\"o\">..</span><span class=\"p\">.</span>\n</code></pre></div>",
        "id": 399303155,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1698673052
    }
]