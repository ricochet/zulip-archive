[
    {
        "content": "<p>Another strange behavior; the docs says that <code>wasm_engine_new_with_config</code> takes ownership of the config, yet ASAN reports the following leak after <code>wasm_engine_delete</code>: </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">=================================================================</span><span class=\"w\"></span>\n<span class=\"o\">==</span><span class=\"mi\">19300</span><span class=\"o\">==</span><span class=\"n\">ERROR</span>: <span class=\"nc\">LeakSanitizer</span>: <span class=\"nc\">detected</span><span class=\"w\"> </span><span class=\"n\">memory</span><span class=\"w\"> </span><span class=\"n\">leaks</span><span class=\"w\"></span>\n\n<span class=\"n\">Direct</span><span class=\"w\"> </span><span class=\"n\">leak</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"w\"> </span><span class=\"n\">byte</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">object</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">allocated</span><span class=\"w\"> </span><span class=\"n\">from</span>:\n    #<span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mh\">0x562625452c09</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">malloc</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">chasum</span><span class=\"o\">/</span><span class=\"n\">code</span><span class=\"o\">/</span><span class=\"n\">ngx_wasm_module</span><span class=\"o\">/</span><span class=\"n\">work</span><span class=\"o\">/</span><span class=\"n\">buildroot</span><span class=\"o\">/</span><span class=\"n\">nginx</span><span class=\"o\">+</span><span class=\"mh\">0x161c09</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span>#<span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mh\">0x7fc0aefcfc3e</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">alloc</span>::<span class=\"n\">alloc</span>::<span class=\"n\">alloc</span>::<span class=\"n\">h8eea693b11397046</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">chasum</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">rustup</span><span class=\"o\">/</span><span class=\"n\">toolchains</span><span class=\"o\">/</span><span class=\"n\">stable</span><span class=\"o\">-</span><span class=\"n\">x86_64</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">rustlib</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">rust</span><span class=\"o\">/</span><span class=\"n\">library</span><span class=\"o\">/</span><span class=\"n\">alloc</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">alloc</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">86</span>:<span class=\"mi\">14</span><span class=\"w\"></span>\n<span class=\"w\">    </span>#<span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"mh\">0x7fc0aefcfc3e</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">alloc</span>::<span class=\"n\">alloc</span>::<span class=\"n\">Global</span>::<span class=\"n\">alloc_impl</span>::<span class=\"n\">hdd19e4608fbda4e9</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">chasum</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">rustup</span><span class=\"o\">/</span><span class=\"n\">toolchains</span><span class=\"o\">/</span><span class=\"n\">stable</span><span class=\"o\">-</span><span class=\"n\">x86_64</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">rustlib</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">rust</span><span class=\"o\">/</span><span class=\"n\">library</span><span class=\"o\">/</span><span class=\"n\">alloc</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">alloc</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">166</span>:<span class=\"mi\">73</span><span class=\"w\"></span>\n<span class=\"w\">    </span>#<span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"mh\">0x7fc0aefcfc3e</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"cp\">$LT$alloc</span><span class=\"o\">..</span><span class=\"n\">alloc</span><span class=\"o\">..</span><span class=\"n\">Global</span><span class=\"cp\">$u20$as$u20$core</span><span class=\"o\">..</span><span class=\"n\">alloc</span><span class=\"o\">..</span><span class=\"n\">Allocator</span><span class=\"cp\">$GT$</span>::<span class=\"n\">allocate</span>::<span class=\"n\">hf61e18fb7f49870e</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">chasum</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">rustup</span><span class=\"o\">/</span><span class=\"n\">toolchains</span><span class=\"o\">/</span><span class=\"n\">stable</span><span class=\"o\">-</span><span class=\"n\">x86_64</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">rustlib</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">rust</span><span class=\"o\">/</span><span class=\"n\">library</span><span class=\"o\">/</span><span class=\"n\">alloc</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">alloc</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">226</span>:<span class=\"mi\">9</span><span class=\"w\"></span>\n<span class=\"w\">    </span>#<span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"mh\">0x7fc0aefcfc3e</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">alloc</span>::<span class=\"n\">alloc</span>::<span class=\"n\">exchange_malloc</span>::<span class=\"n\">h1859a431711d6c17</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">chasum</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">rustup</span><span class=\"o\">/</span><span class=\"n\">toolchains</span><span class=\"o\">/</span><span class=\"n\">stable</span><span class=\"o\">-</span><span class=\"n\">x86_64</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">rustlib</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">rust</span><span class=\"o\">/</span><span class=\"n\">library</span><span class=\"o\">/</span><span class=\"n\">alloc</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">alloc</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">316</span>:<span class=\"mi\">11</span><span class=\"w\"></span>\n<span class=\"w\">    </span>#<span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"mh\">0x7fc0aefcfc3e</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">alloc</span>::<span class=\"n\">boxed</span>::<span class=\"nb\">Box</span><span class=\"cp\">$LT$T$GT$</span>::<span class=\"n\">new</span>::<span class=\"n\">h01edfadf503f5f89</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">chasum</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">rustup</span><span class=\"o\">/</span><span class=\"n\">toolchains</span><span class=\"o\">/</span><span class=\"n\">stable</span><span class=\"o\">-</span><span class=\"n\">x86_64</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">rustlib</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">rust</span><span class=\"o\">/</span><span class=\"n\">library</span><span class=\"o\">/</span><span class=\"n\">alloc</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">boxed</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">185</span>:<span class=\"mi\">9</span><span class=\"w\"></span>\n<span class=\"w\">    </span>#<span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"mh\">0x7fc0aefcfc3e</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"n\">error</span>::<span class=\"n\">handle_result</span>::<span class=\"n\">h8723cdd7ac184b74</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">chasum</span><span class=\"o\">/</span><span class=\"n\">code</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">crates</span><span class=\"o\">/</span><span class=\"n\">c</span><span class=\"o\">-</span><span class=\"n\">api</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">error</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">26</span>:<span class=\"mi\">28</span><span class=\"w\"></span>\n<span class=\"w\">    </span>#<span class=\"mi\">7</span><span class=\"w\"> </span><span class=\"mh\">0x7fc0aefcfc3e</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">wasmtime_config_strategy_set</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">chasum</span><span class=\"o\">/</span><span class=\"n\">code</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">crates</span><span class=\"o\">/</span><span class=\"n\">c</span><span class=\"o\">-</span><span class=\"n\">api</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">109</span>:<span class=\"mi\">5</span><span class=\"w\"></span>\n<span class=\"w\">    </span>#<span class=\"mi\">8</span><span class=\"w\"> </span><span class=\"mh\">0x5626257c5363</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">ngx_wavm_engine_init</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">chasum</span><span class=\"o\">/</span><span class=\"n\">code</span><span class=\"o\">/</span><span class=\"n\">ngx_wasm_module</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">wasm</span><span class=\"o\">/</span><span class=\"n\">vm</span><span class=\"o\">/</span><span class=\"n\">ngx_wavm</span><span class=\"p\">.</span><span class=\"n\">c</span>:<span class=\"mi\">102</span>:<span class=\"mi\">12</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"></span>\n</code></pre></div>\n<p>All this config specifies is a compiler (lightbeam)</p>",
        "id": 247257088,
        "sender_full_name": "Thibault Charbonnier",
        "timestamp": 1627331164
    },
    {
        "content": "<p>On this leak issue, Valgrind complains about a number of leaks/uninitialized bytes within wasmtime &amp; wasm parsers, I'll post them here as well</p>",
        "id": 247257339,
        "sender_full_name": "Thibault Charbonnier",
        "timestamp": 1627331305
    },
    {
        "content": "<p>It does indeed take ownership of the config itself. See the <code>Box&lt;wasm_config_t&gt;</code> as argument at <a href=\"https://github.com/bytecodealliance/wasmtime/blob/a2cfddff9c207704a76eee9cb8ba681d0cb96ebd/crates/c-api/src/engine.rs#L30\">https://github.com/bytecodealliance/wasmtime/blob/a2cfddff9c207704a76eee9cb8ba681d0cb96ebd/crates/c-api/src/engine.rs#L30</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/a2cfddff9c207704a76eee9cb8ba681d0cb96ebd/crates/c-api/src/engine.rs#L30\" style=\"background-image: url(https://opengraph.githubassets.com/c8e033ae94b3c83133dde43d2aa78ce2092dffa4cecceb8a30b80aa5a7b3129d/bytecodealliance/wasmtime)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/a2cfddff9c207704a76eee9cb8ba681d0cb96ebd/crates/c-api/src/engine.rs#L30\" title=\"wasmtime/engine.rs at a2cfddff9c207704a76eee9cb8ba681d0cb96ebd · bytecodealliance/wasmtime\">wasmtime/engine.rs at a2cfddff9c207704a76eee9cb8ba681d0cb96ebd · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Standalone JIT-style runtime for WebAssembly, using Cranelift - wasmtime/engine.rs at a2cfddff9c207704a76eee9cb8ba681d0cb96ebd · bytecodealliance/wasmtime</div></div></div>",
        "id": 247258449,
        "sender_full_name": "bjorn3",
        "timestamp": 1627331887
    },
    {
        "content": "<p>Do you free the error returned by <code>wasm_config_strategy_set</code>?</p>",
        "id": 247258611,
        "sender_full_name": "bjorn3",
        "timestamp": 1627331986
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"302434\">@Thibault Charbonnier</span></p>",
        "id": 247258740,
        "sender_full_name": "bjorn3",
        "timestamp": 1627332040
    },
    {
        "content": "<p>It's not expected that anything should leak in the C API, so you may be forgetting to call a destructor (or similar), but there's always the possibility of a bug! If you can post the other leaks you're seeing I can try to help out a bit in debugging</p>",
        "id": 247262698,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1627333555
    },
    {
        "content": "<p>I don't think it is returning any error</p>",
        "id": 247263717,
        "sender_full_name": "Thibault Charbonnier",
        "timestamp": 1627333841
    },
    {
        "content": "<p>To confirm, you're checking the return value of <code>wasmtime_config_strategy_set</code> and it's returning <code>NULL</code>? (if it returns non-null then the error needs to be deallocated)n</p>",
        "id": 247263886,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1627333902
    },
    {
        "content": "<p>Indeed it is returning an error! Strange, I am only calling it as such:</p>\n<p>err = wasmtime_config_strategy_set(wasm_config, WASMTIME_STRATEGY_LIGHTBEAM);</p>\n<p>However, wasm_trap_message on this error triggers a segfault</p>",
        "id": 247264521,
        "sender_full_name": "Thibault Charbonnier",
        "timestamp": 1627334160
    },
    {
        "content": "<p>Ah I believe that's because lightbeam is disabled at compile-time by default. The <code>wasm_trap_message</code> function operates on a <code>wasm_trap_t</code> whereas the error is a <code>wasmtime_error_t</code> which uses  <code>wasmtime_error_message</code> to extract the message</p>",
        "id": 247264654,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1627334219
    },
    {
        "content": "<p>(fwiw you probably don't want lightbeam because AFAIK it doesn't work even for simple modules at this time)</p>",
        "id": 247264686,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1627334243
    },
    {
        "content": "<p>I do in this case, this is for Valgrind testing</p>",
        "id": 247264708,
        "sender_full_name": "Thibault Charbonnier",
        "timestamp": 1627334253
    },
    {
        "content": "<p>Other compilers are much too slow</p>",
        "id": 247264728,
        "sender_full_name": "Thibault Charbonnier",
        "timestamp": 1627334263
    },
    {
        "content": "<p>oh sure, I just mean that I don't think lightbeam will actually successfully even compile anything</p>",
        "id": 247264773,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1627334282
    },
    {
        "content": "<p>and then nothing can run if nothing compiles</p>",
        "id": 247264825,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1627334293
    },
    {
        "content": "<p>Oh?</p>",
        "id": 247264834,
        "sender_full_name": "Thibault Charbonnier",
        "timestamp": 1627334298
    },
    {
        "content": "<p>you can try to recompile wasmtime with lightbeam support but you'll probably run into either Rust panics or compile-time errors for wasm modules</p>",
        "id": 247264893,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1627334329
    },
    {
        "content": "<p>So yes, this is a local build of wasmtime (not like the macos assertion)</p>",
        "id": 247264926,
        "sender_full_name": "Thibault Charbonnier",
        "timestamp": 1627334350
    },
    {
        "content": "<p>you should be able to build in lightbeam support with <code>--features lightbeam</code>, but we don't test lightbeam on CI (only that it builds, not that it runs), so it's unlikely to help you get much further</p>",
        "id": 247264999,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1627334394
    },
    {
        "content": "<p>So that makes wasmtime practically untestable with Valgrind then</p>",
        "id": 247265096,
        "sender_full_name": "Thibault Charbonnier",
        "timestamp": 1627334421
    },
    {
        "content": "<p>Ok, good to know! Thanks</p>",
        "id": 247265120,
        "sender_full_name": "Thibault Charbonnier",
        "timestamp": 1627334435
    },
    {
        "content": "<p>one thing you could potentially do is compiling a module using <code>wasmtime compile</code> without Valgrind, and then running it under Valgrind. That takes the Cranelift codegen out of coverage, but obviously that'd be the case when using Lightbeam as well</p>",
        "id": 247265534,
        "sender_full_name": "Till Schneidereit",
        "timestamp": 1627334631
    },
    {
        "content": "<p>Yes; thanks for the suggestion!</p>",
        "id": 247265659,
        "sender_full_name": "Thibault Charbonnier",
        "timestamp": 1627334678
    },
    {
        "content": "<p>Thank you all again for the tips &amp; info on lightbeam! I only see Valgrind complaining about a single uninitialized bytes in the wasm parser's <code>end</code> method, but it isn't reported by Valgrind 3.16 and above; maybe a false positive.</p>",
        "id": 247625599,
        "sender_full_name": "Thibault Charbonnier",
        "timestamp": 1627584793
    }
]