[
    {
        "content": "<p>Was playing around with wit-bindgen specifically generate!({}); yesterday and I noticed that alloc and dealloc methods aren't implemented(used cargo-expand). I know for complex objects we allocate in wasm and fill in data before we pass to methods but was just curious why alloc and dealloc are not also generated as well</p>",
        "id": 406322520,
        "sender_full_name": "Cwasi4wasm",
        "timestamp": 1701874518
    },
    {
        "content": "<p>Allocation is currently all done through the <code>realloc</code> canonical ABI option. This is manifested through <code>wit-component</code>'s convention of the <code>cabi_realloc</code> function which is the default allocator used for all functions. In Rust that's part of the <code>wit-bindgen</code> crate which gets linked into the runtime.</p>",
        "id": 406338039,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1701878801
    },
    {
        "content": "<p>That is very interesting! Is there somewhere I can read further about how abi's work especially in this context?</p>",
        "id": 406338351,
        "sender_full_name": "Cwasi4wasm",
        "timestamp": 1701878897
    },
    {
        "content": "<p>The description of the ABI currently lives here -- <a href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/CanonicalABI.md\">https://github.com/WebAssembly/component-model/blob/main/design/mvp/CanonicalABI.md</a> -- although it can be a bit dense too</p>",
        "id": 406339266,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1701879225
    },
    {
        "content": "<p>Awesome thank you will take a look at this. How about realloc mechanism? Would that be in the same place as well?</p>",
        "id": 406342606,
        "sender_full_name": "Cwasi4wasm",
        "timestamp": 1701880282
    },
    {
        "content": "<p>yep, specified there too</p>",
        "id": 406342886,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1701880351
    },
    {
        "content": "<p>Perfect thank you!</p>",
        "id": 406342971,
        "sender_full_name": "Cwasi4wasm",
        "timestamp": 1701880378
    }
]