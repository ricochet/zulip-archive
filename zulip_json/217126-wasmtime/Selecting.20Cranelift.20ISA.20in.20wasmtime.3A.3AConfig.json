[
    {
        "content": "<p>Hello! This is probably a bit of a dumb/weird question, but hoping that maybe someone knows the answer to this.</p>\n<p>I'm trying to precompile wasm modules to be run on other machines with slightly old(er) x86_64 CPUs (without AVX512). If I understand correctly, I _should_ be able to somehow select the one of these ISA micro-architecture versions in Cranelift with the CPU features I want:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/codegen/meta/src/isa/x86.rs#L384-L399\">https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/codegen/meta/src/isa/x86.rs#L384-L399</a></p>\n<p>I've tried setting the target triple on the <a href=\"https://docs.wasmtime.dev/api/wasmtime/struct.Config.html#method.target\">wasmtime::Config</a> to <code>x86_64_v3-unknown-linux-gnu</code>, but I just get an \"Unrecognized Architecture: x86_64_v3\"  error from the <a href=\"https://github.com/bytecodealliance/target-lexicon\"><code>target-lexicon</code></a> crate.</p>\n<p>Is there another way that I can specify this directly, or is this a matter of updating the <code>target-lexicon</code> create to support this?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/target-lexicon\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/791e8cc49e14150471316c7c258cf17f17161f21\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f343235343837303465323037336136343763353734316631613135396465363733636530313533363663666365346535643939326563653930333466666539642f62797465636f6465616c6c69616e63652f7461726765742d6c657869636f6e)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/target-lexicon\" title=\"GitHub - bytecodealliance/target-lexicon: Target &quot;triple&quot; support\">GitHub - bytecodealliance/target-lexicon: Target \"triple\" support</a></div><div class=\"message_embed_description\">Target \"triple\" support. Contribute to bytecodealliance/target-lexicon development by creating an account on GitHub.</div></div></div>",
        "id": 427978746,
        "sender_full_name": "Andrew Gutekanst",
        "timestamp": 1710954857
    },
    {
        "content": "<p>You should be able to do this by:</p>\n<ul>\n<li>First set <code>.target(\"x86_64-unknown-linux-gnu\")</code> - this will set the desired feature set to a baseline of sse2</li>\n<li>Next use <code>cranelift_flag_enable(...)</code> to enable various features you do want enabled (e.g. everything up sse4.2 or avx or something like that)</li>\n</ul>\n<p>By default wasmtime infers features from the host, but once a target is set that inference is disabled and you have to re-enable anything over the bare-minimum baseline</p>",
        "id": 427979701,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1710955167
    },
    {
        "content": "<p>although packaging that all up as a target string through support in target-lexicon would still be nice to have regardless</p>",
        "id": 427979755,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1710955187
    },
    {
        "content": "<p>Oh shoot. Thanks!</p>",
        "id": 427997781,
        "sender_full_name": "Andrew Gutekanst",
        "timestamp": 1710961359
    },
    {
        "content": "<p>It wasn't working when I set the target triple to that - but I just realized that I'm 2 minor versions behind this fix was merged:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/pull/7991\">https://github.com/bytecodealliance/wasmtime/pull/7991</a></p>\n<p>So I suspect that will solve my issue :)</p>\n<p>Thanks for the help!</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/7991\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/6beebe7c06b68e38d6b0520593cc00b08f364fd5\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f333765616437366664613437663334343337373563633461363864396165383166343531313961383330643736663463653065393166373333313963333833312f62797465636f6465616c6c69616e63652f7761736d74696d652f70756c6c2f37393931)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/7991\" title=\"Don't infer host flags for cross-compiled targets by alexcrichton 路 Pull Request #7991 路 bytecodealliance/wasmtime\">Don't infer host flags for cross-compiled targets by alexcrichton 路 Pull Request #7991 路 bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">This commit fixes an accidental regression from #7766 where infer_native_flags is called even if a target is explicitly specified to a Config. Now inference only happens if a target isn't specified...</div></div></div>",
        "id": 427998216,
        "sender_full_name": "Andrew Gutekanst",
        "timestamp": 1710961535
    }
]