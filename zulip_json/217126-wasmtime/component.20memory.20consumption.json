[
    {
        "content": "<p>I'm looking to track metrics on memory consumption from the host side. If I have a <code>wasmtime::component::instance::Instance</code>, is there a way to tell how much memory has been allocated in that instance?</p>",
        "id": 357652582,
        "sender_full_name": "Ryan Levick (rylev)",
        "timestamp": 1683824795
    },
    {
        "content": "<p>This can be tracked at the <code>Store&lt;T&gt;</code> level with a <code>ResourceLimiter</code>, but not on a more granular per-instance basis right now (although you as the embedder can probably correlate per-instance if necessary)</p>",
        "id": 357652770,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1683824857
    },
    {
        "content": "<p>We should be fine to get the data from the store I think since we don't _really_ care about it at the instance level - we have only one instance in this case. Thanks! I'll let you know if I run into any issues</p>",
        "id": 357657675,
        "sender_full_name": "Ryan Levick (rylev)",
        "timestamp": 1683826089
    },
    {
        "content": "<p>I remember looking at <a href=\"https://docs.rs/wasmtime/8.0.1/wasmtime/trait.ResourceLimiter.html#tymethod.memory_growing\"><code>ResourceLimiter::memory_growing</code></a> for this and thinking that it wouldn't apply to data segment initialization. Would it make sense to update the docs there?</p>",
        "id": 357689620,
        "sender_full_name": "Lann Martin",
        "timestamp": 1683835975
    },
    {
        "content": "<p>Indeed! It does take into account the initial growth for a memory, modeled as a growth from 0 to the requested size of the initial memory</p>",
        "id": 357690555,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1683836287
    },
    {
        "content": "<p>which should allow you to either reject it or otherwise account for it</p>",
        "id": 357690576,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1683836296
    },
    {
        "content": "<p>definitely worth updating the docs though as they're somewhat limited right now</p>",
        "id": 357690589,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1683836305
    },
    {
        "content": "<p>One other question: is <code>desired</code> always guaranteed to be greater than <code>current</code> in <code>ResourceLimiter::memory_growing</code>?</p>",
        "id": 357693360,
        "sender_full_name": "Ryan Levick (rylev)",
        "timestamp": 1683837229
    },
    {
        "content": "<p>I'm pretty certain it's never less than</p>",
        "id": 357694170,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1683837486
    },
    {
        "content": "<p>I'm hesitating on saying whether it's equal-to</p>",
        "id": 357694190,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1683837493
    },
    {
        "content": "<p>I'd have to check the code, but I would say it should only ever be called when <code>desired &gt; current</code></p>",
        "id": 357694230,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1683837512
    }
]