[
    {
        "content": "<p>Hello, so basically i loaded a precompiled module using Module::deserialize which worked wonderfully, but then i receive this error \"unknown import: <code>wasi_snapshot_preview1::fd_write</code> has not been defined\"; comming from the go implementation, i saw that i was missing the equivalent of \"linker.DefineWasi()\"; but i have been searching for a method to link a wasi instance to the linker for hours now without finding any result. So my question would be, first how can i remedy to this ? and what am i doing wrong ?<br>\nAlso please pardon my ignorance since i picked up rust 2 days ago and i wanted to toy around with wasmtime a bit.<br>\nThanks !</p>",
        "id": 421651086,
        "sender_full_name": "Creponne Karim",
        "timestamp": 1708002847
    },
    {
        "content": "<p>The code in question :</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">execute</span><span class=\"w\"> </span><span class=\"p\">(</span>\n<span class=\"w\">    </span><span class=\"n\">code</span>: <span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"kt\">u8</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">entry_point</span>: <span class=\"kp\">&amp;</span><span class=\"kt\">str</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">params</span>: <span class=\"kp\">&amp;</span><span class=\"p\">[</span><span class=\"n\">Val</span><span class=\"p\">],</span>\n<span class=\"w\">    </span><span class=\"n\">engine</span>: <span class=\"nc\">wasmtime</span>::<span class=\"n\">Engine</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">linker</span>: <span class=\"nc\">wasmtime</span>::<span class=\"n\">Linker</span><span class=\"o\">&lt;</span><span class=\"n\">WasiCtx</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">work_dir_path</span>:<span class=\"kp\">&amp;</span><span class=\"kt\">str</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"c1\">// mut store: wasmtime::Store&lt;WasiCtx&gt;,</span>\n<span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">std_err</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">sync</span>::<span class=\"n\">stdio</span>::<span class=\"n\">stderr</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">std_out</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">sync</span>::<span class=\"n\">stdio</span>::<span class=\"n\">stdout</span><span class=\"p\">();</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WasiCtxBuilder</span>::<span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">stderr</span><span class=\"p\">(</span><span class=\"nb\">Box</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">std_err</span><span class=\"p\">))</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">stdout</span><span class=\"p\">(</span><span class=\"nb\">Box</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">std_out</span><span class=\"p\">))</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">build</span><span class=\"p\">();</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"n\">Store</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">linker</span><span class=\"p\">.</span><span class=\"n\">engine</span><span class=\"p\">(),</span><span class=\"n\">wasi</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Module</span>::<span class=\"n\">deserialize</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">code</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">results</span>:<span class=\"p\">[</span><span class=\"n\">Val</span><span class=\"p\">;</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[];</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">instance</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"p\">.</span><span class=\"n\">instantiate</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"o\">&amp;</span><span class=\"n\">module</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">entrypoint_function</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">instance</span><span class=\"p\">.</span><span class=\"n\">get_func</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">entry_point</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n\n<span class=\"w\">    </span><span class=\"n\">entrypoint_function</span><span class=\"p\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">params</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">results</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n\n<span class=\"w\">    </span><span class=\"c1\">//  read the stdout and err</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">bufs</span>: <span class=\"p\">[</span><span class=\"kt\">u8</span><span class=\"p\">;</span><span class=\"mi\">80</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"mi\">80</span><span class=\"p\">];</span>\n<span class=\"w\">    </span><span class=\"c1\">// std_out.seek(0);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">out_text</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">.</span><span class=\"n\">data</span><span class=\"p\">().</span><span class=\"n\">table</span><span class=\"p\">().</span><span class=\"n\">get</span>::<span class=\"o\">&lt;</span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">sync</span>::<span class=\"n\">stdio</span>::<span class=\"n\">Stderr</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">().</span><span class=\"n\">read_vectored</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">std</span>::<span class=\"n\">io</span>::<span class=\"n\">IoSliceMut</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">bufs</span><span class=\"p\">)]).</span><span class=\"k\">await</span><span class=\"p\">.</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"my loaver {}\"</span><span class=\"p\">,</span><span class=\"n\">out_text</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>",
        "id": 421651577,
        "sender_full_name": "Creponne Karim",
        "timestamp": 1708002992
    },
    {
        "content": "<p>You're probably missing a call to <a href=\"https://docs.rs/wasmtime-wasi/latest/wasmtime_wasi/sync/fn.add_to_linker.html\">add_to_linker</a>.</p>",
        "id": 421651875,
        "sender_full_name": "Peter Huene",
        "timestamp": 1708003091
    },
    {
        "content": "<p>an example: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/120e6b23950292c60b9e2d70204953e8decd6f4a/examples/linking.rs#L15\">https://github.com/bytecodealliance/wasmtime/blob/120e6b23950292c60b9e2d70204953e8decd6f4a/examples/linking.rs#L15</a></p>",
        "id": 421652178,
        "sender_full_name": "Peter Huene",
        "timestamp": 1708003197
    },
    {
        "content": "<p>That worked, thank you !</p>",
        "id": 421655628,
        "sender_full_name": "Creponne Karim",
        "timestamp": 1708004436
    }
]