[
    {
        "content": "<p>Since we can extract compilation artifacts, we can use them for caching. Opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2065\">https://github.com/bytecodealliance/wasmtime/pull/2065</a> for feedback. This replaces existing per-compiler caching logic.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/2065\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/2065\" title=\"Refactor Cache logic to include debug information by yurydelendik · Pull Request #2065 · bytecodealliance/wasmtime\">Refactor Cache logic to include debug information by yurydelendik · Pull Request #2065 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Currently, it is a responsibility of the compiler to do caching. Moving this logic to the CompiledModule level. This allows early access to all compilation artifacts without analyzing the wasm file...</div></div></div>",
        "id": 204729703,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1595456669
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span> I noticed it is stepping on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2059\">https://github.com/bytecodealliance/wasmtime/pull/2059</a> a little, I think it makes sense to wait for your PR to land first</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/2059\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/2059\" title=\"Validate modules while translating by alexcrichton · Pull Request #2059 · bytecodealliance/wasmtime\">Validate modules while translating by alexcrichton · Pull Request #2059 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">This commit is a change to cranelift-wasm to validate each function body\nas it is translated. Additionally top-level module translation functions\nwill perform module validation. This commit builds ...</div></div></div>",
        "id": 204729844,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1595456770
    },
    {
        "content": "<p>Nice! I'm fine landing in whatever order, it'll be nice to use the same caching logic!</p>",
        "id": 204730478,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595457238
    },
    {
        "content": "<p>by \"caching logic\", I assume, you mean the stuff coded in crates/environ/src/cache and not what it stored in cache entry?</p>",
        "id": 204804983,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1595514786
    },
    {
        "content": "<p>uh, basically what's stored</p>",
        "id": 204809015,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595516509
    },
    {
        "content": "<p>where now we don't have two ways to serialize and two different deserialization phases</p>",
        "id": 204809031,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595516518
    },
    {
        "content": "<p>/me is confused a little</p>",
        "id": 204809166,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1595516565
    },
    {
        "content": "<p>let's setup a call or something to talk about plans</p>",
        "id": 204809244,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1595516610
    },
    {
        "content": "<p>so we are saving only code (and some compilation leftovers) in the cache</p>",
        "id": 204809948,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1595516920
    },
    {
        "content": "<p>I'm proposing to save everything/ In addition to above,  that includes transformed DWARF, <code>Module</code>, data.</p>",
        "id": 204810096,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1595516994
    },
    {
        "content": "<p>So serialize, theoretically will equal to cache save</p>",
        "id": 204810227,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1595517044
    },
    {
        "content": "<p>oh yeah that makes sense to me</p>",
        "id": 204810238,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595517046
    },
    {
        "content": "<p>At this moment it is not</p>",
        "id": 204810253,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1595517055
    },
    {
        "content": "<p>I was looking at the cache stuff recently and I'm really happy to move it higher up</p>",
        "id": 204810271,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595517062
    },
    {
        "content": "<p>it makes a lot more sense to just hash the entire wasm blob</p>",
        "id": 204810296,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595517073
    },
    {
        "content": "<p>rather than trying to hash lots of individual pices after parsing</p>",
        "id": 204810313,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595517081
    },
    {
        "content": "<p>okay, so I just want to make sure I'm on right track with the PR</p>",
        "id": 204810443,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1595517130
    },
    {
        "content": "<p>oh I think you definitely are</p>",
        "id": 204810487,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595517154
    },
    {
        "content": "<p>I looked it over last night and it looked near-perfect to me</p>",
        "id": 204810495,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595517160
    },
    {
        "content": "<p>I remember I had a minor comment somewhere but I gotta read it again to figure out where</p>",
        "id": 204810517,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595517172
    },
    {
        "content": "<p>some people may argue that there is no need to save everything since we provide some (meta)data in wasm bytes</p>",
        "id": 204810518,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1595517174
    },
    {
        "content": "<p>oh?</p>",
        "id": 204810541,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595517187
    },
    {
        "content": "<p>e.g. we could restore <code>Module</code> for wasm bytes by re-parsing it, so its data</p>",
        "id": 204810627,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1595517233
    },
    {
        "content": "<p>but I'm thinking it is additional effort in validation</p>",
        "id": 204810736,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1595517266
    },
    {
        "content": "<p>anyway there are plenty of optimizations that can be done</p>",
        "id": 204810978,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1595517373
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253991\">@Yury Delendik</span> sorry I'm not sure I'm understanding what you're saying</p>",
        "id": 204811943,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595517751
    },
    {
        "content": "<p>but it's ok, I'm still thinking the current PR is what we want</p>",
        "id": 204811979,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1595517763
    },
    {
        "content": "<blockquote>\n<p>we could restore Module for wasm bytes by re-parsing it, so its data<br>\nI think we really shouldn't require reparsing the wasm file. There are scenarios in which you'd want to delete the input file after compilation, and directly use the hash to identify the cache entry</p>\n</blockquote>",
        "id": 204823646,
        "sender_full_name": "Till Schneidereit",
        "timestamp": 1595523291
    }
]