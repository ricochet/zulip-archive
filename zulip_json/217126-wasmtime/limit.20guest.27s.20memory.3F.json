[
    {
        "content": "<p>Do we have API exposed for limiting guest's memory? I know we have <code>MemoryPlan</code>s and there we can specify some <code>max</code> but how do we actually use it? Or is it reserved for use from within the Wasm module? What I'm getting at here is this hypothetical use case: imagine we've got an embedded device and we'd like to limit the memory the runtime can allocate to the guest module. Can we do that? If not, do we want to figure out a mechanism to do it?</p>",
        "id": 192679964,
        "sender_full_name": "Jakub Konka",
        "timestamp": 1585840478
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"263195\">@Jakub Konka</span> I'm not aware of anything. Right now the <code>max</code> field is just derived from the wasm module, but it wouldn't be unreasonable for us to impose a stricter maximum as an option</p>",
        "id": 192720047,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1585858547
    },
    {
        "content": "<p>Mhm, that's what I worked out from our codebase. Ok then, I'll try and figure out an attack plan and report back with ideas or blockers (or possibly both!).</p>",
        "id": 192720182,
        "sender_full_name": "Jakub Konka",
        "timestamp": 1585858608
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"263195\">@Jakub Konka</span> <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1400\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1400\">https://github.com/bytecodealliance/wasmtime/pull/1400</a> may help in this regard?</p>",
        "id": 192720374,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1585858713
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span> Ah yes, that's probably a good start, thanks!</p>",
        "id": 192739908,
        "sender_full_name": "Jakub Konka",
        "timestamp": 1585869297
    },
    {
        "content": "<p>Putting a global memory limit is possible with this PR, however it requires to provide an actual implementation for memory creation/allocation. </p>\n<p>This could be avoided if we let people reuse the default MemoryCreator/LinearMemory from wasmtime_runtime - then it would be possible to create a simple wrapper on these structs and insert additional checks there. Unfortunately this would require exposing MemoryPlan in the api. What may be an option here is to create some struct like MemorySpec which would mirror full contents of MemoryPlan but change memory_style (dynamic/static) field to memory_style_hint and offset_guard_size to offset_guard_size_hint and allow for these params to be ignored by custom memory creators. I don't know if it's feasible though.</p>",
        "id": 192762805,
        "sender_full_name": "Maciej Kot",
        "timestamp": 1585895737
    }
]