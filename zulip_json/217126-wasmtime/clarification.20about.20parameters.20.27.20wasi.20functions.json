[
    {
        "content": "<p>I got confused about parameters of wasi functions. <br>\n<strong>fd_write</strong> function has imported in my wasm module. Its signature shows that it has 5 integers parameters (like below):<br>\n<code>(import \"wasi_snapshot_preview1\" \"fd_write\" (func $__imported_wasi_snapshot_preview1_fd_write (type 5)))\n(type (;5;) (func (param i32 i32 i32 i32) (result i32))</code></p>\n<p>But fd_write signature  in witx (and <a href=\"http://preview_1.rs\">preview_1.rs</a>) shows that it has been implemented with two paramteres:</p>\n<p><code>(@interface func (export \"fd_write\")\n    (param $fd $fd)\n    ;;; List of scatter/gather vectors from which to retrieve data.\n    (param $iovs $ciovec_array)\n    (result $error (expected $size (error $errno)))\n  ) </code></p>\n<p>I couldn't understand which part of wasmtime is responsible for this parameter transformation and what happen in wasmtime.  <br>\nCan you please help me with that? Thanks.</p>",
        "id": 298308781,
        "sender_full_name": "julia",
        "timestamp": 1662953373
    },
    {
        "content": "<p>A good way to find out this kind of information is to look at an implementation, eg <a href=\"https://docs.rs/wasi/latest/src/wasi/lib_generated.rs.html#1566-1578\">https://docs.rs/wasi/latest/src/wasi/lib_generated.rs.html#1566-1578</a> :</p>\n<ul>\n<li>1st parameter is the file descriptor</li>\n<li>2nd and 3rd parameters are the pointer and length of the buffer</li>\n<li>4th parameter is an out pointer the number of read bytes read is no error happened</li>\n</ul>",
        "id": 298399956,
        "sender_full_name": "Alphyr",
        "timestamp": 1662995241
    },
    {
        "content": "<p>Thanks for helping me!</p>",
        "id": 298408859,
        "sender_full_name": "julia",
        "timestamp": 1662997657
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"487262\">@Alphyr</span> I found that some types that use in wasi functions, such as <strong>Ciovec</strong> type, are defined in WITX specification and generates during compilation of wasmtime. But I need to use these types outside of wasi-common crate. Can you please tell me if it is possible and how?</p>",
        "id": 299109475,
        "sender_full_name": "julia",
        "timestamp": 1663315147
    },
    {
        "content": "<p>I don't know a lot about WITX, but maybe you can re-generate WASI structs from the witx files and start from there.</p>\n<p>Another solution is to define them yourself, (you can look at code from <code>wasi</code> to help), eg :</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[repr(C)]</span><span class=\"w\"></span>\n<span class=\"k\">struct</span> <span class=\"nc\">Ciovec</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"n\">buf</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"n\">buf_len</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 299515284,
        "sender_full_name": "Alphyr",
        "timestamp": 1663572722
    },
    {
        "content": "<p>Thanks for your reply. I could use the types with adding wasi-common crate to dependencies. And then I imported types using the below line:<br>\n<code>wasi_common::snapshots::preview_1::types::*; </code></p>\n<p>Also for my first question, I found out the  <strong>call_interface</strong> function in the below file is responsible to do the job. <br>\n<code> wasi-common/WASI/tools/witx/src/abi.rs </code></p>",
        "id": 299659128,
        "sender_full_name": "julia",
        "timestamp": 1663628579
    },
    {
        "content": "<p>Congrats for the Wasmtime 1.0.0 release!!</p>",
        "id": 299835449,
        "sender_full_name": "Jesús González",
        "timestamp": 1663703005
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"525366\">@julia</span> for places where wiggle is generating types in wasi-common and you can’t read their source, you can use <code>cargo doc</code></p>",
        "id": 300058430,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1663805740
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253992\">@Pat Hickey</span> will do, thanks!</p>",
        "id": 300224002,
        "sender_full_name": "julia",
        "timestamp": 1663872621
    }
]