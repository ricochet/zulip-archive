[
    {
        "content": "<p>I am using the latest version (main) of witx-bindgen and running into the error <code>\"canonical_abi\" has not been defined</code>.  I have a function defined on the host which returns a reference. On the wasm side I am simply echoing the resource back to the host.</p>\n<p>Do I need to link something?  If I get rid of the resource stuff and just use s32 instead everything works.</p>",
        "id": 254620463,
        "sender_full_name": "Carl Sverre",
        "timestamp": 1632439020
    },
    {
        "content": "<p>The witx I am using for the host api is:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">resource</span><span class=\"w\"> </span><span class=\"n\">Row</span><span class=\"w\"></span>\n\n<span class=\"n\">next</span>: <span class=\"nc\">function</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">Row</span><span class=\"w\"></span>\n<span class=\"n\">emit</span>: <span class=\"nc\">function</span><span class=\"p\">(</span><span class=\"n\">r</span>: <span class=\"nc\">Row</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 254620512,
        "sender_full_name": "Carl Sverre",
        "timestamp": 1632439058
    },
    {
        "content": "<p>the host defines Row as simply a simple struct for now</p>",
        "id": 254620523,
        "sender_full_name": "Carl Sverre",
        "timestamp": 1632439071
    },
    {
        "content": "<p>and I am using rust</p>",
        "id": 254620528,
        "sender_full_name": "Carl Sverre",
        "timestamp": 1632439075
    },
    {
        "content": "<p>Hm that sounds like a bug in the generated code, can you open an issue for this?</p>",
        "id": 254621825,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1632439954
    },
    {
        "content": "<p>sure thing</p>",
        "id": 254621915,
        "sender_full_name": "Carl Sverre",
        "timestamp": 1632440026
    },
    {
        "content": "<p>sounds like this PR might be relevant? <a href=\"https://github.com/WebAssembly/interface-types/pull/132\">https://github.com/WebAssembly/interface-types/pull/132</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/interface-types/pull/132\" style=\"background-image: url(https://opengraph.githubassets.com/2d3327caf3256d542987c2b496103d1e94b962ea8a61d51e59a4cd35f24d2530/WebAssembly/interface-types/pull/132)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/interface-types/pull/132\" title=\"Add a draft &quot;canonical ABI&quot; by alexcrichton · Pull Request #132 · WebAssembly/interface-types\">Add a draft \"canonical ABI\" by alexcrichton · Pull Request #132 · WebAssembly/interface-types</a></div><div class=\"message_embed_description\">This PR proposes a &quot;canonical ABI&quot; for interface types. This feature was\nalluded to in Luke&#39;s recent presentation to the CG, and this PR\nintends to flesh it out more and get a more fo...</div></div></div>",
        "id": 254621994,
        "sender_full_name": "Carl Sverre",
        "timestamp": 1632440063
    },
    {
        "content": "<p><a href=\"https://github.com/bytecodealliance/witx-bindgen/issues/76\">https://github.com/bytecodealliance/witx-bindgen/issues/76</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/witx-bindgen/issues/76\" style=\"background-image: url(https://opengraph.githubassets.com/4804afcde1b5a5d11f481af7c5e6bd060c5d27de98dcb5973d9c01bcf7629476/bytecodealliance/witx-bindgen/issues/76)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/witx-bindgen/issues/76\" title=\"canonical_abi has not been defined · Issue #76 · bytecodealliance/witx-bindgen\">canonical_abi has not been defined · Issue #76 · bytecodealliance/witx-bindgen</a></div><div class=\"message_embed_description\">I have a very trivial setup to play with witx types. To reproduce the problem just run cargo run from the root directory. (requires nightly) Use a vscode devcontainer to reproduce my exact environm...</div></div></div>",
        "id": 254622812,
        "sender_full_name": "Carl Sverre",
        "timestamp": 1632440640
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span> any ideas on the issue?  It's a bit difficult to hack around</p>",
        "id": 254746891,
        "sender_full_name": "Carl Sverre",
        "timestamp": 1632506645
    },
    {
        "content": "<p>oops meant to dig in this morning but forgot, let me take a look now</p>",
        "id": 254747115,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1632506741
    },
    {
        "content": "<p>thanks!</p>",
        "id": 254747136,
        "sender_full_name": "Carl Sverre",
        "timestamp": 1632506748
    },
    {
        "content": "<p>oh so the bad error message is because of <code>wasm_module_linking(true)</code></p>",
        "id": 254748121,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1632507160
    },
    {
        "content": "<p>that's a bug in wasmtime</p>",
        "id": 254748132,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1632507167
    },
    {
        "content": "<p>otherwise I see the issue, should be an easy fix on witx-bindgen's part</p>",
        "id": 254748152,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1632507175
    },
    {
        "content": "<p>ok should be fixed by &lt;<a href=\"https://github.com/bytecodealliance/witx-bindgen/pull/79\">https://github.com/bytecodealliance/witx-bindgen/pull/79</a>&gt;</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/witx-bindgen/pull/79\" style=\"background-image: url(https://opengraph.githubassets.com/2ec1edfe154e23a94b7f7d40e055995123f2e1670cfe55cdf674aa806c0cfcb5/bytecodealliance/witx-bindgen/pull/79)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/witx-bindgen/pull/79\" title=\"Fix names defining resource intrinsics in Wasmtime by alexcrichton · Pull Request #79 · bytecodealliance/witx-bindgen\">Fix names defining resource intrinsics in Wasmtime by alexcrichton · Pull Request #79 · bytecodealliance/witx-bindgen</a></div><div class=\"message_embed_description\">There was an accidentaly .to_snake_case() when it should have been\nusing the raw name from the witx.\nCloses #76</div></div></div>",
        "id": 254749617,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1632507772
    },
    {
        "content": "<p>and I've submitted <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3388\">https://github.com/bytecodealliance/wasmtime/issues/3388</a> for the bad error message</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/issues/3388\" style=\"background-image: url(https://opengraph.githubassets.com/c1bf432eb49e82174d09a68d48109a159157b47a7ee9df95433e488f3bc99e6c/bytecodealliance/wasmtime/issues/3388)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/issues/3388\" title=\"Poor linking error message with module linking enabled · Issue #3388 · bytecodealliance/wasmtime\">Poor linking error message with module linking enabled · Issue #3388 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">For this program: use wasmtime::*; fn main() { let mut config = Config::new(); config.wasm_module_linking(true); let engine = Engine::new(&amp;config).unwrap(); let module = Module::new( &amp;engin...</div></div></div>",
        "id": 254750427,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1632508087
    },
    {
        "content": "<p>woohoo - thanks for the fast turn around.  I'll test your PR against my diff</p>",
        "id": 254754817,
        "sender_full_name": "Carl Sverre",
        "timestamp": 1632509908
    },
    {
        "content": "<p>works great - thanks for the quick turnaround</p>",
        "id": 254781227,
        "sender_full_name": "Carl Sverre",
        "timestamp": 1632521985
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"434337\">Carl Sverre</span> has marked this topic as resolved.</p>",
        "id": 254781239,
        "sender_full_name": "Notification Bot",
        "timestamp": 1632521993
    }
]