[
    {
        "content": "<p>Here's an example of at least some people in the C++ community thinking about prioritizing 64-bit targets: <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2137r0.html#platforms\">http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2137r0.html#platforms</a></p>",
        "id": 248514498,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1628187094
    },
    {
        "content": "<p>The world is certainly easier to deal with if everything is a little-endian 64-bit desktop core :-)</p>",
        "id": 248514833,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1628187248
    },
    {
        "content": "<p>What sort of implications would this actually have though, if the standard still supports platforms with 32-bit pointers?</p>",
        "id": 248514883,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1628187288
    },
    {
        "content": "<p>(I guess I should just read it fully to find out)</p>",
        "id": 248514945,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1628187323
    },
    {
        "content": "<p>In a 64-bit only world, it'd be easier to make techniques where you squirrel extra bits into a pointer portable. It'd be easier to standardize on \"LP64\" as the only data model, ending decades of needless complexity caused by C data models being a thing. It'd be easier to specify raw-data interchange formats because you only need to know where the pointers are, and not what the offsets to everything are.</p>",
        "id": 248515346,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1628187542
    },
    {
        "content": "<p>I guess the distinction I'm wondering about is between \"prefer 64-bit\" and \"the standard actually says that sizeof(void*) == 8\"; it seems to me that a spec usually dictates things like the latter? perhaps the \"preference\" just means that there will be features that work only for 64-bit pointers?</p>",
        "id": 248515829,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1628187773
    },
    {
        "content": "<p>Yeah, the context for that paper was that they're looking to put out a vision and see what kinds of ideas they can build consensus on before moving forward with actual proposals.</p>",
        "id": 248516665,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1628188151
    },
    {
        "content": "<p>Note that that is just a paper, and not necessarily the view of the committee as a whole.</p>",
        "id": 248516837,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1628188227
    },
    {
        "content": "<p>I just skimmed through the linked section, but I'd like to mention that prioritizing 64-bit targets doesn't necessarily mean just deprioritizing 32-bit or older targets. For example, Arm is researching an 128-bit capability architecture called <a href=\"https://developer.arm.com/architectures/cpu-architecture/a-profile/morello\">Morello</a>, which actually doesn't fit neatly into the model because the virtual address space is still 64-bit, but <code>sizeof(void *) == 16</code> and \"squirreling extra bits into a pointer\" is probably not going to work (capability bound representation issue).</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://developer.arm.com/architectures/cpu-architecture/a-profile/morello\" style=\"background-image: url(https://developer.arm.com)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://developer.arm.com/architectures/cpu-architecture/a-profile/morello\" title=\"Morello – Arm Developer\">Morello – Arm Developer</a></div><div class=\"message_embed_description\">Arm is leading a UK government research program called the Morello Project, which focuses on the development of more robust processors that can deter security breaches.</div></div></div>",
        "id": 249607394,
        "sender_full_name": "Anton Kirilov",
        "timestamp": 1629129282
    },
    {
        "content": "<p>I know people who are looking forward to wasm64 because they have \"standardized on 64-bit\" within their C++ codebases, and are planning to use wasm rewriting tools on it to convert it to wasm32 to that it can run in today's wasm engines.</p>",
        "id": 249608436,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1629129759
    },
    {
        "content": "<p>I've talked with people who were surprised that we did wasm32 at all. \"Isn't everything 64-bit these days?\"</p>",
        "id": 249608471,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1629129783
    },
    {
        "content": "<p>The C++ world is diverse, and not everyone thinks this way, but my impression is that quite a few people are hoping that x86-64 plus aarch64 means they don't have to think about any other pointer size ever again.</p>",
        "id": 249608663,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1629129883
    },
    {
        "content": "<p>Well, depending on how capability architectures evolve, that might be too optimistic, but even in a pure 64-bit world Arm has introduced a couple of technologies that don't play well with arbitrary manipulation of pointer bits (e.g. pointer authentication and memory tagging).</p>",
        "id": 249609997,
        "sender_full_name": "Anton Kirilov",
        "timestamp": 1629130521
    }
]