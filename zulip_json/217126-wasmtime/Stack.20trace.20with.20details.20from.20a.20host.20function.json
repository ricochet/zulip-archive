[
    {
        "content": "<p>I have enabled <code>wasmtime::WasmBacktraceDetails</code> and I can see the stack trace with files and line numbers, but only when the guest traps.<br>\nI did not succeed producing a detailed stack trace when the guest calls a host function. I tried returning an <code>Err</code> variant, but the caller (guest) file and line number is missing. The host function is defined using <code>LinkerInstance.html#method.func_new_async</code>.</p>\n<p>Is it a bug, a limitation or is there another way to obtain the stack trace with line numbers from a host function?</p>",
        "id": 493354861,
        "sender_full_name": "Tomas Olvecky",
        "timestamp": 1736775844
    },
    {
        "content": "<p>I forget exactly where this happens but if you're not seeing a backtrace on <code>Err</code> then I suspect we only auto-capture backtraces on traps. You can use <a href=\"https://docs.rs/wasmtime/latest/wasmtime/struct.WasmBacktrace.html#method.capture\"><code>WasmBacktrace::capture</code></a> though (or <code>force_capture</code>) to do the same programmatically though</p>",
        "id": 493379085,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1736781951
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span> , the <code>WasmBacktrace</code> was the right direction. I was looking at <code>{err:?}</code>, but one needs to use <code>error.downcast_ref::&lt;WasmBacktrace&gt;()</code>.</p>",
        "id": 493409083,
        "sender_full_name": "Tomas Olvecky",
        "timestamp": 1736790018
    }
]