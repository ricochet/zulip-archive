[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"234973\">@Till Schneidereit</span>, <span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span>: I started adding an <code>--experimental-wasi-modules=...</code> flag and now am wondering it if should be more general. I could write this so that the user can pick any set of WASI modules they want to have available, e.g., <code>--wasi-modules=wasi-fs,wasi-clock</code>. In that case, the default would be to include the WASI common modules (not wasi-nn, wasi-crypto) if the user doesn't specify which modules to use</p>",
        "id": 236531317,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1619624884
    },
    {
        "content": "<p>But if the intent of the flag was to just highlight the experimental nature of certain WASI modules, then I can keep the original name, <code>--experimental-wasi-modules</code>, and only allow setting wasi-nn and wasi-crypto.</p>",
        "id": 236531453,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1619624941
    },
    {
        "content": "<p>Thoughts?</p>",
        "id": 236531646,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1619625006
    },
    {
        "content": "<p>oh, that's actually a very good point! I like the idea of using this not just for experimental modules, but more generally. <span class=\"user-mention\" data-user-id=\"254083\">@Dan Gohman</span>, I'm curious to hear what you think about this?</p>",
        "id": 236532154,
        "sender_full_name": "Till Schneidereit",
        "timestamp": 1619625210
    },
    {
        "content": "<p>I also like the idea of having an easy way on the command line to specify which WASI modules to make available.</p>",
        "id": 236532268,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1619625252
    },
    {
        "content": "<p>So maybe I'll do something in the CLI help to indicate which WASI modules are more experimental?</p>",
        "id": 236532373,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1619625298
    },
    {
        "content": "<p>Maybe instead of <code>--experimental-wasi-modules</code>, it's just called <code>--wasi-modules=all</code> (default, not experimental things) and <code>--wasi-modules=all-experimental</code> (the whole airship)</p>",
        "id": 236532445,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1619625322
    },
    {
        "content": "<p>yeah, I like that. Perhaps <code>s/all/stable/</code> or <code>all-stable</code>? But now we're solidly in bikeshedding territory, which seems good <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 236533651,
        "sender_full_name": "Till Schneidereit",
        "timestamp": 1619625766
    },
    {
        "content": "<p>Yeah, or maybe <code>s/all/default/</code>? Happy to subject this to bikeshedding :-)</p>",
        "id": 236536613,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1619626834
    },
    {
        "content": "<p>Take a look at <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2859/commits/bf43539bac237aafbd26c67faa9b7da19d14ebe1\">https://github.com/bytecodealliance/wasmtime/pull/2859/commits/bf43539bac237aafbd26c67faa9b7da19d14ebe1</a>; I tried to match what is done in <code>--wasm-features</code> and that uses <code>all</code> so I went with <code>--wasi-modules=all</code> and <code>--wasi-modules=all-experimental</code>. I'm fine to change it to <code>stable</code> or <code>default</code> or whatever just let me know...</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/2859/commits/bf43539bac237aafbd26c67faa9b7da19d14ebe1\" style=\"background-image: url(https://avatars.githubusercontent.com/u/541880?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/2859/commits/bf43539bac237aafbd26c67faa9b7da19d14ebe1\" title=\"wasi-nn: turn it on by default by abrown · Pull Request #2859 · bytecodealliance/wasmtime\">wasi-nn: turn it on by default by abrown · Pull Request #2859 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">This change makes the wasi-nn Cargo feature a default feature. Previously, a wasi-nn user would have to build a separate Wasmtime binary (e.g. cargo build --features wasi-nn ...) to use wasi-nn and...</div></div></div>",
        "id": 236545105,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1619630250
    },
    {
        "content": "<p>I can also pull that commit out into a separate PR if we would like to review that separately from the wasi-nn \"turning on\" PR</p>",
        "id": 236545166,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1619630278
    },
    {
        "content": "<p>ah, I hadn't been aware of this precedent. I agree that it makes sense to follow that convention, then</p>",
        "id": 236553407,
        "sender_full_name": "Till Schneidereit",
        "timestamp": 1619633519
    },
    {
        "content": "<p>I think <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2859\">https://github.com/bytecodealliance/wasmtime/pull/2859</a> is ready to review in a few of you could take a look!</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/2859\" style=\"background-image: url(https://opengraph.githubassets.com/dae2a2d6413803196f5f228427ada1c1bdee58cd7e72df1f5ec73388adce2084/bytecodealliance/wasmtime/pull/2859)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/2859\" title=\"wasi-nn: turn it on by default by abrown · Pull Request #2859 · bytecodealliance/wasmtime\">wasi-nn: turn it on by default by abrown · Pull Request #2859 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">This change makes the wasi-nn Cargo feature a default feature. Previously, a wasi-nn user would have to build a separate Wasmtime binary (e.g. cargo build --features wasi-nn ...) to use wasi-nn and...</div></div></div>",
        "id": 236591617,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1619649780
    }
]