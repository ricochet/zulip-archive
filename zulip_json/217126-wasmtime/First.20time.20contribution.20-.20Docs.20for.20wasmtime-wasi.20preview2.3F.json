[
    {
        "content": "<p>Hi everyone,</p>\n<p>I'm an experienced developer, but pretty new to Rust, so I'm looking to contribute how I can for now.</p>\n<p>I got started with wasmtime_wasi:sync really quickly thanks to the docs and example here: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/examples/wasi/main.rs\">https://github.com/bytecodealliance/wasmtime/blob/main/examples/wasi/main.rs</a> </p>\n<p>But for my use case I needed to switch the async version and it took me a long time to get it to work. I was wondering if I could contribute some preview2 async example code and related docs page.</p>\n<p>I've been using wasmtime to run WASI-based programs using the wasmtime and wasmtime-wasi Rust APIs. Project is basically a toy project - it's a Rock-Paper-Scissors tournament web server where people can upload wasi based bots as .wasm files to compete in the tournament. <a href=\"https://github.com/katharosada/wasm-snippy\">https://github.com/katharosada/wasm-snippy</a>  My plan would be to take some of the code I wrote there to get async WASI invocation to work with the preview2 API and trim it down to the minimum possible example, add plenty of comments and write corresponding documentation.</p>\n<p>I also note this comment on an issue where someone faced a similar problem to me, that the docs for WASI usage in particular could be improved: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7579#issuecomment-1827104741\">https://github.com/bytecodealliance/wasmtime/issues/7579#issuecomment-1827104741</a></p>\n<p>I would need some help to make sure that my example is showing good/correct use of the APIs, but if this is something that'd be helpful, I'm happy to put together an issue describing the above, and see how far I get with a PR.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/katharosada/wasm-snippy\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/4447ed71948438a3cd44f598fb294dcc484311d6\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f373338623562313834636330636638306436363564626531663563383330616338363337643937343463393565633136316361353637396435326130633365652f6b61746861726f736164612f7761736d2d736e69707079)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/katharosada/wasm-snippy\" title=\"GitHub - katharosada/wasm-snippy\">GitHub - katharosada/wasm-snippy</a></div><div class=\"message_embed_description\">Contribute to katharosada/wasm-snippy development by creating an account on GitHub.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/issues/7579#issuecomment-1827104741\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/47f49ea0b650b7ae3f183bb75e363287388a7a68\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f343264633133353135643133663730363231663537343038383931343739363432356635626439643633353639393539633566663530636630326265653034652f62797465636f6465616c6c69616e63652f7761736d74696d652f6973737565732f37353739)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/issues/7579#issuecomment-1827104741\" title=\"The error I encountered when trying to use the component model · Issue #7579 · bytecodealliance/wasmtime\">The error I encountered when trying to use the component model · Issue #7579 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">This is WIT: package local:demo; interface host{ log: func(msg: string); } world my-world { import host; export run: func(); } This is component code: use crate::local::demo::host::log; // Use a pr...</div></div></div>",
        "id": 410372735,
        "sender_full_name": "Katie Bell",
        "timestamp": 1703814360
    },
    {
        "content": "<p>Hmm I realise that I wasn't super clear on what I was proposing.</p>\n<p>I want to add example code for running a preview1 WASI module - but using the <code>wasmtime_wasi::preview2</code> API using the adapter logic.</p>\n<p>For my own use case, I didn't actually have a preview2 wasm module to run, but the preview2 API supported an async implementation of the WASI API - even when accessed through the preview1 adapter. I wanted to have an async timeout for a wasm program that used sleep, and the preview2 implementation let me do that. On top of that the preview2 context builder had more APIs available to me to conveniently implement limitations on the wasm module (like making a preopen directory readonly).</p>\n<p>Maybe this is a little too niche to be in a tutorial in the docs, but here's a first pass on the example code I had in mind: <a href=\"https://github.com/katharosada/wasmtime/commit/f10ca304d98b4dabcf370f859f5a5bc38ef1e241\">https://github.com/katharosada/wasmtime/commit/f10ca304d98b4dabcf370f859f5a5bc38ef1e241</a></p>\n<p>It could be useful for anyone wanted to use the new preview2 API features but with a preview1 wasm module.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/katharosada/wasmtime/commit/f10ca304d98b4dabcf370f859f5a5bc38ef1e241\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/ce815a73b2fa0fdb340ef9f64212de65f9bee912\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f363864343137316535376265316461336236653131346266343332366335643637306131336633613165313334386539353665653864343466303839323232372f6b61746861726f736164612f7761736d74696d652f636f6d6d69742f66313063613330346439386234646162636633373066383539663561356263333865663165323431)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/katharosada/wasmtime/commit/f10ca304d98b4dabcf370f859f5a5bc38ef1e241\" title=\"Add async WASI example using preview2 API. · katharosada/wasmtime@f10ca30\">Add async WASI example using preview2 API. · katharosada/wasmtime@f10ca30</a></div><div class=\"message_embed_description\">A fast and secure runtime for WebAssembly. Contribute to katharosada/wasmtime development by creating an account on GitHub.</div></div></div>",
        "id": 410387048,
        "sender_full_name": "Katie Bell",
        "timestamp": 1703824143
    },
    {
        "content": "<p>I think it'd be great to have more docs/examples around WASI, please feel free to send a PR!</p>",
        "id": 410877461,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1704215531
    },
    {
        "content": "<p>agreed, just got back from winter break and this is really nice to see. the docs for wasmtime-wasi are close to the top of my list to improve this month, so i'm grateful that you are kicking the tires, finding spots where it is lacking, and especially for creating examples or any other improvements to our docs!</p>",
        "id": 410880926,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1704217089
    },
    {
        "content": "<p>Great! I'll put together a PR. :)</p>",
        "id": 410902762,
        "sender_full_name": "Katie Bell",
        "timestamp": 1704227965
    }
]