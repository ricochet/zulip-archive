[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253990\">@fitzgen (he/him)</span> hey so I've been looking again at the fuzzers for other repos other than wasmtime which aren't hooked up to oss-fuzz</p>",
        "id": 198130910,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1589924686
    },
    {
        "content": "<p>and I was struck with an idea, what if we used github actions to fuzz everything?</p>",
        "id": 198130919,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1589924695
    },
    {
        "content": "<p>like on a cron job?</p>",
        "id": 198130937,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1589924709
    },
    {
        "content": "<p>I've got a loose idea that looks like this -- <a href=\"https://github.com/alexcrichton/wasm-tools/blob/fdd674a95ac8aa9963e6f7da316393775e07814e/.github/workflows/fuzz.yml\">https://github.com/alexcrichton/wasm-tools/blob/fdd674a95ac8aa9963e6f7da316393775e07814e/.github/workflows/fuzz.yml</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/alexcrichton/wasm-tools/blob/fdd674a95ac8aa9963e6f7da316393775e07814e/.github/workflows/fuzz.yml\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/64996?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/alexcrichton/wasm-tools/blob/fdd674a95ac8aa9963e6f7da316393775e07814e/.github/workflows/fuzz.yml\" title=\"alexcrichton/wasm-tools\">alexcrichton/wasm-tools</a></div><div class=\"message_embed_description\">Low level tooling for WebAssembly . Contribute to alexcrichton/wasm-tools development by creating an account on GitHub.</div></div></div>",
        "id": 198130947,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1589924715
    },
    {
        "content": "<p>where you basically drop that file in your repo</p>",
        "id": 198130952,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1589924719
    },
    {
        "content": "<p>and all of a sudden you're continuously running fuzzers</p>",
        "id": 198130960,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1589924725
    },
    {
        "content": "<p>yeah I'm thinking we'd do like a daily cron job</p>",
        "id": 198130969,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1589924731
    },
    {
        "content": "<p>where it builds all the fuzzers then forks off a bunch of parallel targets to run each fuzzer</p>",
        "id": 198130991,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1589924741
    },
    {
        "content": "<p>and if anything fails it automatically uploads crash logs as well as files an issue</p>",
        "id": 198131014,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1589924755
    },
    {
        "content": "<p>e.g. <a href=\"https://github.com/alexcrichton/wasm-tools/issues/1\">https://github.com/alexcrichton/wasm-tools/issues/1</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/alexcrichton/wasm-tools/issues/1\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/64996?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/alexcrichton/wasm-tools/issues/1\" title=\"Fuzz run failed: foo · Issue #1 · alexcrichton/wasm-tools\">Fuzz run failed: foo · Issue #1 · alexcrichton/wasm-tools</a></div><div class=\"message_embed_description\">https://github.com/alexcrichton/wasm-tools/actions/runs/109745591</div></div></div>",
        "id": 198131070,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1589924767
    },
    {
        "content": "<p>wdyt about doing this for things like walrus/wasmparser/etc?</p>",
        "id": 198131092,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1589924785
    },
    {
        "content": "<p>one thing I don't know what to do about is the corpus</p>",
        "id": 198131104,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1589924794
    },
    {
        "content": "<p>I'm also not sure whether it's worth it to run all the fuzzers in separate builders</p>",
        "id": 198131127,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1589924815
    },
    {
        "content": "<p>b/c it means I can't easily use <code>cargo fuzz</code> to run the fuzzers, which seems like a bummer</p>",
        "id": 198131146,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1589924824
    },
    {
        "content": "<p>semi related: I just set up gimli's CI for fuzzing so that it builds all fuzz targets in one job, and then runs each one in N parallel jobs: <a href=\"https://github.com/gimli-rs/gimli/pull/512/commits/b7d1a194c6c4742f69ee77f3c0e3afb532fa84ab\">https://github.com/gimli-rs/gimli/pull/512/commits/b7d1a194c6c4742f69ee77f3c0e3afb532fa84ab</a></p>\n<p>also, if fuzzing finds a crash/panic/etc, it uploads the failing input as an artifact that you can download for debugging</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/gimli-rs/gimli/pull/512/commits/b7d1a194c6c4742f69ee77f3c0e3afb532fa84ab\" style=\"background-image: url(https://avatars2.githubusercontent.com/u/74571?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/gimli-rs/gimli/pull/512/commits/b7d1a194c6c4742f69ee77f3c0e3afb532fa84ab\" title=\"Add fuzzing infrastructure by fitzgen · Pull Request #512 · gimli-rs/gimli\">Add fuzzing infrastructure by fitzgen · Pull Request #512 · gimli-rs/gimli</a></div><div class=\"message_embed_description\">This adds a few fuzz targets for various DWARF sections, and also integrates it with our CI, so that the fuzz targets are built in one job, and then each fuzz target is run in N parallel jobs for f...</div></div></div>",
        "id": 198131153,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1589924829
    },
    {
        "content": "<p>I think you and I just converged on the same thing</p>",
        "id": 198131225,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1589924862
    },
    {
        "content": "<blockquote>\n<p>one thing I don't know what to do about is the corpus</p>\n</blockquote>\n<p>I think a separate repo, like we do with wasmtime (and I also did with gimli) is the way to go</p>",
        "id": 198131230,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1589924869
    },
    {
        "content": "<p>I think we can be better about triggers tho, than what you have sketched out</p>",
        "id": 198131295,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1589924890
    },
    {
        "content": "<p>one sec</p>",
        "id": 198131303,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1589924895
    },
    {
        "content": "<p>it'd be awesome if we could package this all up and put it in the cargo-fuzz org</p>",
        "id": 198131332,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1589924911
    },
    {
        "content": "<p>so we just slap a \"here's a tiny snippet to include\" and it just runs</p>",
        "id": 198131342,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1589924923
    },
    {
        "content": "<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/.github/workflows/subscribe-to-label.yml#L5-L10\">https://github.com/bytecodealliance/wasmtime/blob/master/.github/workflows/subscribe-to-label.yml#L5-L10</a></p>\n<p>we can actually use a scheduled thing, instead of a weird auto-fuzz branch</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/master/.github/workflows/subscribe-to-label.yml#L5-L10\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/.github/workflows/subscribe-to-label.yml#L5-L10\" title=\"bytecodealliance/wasmtime\">bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Standalone JIT-style runtime for WebAssembly, using Cranelift - bytecodealliance/wasmtime</div></div></div>",
        "id": 198131360,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1589924935
    },
    {
        "content": "<blockquote>\n<p>it'd be awesome if we could package this all up and put it in the cargo-fuzz org</p>\n</blockquote>\n<p>totally</p>",
        "id": 198131390,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1589924953
    },
    {
        "content": "<p>oh auto-fuzz is just my own local testing</p>",
        "id": 198131400,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1589924959
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 198131415,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1589924969
    },
    {
        "content": "<p>I was thinking it might be best to not do this on PRs since it'd slow them down</p>",
        "id": 198131467,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1589925002
    },
    {
        "content": "<p>but should be easy enough to queue it up for pushes to master</p>",
        "id": 198131514,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1589925009
    },
    {
        "content": "<p>in that ideally we'd let the fuzzers run for like an hour</p>",
        "id": 198131530,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1589925020
    },
    {
        "content": "<p>oh nice, you auto open an issue!</p>",
        "id": 198131575,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1589925058
    },
    {
        "content": "<p>that's sweet</p>",
        "id": 198131586,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1589925062
    },
    {
        "content": "<p>the time limit for an action is like 50 minutes or something, right?</p>\n<p>we could probably just do a cron job every hour to fuzz for ~40 minutes</p>\n<p>also, maybe makes sense to do a corpus minification run once per day, and push that back to the corpus repo</p>",
        "id": 198131715,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1589925140
    },
    {
        "content": "<p>apparently it's 6 hours (!)</p>",
        "id": 198131729,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1589925151
    },
    {
        "content": "<p>this would eat into the max parallism of the repo so I don't think we'd want it running semi-permanently</p>",
        "id": 198131764,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1589925178
    },
    {
        "content": "<p>but man auto-compaction would be nice</p>",
        "id": 198131773,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1589925182
    },
    {
        "content": "<p>I'd ideally like the corpus to auto-expand over time too</p>",
        "id": 198131788,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1589925190
    },
    {
        "content": "<p>for relatively low-volume repos, like wasm-tools, I think it would be fine modulo maybe not running every fuzz target in parallel</p>",
        "id": 198131944,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1589925270
    },
    {
        "content": "<p>so libfuzzer automatically adds to the corpus, right?</p>",
        "id": 198131993,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1589925312
    },
    {
        "content": "<p>expanding the corpus is just</p>\n<div class=\"codehilite\"><pre><span></span><code>cd corpus\ngit add .\ngit commit -m &quot;update corpus&quot;\ngit push\n</code></pre></div>\n\n\n<p>after fuzzing</p>",
        "id": 198132035,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1589925339
    },
    {
        "content": "<blockquote>\n<p>so libfuzzer automatically adds to the corpus, right?</p>\n</blockquote>\n<p>when it finds inputs that trigger new code paths, yes</p>",
        "id": 198132102,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1589925364
    },
    {
        "content": "<p>ah ok</p>",
        "id": 198132105,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1589925369
    },
    {
        "content": "<p>I do think a downside of this though is it'll just keep reporting the same bugs once it hits a crash</p>",
        "id": 198132120,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1589925382
    },
    {
        "content": "<p>b/c it won't know it's already reported</p>",
        "id": 198132129,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1589925387
    },
    {
        "content": "<p>yeah, oss-fuzz has a lot of nice bug de-dupe infra, even if it doesn't understand rust's backtraces very well</p>",
        "id": 198132163,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1589925414
    },
    {
        "content": "<p>ideally we'd just hook up more projects to oss-fuzz</p>",
        "id": 198132202,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1589925442
    },
    {
        "content": "<p>but it seems like that's somewhat higher overhead...</p>",
        "id": 198132211,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1589925450
    },
    {
        "content": "<p>I don't think that should be too hard; I saw that serde is in their now too</p>",
        "id": 198132228,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1589925462
    },
    {
        "content": "<p>oh interesting...</p>",
        "id": 198132310,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1589925498
    },
    {
        "content": "<p>I found <a href=\"https://google.github.io/oss-fuzz/getting-started/continuous-integration/\">https://google.github.io/oss-fuzz/getting-started/continuous-integration/</a> as well btw</p>",
        "id": 198132314,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1589925501
    },
    {
        "content": "<p>which we may want to consider for wasmtime if it doesn't take too too long</p>",
        "id": 198132322,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1589925508
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"253994\">Alex Crichton</span> <a href=\"#narrow/stream/217126-wasmtime/topic/fuzzing.20for.20other.20repos/near/198132314\">said</a>:</p>\n<blockquote>\n<p>I found <a href=\"https://google.github.io/oss-fuzz/getting-started/continuous-integration/\">https://google.github.io/oss-fuzz/getting-started/continuous-integration/</a> as well btw</p>\n</blockquote>\n<p>oh nice! I think this is pretty new, because I don't remember seeing it in their docs when I last browsed them</p>",
        "id": 198132404,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1589925574
    },
    {
        "content": "<p>yeah same</p>",
        "id": 198132427,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1589925594
    },
    {
        "content": "<p>hm ok I'll probably hold off on this sort of continuous fuzzing for now</p>",
        "id": 198132658,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1589925714
    },
    {
        "content": "<p>mainly b/c of the issue spam possibility</p>",
        "id": 198132671,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1589925721
    },
    {
        "content": "<p>yeah, I think in conclusion, testing the waters with more oss-fuzz integration is probably the way to go, and if that doesn't work out, then investigate a github actions-based thing</p>",
        "id": 198132687,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1589925722
    },
    {
        "content": "<p>looking at <a href=\"https://github.com/google/oss-fuzz/pull/3785\">https://github.com/google/oss-fuzz/pull/3785</a> tbh it looks like you don't even need a formal request</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/google/oss-fuzz/pull/3785\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/1342004?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/google/oss-fuzz/pull/3785\" title=\"[serde-json] initial integration. by DavidKorczynski · Pull Request #3785 · google/oss-fuzz\">[serde-json] initial integration. by DavidKorczynski · Pull Request #3785 · google/oss-fuzz</a></div><div class=\"message_embed_description\">serde-json is a core library for working with json in Rust.\nCross-referencing\nThis has been coordinated with the authors of serde-json, in particular @dtolnay.</div></div></div>",
        "id": 198133002,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1589925893
    },
    {
        "content": "<p>that was just a PR</p>",
        "id": 198133007,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1589925897
    },
    {
        "content": "<p>Do we know GitHub's position on this kind of usage pattern? I.e., could there be a concern of them seeing it as improper use of resources?</p>",
        "id": 198133435,
        "sender_full_name": "Till Schneidereit",
        "timestamp": 1589926182
    },
    {
        "content": "<p>We don't know their position, but I find it unlikely that they would think of it as improper use, and even if they did, I don't think they would be angry so much as chagrinned and apologetic.</p>",
        "id": 198133646,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1589926316
    }
]