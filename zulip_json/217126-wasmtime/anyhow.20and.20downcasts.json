[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>[crates/api/src/error.rs:25] &amp;e = Trap {\n    message: &quot;test 123&quot;,\n    wasm_trace: [\n...\n[crates/api/src/error.rs:26] e.is::&lt;Trap&gt;() = false\n</code></pre></div>",
        "id": 195981281,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1588351801
    },
    {
        "content": "<p>Anyone know of ways an anyhow::Error doesn't want to be what it seems to be?</p>",
        "id": 195981405,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1588351856
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"254083\">@Dan Gohman</span> there's a weird difference in the downcasting methods</p>",
        "id": 195982711,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1588352486
    },
    {
        "content": "<p><code>Error::downcast_ref</code> is different from <code>&lt;Error as Any&gt;::downcast_ref</code></p>",
        "id": 195982727,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1588352497
    },
    {
        "content": "<p>the former recursively checks the whole chain while the latter only checks the top-most error</p>",
        "id": 195982748,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1588352508
    },
    {
        "content": "<p>it looks like <code>Error::is</code> isn't defined, it's <code>&lt;Error as Any&gt;::is</code>, which I think means it's not checking the whole chain</p>",
        "id": 195982815,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1588352525
    },
    {
        "content": "<p>so it may be that a <code>Trap</code> has some extra context attached to it</p>",
        "id": 195982868,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1588352554
    },
    {
        "content": "<p>so the underlying trap is still there but the top-level type isn't <code>Trap</code></p>",
        "id": 195982886,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1588352565
    },
    {
        "content": "<p><code>e.downcast_ref::&lt;Trap&gt;().is_some()</code> in theory should be <code>true</code></p>",
        "id": 195982955,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1588352608
    },
    {
        "content": "<p>er I could also be totally wrong, just misread the docs</p>",
        "id": 195982979,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1588352631
    },
    {
        "content": "<p><code>Error::is</code> is indeed a thing...</p>",
        "id": 195982989,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1588352638
    },
    {
        "content": "<p>hm got some code to poke around in?</p>",
        "id": 195983041,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1588352648
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span> I have a branch here: <a href=\"https://github.com/sunfishcode/wasmtime/tree/sunfishcode/exit-unwind\" title=\"https://github.com/sunfishcode/wasmtime/tree/sunfishcode/exit-unwind\">https://github.com/sunfishcode/wasmtime/tree/sunfishcode/exit-unwind</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/sunfishcode/wasmtime/tree/sunfishcode/exit-unwind\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/4503403?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/sunfishcode/wasmtime/tree/sunfishcode/exit-unwind\" title=\"sunfishcode/wasmtime\">sunfishcode/wasmtime</a></div><div class=\"message_embed_description\">Standalone JIT-style runtime for WebAsssembly, using Cranelift - sunfishcode/wasmtime</div></div></div>",
        "id": 195987406,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1588354687
    },
    {
        "content": "<p>it's wip, and not complete, but <code>cargo test test_trap_return</code> fails and I'm trying to determine why</p>",
        "id": 195987477,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1588354739
    },
    {
        "content": "<p>See the dbg's in crates/api/src/error.rs</p>",
        "id": 195987531,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1588354777
    },
    {
        "content": "<p>oh <code>Trap::User</code> isn't an <code>anyhow::Error</code></p>",
        "id": 195987672,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1588354834
    },
    {
        "content": "<p>it's a <code>dyn std::error::Error</code></p>",
        "id": 195987678,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1588354837
    },
    {
        "content": "<p>yeah, so we <code>downcast</code> the <code>std::error::Error</code> to get the <code>Trap</code> out, and then stick it in a <code>anyhow::Error</code></p>",
        "id": 195987808,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1588354914
    },
    {
        "content": "<p>and that <code>Error</code> no longer claims to be <code>is::&lt;Trap&gt;()</code></p>",
        "id": 195987890,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1588354938
    },
    {
        "content": "<p>poking around, where's this error constructed?</p>",
        "id": 195987943,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1588354973
    },
    {
        "content": "<p>oh</p>",
        "id": 195987980,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1588354987
    },
    {
        "content": "<p>I believe it ultimately comes from <code>catch_traps</code></p>",
        "id": 195988003,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1588354997
    },
    {
        "content": "<p>this is b/c the return type of closuers changed</p>",
        "id": 195988172,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1588355090
    },
    {
        "content": "<p>from <code>Trap</code> to <code>anyhow::Error</code></p>",
        "id": 195988178,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1588355095
    },
    {
        "content": "<p>so the <code>Trap::User(..)</code> now is always <code>anyhow::Error</code> under the hood</p>",
        "id": 195988201,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1588355106
    },
    {
        "content": "<p>so to downcast that you'd have to downcast to <code>anyhow::Error</code> first</p>",
        "id": 195988212,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1588355115
    },
    {
        "content": "<p>for a patch like this you'd probably want to replace <code>Trap::User</code>'s payload with <code>anyhow::Error</code></p>",
        "id": 195988249,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1588355136
    },
    {
        "content": "<p>not really much reason in trying to be so general</p>",
        "id": 195988252,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1588355142
    },
    {
        "content": "<p>with <code>std::error::Error</code></p>",
        "id": 195988261,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1588355149
    },
    {
        "content": "<p>Ok, makes sense</p>",
        "id": 195988393,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1588355213
    }
]