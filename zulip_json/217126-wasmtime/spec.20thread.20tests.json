[
    {
        "content": "<p>So, I want to activate the <code>tests/spec_testsuite/proposals/threads</code> directory. I worked around the fact, that pooling does not yet work, so I turned it off for this directory... </p>\n<p>Nevertheless, I encountered several issues:</p>\n<ul>\n<li>\n<p>The spec tests wants <code>unaligned atomic</code> as the trap message, whereas in wasmtime  it's thrown as <code>misaligned memory access</code></p>\n</li>\n<li>\n<p>the <code>tests/spec_testsuite/proposals/threads/imports.wast</code> seems to check for failure with multiple tables, which is guarded behind <code>cfg.wasm_reference_types(false)</code>, so I would have unset this for the directory</p>\n</li>\n<li>\n<p><a href=\"https://github.com/WebAssembly/testsuite/blob/main/proposals/threads/imports.wast#L497-L508\">https://github.com/WebAssembly/testsuite/blob/main/proposals/threads/imports.wast#L497-L508</a> fails with</p>\n</li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">wast</span>::<span class=\"n\">Cranelift</span>::<span class=\"n\">spec</span>::<span class=\"n\">threads</span>::<span class=\"n\">imports</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">called</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Result</span>::<span class=\"n\">unwrap</span><span class=\"p\">()</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Err</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">value</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">directive</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">spec_testsuite</span><span class=\"o\">/</span><span class=\"n\">proposals</span><span class=\"o\">/</span><span class=\"n\">threads</span><span class=\"o\">/</span><span class=\"n\">imports</span><span class=\"p\">.</span><span class=\"n\">wast</span>:<span class=\"mi\">486</span>:<span class=\"mi\">1</span><span class=\"w\"></span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"mi\">0</span>: <span class=\"nc\">instantiation</span><span class=\"w\"> </span><span class=\"n\">failed</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"mi\">1</span>: <span class=\"nc\">unknown</span><span class=\"w\"> </span><span class=\"n\">import</span>: <span class=\"err\">`</span><span class=\"n\">spectest</span>::<span class=\"n\">shared_memory</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">been</span><span class=\"w\"> </span><span class=\"n\">defined</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">harald</span><span class=\"o\">/</span><span class=\"n\">git</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">cli</span><span class=\"o\">-</span><span class=\"n\">c713dba219873d4e</span><span class=\"o\">/</span><span class=\"n\">out</span><span class=\"o\">/</span><span class=\"n\">wast_testsuite_tests</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">5193</span>:<span class=\"mi\">18</span><span class=\"w\"></span>\n<span class=\"n\">note</span>: <span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"w\"></span>\n\n\n<span class=\"n\">failures</span>:\n    <span class=\"nc\">wast</span>::<span class=\"n\">Cranelift</span>::<span class=\"n\">spec</span>::<span class=\"n\">threads</span>::<span class=\"n\">imports</span><span class=\"w\"></span>\n</code></pre></div>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/testsuite/blob/main/proposals/threads/imports.wast#L497-L508\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/43c07e724aa157c896ad2c31e58acbbbab4333e6\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f393562343835373639383332353061386463373163666639353436303363653231666163646337326464326634346639616438333038316338633464396362342f576562417373656d626c792f746573747375697465)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/testsuite/blob/main/proposals/threads/imports.wast#L497-L508\" title=\"testsuite/imports.wast at main 路 WebAssembly/testsuite\">testsuite/imports.wast at main 路 WebAssembly/testsuite</a></div><div class=\"message_embed_description\">Mirror of the spec testsuite. Contribute to WebAssembly/testsuite development by creating an account on GitHub.</div></div></div>",
        "id": 310781783,
        "sender_full_name": "Harald Hoyer",
        "timestamp": 1668765107
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"254083\">@Dan Gohman</span> regarding the Trap message, what is the authority here?</p>",
        "id": 310782015,
        "sender_full_name": "Harald Hoyer",
        "timestamp": 1668765173
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span> other than these failures the <code>proposals/threads</code> spec suite passes :)</p>",
        "id": 310782273,
        "sender_full_name": "Harald Hoyer",
        "timestamp": 1668765269
    },
    {
        "content": "<p>ok, added the <code>shared_memory</code> to the <code>link_spectest</code></p>",
        "id": 310786498,
        "sender_full_name": "Harald Hoyer",
        "timestamp": 1668766748
    },
    {
        "content": "<p>Hmm, from <a href=\"https://github.com/WebAssembly/threads/blob/master/proposals/threads/Overview.md#wait\">https://github.com/WebAssembly/threads/blob/master/proposals/threads/Overview.md#wait</a></p>\n<blockquote>\n<p>Wait operators additionally trap if used on an unshared linear memory.<br>\nand<br>\n<a href=\"https://github.com/WebAssembly/testsuite/blob/3a04b2cf93bd8fce277458d419eea8d9c326345c/proposals/threads/atomic.wast#L438-L443\">https://github.com/WebAssembly/testsuite/blob/3a04b2cf93bd8fce277458d419eea8d9c326345c/proposals/threads/atomic.wast#L438-L443</a><br>\nseem to contradict.</p>\n</blockquote>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/threads/blob/master/proposals/threads/Overview.md#wait\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/0829c77e07c5a240c7940b2686ae326602fb6e26\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f323163383263303034656330303135313730343663616165653633653963333234383635666136633536333238373034376165303438353134363737333963612f576562417373656d626c792f74687265616473)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/threads/blob/master/proposals/threads/Overview.md#wait\" title=\"threads/Overview.md at master 路 WebAssembly/threads\">threads/Overview.md at master 路 WebAssembly/threads</a></div><div class=\"message_embed_description\">Threads and Atomics in WebAssembly. Contribute to WebAssembly/threads development by creating an account on GitHub.</div></div></div>",
        "id": 310797505,
        "sender_full_name": "Harald Hoyer",
        "timestamp": 1668770601
    },
    {
        "content": "<p>meh... </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n  <span class=\"nc\">process</span><span class=\"w\"> </span><span class=\"n\">didn</span><span class=\"o\">'</span><span class=\"na\">t</span><span class=\"w\"> </span><span class=\"n\">exit</span><span class=\"w\"> </span><span class=\"n\">successfully</span>: <span class=\"err\">`</span><span class=\"o\">/</span><span class=\"n\">opt</span><span class=\"o\">/</span><span class=\"n\">hostedtoolcache</span><span class=\"o\">/</span><span class=\"n\">qemu</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">qemu</span><span class=\"o\">-</span><span class=\"n\">riscv64</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">L</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">riscv64</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">runner</span><span class=\"o\">/</span><span class=\"n\">work</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">riscv64gc</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">deps</span><span class=\"o\">/</span><span class=\"n\">all</span><span class=\"o\">-</span><span class=\"mi\">6</span><span class=\"n\">effd63677afd609</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">signal</span>: <span class=\"mi\">9</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">SIGKILL</span>: <span class=\"nc\">kill</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 310834996,
        "sender_full_name": "Harald Hoyer",
        "timestamp": 1668782015
    },
    {
        "content": "<p>So, is there a timeout killer? Or what is causing this?</p>",
        "id": 310835144,
        "sender_full_name": "Harald Hoyer",
        "timestamp": 1668782056
    },
    {
        "content": "<p>or is this an OOM killer?</p>",
        "id": 310835961,
        "sender_full_name": "Harald Hoyer",
        "timestamp": 1668782329
    },
    {
        "content": "<p>Could be; OOM killer will (eventually) send SIGKILL</p>",
        "id": 310837448,
        "sender_full_name": "Lann Martin",
        "timestamp": 1668782782
    },
    {
        "content": "<blockquote>\n<p>The spec tests wants unaligned atomic as the trap message, whereas in wasmtime it's thrown as misaligned memory access</p>\n</blockquote>\n<p>It's ok to change the Wasmtime messages to contain the wast testsuite messages at least as a substring</p>\n<blockquote>\n<p>the tests/spec_testsuite/proposals/threads/imports.wast seems to check for failure with multiple tables, which is guarded behind cfg.wasm_reference_types(false), so I would have unset this for the directory</p>\n</blockquote>\n<p>Ah I see these <code>*.wast</code> tests are ancient. If you can figure out how to work around them that's ok, but othewise it's also ok to copy the relevant <code>*.wast</code> tests to <code>tests/misc_testsuite/threads/*.wast</code> or something similar and update them yourself. Or if you're extra intrepid ask upstream if there's any objection to rebasing the proposal.</p>\n<blockquote>\n<p>unknown import: <code>spectest::shared_memory</code> has not been defined',</p>\n</blockquote>\n<p>Looks like you ifgured this one out</p>\n<blockquote>\n<p>So, is there a timeout killer? Or what is causing this?</p>\n</blockquote>\n<p>This is likely related to virtual address space reservations, so you'll probably need to skip the tests when <code>WASMTIME_TEST_NO_HOG_MEMORY</code> is set.</p>",
        "id": 310845978,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1668785126
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"449156\">Harald Hoyer</span> <a href=\"#narrow/stream/217126-wasmtime/topic/spec.20thread.20tests/near/310782015\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"254083\">Dan Gohman</span> regarding the Trap message, what is the authority here?</p>\n</blockquote>\n<p>The only authority is the tests themselves. Trap messages are not defined in the spec document.</p>",
        "id": 310850892,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1668786417
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"449156\">Harald Hoyer</span> <a href=\"#narrow/stream/217126-wasmtime/topic/spec.20thread.20tests/near/310797505\">said</a>:</p>\n<blockquote>\n<p>Hmm, from <a href=\"https://github.com/WebAssembly/threads/blob/master/proposals/threads/Overview.md#wait\">https://github.com/WebAssembly/threads/blob/master/proposals/threads/Overview.md#wait</a></p>\n<blockquote>\n<p>Wait operators additionally trap if used on an unshared linear memory.<br>\nand<br>\n<a href=\"https://github.com/WebAssembly/testsuite/blob/3a04b2cf93bd8fce277458d419eea8d9c326345c/proposals/threads/atomic.wast#L438-L443\">https://github.com/WebAssembly/testsuite/blob/3a04b2cf93bd8fce277458d419eea8d9c326345c/proposals/threads/atomic.wast#L438-L443</a><br>\nseem to contradict.</p>\n</blockquote>\n</blockquote>\n<p>Just to note, that test is only checking that modules with <code>memory.atomic.wait*</code> <em>validate successfully</em> even if the memory is unshared. Those functions are not actually called in the test - if they were, they would (dynamically) trap.</p>",
        "id": 315751131,
        "sender_full_name": "Conrad Watt",
        "timestamp": 1671003121
    },
    {
        "content": "<p>I only got around to adding tests which capture this recently though</p>\n<p><a href=\"https://github.com/WebAssembly/threads/blob/main/test/core/atomic.wast#L476\">https://github.com/WebAssembly/threads/blob/main/test/core/atomic.wast#L476</a></p>\n<p>it looks like the testsuite repo hasn't been synced yet (reasonable enough, since more changes are on the way and the repo is a bit messy right now).</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/threads/blob/main/test/core/atomic.wast#L476\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/0d2062e757d32fb9b44fcec20df36e17bc93e52a\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f323333363162333364653135663163303535303532383035313866643262363462643631656532356333663562383064386139393365313135303737366565372f576562417373656d626c792f74687265616473)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/threads/blob/main/test/core/atomic.wast#L476\" title=\"threads/atomic.wast at main 路 WebAssembly/threads\">threads/atomic.wast at main 路 WebAssembly/threads</a></div><div class=\"message_embed_description\">Threads and Atomics in WebAssembly. Contribute to WebAssembly/threads development by creating an account on GitHub.</div></div></div>",
        "id": 315751599,
        "sender_full_name": "Conrad Watt",
        "timestamp": 1671003346
    }
]