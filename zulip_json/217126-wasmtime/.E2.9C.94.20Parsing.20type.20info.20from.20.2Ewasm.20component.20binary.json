[
    {
        "content": "<p>hi, I was thinking about having a repository of wasm+component programs which are used by my custom wasm runtime. I want to be able to analyze types which are expected and exposed by .wasm+component binary in order to e.g. reject a submitted program which doesn't comply a certain interface. </p>\n<p>Or, for example, if I have a bunch of wasm+component programs in my programs repository with various in/out types, I want to expose them in order to connect inputs and outputs manually, or, generate some inputs. Is there any kind of libraries or built-in functionality related to such use cases? thanks!</p>",
        "id": 489517140,
        "sender_full_name": "Anatolii Smolianinov",
        "timestamp": 1734450551
    },
    {
        "content": "<p>the <code>wasmparser</code> crate can parse and validate a component and its types. it is part of the <code>wasm-tools</code> repo: <a href=\"https://github.com/bytecodealliance/wasm-tools\">https://github.com/bytecodealliance/wasm-tools</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasm-tools\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/ab3ccfff6c2f6b80b98981b1f26fea400250a93f/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f313061336362313939623930613263616463366464383630373933363463666538653138663732666436626336396430333531313135653437626666646330612f62797465636f6465616c6c69616e63652f7761736d2d746f6f6c73&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasm-tools\" title=\"GitHub - bytecodealliance/wasm-tools: CLI and Rust libraries for low-level manipulation of WebAssembly modules\">GitHub - bytecodealliance/wasm-tools: CLI and Rust libraries for low-level manipulation of WebAssembly modules</a></div><div class=\"message_embed_description\"> CLI and Rust libraries for low-level manipulation of WebAssembly modules  - GitHub - bytecodealliance/wasm-tools: CLI and Rust libraries for low-level manipulation of WebAssembly modules</div></div></div>",
        "id": 489518354,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1734450863
    },
    {
        "content": "<p>thanks, I will try to expand the example! <a href=\"https://github.com/bytecodealliance/wasm-tools/blob/9d3016071952148f1b997ee4e40140e9cd9baa36/crates/wasmparser/examples/simple.rs\">https://github.com/bytecodealliance/wasm-tools/blob/9d3016071952148f1b997ee4e40140e9cd9baa36/crates/wasmparser/examples/simple.rs</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasm-tools/blob/9d3016071952148f1b997ee4e40140e9cd9baa36/crates/wasmparser/examples/simple.rs\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/ab3ccfff6c2f6b80b98981b1f26fea400250a93f/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f313061336362313939623930613263616463366464383630373933363463666538653138663732666436626336396430333531313135653437626666646330612f62797465636f6465616c6c69616e63652f7761736d2d746f6f6c73&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasm-tools/blob/9d3016071952148f1b997ee4e40140e9cd9baa36/crates/wasmparser/examples/simple.rs\" title=\"wasm-tools/crates/wasmparser/examples/simple.rs at 9d3016071952148f1b997ee4e40140e9cd9baa36 · bytecodealliance/wasm-tools\">wasm-tools/crates/wasmparser/examples/simple.rs at 9d3016071952148f1b997ee4e40140e9cd9baa36 · bytecodealliance/wasm-tools</a></div><div class=\"message_embed_description\"> CLI and Rust libraries for low-level manipulation of WebAssembly modules  - bytecodealliance/wasm-tools</div></div></div>",
        "id": 489519329,
        "sender_full_name": "Anatolii Smolianinov",
        "timestamp": 1734451134
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"587283\">Anatolii Smolianinov</span> has marked this topic as resolved.</p>",
        "id": 489519339,
        "sender_full_name": "Notification Bot",
        "timestamp": 1734451138
    }
]