[
    {
        "content": "<p>I am seeing some weird wasmtime/cranelift behavior that hopefully someone can help explain. I have a debug build of wasmtime and I am attempting to run a SIMD wasm file. I can track down the SIMD issues, but what is weird is that back-to-back invocations result in completely different errors:</p>\n<div class=\"codehilite\"><pre><span></span>$ ../wasmtime/target/debug/wasmtime --enable-simd simd.wasm\nthread &#39;&lt;unnamed&gt;&#39; panicked at &#39;assertion failed: ok&#39;, cranelift/codegen/src/postopt.rs:353:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\n$ ../wasmtime/target/debug/wasmtime --enable-simd simd.wasm\nError: failed to run main module `codecbench-simd.wasm`\n\nCaused by:\n    0: WebAssembly failed to compile\n    1: Compilation error: function u0:26(i64 vmctx, i64) -&gt; i32 system_v {\n    ...\n    ; 20 verifier errors detected (see above). Compilation aborted.\n</pre></div>\n\n\n<p>Any idea what is going on?</p>",
        "id": 190097086,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1583775890
    },
    {
        "content": "<p>Is it connected to the compilation cache? Does --disable-cache affect it?</p>",
        "id": 190097283,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1583776030
    },
    {
        "content": "<p>Hm, no; when I add <code>--disable-cache</code> I still get the above error pattern on multiple invocations</p>",
        "id": 190097590,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1583776213
    },
    {
        "content": "<p>And it's not exactly \"one of the postop error, one of the verifier errors;\" when I run it a bunch of times sometimes I see more of one or the other</p>",
        "id": 190097696,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1583776295
    },
    {
        "content": "<p>is there any threading in wasmtime?</p>",
        "id": 190097706,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1583776306
    },
    {
        "content": "<p>What if you set env RAYON_NUM_THREADS=1?</p>",
        "id": 190097709,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1583776307
    },
    {
        "content": "<p>:)</p>",
        "id": 190097719,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1583776316
    },
    {
        "content": "<p>Ok, I ran that about 10 times and each time I see the verifier errors</p>",
        "id": 190097793,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1583776358
    },
    {
        "content": "<p>so is this something we need to fix in wasmtime or just something to be aware of?</p>",
        "id": 190097855,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1583776411
    },
    {
        "content": "<p>Also, I thought the verifier was turned off by default? How am I getting verifier errors?</p>",
        "id": 190098045,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1583776499
    },
    {
        "content": "<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/c8ab1e293e8457c61e34a74baad6649f446dbdc7/crates/api/src/runtime.rs#L244\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/blob/c8ab1e293e8457c61e34a74baad6649f446dbdc7/crates/api/src/runtime.rs#L244\">https://github.com/bytecodealliance/wasmtime/blob/c8ab1e293e8457c61e34a74baad6649f446dbdc7/crates/api/src/runtime.rs#L244</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/c8ab1e293e8457c61e34a74baad6649f446dbdc7/crates/api/src/runtime.rs#L244\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\" target=\"_blank\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/c8ab1e293e8457c61e34a74baad6649f446dbdc7/crates/api/src/runtime.rs#L244\" target=\"_blank\" title=\"bytecodealliance/wasmtime\">bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Standalone JIT-style runtime for WebAssembly, using Cranelift - bytecodealliance/wasmtime</div></div></div>",
        "id": 190098111,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1583776545
    },
    {
        "content": "<p>We enable the verifier when <code>cfg!(debug_assertions)</code></p>",
        "id": 190098521,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1583776759
    },
    {
        "content": "<p>(see the <code>.cranelift_debug_verifier(cfg!(debug_assertions))</code> in src/lib.rs)</p>",
        "id": 190098620,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1583776804
    },
    {
        "content": "<p>I think this isn't anything we need to fix. If there's a bug somewhere in the wasm-&gt;cranelift-&gt;machine code pipeline, that bug can trigger at different times because we do parallel compilation.</p>",
        "id": 190098709,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1583776870
    },
    {
        "content": "<p>And we should just fix the bug :-).</p>",
        "id": 190098733,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1583776886
    },
    {
        "content": "<p>ok, sounds good</p>",
        "id": 190098768,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1583776907
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"254083\">@Dan Gohman</span>, thanks for the help above; I made the necessary fixes to get past the verification and postopt errors above but now run into another mysterious issue that may be thread-related:</p>",
        "id": 190124152,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1583792436
    },
    {
        "content": "<p>when I run the Wasm SIMD code in wasmtime, wasmtime hangs; from strace</p>\n<div class=\"codehilite\"><pre><span></span>read(3, &quot;\\0asm\\1\\0\\0\\0\\1\\204\\1\\24`\\1\\177\\1\\177`\\1\\177\\0`\\3\\177\\177\\177\\1\\177`\\4\\177\\177&quot;..., 37987) = 37986\nread(3, &quot;&quot;, 1)                          = 0\nclose(3)                                = 0\nbrk(NULL)                               = 0x55c08423d000\nbrk(0x55c084265000)                     = 0x55c084265000\nfutex(0x55c0842034a8, FUTEX_WAKE_PRIVATE, 2147483647) = 8\nfutex(0x55c084203450, FUTEX_WAKE_PRIVATE, 1) = 1\nfutex(0x55c084232d58, FUTEX_WAIT_PRIVATE, 0, NULL\n</pre></div>",
        "id": 190124195,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1583792478
    },
    {
        "content": "<p>what could wasmtime be waiting for after loading the Wasm code?</p>",
        "id": 190124225,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1583792511
    },
    {
        "content": "<p>I don't know. Is some compilation thread entering an infinite loop?</p>",
        "id": 190124323,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1583792580
    },
    {
        "content": "<p>Hm, how could I tell?</p>",
        "id": 190124494,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1583792704
    },
    {
        "content": "<p>Can you run wasmtime under a debugger?</p>",
        "id": 190124528,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1583792727
    },
    {
        "content": "<p>yes, and then break a few times while running it?</p>",
        "id": 190124550,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1583792752
    },
    {
        "content": "<p>to see if it is in the same general region?</p>",
        "id": 190124601,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1583792764
    },
    {
        "content": "<p>Let it run until it's hung, and then look at all the threads to see where they are</p>",
        "id": 190124632,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1583792793
    },
    {
        "content": "<p>ok, looks like it is in wasmtime_environ...cranelift:rs:210</p>",
        "id": 190124783,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1583792888
    },
    {
        "content": "<p>probably the <code>par_iter</code> there?</p>",
        "id": 190124794,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1583792895
    },
    {
        "content": "<p>That's the thing running all the threads. Are their any worker threads doing work?</p>",
        "id": 190124819,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1583792929
    },
    {
        "content": "<p>yes, two: one is in cranelift-codegen doing some layout renumbering (?) and the other is in WorkerThread::run</p>",
        "id": 190124954,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1583793044
    },
    {
        "content": "<p>so codegen is stuck in a loop somehow</p>",
        "id": 190125073,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1583793128
    },
    {
        "content": "<p>That sounds likely, yes.</p>",
        "id": 190125086,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1583793136
    },
    {
        "content": "<p>ok, let me go down that rabbit hole for a while</p>",
        "id": 190125113,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1583793158
    }
]