[
    {
        "content": "<p>Does the WASI package label <code>wasi:io/error@0.2.0</code> correlate to preview 2 as <a href=\"https://github.com/WebAssembly/WASI/blob/main/preview2/README.md\">metioned here</a>?</p>\n<p>I see mention of WASI preview 1, 2 and soon to be 3 and I see these versions for the WASI packages. Is there a corresponding wasi_snapshot_preview2.proxy.wasm for Preview 2 or does the name of these snapshot previews with wasmtime 19 not relate to what the WASI preview 2 readme says?</p>\n<p>My components built with wasmtime 19 and embedding wasi_snapshot_preview1.proxy.wasm list imports for 0.2.0 so it seems like the preview1 snapshot is packaging 0.2.0 packages. Correct?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/WASI/blob/main/preview2/README.md\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/18dda3fae5b077885588e767842fefe1484bf6ac\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f386134633336623238373533386635346366313339306433613131613837643337666135333861353334663862353964373265613061653830363130313564392f576562417373656d626c792f57415349)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/WASI/blob/main/preview2/README.md\" title=\"WASI/preview2/README.md at main · WebAssembly/WASI\">WASI/preview2/README.md at main · WebAssembly/WASI</a></div><div class=\"message_embed_description\">WebAssembly System Interface. Contribute to WebAssembly/WASI development by creating an account on GitHub.</div></div></div>",
        "id": 429948281,
        "sender_full_name": "adam",
        "timestamp": 1711573102
    },
    {
        "content": "<p>Preview 2 is <code>0.2.x</code>.</p>",
        "id": 429948712,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1711573279
    },
    {
        "content": "<p>the filename of the adapter means that it takes preview1 wasi as input, it always has the latest version as output I think</p>",
        "id": 429948779,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1711573315
    },
    {
        "content": "<p>What would the scenario of not needing to do the embed step to adapt a component? Is it a correct understanding that the step is only needed if the runtime has preview1 and the component is using preview2?</p>",
        "id": 429949008,
        "sender_full_name": "adam",
        "timestamp": 1711573402
    },
    {
        "content": "<p>Yes; work on natively Preview 2 toolchains is underway, and when they're ready they won't need the preview1-to-preview2 adapter.</p>",
        "id": 429949182,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1711573471
    },
    {
        "content": "<p>compilers currently only target preview1, so you always need to adapt to get a component. People are working on a wasm32-wasip2 compiler target, once that exists you can compile components without needing to adapt</p>",
        "id": 429949199,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1711573481
    },
    {
        "content": "<p>I see an example in wasmtime that uses wasi-common to provide WASI APIs to a runtime instance. Yesterday Alex posted a wasmtime-wasi crate example so I see two different paths forward for linking WASI APIs. There's also a crate called wasi also by the bytecodealliance.</p>",
        "id": 429950283,
        "sender_full_name": "adam",
        "timestamp": 1711573927
    },
    {
        "content": "<p>wasi-common contains a Preview 1 host implementation. Current versions of wasmtime-wasi contain a Preview 2 host implementation. Current versions of the <code>wasi</code> crate contains guest bindings for Preview 2 APIs.</p>",
        "id": 429950607,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1711574088
    },
    {
        "content": "<p>And using wasi-common and wasmtime-wasi require switching to nightly Rust. Is that avoiadble?</p>",
        "id": 429950703,
        "sender_full_name": "adam",
        "timestamp": 1711574129
    },
    {
        "content": "<p>They do?</p>",
        "id": 429950836,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1711574173
    },
    {
        "content": "<p>(stable rust works for me)</p>",
        "id": 429950875,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1711574191
    },
    {
        "content": "<p>can_vector from the io-extras crate </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0554</span><span class=\"p\">]</span>: <span class=\"err\">`</span><span class=\"cp\">#![feature]</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">be</span><span class=\"w\"> </span><span class=\"n\">used</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">stable</span><span class=\"w\"> </span><span class=\"n\">release</span><span class=\"w\"> </span><span class=\"n\">channel</span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">adam</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"o\">/</span><span class=\"n\">registry</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">index</span><span class=\"p\">.</span><span class=\"n\">crates</span><span class=\"p\">.</span><span class=\"n\">io</span><span class=\"o\">-</span><span class=\"mi\">6</span><span class=\"n\">f17d22bba15001f</span><span class=\"o\">/</span><span class=\"n\">io</span><span class=\"o\">-</span><span class=\"n\">extras</span><span class=\"o\">-</span><span class=\"mf\">0.18.1</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">19</span>:<span class=\"mi\">33</span>\n<span class=\"w\">   </span><span class=\"o\">|</span>\n<span class=\"mi\">19</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"cp\">#![cfg_attr(can_vector, feature(can_vector))]</span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                                 </span><span class=\"o\">^^^^^^^^^^</span>\n</code></pre></div>",
        "id": 429950958,
        "sender_full_name": "adam",
        "timestamp": 1711574221
    },
    {
        "content": "<p>Adding either of those two crates causes this error. Removing them compiles and runs.</p>",
        "id": 429951043,
        "sender_full_name": "adam",
        "timestamp": 1711574245
    },
    {
        "content": "<p>That.. is not supposed to happen :-}.</p>",
        "id": 429951075,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1711574263
    },
    {
        "content": "<p>I would run cargo clean next, I've seen the strangest things when target has been written to by different rust versions</p>",
        "id": 429951229,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1711574321
    },
    {
        "content": "<p>cargo clean did the job</p>",
        "id": 429951563,
        "sender_full_name": "adam",
        "timestamp": 1711574455
    },
    {
        "content": "<p>The crates/wasi directory in wasmtime repo is actually the crate wasmtime-wasi. Where does the wasi crate for guest bindings live?</p>",
        "id": 429952185,
        "sender_full_name": "adam",
        "timestamp": 1711574736
    },
    {
        "content": "<p><a href=\"https://github.com/bytecodealliance/wasi\">https://github.com/bytecodealliance/wasi</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasi\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/94d69ea5b2953d793f81682b022e3287567c64e0\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f383332626339653766633266366264316231363533656663636163643939313834376231363664613362656431656239303236623461633438316263646532312f62797465636f6465616c6c69616e63652f77617369)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasi\" title=\"GitHub - bytecodealliance/wasi: Experimental WASI API bindings for Rust\">GitHub - bytecodealliance/wasi: Experimental WASI API bindings for Rust</a></div><div class=\"message_embed_description\">Experimental WASI API bindings for Rust. Contribute to bytecodealliance/wasi development by creating an account on GitHub.</div></div></div>",
        "id": 429952251,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1711574762
    },
    {
        "content": "<p>If wasmtime-wasi is the preview 2 host impl and the package used by the example update PR by Alex is wasmtime-wasi::preview1, if I use wasmtime_wasi::ctx it will be preview 2? Which would mean the adapt step wouldn't be necessary?</p>",
        "id": 429953149,
        "sender_full_name": "adam",
        "timestamp": 1711575179
    },
    {
        "content": "<p>That was a question answered by your explanation of the preview1 adapting for preview2. Had to look at the code to grok it.</p>",
        "id": 429961687,
        "sender_full_name": "adam",
        "timestamp": 1711579629
    },
    {
        "content": "<p>Thanks for the help everyone!</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\"> </span><span class=\"o\">~/</span><span class=\"n\">work</span><span class=\"o\">/</span><span class=\"n\">learning</span><span class=\"o\">/</span><span class=\"n\">learn</span><span class=\"o\">-</span><span class=\"n\">wasm</span><span class=\"o\">-</span><span class=\"n\">components</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">rust</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span>\n<span class=\"w\">   </span><span class=\"n\">Compiling</span><span class=\"w\"> </span><span class=\"n\">runtime</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"mf\">1.0</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">adam</span><span class=\"o\">/</span><span class=\"n\">work</span><span class=\"o\">/</span><span class=\"n\">learning</span><span class=\"o\">/</span><span class=\"n\">learn</span><span class=\"o\">-</span><span class=\"n\">wasm</span><span class=\"o\">-</span><span class=\"n\">components</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">rust</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">Finished</span><span class=\"w\"> </span><span class=\"n\">dev</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">unoptimized</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">debuginfo</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mf\">1.94</span><span class=\"n\">s</span>\n<span class=\"w\">     </span><span class=\"n\">Running</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"err\">`</span>\n<span class=\"mi\">26</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">even</span>\n</code></pre></div>",
        "id": 429962276,
        "sender_full_name": "adam",
        "timestamp": 1711579989
    }
]