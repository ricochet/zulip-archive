[
    {
        "content": "<p>I have an epoch yielding of about 20ms. When I measure the time between each poll call should I expect to see about 20ms as well? I have another thread incrementing epochs and I'm on wasmtime 17.0.2</p>",
        "id": 440732530,
        "sender_full_name": "Ashanti Mutinta",
        "timestamp": 1716749704
    },
    {
        "content": "<p>For cpu bound work that should show up yeah. If the work is otherwise yielding though (eg for io) then the time-per-poll may be shorter</p>",
        "id": 440734260,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1716751617
    },
    {
        "content": "<p>I see it might be something in my code. Have a weird issue where the time elapsed on the poll is 0 most of the time until the last poll which yields the whole thing</p>",
        "id": 440734389,
        "sender_full_name": "Ashanti Mutinta",
        "timestamp": 1716751707
    },
    {
        "content": "<p>Did you call <a href=\"https://docs.rs/wasmtime/latest/wasmtime/struct.Store.html#method.epoch_deadline_async_yield_and_update\"><code>Store::epoch_deadline_async_yield_and_update</code></a>?</p>",
        "id": 440734949,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1716752273
    },
    {
        "content": "<p>Yes I did right before I called the method. Is that the right way to do it?</p>",
        "id": 440735455,
        "sender_full_name": "Ashanti Mutinta",
        "timestamp": 1716752721
    },
    {
        "content": "<p>It should be ok to call that only once on store creation, no need to call it once per poll</p>",
        "id": 440736685,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1716753892
    },
    {
        "content": "<p>Okay will try and look at this again. Thank you!</p>",
        "id": 440737008,
        "sender_full_name": "Ashanti Mutinta",
        "timestamp": 1716754217
    },
    {
        "content": "<p>Last question(hopefully) do I need to set deadline as well when I'm using epoch_deadline_async_yield? E.g deadline of 20ms with epoch_deadline_async_yield means after 20ms it will give back control to the async runtime?</p>",
        "id": 440737671,
        "sender_full_name": "Ashanti Mutinta",
        "timestamp": 1716754933
    },
    {
        "content": "<p>This may have changed between 17 and 21 so I sort of forget, we had some weird interactions historically possible which is why there was a refactor. I believe all you need to do is configure yielding though</p>",
        "id": 440739181,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1716756501
    },
    {
        "content": "<p>Are there any examples for epoch_deadline_async_yield_and_update? I think I have it right but the numbers still look inconsistent</p>",
        "id": 440894181,
        "sender_full_name": "Ashanti Mutinta",
        "timestamp": 1716830663
    },
    {
        "content": "<p>I think I figured it out. I was using tokio spawn with a very short interval tick and I don't think it liked the context switch much</p>",
        "id": 441009266,
        "sender_full_name": "Ashanti Mutinta",
        "timestamp": 1716892020
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"723253\">Levent kaya</span> has marked this topic as resolved.</p>",
        "id": 441053558,
        "sender_full_name": "Notification Bot",
        "timestamp": 1716906696
    }
]