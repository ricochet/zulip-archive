[
    {
        "content": "<p>Hi all, I have not yet advanced very deeply into the wasmtime codebase, but we are currently building a little runner agent for wasm programs that leads us to believe that there is some interesting performance optimization going on that we don't fully understand. I'd appreciate any pointers that would help us understand what is going on here.<br>\nWe have a little ruby.wasm Hello world that looks like this when run via Wasmtime:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">time</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">build</span><span class=\"o\">/</span><span class=\"n\">ruby</span><span class=\"o\">-</span><span class=\"n\">example</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"n\">Hello</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">world</span><span class=\"o\">!</span><span class=\"w\"> </span><span class=\"n\">This</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">Ruby</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"err\">ðŸŸ¥ðŸ’Ž</span>\n<span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">build</span><span class=\"o\">/</span><span class=\"n\">ruby</span><span class=\"o\">-</span><span class=\"n\">example</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\">  </span><span class=\"mf\">15.48</span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"n\">user</span><span class=\"w\"> </span><span class=\"mf\">0.64</span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"n\">system</span><span class=\"w\"> </span><span class=\"mi\">168</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"n\">cpu</span><span class=\"w\"> </span><span class=\"mf\">9.579</span><span class=\"w\"> </span><span class=\"n\">total</span>\n<span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">time</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">build</span><span class=\"o\">/</span><span class=\"n\">ruby</span><span class=\"o\">-</span><span class=\"n\">example</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"n\">Hello</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">world</span><span class=\"o\">!</span><span class=\"w\"> </span><span class=\"n\">This</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">Ruby</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"err\">ðŸŸ¥ðŸ’Ž</span>\n<span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">build</span><span class=\"o\">/</span><span class=\"n\">ruby</span><span class=\"o\">-</span><span class=\"n\">example</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\">  </span><span class=\"mf\">0.21</span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"n\">user</span><span class=\"w\"> </span><span class=\"mf\">0.03</span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"n\">system</span><span class=\"w\"> </span><span class=\"mi\">98</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"n\">cpu</span><span class=\"w\"> </span><span class=\"mf\">0.237</span><span class=\"w\"> </span><span class=\"n\">total</span>\n</code></pre></div>\n<p>...clearly there is some caching going on.<br>\nRunning our own test runner (which internally runs wasmtime) we get something like this:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">time</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">release</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">bin</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"o\">-</span><span class=\"n\">runner</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"o\">../</span><span class=\"n\">wasm</span><span class=\"o\">-</span><span class=\"n\">samples</span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">/</span><span class=\"n\">ruby</span><span class=\"o\">-</span><span class=\"n\">example</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">release</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">bin</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"o\">-</span><span class=\"n\">runner</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"w\">   </span><span class=\"mf\">15.59</span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"n\">user</span><span class=\"w\"> </span><span class=\"mf\">0.65</span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"n\">system</span><span class=\"w\"> </span><span class=\"mi\">106</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"n\">cpu</span><span class=\"w\"> </span><span class=\"mf\">15.305</span><span class=\"w\"> </span><span class=\"n\">total</span>\n<span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">time</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">release</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">bin</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"o\">-</span><span class=\"n\">runner</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"o\">../</span><span class=\"n\">wasm</span><span class=\"o\">-</span><span class=\"n\">samples</span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">/</span><span class=\"n\">ruby</span><span class=\"o\">-</span><span class=\"n\">example</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">release</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">bin</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"o\">-</span><span class=\"n\">runner</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"w\">   </span><span class=\"mf\">15.35</span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"n\">user</span><span class=\"w\"> </span><span class=\"mf\">0.62</span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"n\">system</span><span class=\"w\"> </span><span class=\"mi\">167</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"n\">cpu</span><span class=\"w\"> </span><span class=\"mf\">9.553</span><span class=\"w\"> </span><span class=\"n\">total</span>\n</code></pre></div>\n<p>Clearly there is some caching <em>possible</em>, but not enabled. What's the best way to get the same caching performance when using wasmtime as a module?</p>",
        "id": 344107557,
        "sender_full_name": "Johannes Becker",
        "timestamp": 1679607843
    },
    {
        "content": "<p>There's some info on the cli cache system here<br>\n<a href=\"https://docs.wasmtime.dev/cli-cache.html#how-does-the-cache-work\">https://docs.wasmtime.dev/cli-cache.html#how-does-the-cache-work</a><br>\nIt looks like this API might correspond to it in the embedding create<br>\n<a href=\"https://docs.rs/wasmtime/latest/wasmtime/struct.Config.html#method.cache_config_load_default\">https://docs.rs/wasmtime/latest/wasmtime/struct.Config.html#method.cache_config_load_default</a></p>",
        "id": 344110775,
        "sender_full_name": "Robin Brown",
        "timestamp": 1679609172
    },
    {
        "content": "<p>You could look into calling <code>precompile_module</code> yourself if you want more control.<br>\n<a href=\"https://docs.rs/wasmtime/latest/wasmtime/struct.Engine.html#method.precompile_module\">https://docs.rs/wasmtime/latest/wasmtime/struct.Engine.html#method.precompile_module</a></p>",
        "id": 344112429,
        "sender_full_name": "Robin Brown",
        "timestamp": 1679609865
    },
    {
        "content": "<p>There is also the <code>wasmtime compile</code> subcommand.</p>",
        "id": 344128761,
        "sender_full_name": "Peter Huene",
        "timestamp": 1679617995
    }
]