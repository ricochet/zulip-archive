[
    {
        "content": "<p>Do we have a policy for whether we handle OOMs?</p>\n<p>I remember discussing this in one of our biweekly meetings and ,IIRC, the discussion wasn't super conclusive. I think the closest we got was \"we should make an attempt to avoid the common OOM cases, but not bend over backwards\". Does that still sound right?</p>\n<p>Context: the fuzzers have found out that they can trigger OOMs by requesting very large tables. Should we polyfill <code>Vec::try_with_capacity</code> using the <code>std::alloc</code> API here? And also handle this in <code>table.grow</code>? How deep do we want to chase this?</p>",
        "id": 208158020,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1598481410
    },
    {
        "content": "<p>hmm... it looks like any call to <code>malloc</code> that crosses the fuzzer threshold triggers an ASan crash, so even if we write the code to recover from malloc failure, it doesn't fix this fuzz bug :-/</p>",
        "id": 208159976,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1598482778
    },
    {
        "content": "<p>Yeah I think even if we gracefully handle oom here it'll show up as a bug, so in this case I think we will need to do an ahead-of-time calculation to limit the size of a table, I thought wasmparser might already have this limit but looks like not for table limits</p>",
        "id": 208164283,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1598486254
    },
    {
        "content": "<p>Do we have any way to explicitly size limits for the heap and tables, ideally exposed in the embedding API? The fuzzing setup could use those and shut instances down that exceed them, I guess? (Though I also guess it probably should also try to avoid doing this too much.)</p>\n<p>These kinds of limits seem generally useful to embedders, so if there's something lacking there, it might be good to resolve that.</p>",
        "id": 208203673,
        "sender_full_name": "Till Schneidereit",
        "timestamp": 1598527323
    },
    {
        "content": "<p>We have some limits in cranelift and wasmparser, but they aren't user configurable, last I looked.</p>",
        "id": 208231270,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1598541406
    }
]