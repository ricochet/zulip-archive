[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span>, <span class=\"user-mention\" data-user-id=\"254389\">@Chris Fallin</span>: I just merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2957\">https://github.com/bytecodealliance/wasmtime/pull/2957</a> since it seemed to make sense but I asked myself, \"are these tests not being run on ARM in CI? Shouldn't we be seeing failures there?\" IIRC, the S390 testing was pending some changes to QEMU, but aren't the tests being run in <code>qemu-aarch64</code>?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/2957\" style=\"background-image: url(https://opengraph.githubassets.com/1d3cc05978afea6ffeb6e25bbfdcbf09bd855d433a47f6c588a0258b0eb00cee/bytecodealliance/wasmtime/pull/2957)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/2957\" title=\"Cranelift: restrict running tests dependent of x86_64 by olivierlemasle · Pull Request #2957 · bytecodealliance/wasmtime\">Cranelift: restrict running tests dependent of x86_64 by olivierlemasle · Pull Request #2957 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Restrict running tests dependant of x86_64\nThese 5 tests fail with the error \"This test requires x86_64 support.\" when executed on another architecture.</div></div></div>",
        "id": 241292769,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1622655570
    },
    {
        "content": "<p>Yes, we do run aarch64 tests with qemu... I haven't looked closely at that PR yet but I should</p>",
        "id": 241292902,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1622655614
    },
    {
        "content": "<p>yeah <a href=\"https://github.com/bytecodealliance/wasmtime/runs/2719045261?check_suite_focus=true#step:12:649\">we're running the test</a>, I don't think the PR was correct, it should probably only disable the tests when the x86_64 backend isn't built. On CI we build tests with all backends enabled</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/runs/2719045261?check_suite_focus=true#step:12:649\" style=\"background-image: url(https://github.githubassets.com/images/modules/open_graph/github-octocat.png)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/runs/2719045261?check_suite_focus=true#step:12:649\" title=\"Build software better, together\">Build software better, together</a></div><div class=\"message_embed_description\">GitHub is where people build software. More than 65 million people use GitHub to discover, fork, and contribute to over 200 million projects.</div></div></div>",
        "id": 241293093,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1622655714
    },
    {
        "content": "<p>Ah, OK, so it's just building and then checking CLIF, it's not executing anything... the x86-64 is just a placeholder for \"we need some backend\"</p>",
        "id": 241293140,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1622655727
    },
    {
        "content": "<p>the PR disables the tests unless it's on the x86_64 platform, but I think the right fix is to require that the backend is built in</p>",
        "id": 241293155,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1622655737
    },
    {
        "content": "<p>I don't remember the crate dependency graph offhand but if we could use <code>cranelift-native</code> here we could just get a backend for the current machine</p>",
        "id": 241293238,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1622655796
    },
    {
        "content": "<blockquote>\n<p>I think the right fix is to require that the backend is built in</p>\n</blockquote>\n<p>Yeah, but isn't that what <span class=\"user-mention\" data-user-id=\"254393\">@Benjamin Bouvier</span> is getting at in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2957#discussion_r643136838\">https://github.com/bytecodealliance/wasmtime/pull/2957#discussion_r643136838</a>? In the absence of a way of knowing \"is the x86 backend present?\" we have to check the target architecture.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/2957#discussion_r643136838\" style=\"background-image: url(https://opengraph.githubassets.com/1a463af214d7ea4ba428e453218192dce4dc7225eb6b4eea72344520a75091e9/bytecodealliance/wasmtime/pull/2957)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/2957#discussion_r643136838\" title=\"Cranelift: restrict running tests dependent of x86_64 by olivierlemasle · Pull Request #2957 · bytecodealliance/wasmtime\">Cranelift: restrict running tests dependent of x86_64 by olivierlemasle · Pull Request #2957 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Restrict running tests dependant of x86_64\nThese 5 tests fail with the error \"This test requires x86_64 support.\" when executed on another architecture.</div></div></div>",
        "id": 241309073,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1622662709
    },
    {
        "content": "<blockquote>\n<p>we could just get a backend for the current machine</p>\n</blockquote>\n<p>I'm looking at those tests now and I think this makes sense to try... they assert a specific generated CLIF for memory operations so hopefully the emitted CLIF would be the same for different backends? If we think that is true and I can submit a PR to bring in <code>cranelift-native</code> as a dev dependency and use the current backend for the test.</p>",
        "id": 241310238,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1622663346
    },
    {
        "content": "<p>Or perhaps <span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span> there is some way to figure out in<code>cranelift-frontend</code> which features were enabled for its <code>cranelift-codegen</code> dependency?</p>",
        "id": 241310488,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1622663474
    },
    {
        "content": "<p>I think <code>cranelift-codegen</code> would have to expose a function of some kind. Or like you could catch the error when loading the target and \"pass\" the test because support wasn't compiled in</p>",
        "id": 241311008,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1622663708
    },
    {
        "content": "<p>Yeah, that's not a bad idea... Just print out <code>Skipping test foo because the x86 backend is not present</code> or something like that?</p>",
        "id": 241311452,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1622663907
    },
    {
        "content": "<p>It would be nicer to be able to ignore tests at runtime but I'm not sure that is possible...</p>",
        "id": 241311528,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1622663942
    },
    {
        "content": "<p>Well, let's see how <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2961\">https://github.com/bytecodealliance/wasmtime/pull/2961</a> goes: basically I just made the tests use the host system's target ISA (pulled in by cranelift-codegen) which should have the effect that these tests would run for everyone regardless of host. I'm not sure if the emitted CLIF will always be the same but I don't really see why not so let's run it and see...</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/2961\" style=\"background-image: url(https://opengraph.githubassets.com/2ba0fce461ca2c8dbfdab71cc005b0f9a2db6bd3a1cd8de269ef8d61f808ad4e/bytecodealliance/wasmtime/pull/2961)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/2961\" title=\"Use the host's target ISA in the frontend memory tests by abrown · Pull Request #2961 · bytecodealliance/wasmtime\">Use the host's target ISA in the frontend memory tests by abrown · Pull Request #2961 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Commit 7d36fd9 avoided these\nx86-specific tests altogether. This change attempts to run the tests on\nwhichever backend is native to the current host system.</div></div></div>",
        "id": 241315066,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1622665651
    },
    {
        "content": "<p>Thanks for tackling this! Yeah I don't think the CLIF should differ -- given that cranelift-frontend did not previously depend on <code>cranelift-native</code> to determine the platform</p>",
        "id": 241315584,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1622665904
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span>, when you get a chance: not sure why the verify-publish step is failing: <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2961/checks?check_run_id=2731435666#step:5:868\">https://github.com/bytecodealliance/wasmtime/pull/2961/checks?check_run_id=2731435666#step:5:868</a>. Is there something different that has to happen for dev dependencies?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/2961/checks?check_run_id=2731435666#step:5:868\" style=\"background-image: url(https://avatars.githubusercontent.com/u/541880?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/2961/checks?check_run_id=2731435666#step:5:868\" title=\"Use the host's target ISA in the frontend memory tests by abrown · Pull Request #2961 · bytecodealliance/wasmtime\">Use the host's target ISA in the frontend memory tests by abrown · Pull Request #2961 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Commit 7d36fd9 avoided these\nx86-specific tests altogether. This change attempts to run the tests on\nwhichever backend is native to the current host system.</div></div></div>",
        "id": 241315984,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1622666094
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"254110\">@Andrew Brown</span> dependencies are topologically sorted in <code>scripts/publish.rs</code> and you'll probably need to reorder something</p>",
        "id": 241323263,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1622669905
    },
    {
        "content": "<p>Ok, I used <span class=\"user-mention\" data-user-id=\"264278\">@bjorn3</span>'s suggestion to bring in the x86 backend as a dev dependency in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2961\">https://github.com/bytecodealliance/wasmtime/pull/2961</a>. I think that is a better solution than what we previously merged. Thoughts?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/2961\" style=\"background-image: url(https://opengraph.githubassets.com/2ba0fce461ca2c8dbfdab71cc005b0f9a2db6bd3a1cd8de269ef8d61f808ad4e/bytecodealliance/wasmtime/pull/2961)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/2961\" title=\"Use the host's target ISA in the frontend memory tests by abrown · Pull Request #2961 · bytecodealliance/wasmtime\">Use the host's target ISA in the frontend memory tests by abrown · Pull Request #2961 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Commit 7d36fd9 avoided these\nx86-specific tests altogether. This change attempts to run the tests on\nwhichever backend is native to the current host system.</div></div></div>",
        "id": 241420650,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1622739823
    },
    {
        "content": "<p>Did you see my last suggestion of creating a <code>FrontendConfig</code> directly? <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2961#issuecomment-853748761\">https://github.com/bytecodealliance/wasmtime/pull/2961#issuecomment-853748761</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/2961#issuecomment-853748761\" style=\"background-image: url(https://opengraph.githubassets.com/4bbb47674cf6a9dc267c405a03afe7644560d2a733180b6125fdaa64874b84ae/bytecodealliance/wasmtime/pull/2961)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/2961#issuecomment-853748761\" title=\"Require x86 target ISA in the frontend memory tests by abrown · Pull Request #2961 · bytecodealliance/wasmtime\">Require x86 target ISA in the frontend memory tests by abrown · Pull Request #2961 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Commit 7d36fd9 avoided these\nx86-specific tests altogether. This change attempts to run the tests on\nwhichever backend is native to the current host system.\n[edit: based on @bjorn3&#39;s suggestion...</div></div></div>",
        "id": 241421041,
        "sender_full_name": "bjorn3",
        "timestamp": 1622739966
    },
    {
        "content": "<p>Yeah, I just tried the first suggestion first... You think that's a way better approach?</p>",
        "id": 241421984,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1622740341
    },
    {
        "content": "<p>Oh, I see... you mean in addition to what is currently there?</p>",
        "id": 241422188,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1622740440
    },
    {
        "content": "<p>No, ok, I see what you mean... completely replace the use of <code>TargetIsa</code></p>",
        "id": 241422449,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1622740552
    }
]