[
    {
        "content": "<p>I want to manually construct <code>CodeMemory</code>. Right now I am facing difficultly to construct it as it requires <code>MmapVec</code>. I can't use file based APIs as I have a custom persistence layer which has completely different APIs and need to go at the level of <code>CodeMemory</code> and <code>MmapVec</code>. I checked out <code>wasmtime_runtime</code> but they are completely different types not expected by <code>CodeMemory</code>. Any help would be highly appreciated, thanks</p>",
        "id": 466331317,
        "sender_full_name": "spino17",
        "timestamp": 1725046435
    },
    {
        "content": "<p>The wasmtime_runtime crate has been merged into the main wasmtime crate a while back. MmapVec is not publicly accessible.</p>",
        "id": 466332032,
        "sender_full_name": "bjorn3",
        "timestamp": 1725046762
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"264278\">@bjorn3</span> thanks for the response. So what's the way to go if I want to work with CodeMemory APIs ?</p>",
        "id": 466332202,
        "sender_full_name": "spino17",
        "timestamp": 1725046827
    },
    {
        "content": "<p>I'm surprised CodeMemory is public at all. I can't find any way it would be useful at all.</p>",
        "id": 466332308,
        "sender_full_name": "bjorn3",
        "timestamp": 1725046876
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"264278\">@bjorn3</span> yeah, I also thought so. Any specific reason not to expose such APIs ?</p>",
        "id": 466332473,
        "sender_full_name": "spino17",
        "timestamp": 1725046937
    },
    {
        "content": "<p>You probably want to use <code>Module::serialize</code> + <code>Module::deserialize</code> if you handle caching yourself without going through files.</p>",
        "id": 466332528,
        "sender_full_name": "bjorn3",
        "timestamp": 1725046962
    },
    {
        "content": "<p><code>Module::deserialize_file</code> is slightly more efficient as it avoids writing the module to a memfd, but if you are avoiding real files, the compiled module will eventually have to end up in a memfd anyway for wasmtime to be able to mmap it.</p>",
        "id": 466332891,
        "sender_full_name": "bjorn3",
        "timestamp": 1725047045
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"264278\">@bjorn3</span> thanks for the explanation. This makes sense. Let me try to look into the Module APIs only. Thanks again.</p>",
        "id": 466333757,
        "sender_full_name": "spino17",
        "timestamp": 1725047413
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"234973\">Till Schneidereit</span> has marked this topic as resolved.</p>",
        "id": 468570100,
        "sender_full_name": "Notification Bot",
        "timestamp": 1725803285
    }
]