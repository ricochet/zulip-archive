[
    {
        "content": "<p>I'm trying to use <code>wasmtime::component::bindgen!</code> on a wit like this I get a parse error like output</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">import</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">export</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"k\">use</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">definition</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"n\">identifier</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"c1\">// ..</span>\n\n<span class=\"n\">world</span><span class=\"w\"> </span><span class=\"k\">union</span><span class=\"o\">-</span><span class=\"n\">my</span><span class=\"o\">-</span><span class=\"n\">world</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">     </span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"n\">my</span><span class=\"o\">-</span><span class=\"n\">world</span><span class=\"o\">-</span><span class=\"n\">a</span>\n<span class=\"w\">     </span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"n\">my</span><span class=\"o\">-</span><span class=\"n\">world</span><span class=\"o\">-</span><span class=\"n\">b</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>Is there a possibility that <code>include</code> statement is not supported yet?</p>\n<p>My purpose here is to deduplicate the generated code between two worlds which shares dependencies.<br>\nFollowing the suggestion here: <a href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/WIT.md#de-duplication-of-ids\">https://github.com/WebAssembly/component-model/blob/main/design/mvp/WIT.md#de-duplication-of-ids</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/WIT.md#de-duplication-of-ids\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/fee8ddfc2ec607fdd23fdae0f9f80602102c11c2\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f343938653163646439346534303164353333326237363530336563633837303463663036363961326433643361636564666464623438666462323061643435312f576562417373656d626c792f636f6d706f6e656e742d6d6f64656c)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/WIT.md#de-duplication-of-ids\" title=\"component-model/design/mvp/WIT.md at main · WebAssembly/component-model\">component-model/design/mvp/WIT.md at main · WebAssembly/component-model</a></div><div class=\"message_embed_description\">Repository for design and specification of the Component Model - component-model/design/mvp/WIT.md at main · WebAssembly/component-model</div></div></div>",
        "id": 372934190,
        "sender_full_name": "alisomay",
        "timestamp": 1688656325
    },
    {
        "content": "<p>According to the <code>wit-parser</code> code base it is supported:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">impl</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">WorldItem</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">parse</span><span class=\"p\">(</span><span class=\"n\">tokens</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"n\">Tokenizer</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">docs</span>: <span class=\"nc\">Docs</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"n\">WorldItem</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"o\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">tokens</span><span class=\"p\">.</span><span class=\"n\">clone</span><span class=\"p\">().</span><span class=\"n\">next</span><span class=\"p\">()</span><span class=\"o\">?</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"c1\">//.. many patterns</span>\n<span class=\"w\">            </span><span class=\"nb\">Some</span><span class=\"p\">((</span><span class=\"n\">_span</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Token</span>::<span class=\"n\">Include</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">Include</span>::<span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">tokens</span><span class=\"p\">).</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"n\">WorldItem</span>::<span class=\"n\">Include</span><span class=\"p\">),</span>\n<span class=\"w\">            </span><span class=\"n\">other</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"nb\">Err</span><span class=\"p\">(</span><span class=\"n\">err_expected</span><span class=\"p\">(</span>\n<span class=\"w\">                </span><span class=\"n\">tokens</span><span class=\"p\">,</span>\n<span class=\"w\">                </span><span class=\"s\">\"`import`, `export`, `include`, `use`, or type definition\"</span><span class=\"p\">,</span>\n<span class=\"w\">                </span><span class=\"n\">other</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"p\">)</span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">into</span><span class=\"p\">()),</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>And here is my parse error.<br>\nOn the other hand it says </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"s\">\"`import`, `export`, `include`, `use`, or type definition\"</span>\n</code></pre></div>\n<p>here.<br>\nSo maybe <code>wasmtime::component::bindgen!</code> uses a different version of the parser.  Let me check further..</p>",
        "id": 372941080,
        "sender_full_name": "alisomay",
        "timestamp": 1688657450
    },
    {
        "content": "<p>There hasn't yet been a release of  <code>wit-parser</code> that supports <code>include</code></p>",
        "id": 374048779,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1689013141
    },
    {
        "content": "<p>the PR landed on june 13, and a few bugfixes since then, but we havent cut a release. i expect we will once the resources work looks solid enough</p>",
        "id": 374048968,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1689013189
    }
]