[
    {
        "content": "<p>I was recently tracking down a memory corruption bug in swift and found the wmemcheck tool to be very helpful. Since the runtime of swift is fairly large, it required some extra features to remove false positives. I was able to modify wmemcheck to be useful enough for the job.</p>\n<p>I'd like to contribute the changes, many of which overlap with parts of issue <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7037\">https://github.com/bytecodealliance/wasmtime/issues/7037</a> . In particular, I needed to add the following:</p>\n<ul>\n<li>support for the other memory functions exported by wasi-libc (calloc, realloc, posix_memalign, aligned_alloc, malloc_usable_size)</li>\n<li>tracking memory in 4-byte chunks instead of 1-byte. e.g. wasi-libc's strlen loads strings 4 bytes at a time, and possibly beyond the end of the string for efficiency.</li>\n<li>Disabling the check for reading uninitialized memory.</li>\n</ul>\n<p>The last 2 possibly should be hidden behind options, but I'm not familiar enough with the code base or how others use this tool to know what the right approach would be.</p>\n<p>I also wasn't quite sure if this should be an issue, a PR, or a comment somewhere, so I'm asking here instead. My current WIP branch is at <a href=\"https://github.com/cobbal/wasmtime/tree/cobbal/wmemcheck-updates\">https://github.com/cobbal/wasmtime/tree/cobbal/wmemcheck-updates</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/issues/7037\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/2e6ea7666d6df3599e54492368545e85e7866492/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f666235653936613764666239643435343437313766313936373536333730396665343963333535633030396332623337663263333834346335633261616134612f62797465636f6465616c6c69616e63652f7761736d74696d652f6973737565732f37303337&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/issues/7037\" title=\"Memory checker (wmemcheck) completeness · Issue #7037 · bytecodealliance/wasmtime\">Memory checker (wmemcheck) completeness · Issue #7037 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">This issue is meant to track what remains to make wmemcheck feature-complete and robust enough for practical use: Handle SIMD loads and stores (#6829) Hook calloc as well as existing malloc and fre...</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/cobbal/wasmtime/tree/cobbal/wmemcheck-updates\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/3e3f2d01922bef9d929b30275867f642600224a3/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f353865373038663039306335353833363562653164336439373662653334323633363135663364393962363234646565346230353432366336653939313561612f636f6262616c2f7761736d74696d65&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/cobbal/wasmtime/tree/cobbal/wmemcheck-updates\" title=\"GitHub - cobbal/wasmtime at cobbal/wmemcheck-updates\">GitHub - cobbal/wasmtime at cobbal/wmemcheck-updates</a></div><div class=\"message_embed_description\">A fast and secure runtime for WebAssembly. Contribute to cobbal/wasmtime development by creating an account on GitHub.</div></div></div>",
        "id": 483588408,
        "sender_full_name": "cobbal",
        "timestamp": 1732144835
    },
    {
        "content": "<p>Please do submit a PR, possibly in draft status (but ping/request reviews at least from me)! This is very useful, thanks for pushing this forward and I'm glad it helped you debug some issues!</p>",
        "id": 483588708,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1732145026
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"254389\">Chris Fallin</span> <a href=\"#narrow/channel/217126-wasmtime/topic/wmemcheck.20improvements/near/483588708\">said</a>:</p>\n<blockquote>\n<p>Please do submit a PR, possibly in draft status (but ping/request reviews at least from me)! This is very useful, thanks for pushing this forward and I'm glad it helped you debug some issues!</p>\n</blockquote>\n<p>Done! I don't seem to be able to request a review though. <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9641\">https://github.com/bytecodealliance/wasmtime/pull/9641</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/9641\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/674cf5ae24d7c47819e088881bfea3f79ccb7496/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f663366376462376163656461333933336265666437373135643035316434616163646438643263346263363465306166346532336434613062643030323264332f62797465636f6465616c6c69616e63652f7761736d74696d652f70756c6c2f39363431&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/9641\" title=\"wmemcheck support for additional allocation functions and granular memory by cobbal · Pull Request #9641 · bytecodealliance/wasmtime\">wmemcheck support for additional allocation functions and granular memory by cobbal · Pull Request #9641 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">I was recently tracking down a memory corruption bug in swift and found the wmemcheck tool to be very helpful. Since the runtime of swift is fairly large, it required some extra features to remove ...</div></div></div>",
        "id": 483592118,
        "sender_full_name": "cobbal",
        "timestamp": 1732147064
    },
    {
        "content": "<p>ah that's likely because you're not a project member, sorry; I'll assign myself and take a look</p>",
        "id": 483592410,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1732147225
    }
]