[
    {
        "content": "<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> I'm looking at how to track the size of memory allocations for the <code>MemoryCreator</code>'s <code>`new_memory</code> function from a Wasmtime embedding. It seems like a decorator or proxy similar to <a href=\"https://github.com/bytecodealliance/wasmtime/blob/1512a954a3464d15fa21b68992c20d4580e6b32f/crates/wasmtime/src/runtime/trampoline/memory.rs#L123\">MemoryCreatorProxy</a> would work the most conveniently. But I'm not sure how to set up a proxy around the <code>DefaultMemoryCreator</code> given it's not public AFAICT. I'd prefer not to have my own implementation of <code>MmapMemory</code> if possible.</p>\n<p>Any tips <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span>?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/1512a954a3464d15fa21b68992c20d4580e6b32f/crates/wasmtime/src/runtime/trampoline/memory.rs#L123\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/bf0a5230cb4c438214eceec3e683de33c2ac221a/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f393937343135346265313865616231383564396462353566663739303138666265303239623661316433316431636335613037666337393836623561363035352f62797465636f6465616c6c69616e63652f7761736d74696d65&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/1512a954a3464d15fa21b68992c20d4580e6b32f/crates/wasmtime/src/runtime/trampoline/memory.rs#L123\" title=\"wasmtime/crates/wasmtime/src/runtime/trampoline/memory.rs at 1512a954a3464d15fa21b68992c20d4580e6b32f · bytecodealliance/wasmtime\">wasmtime/crates/wasmtime/src/runtime/trampoline/memory.rs at 1512a954a3464d15fa21b68992c20d4580e6b32f · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A fast and secure runtime for WebAssembly. Contribute to bytecodealliance/wasmtime development by creating an account on GitHub.</div></div></div>",
        "id": 455740885,
        "sender_full_name": "Jeff Charles",
        "timestamp": 1722541388
    },
    {
        "content": "<p>Would <a href=\"https://docs.rs/wasmtime/latest/wasmtime/trait.ResourceLimiter.html\"><code>ResourceLimiter</code></a> work for your use case?</p>",
        "id": 455741163,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1722541512
    },
    {
        "content": "<p>You can see how Spin tracks this here: <a href=\"https://github.com/fermyon/spin/blob/main/crates/core/src/limits.rs#L28-L29\">https://github.com/fermyon/spin/blob/main/crates/core/src/limits.rs#L28-L29</a> (and <a href=\"https://github.com/fermyon/spin/blob/main/crates/core/src/store.rs#L445\">here</a>)<br>\nNote its a bit awkward in order to handle multi-memory usage...</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/fermyon/spin/blob/main/crates/core/src/limits.rs#L28-L29\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/38db72dc2007ef51800f9d42c00ec7f9e4d64da6/68747470733a2f2f7265706f7369746f72792d696d616765732e67697468756275736572636f6e74656e742e636f6d2f3432333637393636342f32306534383863362d623961652d343831622d393063332d633131313138643565663238&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/fermyon/spin/blob/main/crates/core/src/limits.rs#L28-L29\" title=\"spin/crates/core/src/limits.rs at main · fermyon/spin\">spin/crates/core/src/limits.rs at main · fermyon/spin</a></div><div class=\"message_embed_description\">Spin is the open source developer tool for building and running serverless applications powered by WebAssembly. - fermyon/spin</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/fermyon/spin/blob/main/crates/core/src/store.rs#L445\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/38db72dc2007ef51800f9d42c00ec7f9e4d64da6/68747470733a2f2f7265706f7369746f72792d696d616765732e67697468756275736572636f6e74656e742e636f6d2f3432333637393636342f32306534383863362d623961652d343831622d393063332d633131313138643565663238&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/fermyon/spin/blob/main/crates/core/src/store.rs#L445\" title=\"spin/crates/core/src/store.rs at main · fermyon/spin\">spin/crates/core/src/store.rs at main · fermyon/spin</a></div><div class=\"message_embed_description\">Spin is the open source developer tool for building and running serverless applications powered by WebAssembly. - fermyon/spin</div></div></div>",
        "id": 455752183,
        "sender_full_name": "Lann Martin",
        "timestamp": 1722544226
    },
    {
        "content": "<p>Also note that this isn't a very comprehensive accounting of memory usage; you'd need to track usage for tables and instances at a minimum to get a more precise idea of how much memory a guest is using.</p>",
        "id": 455753044,
        "sender_full_name": "Lann Martin",
        "timestamp": 1722544594
    },
    {
        "content": "<p><code>ResourceLimiter</code> could maybe work but I'd have to significantly refactor things, which is probably the appropriate thing to do. For context, I'm looking at how to get the functionality in wasmtime-rb's <a href=\"https://github.com/bytecodealliance/wasmtime-rb/blob/17db0218e9d7207a47fb8e778a54bb070341163e/ext/src/ruby_api/config/tracked_memory_creator.rs#L48\">TrackedMemoryCreator</a> working with Wasmtime versions later than 20. Basically the point of the <code>TrackedMemoryCreator</code> is to globally report mmap allocations to the Ruby VM. The default config for the gem configures the memory creation to use that memory creator. With the <code>wasmtime-runtime</code> crate removed, that approach no longer works.</p>\n<p>I'm thinking I could hypothetically have any Wasmtime APIs that wasmtime-rb calls that would return a store add one of my  <code>ResourceLimiter</code>s by default and decorate any new resource limiters the user adds with my tracking resource limiter. But I'm a little concerned it could be easy to miss somewhere where it should be added (and remembering to ensure it's added appropriately for any new Wasmtime APIs we call in updates). I can give it a try anyway and see how it goes.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime-rb/blob/17db0218e9d7207a47fb8e778a54bb070341163e/ext/src/ruby_api/config/tracked_memory_creator.rs#L48\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/15b621630603264f91977ec88379d4545cee4c2a/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f396437356436346162333131396564646336643238363037626137636639376634323534623637646166316466663334386137383664383531343661623933312f62797465636f6465616c6c69616e63652f7761736d74696d652d7262&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime-rb/blob/17db0218e9d7207a47fb8e778a54bb070341163e/ext/src/ruby_api/config/tracked_memory_creator.rs#L48\" title=\"wasmtime-rb/ext/src/ruby_api/config/tracked_memory_creator.rs at 17db0218e9d7207a47fb8e778a54bb070341163e · bytecodealliance/wasmtime-rb\">wasmtime-rb/ext/src/ruby_api/config/tracked_memory_creator.rs at 17db0218e9d7207a47fb8e778a54bb070341163e · bytecodealliance/wasmtime-rb</a></div><div class=\"message_embed_description\">Ruby WebAssembly runtime powered by Wasmtime. Contribute to bytecodealliance/wasmtime-rb development by creating an account on GitHub.</div></div></div>",
        "id": 455760226,
        "sender_full_name": "Jeff Charles",
        "timestamp": 1722547990
    },
    {
        "content": "<p>Oh <code>ResourceLimiter</code> only knows about sizes, not pointers, does ruby need to know the regions of linear memory?</p>",
        "id": 455765504,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1722550335
    },
    {
        "content": "<p>It doesn't need to know the regions, mmapping memory or freeing it just needs to have _something_ that calls <code>void rb_gc_adjust_memory_usage(ssize_t diff)</code> with the size of the allocation or amount that was freed just after those operations happen.</p>",
        "id": 455934173,
        "sender_full_name": "Jeff Charles",
        "timestamp": 1722605754
    },
    {
        "content": "<p>Ah in that case I think <code>ResourceLimiter</code> is probably what you want as that's exactly the callback you get to customize</p>",
        "id": 455938358,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1722606847
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"477345\">Jeff Charles</span> has marked this topic as resolved.</p>",
        "id": 456039934,
        "sender_full_name": "Notification Bot",
        "timestamp": 1722631776
    }
]