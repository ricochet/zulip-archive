[
    {
        "content": "<p>For a company internal experiment we wanted to try out Winch for which I personally have high hopes. Unfortunately it seems that Winch does not support certain Wasm operators like load and store instructions and maybe more, so we couldn't compare its performance to alternatives. How to best collaborate on Winch or get in contact with their authors? Unfortunately there is no Zulip channel dedicated to Winch.</p>",
        "id": 408471030,
        "sender_full_name": "Robin Freyler",
        "timestamp": 1702839240
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"374806\">@Robin Freyler</span> Winch was proposed and is designed + led by <span class=\"user-mention\" data-user-id=\"411395\">@Saúl Cabrera</span> ; I know the intent is to finish its implementation, but I'm not sure what their latest timeline is. I'm sure <span class=\"user-mention\" data-user-id=\"411395\">@Saúl Cabrera</span> would be interested if you want to help with the effort!</p>",
        "id": 408522578,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1702871709
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"374806\">@Robin Freyler</span> Winch is indeed currently missing support for some opcodes in order to fully support Core Wasm. We've been tracking our progress in <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6528\">this issue</a>, which is meant to be an exhaustive list of all the opcodes/Wasm features needed in order to support Core Wasm (elements that have an assignee are currently in progress). As you can see, loads and stores are pretty much what's missing. Our target is to have these instructions completed by end of Feb 2024. We had hopes of finishing them earlier, but we decided to spend some time locally fuzzing Winch before adding more features to ensure the correctness of the existing building blocks. </p>\n<p>As for what's next: one the objectives that we have for 2024 is to bring Winch's x64 target to <a href=\"https://docs.wasmtime.dev/stability-tiers.html#tier-2---almost-production-ready\">Tier 2</a>, according to Wasmtime's Tiers of Support, this will involve working on Wasm proposals like function references and SIMD. Aside from that, we'd also like to improve support for at least the Arm64 backend, which currently only supports a handful of Wasm instructions. Lastly, but not less important, we'd like to spend some time analyzing Winch's compilation and runtime performance, which we haven't done extensively yet. </p>\n<p>Let me know if any of this helps, or if you have any other questions. We don't have a Winch specific stream yet, but I guess we could create one  if needed.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/issues/6528\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/b08a980b2186617a12ba757dc53ff19e62ef236a\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f643431356663616230363861333633306565336130313739333136613866643730323532386231626334613336643939323232363430333561346438323939632f62797465636f6465616c6c69616e63652f7761736d74696d652f6973737565732f36353238)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/issues/6528\" title=\"Winch Core Wasm Opcode Support · Issue #6528 · bytecodealliance/wasmtime\">Winch Core Wasm Opcode Support · Issue #6528 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">During the debugging meeting on June 1, 2023, we discussed opening an issue to track the missing Core Wasm opcodes in Winch. The objective of this issue is to make it easier for potential contribut...</div></div></div>",
        "id": 408669471,
        "sender_full_name": "Saúl Cabrera",
        "timestamp": 1702925489
    },
    {
        "content": "<p>Also: any help on any of those areas is definitely welcome! And of course, if there's anything else that's not covered, needed for your particular use case, I'd be happy to discuss it.</p>",
        "id": 408671180,
        "sender_full_name": "Saúl Cabrera",
        "timestamp": 1702926161
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"254389\">@Chris Fallin</span> thanks for initiating the contact with <span class=\"user-mention\" data-user-id=\"411395\">@Saúl Cabrera</span> . :)</p>\n<p><span class=\"user-mention\" data-user-id=\"411395\">@Saúl Cabrera</span> Thanks for your reply and all the information about the project status. The issue tracking the progress is very helpful to get an overview. It is very wise to implement the JIT incrementally and with great care for correctness and I really like the care taken so far a lot. :)</p>\n<p>We wanted to use Winch to test how well it performs in some benchmarks compared to other similar solutions. I think Winch is going to be a wonderful addition to Wasmtime. Currently I am trying to look for opportunities to collaborate more closely with Bytecode Alliance people. So far I have worked on a Wasm interpreter (<a href=\"https://github.com/paritytech/wasmi\">https://github.com/paritytech/wasmi</a>) but would like to dig deeper into compilers and JITs eventually.</p>\n<p>A Winch specific Zulip stream would definitely help people like me collaborate on this effort. :)</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/paritytech/wasmi\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/c7dc384f731ff8775e102ea8e5daf82714d8432c\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f303231636232313666363865363833323765343431646537313964316264326130656333343434336534663033333535383830336338336532653931346234392f706172697479746563682f7761736d69)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/paritytech/wasmi\" title=\"GitHub - paritytech/wasmi: WebAssembly (Wasm) interpreter.\">GitHub - paritytech/wasmi: WebAssembly (Wasm) interpreter.</a></div><div class=\"message_embed_description\">WebAssembly (Wasm) interpreter. Contribute to paritytech/wasmi development by creating an account on GitHub.</div></div></div>",
        "id": 408684068,
        "sender_full_name": "Robin Freyler",
        "timestamp": 1702931952
    },
    {
        "content": "<p>I think it's reasonable to have a Winch specific stream. I'm not entirely sure if there's a process to create new streams, though, I'd like to confirm that before proceeding.  </p>\n<p><span class=\"user-mention\" data-user-id=\"253990\">@fitzgen (he/him)</span>  / <span class=\"user-mention\" data-user-id=\"421591\">@Bailey Hayes</span>  do you happen to know if there are any requirements to create new streams?</p>",
        "id": 409211154,
        "sender_full_name": "Saúl Cabrera",
        "timestamp": 1703086730
    },
    {
        "content": "<p>there isn't really, no. One thing to watch out for is to make it web-public right away, because otherwise it requires admin rights to change</p>",
        "id": 409211765,
        "sender_full_name": "Till Schneidereit",
        "timestamp": 1703086930
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"234973\">@Till Schneidereit</span> , I'll make sure to make it web-public</p>",
        "id": 409211957,
        "sender_full_name": "Saúl Cabrera",
        "timestamp": 1703087000
    },
    {
        "content": "<p>Oh it seems that I don't have enough permissions to change the visibility to web-public at creation time, I can only select between the rest of the options.</p>",
        "id": 409212443,
        "sender_full_name": "Saúl Cabrera",
        "timestamp": 1703087164
    },
    {
        "content": "<p>ugh, that's frustrating. Let me see if I can do that</p>",
        "id": 409212526,
        "sender_full_name": "Till Schneidereit",
        "timestamp": 1703087186
    },
    {
        "content": "<p>Looks like <a href=\"#narrow/stream/417703-winch\">yes</a>!</p>",
        "id": 409212811,
        "sender_full_name": "Till Schneidereit",
        "timestamp": 1703087279
    },
    {
        "content": "<p>Thanks for your help!</p>",
        "id": 409213093,
        "sender_full_name": "Saúl Cabrera",
        "timestamp": 1703087362
    },
    {
        "content": "<p>Awesome that Winch now has its own Zulip stream. :)</p>",
        "id": 409246324,
        "sender_full_name": "Robin Freyler",
        "timestamp": 1703099990
    }
]