[
    {
        "content": "<p>Hi all! I am new to WASIp2 and running my experiments with it. </p>\n<p>A seemingly trivial case trapped me for hours. I have a simple component written in Rust which uses only <code>format!()</code> in Rust std and a Rust host using <code>wasmtime</code> crate to run it. But the host gives me a lot of runtime errors saying something like </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">component</span><span class=\"w\"> </span><span class=\"n\">imports</span><span class=\"w\"> </span><span class=\"n\">instance</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"p\">:</span><span class=\"nc\">cli</span><span class=\"o\">/</span><span class=\"n\">environment</span><span class=\"o\">@</span><span class=\"mf\">0.2.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">but</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">matching</span><span class=\"w\"> </span><span class=\"n\">implementation</span><span class=\"w\"> </span><span class=\"n\">was</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"p\">.</span>\n</code></pre></div>\n<p>This feels weird to me, why does <code>format!()</code> need to access the environment? To avoid these runtime errors, it turns out the following interfaces need to be linked to the linker:</p>\n<ul>\n<li><code>sync::filesystem::types</code></li>\n<li><code>sync::io::streams</code></li>\n<li><code>cli::exit</code></li>\n<li><code>cli::environment</code></li>\n<li><code>cli::stdin</code></li>\n<li><code>cli::stdout</code></li>\n<li><code>cli::stderr</code></li>\n</ul>\n<p>Is it expected and why? Or, is it a bug?</p>\n<p>My source code is <a href=\"https://github.com/ifsheldon/wit_interface_issue\">here</a>.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/ifsheldon/wit_interface_issue\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/2d91b1af37a86b4d869c555de70d5644930fa4f7/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f343436323361386465363935303464653932363432303030306532303464346537363164303335323562366438363830623531393839333233333035343666392f69667368656c646f6e2f7769745f696e746572666163655f6973737565&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/ifsheldon/wit_interface_issue\" title=\"GitHub - ifsheldon/wit_interface_issue\">GitHub - ifsheldon/wit_interface_issue</a></div><div class=\"message_embed_description\">Contribute to ifsheldon/wit_interface_issue development by creating an account on GitHub.</div></div></div>",
        "id": 483417148,
        "sender_full_name": "mapleliang",
        "timestamp": 1732086072
    },
    {
        "content": "<p>All of these are required by the rust standard library itself.</p>",
        "id": 483417497,
        "sender_full_name": "bjorn3",
        "timestamp": 1732086269
    },
    {
        "content": "<p>Thanks! From <code>std</code> point's of view, it's understandable. Do you know any documentation related to this? I was following the (very outdated) official documentations from <a href=\"http://bytecodealliance.org\">bytecodealliance.org</a> and wasmtime, nothing told me that. Their examples are just too trivial. Do you know any ways to work around this issue? Or, we just need to wait for std to better support the component model?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"http://bytecodealliance.org\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/b666ca74a20745aca2566cd241108afdcfa09d04/68747470733a2f2f62797465636f6465616c6c69616e63652e6f72672f696d616765732f6176617461722e706e67&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"http://bytecodealliance.org\" title=\"Bytecode Alliance\">Bytecode Alliance</a></div><div class=\"message_embed_description\">Welcome to the Bytecode Alliance</div></div></div>",
        "id": 483418256,
        "sender_full_name": "mapleliang",
        "timestamp": 1732086660
    },
    {
        "content": "<p>The wasm32-wasip2 rust target needs the wasi-cli world to be present.</p>\n<p><a href=\"https://doc.rust-lang.org/rustc/platform-support/wasm32-wasip2.html#platform-requirements\">https://doc.rust-lang.org/rustc/platform-support/wasm32-wasip2.html#platform-requirements</a></p>\n<blockquote>\n<h2>Platform requirements</h2>\n<p>The WebAssembly runtime should support the wasi preview 2 API set.</p>\n</blockquote>",
        "id": 483485270,
        "sender_full_name": "bjorn3",
        "timestamp": 1732109799
    },
    {
        "content": "<p>You might find the component model rust documentation useful: <a href=\"https://component-model.bytecodealliance.org/language-support/rust.html\">https://component-model.bytecodealliance.org/language-support/rust.html</a></p>",
        "id": 483497295,
        "sender_full_name": "Lann Martin",
        "timestamp": 1732113102
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"264278\">bjorn3</span> <a href=\"#narrow/channel/217126-wasmtime/topic/Help.3A.20unnecessary.20interface.20requirement.20for.20using.20format!.28.29.3F/near/483485270\">发言道</a>：</p>\n<blockquote>\n<p>The wasm32-wasip2 rust target needs the wasi-cli world to be present.</p>\n<p><a href=\"https://doc.rust-lang.org/rustc/platform-support/wasm32-wasip2.html#platform-requirements\">https://doc.rust-lang.org/rustc/platform-support/wasm32-wasip2.html#platform-requirements</a></p>\n<blockquote>\n<h2>Platform requirements</h2>\n<p>The WebAssembly runtime should support the wasi preview 2 API set.</p>\n</blockquote>\n</blockquote>\n<p>I did look up this link before. I even filed a minor issue about the outdated tier information in this page, which got fixed yesterday.</p>\n<p>The content there is</p>\n<blockquote>\n<p>The WebAssembly runtime should support the wasi preview 2 API set. Runtimes also are required to support components since this target outputs a component as opposed to a core wasm module. As of the time of this writing Wasmtime 17 and above is able to run this target natively with no extra flags.</p>\n</blockquote>\n<p>I don't think this means \"The wasm32-wasip2 rust target needs the wasi-cli world to be present\". I'm not questioning about your sentence and I believe this is true. I just thought it'd be better if this documentation could have included this information. Maybe you can make a PR to add this line to the documentation? since you know better this target than me.</p>",
        "id": 483625872,
        "sender_full_name": "mapleliang",
        "timestamp": 1732171021
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"480579\">Lann Martin</span> <a href=\"#narrow/channel/217126-wasmtime/topic/Help.3A.20unnecessary.20interface.20requirement.20for.20using.20format!.28.29.3F/near/483497295\">发言道</a>：</p>\n<blockquote>\n<p>You might find the component model rust documentation useful: <a href=\"https://component-model.bytecodealliance.org/language-support/rust.html\">https://component-model.bytecodealliance.org/language-support/rust.html</a></p>\n</blockquote>\n<p>Yeah, it's useful in explaining concepts and basic implementation and I did read it before. Thanks! </p>\n<p>But I think this documentation does not include the information I need to solve this issue, i.e., how to run a component with <code>wasmtime</code> crate with what required interfaces. </p>\n<p>I think the documentation about WASIp2 in general is very fragmented. Useful information may be quickly out of date and scattered everywhere. </p>\n<p>There are runtimes, dev tools, concepts, old standards (WASM modules, WASIp1) and compilers (with specific flags, features and stds). Each has their own documentation, which may contain useful and sometimes outdated infor about WASIp2. Some doc, like <code>wasmtime</code>'s, has useful but outdated info about how to run a component, some with conceptual explanation. </p>\n<p>This seems like a long complaint, but I think we need to these documentation issues.</p>",
        "id": 483627458,
        "sender_full_name": "mapleliang",
        "timestamp": 1732171923
    },
    {
        "content": "<p>Please file issues anywhere you see outdated or less than useful information in bytecode alliance repositories, or elsewhere. We will do what we can.</p>",
        "id": 483728538,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1732203812
    },
    {
        "content": "<p>Hey a bit late here but <span class=\"user-mention\" data-user-id=\"781697\">@mapleliang</span> the <em>code</em> that the component book comes with <em>does</em> hopefully solve the following issues:</p>\n<blockquote>\n<p>But I think this documentation does not include the information I need to solve this issue, i.e., how to run a component with <code>wasmtime</code> crate with what required interfaces.</p>\n</blockquote>\n<p>Unfortunately it's <a href=\"https://github.com/bytecodealliance/component-docs/blob/main/component-model/examples/example-host/src/add.rs\">a little bit hard to find</a> -- but there is an example of running a component there!</p>\n<p>Like Pat said, would absolutely appreciate filing issues on the <code>component-docs</code> repository (I help do some docs maintenance around there)</p>\n<p>A great first issue might be just that there needs to be a more comprehensive map (possibly on the front page of the component book, since that <em>should</em> be our go-to piece of docs)</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/component-docs/blob/main/component-model/examples/example-host/src/add.rs\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/ca64ac95e90a835a6d90c0effe32a013e325a737/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f346361353264376538306465366332346461356635303735323464653661393965656239363738656433613563353032333933383465336166613231366633632f62797465636f6465616c6c69616e63652f636f6d706f6e656e742d646f6373&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/component-docs/blob/main/component-model/examples/example-host/src/add.rs\" title=\"component-docs/component-model/examples/example-host/src/add.rs at main · bytecodealliance/component-docs\">component-docs/component-model/examples/example-host/src/add.rs at main · bytecodealliance/component-docs</a></div><div class=\"message_embed_description\">Documentation around creating and using WebAssembly Components - bytecodealliance/component-docs</div></div></div>",
        "id": 483757128,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1732211853
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"598440\">Victor Adossi</span> <a href=\"#narrow/channel/217126-wasmtime/topic/Help.3A.20unnecessary.20interface.20requirement.20for.20using.20format!.28.29.3F/near/483757128\">发言道</a>：</p>\n<blockquote>\n<p>Hey a bit late here but <span class=\"user-mention silent\" data-user-id=\"781697\">mapleliang</span> the <em>code</em> that the component book comes with <em>does</em> hopefully solve the following issues:</p>\n<blockquote>\n<p>But I think this documentation does not include the information I need to solve this issue, i.e., how to run a component with <code>wasmtime</code> crate with what required interfaces.</p>\n</blockquote>\n<p>Unfortunately it's <a href=\"https://github.com/bytecodealliance/component-docs/blob/main/component-model/examples/example-host/src/add.rs\">a little bit hard to find</a> -- but there is an example of running a component there!</p>\n<p>Like Pat said, would absolutely appreciate filing issues on the <code>component-docs</code> repository (I help do some docs maintenance around there)</p>\n<p>A great first issue might be just that there needs to be a more comprehensive map (possibly on the front page of the component book, since that <em>should</em> be our go-to piece of docs)</p>\n</blockquote>\n<p>I did find this example, but this example is too trivial to cause the problem. A simple adder component needs no extra interfaces, so I don't know how to attach extra interfaces that are implicitly required by rust <code>std</code>. And this example is super outdated. As the dependencies <code>wasmtime</code> and <code>wasmtime_wasi</code> is <code>18.0</code> while the latest ones are <code>27.0</code>. So, I will file an issue and probably a PR to renovate these examples.</p>\n<p>Another issue is <code>cargo-component</code> itself is a bit outdated, I mean out of sync with Rust's <code>wasm32-wasip2</code> current status. For example, it still use <code>wasm32-wasip1</code> to compile components and then adapt them afterwards, while <code>wasm32-wasip2</code> has been promoted to Tier 2 support from Rust side. See my <a href=\"https://github.com/bytecodealliance/cargo-component/issues/355\">issue</a> for more details.</p>\n<p>And I totally agree with you about the comprehensive mind map. After I get my head around this issue (and <a href=\"https://github.com/rust-lang/rust/issues/133235\">its tracking issue</a> on Rust repo), I will write up a blog that casually introduces a mind map. I will see how that translate into a proper PR for reading on the component book.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/cargo-component/issues/355\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/b5a19fbb9abfebe6250aacd4372efdc3a550a858/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f636236336166623137316362393333353736353131363336653031636563333261386338623830613861663762623366656130353832366534646462366464372f62797465636f6465616c6c69616e63652f636172676f2d636f6d706f6e656e742f6973737565732f333535&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/cargo-component/issues/355\" title=\"Use wasm-wasip2 target as default build target · Issue #355 · bytecodealliance/cargo-component\">Use wasm-wasip2 target as default build target · Issue #355 · bytecodealliance/cargo-component</a></div><div class=\"message_embed_description\">cargo-component/README.md Line 184 in 1e58afa When the Rust compiler supports a [_preview2_ version of the WASI target][1], Hi! I saw this today, but the referred issue has been closed as complete....</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/rust-lang/rust/issues/133235\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/ea71393c60e47f7810b6e87bab85386db421e3d1/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f313635636162656236353835646634643132383364623039393136313635363265633136303262616239386663623430646164663964623261646436333365342f727573742d6c616e672f727573742f6973737565732f313333323335&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/rust-lang/rust/issues/133235\" title=\"Compiled wasm32-wasip2 component from simple code requires excessive WASI interfaces · Issue #133235 · rust-lang/rust\">Compiled wasm32-wasip2 component from simple code requires excessive WASI interfaces · Issue #133235 · rust-lang/rust</a></div><div class=\"message_embed_description\">During my learning and experiments of wasip2, I tried this simple code and compiled it to a wasip2 component: wit_bindgen::generate!({ // the name of the world in the `*.wit` input file world: \"for...</div></div></div>",
        "id": 483824548,
        "sender_full_name": "mapleliang",
        "timestamp": 1732242250
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"253992\">Pat Hickey</span> <a href=\"#narrow/channel/217126-wasmtime/topic/Help.3A.20unnecessary.20interface.20requirement.20for.20using.20format!.28.29.3F/near/483728538\">发言道</a>：</p>\n<blockquote>\n<p>Please file issues anywhere you see outdated or less than useful information in bytecode alliance repositories, or elsewhere. We will do what we can.</p>\n</blockquote>\n<p>Do you know who to ping for this <a href=\"https://github.com/bytecodealliance/cargo-component/issues/355\">issue</a>? I see there are commits to the main branch everyday, but it seems many issues in <a href=\"https://github.com/bytecodealliance/cargo-component\">cargo-component repo</a> got ignored.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/cargo-component/issues/355\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/b5a19fbb9abfebe6250aacd4372efdc3a550a858/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f636236336166623137316362393333353736353131363336653031636563333261386338623830613861663762623366656130353832366534646462366464372f62797465636f6465616c6c69616e63652f636172676f2d636f6d706f6e656e742f6973737565732f333535&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/cargo-component/issues/355\" title=\"Use wasm-wasip2 target as default build target · Issue #355 · bytecodealliance/cargo-component\">Use wasm-wasip2 target as default build target · Issue #355 · bytecodealliance/cargo-component</a></div><div class=\"message_embed_description\">cargo-component/README.md Line 184 in 1e58afa When the Rust compiler supports a [_preview2_ version of the WASI target][1], Hi! I saw this today, but the referred issue has been closed as complete....</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/cargo-component\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/acc9adf5c5254a9eca6d412ff9e171d1dd5f95cc/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f303766316466363437396133663164663731663537643737306563623839323036373237373365353237386136333235646436373530313333643434383365382f62797465636f6465616c6c69616e63652f636172676f2d636f6d706f6e656e74&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/cargo-component\" title=\"GitHub - bytecodealliance/cargo-component: A Cargo subcommand for creating WebAssembly components based on the component model proposal.\">GitHub - bytecodealliance/cargo-component: A Cargo subcommand for creating WebAssembly components based on the component model proposal.</a></div><div class=\"message_embed_description\">A Cargo subcommand for creating WebAssembly components based on the component model proposal. - bytecodealliance/cargo-component</div></div></div>",
        "id": 484673569,
        "sender_full_name": "mapleliang",
        "timestamp": 1732699372
    },
    {
        "content": "<p>In theory it would be cool to use Rust's wasm32-wasip2 in cargo-component, but in practice it's not a trivial change. cargo-component is set up to build the components itself, so it needs more changes to work with the wasm32-wasip2 target where the components are built automatically.</p>",
        "id": 484750555,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1732722537
    },
    {
        "content": "<p>I don’t know who is working on that in cargo-component. At first glance it appears that it’s an enhancement, rather than a bug to fix - cargo-component predated the p2 target so this is more of the case of upstream rust getting some of the functionality pioneered in cargo-component. <span class=\"user-mention\" data-user-id=\"254083\">@Dan Gohman</span> are you working on this topic? <span class=\"user-mention\" data-user-id=\"479055\">@Calvin Prewitt</span> has also been contributing there, maybe he has an idea.</p>",
        "id": 484763318,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1732726632
    },
    {
        "content": "<p>I did take a quick look at this recently. One tricky issue I found was that cargo component supports <a href=\"https://docs.rs/wit-component/latest/wit_component/struct.ComponentEncoder.html#method.import_name_map\">import name maps</a>, which I don't see a way to do in the current wasm32-wasip2 target.</p>",
        "id": 484763968,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1732726878
    },
    {
        "content": "<p>I have some thoughts on it. <span class=\"user-mention\" data-user-id=\"486181\">@Daniel Macovei</span> and I did start looking at it. But need to dig into it a bit more.</p>",
        "id": 484765114,
        "sender_full_name": "Calvin Prewitt",
        "timestamp": 1732727281
    },
    {
        "content": "<p>I've also now posted <a href=\"https://github.com/bytecodealliance/cargo-component/pull/359\">this PR</a> to update the README.md part quoted in that issue.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/cargo-component/pull/359\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/70f4a0ff234e9e5d68856b1e02291c0142b86a87/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f393533643034646566666232613565366362613563643237663366396333353736366137656637383566323035653962613162316435633765373965323230312f62797465636f6465616c6c69616e63652f636172676f2d636f6d706f6e656e742f70756c6c2f333539&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/cargo-component/pull/359\" title=\"Update the README to discuss the wasm32-wasip2 feature. by sunfishcode · Pull Request #359 · bytecodealliance/cargo-component\">Update the README to discuss the wasm32-wasip2 feature. by sunfishcode · Pull Request #359 · bytecodealliance/cargo-component</a></div><div class=\"message_embed_description\">Update the documentation talking about Rust's wasm32-wasip2 feature. We do hope to make use of it in cargo component, though it's not a trivial change.\nThis is inspired by #355.</div></div></div>",
        "id": 484784360,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1732734949
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"254083\">@Dan Gohman</span> Can you please also take a look at <a href=\"https://github.com/bytecodealliance/cargo-component/issues/360\">https://github.com/bytecodealliance/cargo-component/issues/360</a> ?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/cargo-component/issues/360\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/5dfb3f296b214b7b8b63d3e5d83dc8d90601ded5/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f643934636463633263633635353561646561613262376134316263396334663632636530373265336538326666623035323537336164646439653161343632312f62797465636f6465616c6c69616e63652f636172676f2d636f6d706f6e656e742f6973737565732f333630&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/cargo-component/issues/360\" title=\"cargo-component cannot find exported function in a world · Issue #360 · bytecodealliance/cargo-component\">cargo-component cannot find exported function in a world · Issue #360 · bytecodealliance/cargo-component</a></div><div class=\"message_embed_description\">I am following https://component-model.bytecodealliance.org/language-support/rust.html#importing-an-interface-into-a-command-component to create a command component with cargo-component. My adder W...</div></div></div>",
        "id": 486749091,
        "sender_full_name": "mapleliang",
        "timestamp": 1733646895
    },
    {
        "content": "<p>I've now replied in the issue.</p>",
        "id": 486819408,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1733706148
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"598440\">@Victor Adossi</span> Do you know who maintains the documentation of <code>wasmtime</code>? I filed a couple of issues there and I can also make PRs about them.</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/issues/9776\">https://github.com/bytecodealliance/wasmtime/issues/9776</a><br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/issues/9777\">https://github.com/bytecodealliance/wasmtime/issues/9777</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/issues/9776\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/4674a5310183f509c05bba96c06665035dea30a2/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f643332633864663438616563633838666239346230613663323362663530316638303763366633393830396336616161353538623564636130396135376462622f62797465636f6465616c6c69616e63652f7761736d74696d652f6973737565732f39373736&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/issues/9776\" title=\"Missing examples for using bindgen! async, imports and resource in host  · Issue #9776 · bytecodealliance/wasmtime\">Missing examples for using bindgen! async, imports and resource in host  · Issue #9776 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Feature There are no examples about using bindgen! with async: true, imports and resources in Rust hosts. Please add examples to do that. A bit of background I have a string.wit and a guest compone...</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/issues/9777\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/8da58cc493ab9bc43b142057fbe790b91b27ef2e/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f646136633063303336313761653234626439336439633134303738396166636363633731633834656532336263353863363736343761316437393635623566332f62797465636f6465616c6c69616e63652f7761736d74696d652f6973737565732f39373737&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/issues/9777\" title=\"Renovate the WASI example · Issue #9777 · bytecodealliance/wasmtime\">Renovate the WASI example · Issue #9777 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Feature Please renovate the WASI example in the documentation and the code, as they are using old wasi_common and super outdated wasmtime_wasi . Benefit Updating the doc and example should allow ne...</div></div></div>",
        "id": 487296943,
        "sender_full_name": "mapleliang",
        "timestamp": 1733849087
    },
    {
        "content": "<p>Actually I don't -- I'm not sure there <em>is</em> a specific documentation maintainer for <code>wasmtime</code>, but I assume that would by default fall under the purview of <a href=\"https://github.com/bytecodealliance/meetings/tree/main/SIG-Documentation\">SIG Documentation</a>!</p>\n<p>They also have a channel here <a class=\"stream\" data-stream-id=\"426461\" href=\"/#narrow/channel/426461-SIG-Documentation\">#SIG Documentation</a>  -- you can get in touch with people that way</p>\n<p>That said, I think they'd pop up in the PRs (and issue discussion) if you made them :)</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/meetings/tree/main/SIG-Documentation\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/f91c147bda20b54e07b61f9b128fc2d629774cdb/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f353461303634323832326139353230613531303230396233373666353236386336306134316431393137616233643138333432343766363561373234663839612f62797465636f6465616c6c69616e63652f6d656574696e6773&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/meetings/tree/main/SIG-Documentation\" title=\"meetings/SIG-Documentation at main · bytecodealliance/meetings\">meetings/SIG-Documentation at main · bytecodealliance/meetings</a></div><div class=\"message_embed_description\">Contribute to bytecodealliance/meetings development by creating an account on GitHub.</div></div></div>",
        "id": 487303459,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1733851014
    }
]