[
    {
        "content": "<p>Hi! I'm trying to embed Rust lib called <a href=\"https://docs.rs/crate/rapier3d/latest\">Rapier Physics</a>(RP) into Go plugin using <code>wasmtime-go</code>.<br>\nRapier uses <code>wasm-pack</code> and <code>[wasm-bindgen]</code> in code, so <code>*.wasm</code> WASI and <code>*.js</code> files are generated. </p>\n<p>When I create a new intance of this module in Go, all WASI imports are satisfied automatically, but <code>__wbg*</code> ones, obviously, are not, which is expected. After providing <code>wbg</code>-s my plan was calling RP wasm functions directly from Go.</p>\n<p>Corresponding <code>*.js</code> file has <code>getImports()</code> function, which returns this <code>wbg</code> object with all bindings. How I can feed this <code>wbg</code> now to <code>wasmtime-go</code> instance?</p>\n<p>If it would be NodeJS/TypeScript environment, then of course it would be easier. So I'm really stuck.</p>",
        "id": 385030576,
        "sender_full_name": "skullptr",
        "timestamp": 1692085516
    },
    {
        "content": "<p>wasm-bindgen is built with the assumption that there is always a JS engine and JS glue code that can be used for integration (ie browsers and node, etc)</p>\n<p>it will not work with wasmtime or other standalone wasm runtimes</p>\n<p>you will need to add wasi support to RP so that it supports non-js wasm environments</p>",
        "id": 385236757,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1692114758
    }
]