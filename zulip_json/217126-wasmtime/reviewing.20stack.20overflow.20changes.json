[
    {
        "content": "<p>Would someone be willing to volunteer to review <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1490\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1490\">https://github.com/bytecodealliance/wasmtime/pull/1490</a>?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/1490\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/1490\" title=\"Implement interrupting wasm code, reimplement stack overflow by alexcrichton · Pull Request #1490 · bytecodealliance/wasmtime\">Implement interrupting wasm code, reimplement stack overflow by alexcrichton · Pull Request #1490 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">This commit is a relatively large change for wasmtime with two main\ngoals:\n\n\nPrimarily this enables interrupting executing wasm code with a trap,\npreventing infinite loops in wasm code. Note that r...</div></div></div>",
        "id": 194496084,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1587155540
    },
    {
        "content": "<p>I'm reviewing it now</p>",
        "id": 194500561,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1587157867
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 194500709,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1587157965
    },
    {
        "content": "<p>oh, arg, you're right, this needs to get expanded after the legalizer. let me think about that a bit</p>",
        "id": 194503547,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1587159665
    },
    {
        "content": "<p>oh lol just wrote the same thing down</p>",
        "id": 194503589,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1587159689
    },
    {
        "content": "<p>to be clear I'm fine with w/e works here</p>",
        "id": 194503606,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1587159701
    },
    {
        "content": "<p>could maybe get by with a \"mini interpreter\" of global values</p>",
        "id": 194503634,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1587159721
    },
    {
        "content": "<p>and only a small whitelist would be allowed in the prologue</p>",
        "id": 194503681,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1587159730
    },
    {
        "content": "<p>Yeah, that's what I'm thinking too.</p>",
        "id": 194504556,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1587160167
    },
    {
        "content": "<p>Use the GlobalValue to describe where the offset is, and have the backend interpret just enough to emit the code you need.</p>",
        "id": 194504652,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1587160207
    },
    {
        "content": "<p>Does that sound workable?</p>",
        "id": 194504711,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1587160246
    },
    {
        "content": "<p>mk, I'll work on implementing that</p>",
        "id": 194504715,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1587160250
    },
    {
        "content": "<p>shouldn't be too too hard</p>",
        "id": 194504718,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1587160252
    },
    {
        "content": "<p>It took me a while to connect the dots but I already have a Cranelift interpreter in progress over at <a href=\"https://github.com/bytecodealliance/cranelift/pull/1351\" title=\"https://github.com/bytecodealliance/cranelift/pull/1351\">https://github.com/bytecodealliance/cranelift/pull/1351</a> that could be used for this. <span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span>, I need to rebase that on some more recent work and address some of Benjamin's comments but I would be interested in figuring out what exactly you need in GlobalValue expressions to make that interpreter work.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/cranelift/pull/1351\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/cranelift/pull/1351\" title=\"Add initial Cranelift interpreter functionality by abrown · Pull Request #1351 · bytecodealliance/cranelift\">Add initial Cranelift interpreter functionality by abrown · Pull Request #1351 · bytecodealliance/cranelift</a></div><div class=\"message_embed_description\">This has been discussed in meetings and chat messages.\n A short description of what this does, why it is needed: this implements a rudimentary interpreter for Cranelift IR; only a subset of instruc...</div></div></div>",
        "id": 194547957,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1587221032
    },
    {
        "content": "<p>Uh, that's the old cranelift PR, now the code is at <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1223\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1223\">https://github.com/bytecodealliance/wasmtime/pull/1223</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/1223\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/1223\" title=\"Add initial Cranelift interpreter by abrown · Pull Request #1223 · bytecodealliance/wasmtime\">Add initial Cranelift interpreter by abrown · Pull Request #1223 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">See bytecodealliance/cranelift#1351.</div></div></div>",
        "id": 194548154,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1587221312
    },
    {
        "content": "<p>It turns out that we're using \"interpret\" here in the sense of \"recognize\". See <code>interpret_gv</code> in the PR; it's translating to new instructions rather than executing them.</p>",
        "id": 194548185,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1587221381
    },
    {
        "content": "<p>Oh sorry yeah interpret is probably the wrong term</p>",
        "id": 194554409,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1587229858
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 194556217,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1587232414
    }
]