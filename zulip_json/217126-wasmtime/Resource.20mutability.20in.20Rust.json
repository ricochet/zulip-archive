[
    {
        "content": "<p>Hello, was wondering, I am defining some resources in my wit file but having a problem defining a constructor that contains a mutable reference of another resource. Would prefer not to use mutexs but if there is no other way that is fine as well. Was wondering if it was possible?</p>",
        "id": 420708916,
        "sender_full_name": "Cwasi4wasm",
        "timestamp": 1707503669
    },
    {
        "content": "<p>in wasmtime-wasi, when we need to store a reference to one host resource in another host resource, we do so by storing the table index to one inside the other</p>",
        "id": 420709089,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1707503741
    },
    {
        "content": "<p>and we also make sure that the resource containing the reference is inserted into the ResourceTable as a child of the referent, which ensures that the referent outlives the reference</p>",
        "id": 420709205,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1707503772
    },
    {
        "content": "<p>in general though this is a tricky design space because the rules for resources dont fit neatly into the rust type system. see, for more discussion and context, <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7902\">https://github.com/bytecodealliance/wasmtime/pull/7902</a> and <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7812\">https://github.com/bytecodealliance/wasmtime/pull/7812</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/7902\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/5a47e583dafa947de3d72a99e73a07fffb5b1ef3\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f346435616236663635616261646431353631306666313862366431303265336635373931663365393832653535623234333262323730666432316163376634392f62797465636f6465616c6c69616e63652f7761736d74696d652f70756c6c2f37393032)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/7902\" title=\"Perform stronger typechecks of host-owned resources by alexcrichton · Pull Request #7902 · bytecodealliance/wasmtime\">Perform stronger typechecks of host-owned resources by alexcrichton · Pull Request #7902 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Right now the abstraction for host-owned resources in Wasmtime is quite simple, it's \"just an index\". This can be error prone because the host can suffer both from use-after-free and ABA-style prob...</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/7812\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/62b2f0776043911ae3931fa8a0757a8ab32a3c92\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f616134333935363838383130303336303963396361636632366366326563656437363361623335316230646430333636393937363935633063666236353563322f62797465636f6465616c6c69616e63652f7761736d74696d652f70756c6c2f37383132)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/7812\" title=\"wasi-io: Reimplement wasi-io/poll using a Pollable trait by badeend · Pull Request #7812 · bytecodealliance/wasmtime\">wasi-io: Reimplement wasi-io/poll using a Pollable trait by badeend · Pull Request #7812 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Prior discussion: https://bytecodealliance.zulipchat.com/#narrow/stream/217126-wasmtime/topic/Change.20Subscribe.20trait\n\nRenamed the existing Pollable struct to PollableResource\nReimplemented wasi...</div></div></div>",
        "id": 420709541,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1707503898
    },
    {
        "content": "<p>basically, we designed the resource type system to be maximally useful by components, not to make the host implementation straightforward</p>",
        "id": 420709617,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1707503936
    },
    {
        "content": "<p>Interesting! I will read this and the links through to better understand. Thank you!</p>",
        "id": 420710623,
        "sender_full_name": "Cwasi4wasm",
        "timestamp": 1707504345
    },
    {
        "content": "<p>for sure. happy to talk more about it, its a really tricky topic, and we dont have all the answers yet.</p>",
        "id": 420711753,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1707504730
    }
]