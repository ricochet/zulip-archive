[
    {
        "content": "<p>Is post_return <a href=\"https://docs.rs/wasmtime/latest/wasmtime/component/struct.Func.html#method.post_return\">https://docs.rs/wasmtime/latest/wasmtime/component/struct.Func.html#method.post_return</a> required after calling function?  This seems take considerable amount of time.</p>",
        "id": 428426585,
        "sender_full_name": "Sehz",
        "timestamp": 1711152398
    },
    {
        "content": "<p>If no further functions are used on a component, no, it can be omitted. If another function is going to be invoked, yes, it is required. </p>\n<p>Can you clarify why it's taking a considerable amount of time? Or do you have an example we could perhaps profile and try to optimize?</p>",
        "id": 428437875,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1711163374
    },
    {
        "content": "<p>I <em>think</em> it gives the guest an opportunity to destroy the returned object after the host has read it's contents. If you are returning a complex object, it's address is returned and the host reads the data at that address and then the guest destroys the object (explicitly in Rust/C/C++, dropping a reference to in GC languages) in the post-return call, since the host cannot know how the guest manages it's memory. Or at least I think this is how it works.</p>",
        "id": 429095223,
        "sender_full_name": "Karel Hrkal (kajacx)",
        "timestamp": 1711211970
    },
    {
        "content": "<p>does it still needed  If I am invoking same function? this seems to be error prone.  I am invoking same function many times repeatedly</p>",
        "id": 429098021,
        "sender_full_name": "Sehz",
        "timestamp": 1711214199
    },
    {
        "content": "<p>I guess, why not call invoke object cleaning in fun call so this is invisible to API.</p>",
        "id": 429098343,
        "sender_full_name": "Sehz",
        "timestamp": 1711214455
    },
    {
        "content": "<p>Karel is correct, that's what <code>post-return</code> enables at the ABI level. At the API level splittng out <code>post_return</code> from <code>call</code> enables <code>WasmStr</code> and <code>WasmList</code> types to exist which borrow directly from linear memory. With <code>post_return</code> bundled in they couldn't exist. </p>\n<p>I'll note that with <code>bindgen!</code>-generated APIs <code>post_return</code> happens automatically, so if you don't want to worry about post-return I'd recommend using those APIs instead</p>",
        "id": 429228049,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1711300166
    }
]