[
    {
        "content": "<p>Hi, when using <code>Caller</code> to get a reference to the data stored, I often run into lifetime problems. I will have something that refers back to the data stored in the <code>Store</code> and then I want to for example call a callback. The problem then is that the <code>Caller</code> is tied to the call to <code>caller.data_mut()</code> (or similar) and cannot be used to call wasm functions. Any tips on dealing with that? Except cloning the data out of course, which works.</p>",
        "id": 282908207,
        "sender_full_name": "Albert Cervin",
        "timestamp": 1652955634
    },
    {
        "content": "<p>When you say you want to call a callback is that a wasm callback or something like a host callback? It's a known issue that when you borrow the <code>T</code> in a <code>Caller&lt;'_, T&gt;</code> then you can't access any other data in the <code>Store&lt;T&gt;</code> as a disjoint borrow, which you should theoretically be able to do. If you want to call wasm, though, that's an intentional limitation that you can't borrow <code>T</code> over a wasm call.</p>",
        "id": 282932841,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1652968925
    },
    {
        "content": "<p>Thanks for the info! Yeah, borrowing <code>T</code> over a wasm call makes sense that you can not do. It was more the former case, being able to call methods on the store while <code>T</code> is borrowed.</p>",
        "id": 288281215,
        "sender_full_name": "Albert Cervin",
        "timestamp": 1656783434
    }
]