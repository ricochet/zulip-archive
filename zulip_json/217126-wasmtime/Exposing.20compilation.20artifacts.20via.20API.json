[
    {
        "content": "<p>How do we want to expose compilation via API? I'm entertaining <code>Module::compile_and_serialize</code> + <code>::deserialize</code>(e.g. <a href=\"https://github.com/yurydelendik/wasmtime/commit/34a8d3dc1276aabb75eb501af85efd748e635187#diff-097fdd3945b906262e6a37c58dc4f01cR313-R342\">https://github.com/yurydelendik/wasmtime/commit/34a8d3dc1276aabb75eb501af85efd748e635187#diff-097fdd3945b906262e6a37c58dc4f01cR313-R342</a>) Maybe there is a better idea.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/yurydelendik/wasmtime/commit/34a8d3dc1276aabb75eb501af85efd748e635187#diff-097fdd3945b906262e6a37c58dc4f01cR313-R342\" style=\"background-image: url(https://avatars3.githubusercontent.com/u/1523410?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/yurydelendik/wasmtime/commit/34a8d3dc1276aabb75eb501af85efd748e635187#diff-097fdd3945b906262e6a37c58dc4f01cR313-R342\" title=\"Serialize and deserialize Module · yurydelendik/wasmtime@34a8d3d\">Serialize and deserialize Module · yurydelendik/wasmtime@34a8d3d</a></div><div class=\"message_embed_description\">Standalone JIT-style runtime for WebAsssembly, using Cranelift - yurydelendik/wasmtime</div></div></div>",
        "id": 203839465,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1594736862
    },
    {
        "content": "<p>Also, there is a need to fingerprint <code>Config</code> to check if a compilation is compatible</p>",
        "id": 203839681,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1594736991
    },
    {
        "content": "<p>/me thinking to just hash settings::Builder and triple</p>",
        "id": 203839821,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1594737041
    },
    {
        "content": "<p>seems reasonable to start off with that, a serialize/deserialize API</p>",
        "id": 203840387,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1594737307
    },
    {
        "content": "<p>which just goes between <code>Module</code> and <code>Vec&lt;u8&gt;</code></p>",
        "id": 203840405,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1594737320
    },
    {
        "content": "<p>I'm not sure if <code>compile_and_serialize</code> need to be bundled?</p>",
        "id": 203840422,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1594737329
    },
    {
        "content": "<p>for a fingerprint I think ideally we'd implement <code>Hash for Config</code> and <code>Eq for Config</code></p>",
        "id": 203840478,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1594737354
    },
    {
        "content": "<p>er, I guess just <code>Hash</code></p>",
        "id": 203840520,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1594737363
    },
    {
        "content": "<p>Alright, I got PR 2020 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2020\">https://github.com/bytecodealliance/wasmtime/pull/2020</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/2020\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/2020\" title=\"Serialize and deserialize compilation artifacts. by yurydelendik · Pull Request #2020 · bytecodealliance/wasmtime\">Serialize and deserialize compilation artifacts. by yurydelendik · Pull Request #2020 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Fixes #1779\nThis is final patch in series to allow direct access to the compiled code.\n\nAdded compile_and_serialize API function that allows to save CompilationArtifacts object in binary format (+t...</div></div></div>",
        "id": 203895450,
        "sender_full_name": "Yury Delendik",
        "timestamp": 1594765255
    }
]