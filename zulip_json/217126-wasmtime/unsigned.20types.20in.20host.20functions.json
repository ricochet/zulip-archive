[
    {
        "content": "<p>How hard would it be to implement <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1829\">https://github.com/bytecodealliance/wasmtime/issues/1829</a> ? Does anyone know the approximate scope of work and maybe the time estimate?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/issues/1829\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/issues/1829\" title=\"No support for unsigned types in external functions 路 Issue #1829 路 bytecodealliance/wasmtime\">No support for unsigned types in external functions 路 Issue #1829 路 bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">When using Linker.func with function with signature fn(u64, u64) -&gt; i32 get this error the trait wasmtime::func::IntoFunc&lt;_, _&gt; is not implemented for fn(u64, u64) -&gt; i32 It is importan...</div></div></div>",
        "id": 199945117,
        "sender_full_name": "Maksym Zavershynskyi",
        "timestamp": 1591400071
    },
    {
        "content": "<p>It's possible it's as easy as copying the <code>impl WasmTy for i64</code> in crates/wasmtime/src/func.rs and adding a <code>u64</code> variant</p>",
        "id": 199945336,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1591400305
    },
    {
        "content": "<p>One subtlety is that wasm itself doesn't have signed/unsigned distinction, so there'd be no typechecking ensuring that you're actually passing a u64 to a u64 parameter, and not an i64, but that might be ok for now</p>",
        "id": 199945449,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1591400483
    },
    {
        "content": "<p>and interface types should help with this in the future</p>",
        "id": 199945461,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1591400492
    },
    {
        "content": "<p>Thank you!</p>",
        "id": 200447474,
        "sender_full_name": "Maksym Zavershynskyi",
        "timestamp": 1591809657
    }
]