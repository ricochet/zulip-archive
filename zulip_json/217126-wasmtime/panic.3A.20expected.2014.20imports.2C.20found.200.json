[
    {
        "content": "<p>Hello! I'm working on a new open source project in Go using WASM, and am considering using wasmtime. I've got the basic demo working, but when I change it to run the WASM from a file, I get an error \"panic: expected 14 imports, found 0\". Any ideas on how to fix this? Attached is my test code.<br>\n<a href=\"/user_uploads/15107/9X7yycF2WAZ4RzvRqlWCnTHZ/hello.go\">hello.go</a></p>",
        "id": 430080054,
        "sender_full_name": "Alistair Cunningham",
        "timestamp": 1711636116
    },
    {
        "content": "<p>And here is my test WASM code.<br>\n<a href=\"/user_uploads/15107/uehn5Ux79NjBZlriizsheM2m/test.go\">test.go</a></p>",
        "id": 430087390,
        "sender_full_name": "Alistair Cunningham",
        "timestamp": 1711637942
    },
    {
        "content": "<p>I might recommend using <code>wasmtime.Linker</code> instead of <code>wasmtime.NewInstance</code> since that'll make it a bit easier to understand what's going on here</p>",
        "id": 430090180,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1711638668
    },
    {
        "content": "<p>more-or-less the problem is that the module you're instantiating has imports, and you're not providing any imports, so they'll need to be provided somewhow.</p>",
        "id": 430090261,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1711638689
    },
    {
        "content": "<p>Thank you Alex. Would you have example code for using the linker to load a .wasm file? If the example would have WASI support for giving the .wasm code access to files in a chosen directory, that would be great as that's my next thing to test.</p>",
        "id": 430091928,
        "sender_full_name": "Alistair Cunningham",
        "timestamp": 1711639157
    },
    {
        "content": "<p>would <a href=\"https://github.com/bytecodealliance/wasmtime-go/blob/main/example_test.go#L581-L583\">this perhaps suffice</a>?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime-go/blob/main/example_test.go#L581-L583\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/3d8c388551805fec9b1e00f4ec157dc92d33f1e6\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f386332626430666333653933333034363362376334323163343539393066643461343831393135663230373837623361626435626466646231393061666538632f62797465636f6465616c6c69616e63652f7761736d74696d652d676f)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime-go/blob/main/example_test.go#L581-L583\" title=\"wasmtime-go/example_test.go at main · bytecodealliance/wasmtime-go\">wasmtime-go/example_test.go at main · bytecodealliance/wasmtime-go</a></div><div class=\"message_embed_description\">Go WebAssembly runtime powered by Wasmtime. Contribute to bytecodealliance/wasmtime-go development by creating an account on GitHub.</div></div></div>",
        "id": 430092166,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1711639211
    },
    {
        "content": "<p>I did see that, and unfortunately it uses .wat inside the host code, rather than loading a .wasm file. It's loading a .wasm file that I'm specifically having problems with.</p>",
        "id": 430092565,
        "sender_full_name": "Alistair Cunningham",
        "timestamp": 1711639333
    },
    {
        "content": "<p>Let me try modifying it to load a .wasm file and see how far I get...</p>",
        "id": 430092701,
        "sender_full_name": "Alistair Cunningham",
        "timestamp": 1711639371
    },
    {
        "content": "<p>Yeah for the purposes there the wat and wasm formats are interchangeable, so you should be able to change just that one detail</p>",
        "id": 430092869,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1711639415
    },
    {
        "content": "<p>That works. Thank you! Now moving on to test PreopenDir()...</p>",
        "id": 430095126,
        "sender_full_name": "Alistair Cunningham",
        "timestamp": 1711639897
    },
    {
        "content": "<p>Unfortunately if I do wasiConfig.PreopenDir(\"/\", \"/\") in the host, and ioutil.WriteFile(\"/tmp/helloworld.txt\", []byte(\"Hello world\\n\"), 0644) in the .wasm, the ioutil.WriteFile() returns Error: open /tmp/helloworld.txt: file does not exist. Any ideas?</p>",
        "id": 430098359,
        "sender_full_name": "Alistair Cunningham",
        "timestamp": 1711640517
    },
    {
        "content": "<p><a href=\"/user_uploads/15107/C5RpD4G0jhOOFUL6T_PO4ITD/test.go\">test.go</a><br>\n<a href=\"/user_uploads/15107/nxQ0onC1XYAtUOCQVG7prHmv/wasi.go\">wasi.go</a></p>",
        "id": 430098457,
        "sender_full_name": "Alistair Cunningham",
        "timestamp": 1711640529
    },
    {
        "content": "<p>I've tried a few different combinations of paths in PreopenDir() and paths in the .wasm. All return a file does not exist error. Would anyone have any ideas? Are there any examples of using PreopenDir()?</p>",
        "id": 430104351,
        "sender_full_name": "Alistair Cunningham",
        "timestamp": 1711641607
    },
    {
        "content": "<p>This may or may not be related to TinyGo's support for wasm, I vaguely recall issues along these lines in the past around things like <code>_initialize</code> or <code>_start</code> not being called in the right order or something that. Either that or TinyGo's runtime wasn't initialized and so wasn't picking up preopens. </p>\n<p>Beyond that though I unfortunately may not be able to help a whole lot</p>",
        "id": 430143841,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1711651874
    },
    {
        "content": "<p>Okay, thanks.</p>",
        "id": 430144667,
        "sender_full_name": "Alistair Cunningham",
        "timestamp": 1711652181
    },
    {
        "content": "<p>I now have it working without WASI, using the linker as you recommended. I'm now trying to get WASI to allow the .wasm code to read and write files in a chosen directory.</p>",
        "id": 430144801,
        "sender_full_name": "Alistair Cunningham",
        "timestamp": 1711652243
    }
]