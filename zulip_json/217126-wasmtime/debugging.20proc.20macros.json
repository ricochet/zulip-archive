[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"263195\">@Jakub Konka</span> Do you know if there's a way to figure out where errors inside of proc macros are coming from?</p>",
        "id": 191744920,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1585143391
    },
    {
        "content": "<p>I'm experimenting with some changes, and I have an error like this:</p>",
        "id": 191744961,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1585143413
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0308</span><span class=\"p\">]</span>: <span class=\"nc\">mismatched</span><span class=\"w\"> </span><span class=\"n\">types</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">crates</span><span class=\"o\">/</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">common</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">wasi</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">6</span>:<span class=\"mi\">1</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"n\">wiggle</span>::<span class=\"n\">from_witx</span><span class=\"o\">!</span><span class=\"p\">({</span><span class=\"w\"></span>\n<span class=\"mi\">7</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"n\">witx</span>: <span class=\"p\">[</span><span class=\"s\">&quot;wig/WASI/phases/snapshot/witx/wasi_snapshot_preview1.witx&quot;</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"mi\">8</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"n\">ctx</span>: <span class=\"nc\">WasiCtx</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"mi\">9</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">});</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">   </span><span class=\"o\">^</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">___expected</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"kt\">usize</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"kt\">i32</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"kr\">macro</span><span class=\"w\"> </span><span class=\"n\">invocation</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"n\">help</span>: <span class=\"nc\">you</span><span class=\"w\"> </span><span class=\"n\">can</span><span class=\"w\"> </span><span class=\"n\">convert</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"kt\">i32</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"kt\">usize</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">panic</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">converted</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"n\">wouldn</span><span class=\"na\">&#39;t</span><span class=\"w\"> </span><span class=\"n\">fit</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">wiggle</span>::<span class=\"n\">from_witx</span><span class=\"o\">!</span><span class=\"p\">({</span><span class=\"w\"></span>\n<span class=\"mi\">7</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"n\">witx</span>: <span class=\"p\">[</span><span class=\"s\">&quot;wig/WASI/phases/snapshot/witx/wasi_snapshot_preview1.witx&quot;</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"mi\">8</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"n\">ctx</span>: <span class=\"nc\">WasiCtx</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"mi\">9</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">});.</span><span class=\"n\">try_into</span><span class=\"p\">().</span><span class=\"n\">unwrap</span><span class=\"p\">()</span><span class=\"w\"></span>\n</pre></div>",
        "id": 191744970,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1585143417
    },
    {
        "content": "<p>I can use cargo expand, but then I get the whole from_witx expansion and no indication of where the error is</p>",
        "id": 191745207,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1585143499
    },
    {
        "content": "<p>And rustc's help message isn't so helpful here :o}</p>",
        "id": 191745228,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1585143513
    },
    {
        "content": "<p>Yeah, currently tracking errors is pretty hard and messages don't tell anything meaningful at all. I'm not an expert in this but I guess in the future we should probably invest into some error tracking like in <code>wasm-bindgen</code> (if at all possible).</p>",
        "id": 191745639,
        "sender_full_name": "Jakub Konka",
        "timestamp": 1585143692
    },
    {
        "content": "<p>All I can recommend right now is to use <code>cargo expand</code></p>",
        "id": 191745671,
        "sender_full_name": "Jakub Konka",
        "timestamp": 1585143709
    },
    {
        "content": "<p>which is less than ideal</p>",
        "id": 191745682,
        "sender_full_name": "Jakub Konka",
        "timestamp": 1585143714
    },
    {
        "content": "<p>debugging proc macros is unfortunately very difficult :(</p>",
        "id": 191784372,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1585157936
    },
    {
        "content": "<p>there are a lot of smaller test cases in the <code>crates/wiggle/tests</code> directory, i would  try to reproduce your error there</p>",
        "id": 191784485,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1585157988
    },
    {
        "content": "<p>so that the expansion is a little smaller</p>",
        "id": 191784493,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1585157992
    }
]