[
    {
        "content": "<p>Hi all!</p>\n<p>I'm trying to run the tests for the main branch for the target aarch-64-unknown-linux-gnu and it's failing on the test <code>wast::Cranelift::spec::multi_value::binary</code>.</p>\n<p>I'm getting the following error message:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">wast</span>::<span class=\"n\">Cranelift</span>::<span class=\"n\">spec</span>::<span class=\"n\">multi_value</span>::<span class=\"n\">binary</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">wast</span>::<span class=\"n\">Cranelift</span>::<span class=\"n\">spec</span>::<span class=\"n\">multi_value</span>::<span class=\"n\">binary</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">been</span><span class=\"w\"> </span><span class=\"n\">running</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">over</span><span class=\"w\"> </span><span class=\"mi\">60</span><span class=\"w\"> </span><span class=\"n\">seconds</span><span class=\"w\"></span>\n<span class=\"n\">error</span>: <span class=\"nc\">test</span><span class=\"w\"> </span><span class=\"n\">failed</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">rerun</span><span class=\"w\"> </span><span class=\"n\">pass</span><span class=\"w\"> </span><span class=\"err\">&#39;</span><span class=\"o\">--</span><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">all</span><span class=\"err\">&#39;</span><span class=\"w\"></span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n  <span class=\"nc\">process</span><span class=\"w\"> </span><span class=\"n\">didn</span><span class=\"na\">&#39;t</span><span class=\"w\"> </span><span class=\"n\">exit</span><span class=\"w\"> </span><span class=\"n\">successfully</span>: <span class=\"err\">`</span><span class=\"o\">/</span><span class=\"n\">media</span><span class=\"o\">/</span><span class=\"n\">share</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">deps</span><span class=\"o\">/</span><span class=\"n\">all</span><span class=\"o\">-</span><span class=\"mi\">4</span><span class=\"n\">ed39f6a59594088</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">signal</span>: <span class=\"mi\">9</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">SIGKILL</span>: <span class=\"nc\">kill</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n<p>I tried to follow similar steps of your CI pipeline, where it works perfectly but I'm not using docker. Do you have any idea what could be causing it?</p>\n<p>Thank you</p>",
        "id": 205499691,
        "sender_full_name": "mk89",
        "timestamp": 1596125996
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"320972\">@mk89</span> are you using qemu emulation to run aarch64 tests? SIGKILL typically means something was oom-killed</p>",
        "id": 205499881,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1596126070
    },
    {
        "content": "<p>Yes, I'm using qemu-aarch64. The VM has 8gb of RAM, I can try to increase it.</p>",
        "id": 205500140,
        "sender_full_name": "mk89",
        "timestamp": 1596126198
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"320972\">@mk89</span> you may want to try using the latest release of qemu</p>",
        "id": 205503585,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1596128001
    },
    {
        "content": "<p>additionally you'll probably want to tweak the CLI options for wasmtime to not reserve so much memory</p>",
        "id": 205503611,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1596128018
    },
    {
        "content": "<p>wasmtime does the 6gb memory trick, which qemu doesn't handle well since it tries to actually work with all that memory</p>",
        "id": 205503632,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1596128037
    },
    {
        "content": "<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/79abcdb035769d1e34d6a4d5f81cbd5abd969695/tests/all/wast.rs#L28-L39\">this is what we do</a> on our CI to fix this issue</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/79abcdb035769d1e34d6a4d5f81cbd5abd969695/tests/all/wast.rs#L28-L39\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/79abcdb035769d1e34d6a4d5f81cbd5abd969695/tests/all/wast.rs#L28-L39\" title=\"bytecodealliance/wasmtime\">bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Standalone JIT-style runtime for WebAssembly, using Cranelift - bytecodealliance/wasmtime</div></div></div>",
        "id": 205503734,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1596128079
    },
    {
        "content": "<p>Thanks for the tips!</p>\n<p>You were right, I increased the ram to 16 GB and it passed (it reached 11.3gb on the qemu-aarch64-static process). </p>\n<p>I'm interested in running the tests in the target ARM machine and I probably won't run it with qemu soon enough, but it's possible that I'll have to adjust these values because the SoC has a limited amount of RAM.</p>\n<p>What is this trick for?</p>\n<p>By the way, would you be interesting in knowing if the test suite passed for the SoCs that I test on?</p>",
        "id": 205504936,
        "sender_full_name": "mk89",
        "timestamp": 1596128727
    },
    {
        "content": "<p>wasmtime reserves a large amount of the address space by default to elide bounds checks on memory accesses</p>",
        "id": 205505065,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1596128808
    },
    {
        "content": "<p>but you can configure it to not do that</p>",
        "id": 205505072,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1596128812
    },
    {
        "content": "<p>and qemu seems to not pay well with this trick in that it eagerly requests all the memory instead of lazily like wasmtime wants</p>",
        "id": 205505099,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1596128832
    }
]