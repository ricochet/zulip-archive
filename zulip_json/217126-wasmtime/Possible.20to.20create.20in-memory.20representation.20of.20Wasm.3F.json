[
    {
        "content": "<p>I'm curious (e.g. similar to LLVM or LLVM C APIs) if it is possible to create modules, functions, etc via an API and invoke the runtime through an API?</p>",
        "id": 256658536,
        "sender_full_name": "McCoy",
        "timestamp": 1633644945
    },
    {
        "content": "<p>Wasmtime itself doesn't provide the ability to create a WebAssembly module, but there a number of other projects which can help you create a wasm module. That module can then be fed into Wasmtime to run it</p>",
        "id": 256665113,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1633648833
    },
    {
        "content": "<p>Cool - will search around!</p>",
        "id": 256673744,
        "sender_full_name": "McCoy",
        "timestamp": 1633655062
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span> I assume you mean, projects which create a .wat file (for example).</p>\n<p>Iâ€™m looking for something different. E.g. if I write an intermediate form, and want to create a transpiler, I think I have to emit a .wat file to use the runtime. Versus, with MLIR or LLVM - I can just create a representation of the IR in memory and invoke their respective runtimes/execution engines.</p>",
        "id": 256674670,
        "sender_full_name": "McCoy",
        "timestamp": 1633655829
    },
    {
        "content": "<p>Ah no wasmtime doesn't have an API for directly doing that, for something like that though using cranelift itself may make sense</p>",
        "id": 256677313,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1633658225
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span> That was an incredible suggestion. I did not know how far Cranelift had come since I last took a look at the project! Looks great!</p>\n<p>I also discovered the <a href=\"https://github.com/bytecodealliance/cranelift-jit-demo\">https://github.com/bytecodealliance/cranelift-jit-demo</a> -- is there an equivalent for <code>faerie</code>? I'll have to poke around, as I'm also curious about module compilation (versus compiling single functions).</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/cranelift-jit-demo\" style=\"background-image: url(https://opengraph.githubassets.com/201377af4b295b7f2e7527dbe4ef7169aff0ab94cb7d14ca793c0e5675c1972e/bytecodealliance/cranelift-jit-demo)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/cranelift-jit-demo\" title=\"GitHub - bytecodealliance/cranelift-jit-demo: JIT compiler and runtime for a toy language, using Cranelift\">GitHub - bytecodealliance/cranelift-jit-demo: JIT compiler and runtime for a toy language, using Cranelift</a></div><div class=\"message_embed_description\">JIT compiler and runtime for a toy language, using Cranelift - GitHub - bytecodealliance/cranelift-jit-demo: JIT compiler and runtime for a toy language, using Cranelift</div></div></div>",
        "id": 256762491,
        "sender_full_name": "McCoy",
        "timestamp": 1633709141
    },
    {
        "content": "<p>Sorry I don't know a ton about using cranelift raw, I'd recommend asking in <a class=\"stream\" data-stream-id=\"217117\" href=\"/#narrow/stream/217117-cranelift\">#cranelift</a> perhaps?</p>",
        "id": 256763185,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1633709399
    }
]