[
    {
        "content": "<p>I'm using wasmtime with external defined/build components (still in rust), and I'm trying to implement a \"context\" component that they all import. The \"context\" component will have special access as it's defined/instantiated in the rust crate that is running the wasmtime engine.</p>\n<p>So far things are working, however I can't find a way to use <code>bindgen!</code> to allow me to implement exported interfaces. I want to \"host\" the exported interface for the external components to use. I've resorted to manually constructing it on <code>wasmtime::component::Linker</code> using <code>func_wrap</code> etc but it's really brittle, I need to manually update the code when the \"context\" component wit changes.</p>\n<p>Is there a better way to use wit/bindings to implement a privileged component? Cheers :)</p>",
        "id": 490245782,
        "sender_full_name": "Trent",
        "timestamp": 1734738087
    },
    {
        "content": "<p>Ok.. doing this allowed <code>bindgen!</code> to generate the <code>Host</code> trait and I can now implement it and everything seemingly works :) hopefully it doesn't cause something to blow up later.</p>\n<div class=\"codehilite\" data-code-language=\"wit\"><pre><span></span><code>world ctx {\n  import program;\n  export program;\n}\n</code></pre></div>",
        "id": 490249338,
        "sender_full_name": "Trent",
        "timestamp": 1734740732
    }
]