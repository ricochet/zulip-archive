[
    {
        "content": "<p>Hello! My current use-case relies on me having to read out certain registry values. Because the paths and values are known before initializing the module, I wanted to take advantage of a sandboxing approach.</p>\n<p>When I define a custom resource inside a WIT interface, can I somehow also implement custom capabilities? I want a similar interface to that of the filesystem access in preview2. \"Directories\" would be key paths, and each key path has a read and modify capability. I am not entirely sure how I can bind my custom capabilities configuration struct to <code>wasmtime</code>. <code>wasmtime_wasi</code> has the <code>WasiCtxBuilder</code>. </p>\n<p>Here is the documentation for the preview2 model that I want to base this approach on: <a href=\"https://docs.rs/wasmtime-wasi/latest/wasmtime_wasi/preview2/struct.WasiCtxBuilder.html#method.preopened_dir\">https://docs.rs/wasmtime-wasi/latest/wasmtime_wasi/preview2/struct.WasiCtxBuilder.html#method.preopened_dir</a></p>",
        "id": 413166718,
        "sender_full_name": "mainrs",
        "timestamp": 1705415591
    },
    {
        "content": "<p>One option would be to use the actual wasi filesystem interface and model your registry entries as files with a custom implementation of WasiDir/WasiFile. This would have the advantage of being compatible with languages that have wasi support but not full component model support.</p>",
        "id": 413167700,
        "sender_full_name": "Lann Martin",
        "timestamp": 1705415879
    },
    {
        "content": "<p>I assume this would mean i have to implement some kind of custom filesystem that I can add to WASI before linking. Or how would the integration look like?</p>",
        "id": 413167950,
        "sender_full_name": "mainrs",
        "timestamp": 1705415948
    },
    {
        "content": "<p>For my first approach I'd guess the solution would be to use a custom state as showcased here: <a href=\"https://docs.wasmtime.dev/examples-rust-wasi.html\">https://docs.wasmtime.dev/examples-rust-wasi.html</a></p>\n<p>And the state would host the resourcetable, the wasi_ctx, my own context and the wasi preview1 adapter.</p>",
        "id": 413168918,
        "sender_full_name": "mainrs",
        "timestamp": 1705416197
    },
    {
        "content": "<p>Yep that sounds right to me.</p>",
        "id": 413169417,
        "sender_full_name": "Lann Martin",
        "timestamp": 1705416326
    }
]