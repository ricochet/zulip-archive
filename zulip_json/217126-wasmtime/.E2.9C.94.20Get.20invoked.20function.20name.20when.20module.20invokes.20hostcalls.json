[
    {
        "content": "<p>I'd like to log the hostcalls a wasm module running on wasmtime is making. I can see there's a <a href=\"https://docs.rs/wasmtime/latest/wasmtime/struct.Store.html#method.call_hook\">call hook API</a> that I can use to invoke a function whenever a hostcall is invoked. But I can't see a way to determine the name of the host function invoked. Is it possible to get the name of the host function invoked within the function provided to <code>call_hook</code> or an alternative API that would expose this information?</p>",
        "id": 278585974,
        "sender_full_name": "Jeff Charles",
        "timestamp": 1649697043
    },
    {
        "content": "<p>It's true that the import name is not available to the call hook and I don't think there's other means by which you can get this right now. That being said I don't think this is something that we can easily support because functions are hooked up as values to one another which means that there's not necessarily a defined name in the embedding api for a particular function.</p>\n<p>Is this something possible you can inject into the host functions themselves or are you looking to primarily hook this at the engine level? One thing we might be able to do is to auto-inject hooks at the <code>Linker</code> layer rather than the <code>Store</code> layer</p>",
        "id": 278586709,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1649697352
    },
    {
        "content": "<p>I don't think we can inject this into the host functions themselves. Right now, it's mostly calls out to WASI functions that we want to log rather than logging proprietary calls that we've implemented ourselves. I'm not sure if there's a clean way for us to implement a decorator pattern that would include our logging with how the WASI calls are wired up in wasmtime. Doing it at the engine level  would be one approach that helps get around that.</p>",
        "id": 278594345,
        "sender_full_name": "Jeff Charles",
        "timestamp": 1649700540
    },
    {
        "content": "<p>Sorry forgot to respond earlier today, mind opening an issue to track this? There are a few ways we could go about this and having something on file as a place to discuss would be good</p>",
        "id": 278629527,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1649719081
    },
    {
        "content": "<p>I've opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4018\">this Github issue</a> to track this.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/issues/4018\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/996d36a42ddf3c62a8b6b4932fc26af4c3b74d06\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f663835366362313066613365353232363230313535303561383935313136386437653865633632356135303566656439356537353038343435343137363038662f62797465636f6465616c6c69616e63652f7761736d74696d652f6973737565732f34303138)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/issues/4018\" title=\"Ability to retrieve name of invoked hostcall in call hook 路 Issue #4018 路 bytecodealliance/wasmtime\">Ability to retrieve name of invoked hostcall in call hook 路 Issue #4018 路 bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Feature I&#39;d like a way to retrieve the name of the invoked hostcall in a call hook. Ideally getting the arguments and return values would also be useful. Benefit Adding this feature would allow...</div></div></div>",
        "id": 278705627,
        "sender_full_name": "Jeff Charles",
        "timestamp": 1649775734
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"477345\">Jeff Charles</span> has marked this topic as resolved.</p>",
        "id": 278705672,
        "sender_full_name": "Notification Bot",
        "timestamp": 1649775747
    }
]