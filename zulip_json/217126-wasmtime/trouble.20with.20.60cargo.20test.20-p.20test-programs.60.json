[
    {
        "content": "<p>I'm trying to run <code>cargo test -p test-programs</code> on the main branch per <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/docs/contributing-testing.md#running-wasi-integration-tests-only\">these instructions</a> and getting the following error:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>error: linking with `cc` failed: exit status: 1\n  |\n[long cc command omitted]\n  = note: cc: error: unrecognized command-line option '--import-memory'\n          cc: error: unrecognized command-line option '--export-memory'\n</code></pre></div>\n<p>It looks to me like Wasm-specific flags are being passed to my native (Linux/ARM64) compiler, which it clearly doesn't understand.  What might I be doing wrong?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/main/docs/contributing-testing.md#running-wasi-integration-tests-only\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/5e131c47a4fdff99144b065fbf7dcd005daa9121/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f306462326438373030393362336232386437396566303533373261363433623465313566613736373262383163323632663735396332623739336630616436302f62797465636f6465616c6c69616e63652f7761736d74696d65&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/docs/contributing-testing.md#running-wasi-integration-tests-only\" title=\"wasmtime/docs/contributing-testing.md at main · bytecodealliance/wasmtime\">wasmtime/docs/contributing-testing.md at main · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A fast and secure runtime for WebAssembly. Contribute to bytecodealliance/wasmtime development by creating an account on GitHub.</div></div></div>",
        "id": 468208972,
        "sender_full_name": "Joel Dice",
        "timestamp": 1725634209
    },
    {
        "content": "<p>Additional output, which might be relevant: <code>error: could not compile test-programs (bin \"dwarf_imported_memory\" test) due to 1 previous error</code></p>",
        "id": 468210305,
        "sender_full_name": "Joel Dice",
        "timestamp": 1725634509
    },
    {
        "content": "<p>Also seeing this sometimes:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>  = note: cc: error: unrecognized command-line option '--no-check-features'; did you mean '--no-check-data-deps'?\n          cc: error: unrecognized command-line option '--shared-memory'\n\n\nerror: could not compile `test-programs` (bin \"dwarf_shared_memory\" test) due to 1 previous error\n</code></pre></div>",
        "id": 468210809,
        "sender_full_name": "Joel Dice",
        "timestamp": 1725634618
    },
    {
        "content": "<p>After removing <code>dwarf_shared_memory.rs</code> and <code>dwarf_imported_memory.rs</code> (and also removing the corresponding lines in <code>build.rs</code>), everything builds fine, but only one test appears to actually run.</p>",
        "id": 468213577,
        "sender_full_name": "Joel Dice",
        "timestamp": 1725635119
    },
    {
        "content": "<p>Oh these don't actually pass tests and it's why our <code>ci/run-tests.sh</code> script passes <code>--exclude test-programs</code></p>",
        "id": 468215759,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1725635602
    },
    {
        "content": "<p>ideally we'd skip tests for every binary but that would require adding <code>[[bin]] ... test = false</code> for everything which defeats the purpose of \"just drop a file in here\"</p>",
        "id": 468215891,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1725635622
    },
    {
        "content": "<p>but otherwise yeah looksl ike you found the <code>build.rs</code> which is where these flags are coming from</p>",
        "id": 468216053,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1725635646
    },
    {
        "content": "<p>ideally all the tests would build on native and wasm but there's not a great way to manage that afaik without requiring extra code in each test</p>",
        "id": 468216149,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1725635663
    },
    {
        "content": "<p>My primary goal is to fix a <code>wasmtime-wasi-http</code> bug and add a test for the fix.  Given that these tests aren't run on CI, I guess I'll be relying on folks to run the tests manually from time to time?  And if so, what <em>is</em> the right way to run those tests manually?</p>",
        "id": 468216494,
        "sender_full_name": "Joel Dice",
        "timestamp": 1725635754
    },
    {
        "content": "<p>Even when I run <code>cargo test --workspace --no-fail-fast</code>, I see stuff like this:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n     Running unittests src/bin/api_proxy.rs (target/debug/deps/api_proxy-e276aa2a45c3e281)\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n     Running unittests src/bin/api_proxy_forward_request.rs (target/debug/deps/api_proxy_forward_request-a0bcb19b9356be76)\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n     Running unittests src/bin/api_proxy_streaming.rs (target/debug/deps/api_proxy_streaming-1ee8a5db9985e2a1)\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n     Running unittests src/bin/api_reactor.rs (target/debug/deps/api_reactor-7f1eda1d1aeafa68)\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n     Running unittests src/bin/api_read_only.rs (target/debug/deps/api_read_only-a916991a53a2da4e)\n\nrunning 0 tests\n</code></pre></div>\n<p>... which makes me think the tests I care about aren't run at all (i.e. even without <code>--exclude test-programs</code>)</p>",
        "id": 468217454,
        "sender_full_name": "Joel Dice",
        "timestamp": 1725636028
    },
    {
        "content": "<p>Oh wait, I see now.  They're tested here (I wrote some of this code, so I guess I should remember):</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>test wasi_http_proxy_tests ... ok\ntest sync::http_outbound_request_response_build ... ok\ntest sync::http_outbound_request_unknown_method ... ok\ntest sync::http_outbound_request_unsupported_scheme ... ok\ntest wasi_http_hash_all_with_reject ... ok\ntest wasi_http_hash_all_with_override ... ok\ntest wasi_http_hash_all ... ok\ntest wasi_http_echo ... ok\ntest wasi_http_double_echo ... ok\ntest wasi_http_without_port ... ok\n</code></pre></div>",
        "id": 468218352,
        "sender_full_name": "Joel Dice",
        "timestamp": 1725636307
    },
    {
        "content": "<p>Looks like <code>cargo test -p wasmtime-wasi-http</code> is what I actually wanted.</p>",
        "id": 468218660,
        "sender_full_name": "Joel Dice",
        "timestamp": 1725636394
    },
    {
        "content": "<p>I'm still not sure what <code>cargo test -p test-programs</code> is actually meant for.  Seems like that crate exists only for other crates to use in <em>their</em> tests.</p>",
        "id": 468218960,
        "sender_full_name": "Joel Dice",
        "timestamp": 1725636493
    },
    {
        "content": "<p>ah sorry yes you found the right incantation, the <code>test-programs</code> stuff is just to provide binaries for other crates, and you want <code>cargo test -p wasmtime-wasi-http</code></p>",
        "id": 468219549,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1725636678
    },
    {
        "content": "<p>CI runs <code>./ci/run-tests.sh</code> which excludes the <code>test-programs</code> crate but they're all built for other crates (see <code>crates/test-programs/artifacts</code>)</p>",
        "id": 468219602,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1725636699
    },
    {
        "content": "<p>Shall I update the docs to stop recommending <code>cargo test -p test-programs</code> then?</p>",
        "id": 468219647,
        "sender_full_name": "Joel Dice",
        "timestamp": 1725636719
    },
    {
        "content": "<p>Oh dear yes please, that's dated documentation I didn't even realize existed!</p>",
        "id": 468221893,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1725637314
    },
    {
        "content": "<p>I'm not sure how to update <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/docs/contributing-testing.md#adding-wasi-integration-tests\">this section</a>.  It refers to a directory, <code>crates/test-programs/wasi-test</code>, that doesn't exist, and I'm not sure if the rest of the content in that paragraph is accurate, i.e. I don't know that simply adding a program to the bin directory will magically make the test run.  Should I just delete that whole section?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/main/docs/contributing-testing.md#adding-wasi-integration-tests\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/5e131c47a4fdff99144b065fbf7dcd005daa9121/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f306462326438373030393362336232386437396566303533373261363433623465313566613736373262383163323632663735396332623739336630616436302f62797465636f6465616c6c69616e63652f7761736d74696d65&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/docs/contributing-testing.md#adding-wasi-integration-tests\" title=\"wasmtime/docs/contributing-testing.md at main · bytecodealliance/wasmtime\">wasmtime/docs/contributing-testing.md at main · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A fast and secure runtime for WebAssembly. Contribute to bytecodealliance/wasmtime development by creating an account on GitHub.</div></div></div>",
        "id": 468223515,
        "sender_full_name": "Joel Dice",
        "timestamp": 1725637705
    },
    {
        "content": "<p>ah ok yes that's very dated documentation, I'll work on updating that so no need to handle that yourself</p>",
        "id": 468223783,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1725637788
    },
    {
        "content": "<p><a href=\"https://github.com/bytecodealliance/wasmtime/pull/9207\">https://github.com/bytecodealliance/wasmtime/pull/9207</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/9207\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/4f4b58766257e549cdebc814c59368a92048c361/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f306266306535643766386164643962313265343939346637616135313639343836396566393062343465333665393636396330326433373466653639626265352f62797465636f6465616c6c69616e63652f7761736d74696d652f70756c6c2f39323037&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/9207\" title=\"Update contributing testing documentation by alexcrichton · Pull Request #9207 · bytecodealliance/wasmtime\">Update contributing testing documentation by alexcrichton · Pull Request #9207 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">These docs have fallen a bit out of date so this is an attempt to bring them back up to speed with the current organization of tests in this repository.</div></div></div>",
        "id": 468228722,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1725639095
    }
]