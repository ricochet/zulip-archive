[
    {
        "content": "<p>implementing <code>Func::wrap</code> support for reference types right now, and <code>WasmTy::{load,store}</code> need to take a <code>&amp;Store</code> argument to pass in/receive <code>ExternRef</code>s to/from Wasm, which means that the <code>trampoline</code> in <code>impl_into_func!</code> needs to get a <code>Store</code> from ... somewhere? presumably from either the <code>callee_vmctx</code> or <code>caller_vmctx</code>?</p>\n<p>cc <span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span></p>",
        "id": 200701433,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1591983911
    },
    {
        "content": "<p>hm... so the only guaranteed non-null value is <code>caller_vmctx</code> (the first one)</p>",
        "id": 200701542,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1591983965
    },
    {
        "content": "<p>ah, <code>host_state()</code>?</p>",
        "id": 200701562,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1591983979
    },
    {
        "content": "<p>nah that probably doesn't have a <code>Store</code></p>",
        "id": 200701568,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1591983988
    },
    {
        "content": "<p>er or it might</p>",
        "id": 200701573,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1591983992
    },
    {
        "content": "<p>just above <code>trampoline</code>, in <code>shim</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">debug_assert</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">state</span><span class=\"p\">.</span><span class=\"n\">is</span>::<span class=\"o\">&lt;</span><span class=\"p\">(</span><span class=\"n\">F</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Weak</span><span class=\"o\">&lt;</span><span class=\"n\">StoreInner</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"o\">&gt;</span><span class=\"p\">());</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 200701634,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1591984021
    },
    {
        "content": "<p>ah yeah no nvmd looks like it's there</p>",
        "id": 200701692,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1591984046
    },
    {
        "content": "<p>thanks</p>",
        "id": 200701700,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1591984053
    },
    {
        "content": "<p>so yeah that looks to be it</p>",
        "id": 200701706,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1591984057
    },
    {
        "content": "<p>but I'd avoid upgrading the <code>Weak</code> unelss an <code>ExternRef</code> is actually used</p>",
        "id": 200701724,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1591984071
    },
    {
        "content": "<p>either way is fine though</p>",
        "id": 200701780,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1591984082
    },
    {
        "content": "<p>good call</p>",
        "id": 200701810,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1591984104
    },
    {
        "content": "<p>ah hm, that's actually a little funky -- are you thinking that <code>WasmTy::{load,store}</code> should instead take a <code>&amp;dyn Fn() -&gt; &amp;Store</code> or a <code>&amp;Weak&lt;StoreInner&gt;</code>? because we don't know at the call site what the <code>T: WasmTy</code> is and whether it will use the store or not</p>",
        "id": 200702112,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1591984273
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span></p>",
        "id": 200702121,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1591984282
    },
    {
        "content": "<p>either way I think is fine</p>",
        "id": 200702149,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1591984304
    },
    {
        "content": "<p><code>ExternRef</code> stores a weak anyway, right?</p>",
        "id": 200702172,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1591984319
    },
    {
        "content": "<p>it's an internal trait FWIW (the mehtods at least) so it's fine to do whatever works best</p>",
        "id": 200702226,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1591984331
    },
    {
        "content": "<p>ah yeah, so I guess it is only <code>WasmTy::load</code> that really needs it</p>",
        "id": 200702259,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1591984351
    }
]