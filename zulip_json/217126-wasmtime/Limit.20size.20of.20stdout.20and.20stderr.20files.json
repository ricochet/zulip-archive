[
    {
        "content": "<p>I am using the <a href=\"https://bytecodealliance.github.io/wasmtime-rb/latest/Wasmtime/WasiCtxBuilder.html\">WasiCtxBuilder</a> class of the wasmtime-rb gem to set stdout and stderr files using set_stdout_file and set_stderr_file respectively. I was wondering if there is any way to limit the max size of these files, i.e. the amount of bytes that the Wasm module is allowed to write to them? I also noticed the <a href=\"https://docs.rs/wasmtime/latest/wasmtime/trait.ResourceLimiter.html\">ResourceLimiter</a> rust trait, is this feature planned for wasmtime-rb?</p>",
        "id": 383009349,
        "sender_full_name": "wsta",
        "timestamp": 1691510705
    },
    {
        "content": "<p>no, there is no limiting on those files. it would be possible to implement some limiting on those files with a lower level interface than provided by that ruby class, but I don't actually know much about how the ruby bindings work</p>",
        "id": 383010293,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1691510924
    },
    {
        "content": "<p>the resource limiter trait is about limiting the sizes of linear memories and tables created in a Store</p>",
        "id": 383010359,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1691510941
    },
    {
        "content": "<p>Thanks for your reply. By lower level interface, do you mean in the base wasmtime rust crate? Or do you mean use something like a tmpfs file system with a max capacity instead?</p>\n<p>I know about the ResourceLimiter, I am also interested in limiting the memory usage of Wasm modules using wasmtime-rb, hence my question.</p>",
        "id": 383177827,
        "sender_full_name": "wsta",
        "timestamp": 1691567072
    },
    {
        "content": "<p>The wasmtime wasi rust implementation would let you hook into the stdout/stderr <code>write</code> calls, which means you could add pretty much whatever logic you want. See: <a href=\"https://docs.rs/wasi-common/11.0.1/wasi_common/pipe/struct.WritePipe.html\">https://docs.rs/wasi-common/11.0.1/wasi_common/pipe/struct.WritePipe.html</a></p>\n<p>You could probably find some outside solution that would work on a particular OS (like a tmpfs), but making it work cross-platform might be tricky if that is a goal.</p>",
        "id": 383254022,
        "sender_full_name": "Lann Martin",
        "timestamp": 1691582590
    }
]